name: Sync Agent Docs

on:
  push:
    branches:
      - main
    paths:
      - AGENTS.md
  pull_request:
    paths:
      - AGENTS.md
      - GEMINI.md
      - .github/copilot-instructions.md
      - .amazonq/rules/AgentQ.md
  workflow_dispatch: {}

concurrency:
  group: sync-agent-docs
  cancel-in-progress: true

jobs:
  sync:
    runs-on: ubuntu-latest
    name: Sync Agent Docs
    timeout-minutes: 15
    permissions:
      contents: write
      pull-requests: write
    env:
      CI: true
      NODE_VERSION: 22
    steps:
      # 1) Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Node setup
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: package-lock.json

      # 3) Dependencies
      - name: Install dependencies
        run: npm ci

      # 4) Run the sync script
      - name: Run agent docs sync
        id: sync
        run: |
          set -euo pipefail
          npm run sync:agents

      # 5) Check for changes in working tree (multi-line changed_files output)
      - name: Check for changes
        id: changes
        run: |
          set -euo pipefail
          git_status=$(git status --porcelain)
          echo "git_status=$git_status"
          if [ -n "$git_status" ]; then
            # get clean file paths, unique
            changed_files_list=$(git status --porcelain | sed -E 's/^.. //' | sort -u)
            echo "changed=true" >> $GITHUB_OUTPUT
            {
              echo "changed_files<<EOF"
              echo "$changed_files_list"
              echo "EOF"
            } >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "changed_files=" >> $GITHUB_OUTPUT
          fi

      # 6) Date (for branch/title)
      - name: Get current date
        id: date
        if: steps.changes.outputs.changed == 'true'
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      # â€”â€”â€” Extras: run only when there are changes â€”â€”â€”

      - name: Collect Agent Docs Stats
        id: docstats
        if: steps.changes.outputs.changed == 'true'
        run: |
          set -euo pipefail
          FILE="AGENTS.md"
          if [ ! -f "$FILE" ]; then
            FILE=$(git ls-files | grep -E '^AGENTS\.md$' || true)
          fi
          if [ -z "$FILE" ] || [ ! -f "$FILE" ]; then
            echo "AGENTS.md not found after sync; skipping stats."
            echo "words=0" >> $GITHUB_OUTPUT
            echo "lines=0" >> $GITHUB_OUTPUT
            echo "headings=0" >> $GITHUB_OUTPUT
            echo "sections=0" >> $GITHUB_OUTPUT
            echo "codeblocks=0" >> $GITHUB_OUTPUT
            echo "links=0" >> $GITHUB_OUTPUT
            echo "tasks=0" >> $GITHUB_OUTPUT
            echo "readmins=0" >> $GITHUB_OUTPUT
            exit 0
          fi

          WORDS=$(wc -w < "$FILE" | tr -d ' ')
          LINES=$(wc -l < "$FILE" | tr -d ' ')
          HEADINGS=$(grep -E '^[[:space:]]*#{1,6}[[:space:]]' "$FILE" | wc -l | tr -d ' ' || echo 0)
          H2_SECTIONS=$(grep -E '^[[:space:]]*##[[:space:]]' "$FILE" | wc -l | tr -d ' ' || echo 0)
          CODEBLOCKS=$(grep -E '^[[:space:]]*```' "$FILE" | wc -l | tr -d ' ' || echo 0)
          LINKS=$(grep -oE '\[[^]]+\]\([^)]+\)' "$FILE" | wc -l | tr -d ' ' || echo 0)
          # Count GitHub task list checkboxes safely under pipefail
          TASKS=$(awk '/^[[:space:]]*-[[:space:]]\[[ xX]\]/{c++} END{print c+0}' "$FILE")
          READ_MINS=$(( (WORDS + 199) / 200 ))

          echo "words=$WORDS" >> $GITHUB_OUTPUT
          echo "lines=$LINES" >> $GITHUB_OUTPUT
          echo "headings=$HEADINGS" >> $GITHUB_OUTPUT
          echo "sections=$H2_SECTIONS" >> $GITHUB_OUTPUT
          echo "codeblocks=$CODEBLOCKS" >> $GITHUB_OUTPUT
          echo "links=$LINKS" >> $GITHUB_OUTPUT
          echo "tasks=$TASKS" >> $GITHUB_OUTPUT
          echo "readmins=$READ_MINS" >> $GITHUB_OUTPUT

      - name: Summarise Changes (add/remove & mood)
        id: summary
        if: steps.changes.outputs.changed == 'true'
        run: |
          set -euo pipefail
          DIFF=$(git diff --unified=0 -- AGENTS.md || true)

          ADDED=$(printf "%s" "$DIFF" | grep -cE '^\+[^+]' || true)
          REMOVED=$(printf "%s" "$DIFF" | grep -cE '^-[^-]' || true)
          ADDED=${ADDED:-0}
          REMOVED=${REMOVED:-0}
          TOTAL=$((ADDED + REMOVED))

          if   [ "$TOTAL" -lt 20 ];  then MOOD="Tiny tune-up ðŸŽ»"
          elif [ "$TOTAL" -lt 100 ]; then MOOD="Solid sync ðŸ”§"
          else                         MOOD="Big mission ðŸš€"
          fi

          echo "added=$ADDED" >> $GITHUB_OUTPUT
          echo "removed=$REMOVED" >> $GITHUB_OUTPUT
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "mood=$MOOD" >> $GITHUB_OUTPUT

      - name: Sections Touched
        id: touched
        if: steps.changes.outputs.changed == 'true'
        run: |
          set -euo pipefail
          SECTIONS=$(git diff -U0 -- AGENTS.md \
            | awk '
              /^\+\+\+|^---/ {next}
              /^@@/ {next}
              /^\+#{2,6}[[:space:]]/ {
                sub(/^\+/, "", $0);
                print "- " $0
              }' \
            | sort -u | head -n 12)

          if [ -z "$SECTIONS" ]; then
            SECTIONS="(No new/changed section headings detected)"
          fi

          {
            echo "list<<EOF"
            echo "$SECTIONS"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Grab Quote / Advice / Zen
        id: fun
        if: steps.changes.outputs.changed == 'true'
        run: |
          set -euo pipefail
          # lightweight, no-network random pick
          QUOTES=(
            "Be curious, not judgemental. â€” Walt Whitman"
            "Small steps every day. â€” Unknown"
            "Refactor early, refactor often. â€” Dev Wisdom"
            "The best time to plant a tree was 20 years ago. The second best time is now."
          )
          SEED=$(( RANDOM % ${#QUOTES[@]} ))
          CHOICE="${QUOTES[$SEED]}"
          echo "quote=$CHOICE" >> $GITHUB_OUTPUT

      - name: Write summary
        if: steps.changes.outputs.changed == 'true'
        run: |
          {
            echo "### Agent Docs Sync"
            echo ""
            echo "Changed files:"
            echo "${{ steps.changes.outputs.changed_files }}" | sed 's/^/- /'
            echo ""
            echo "- Words: ${{ steps.docstats.outputs.words }}"
            echo "- Lines: ${{ steps.docstats.outputs.lines }}"
            echo "- Headings: ${{ steps.docstats.outputs.headings }}"
            echo "- Sections (H2): ${{ steps.docstats.outputs.sections }}"
            echo "- Code blocks: ${{ steps.docstats.outputs.codeblocks }}"
            echo "- Links: ${{ steps.docstats.outputs.links }}"
            echo "- Tasks: ${{ steps.docstats.outputs.tasks }}"
            echo "- Read mins: ${{ steps.docstats.outputs.readmins }}"
            echo ""
            echo "Changes: ${{ steps.summary.outputs.added }} added, ${{ steps.summary.outputs.removed }} removed â€” ${{ steps.summary.outputs.mood }}"
          } >> "$GITHUB_STEP_SUMMARY"

      # 7) Create PR if changes exist
      - name: Create Pull Request
        if: steps.changes.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: sync agent docs"
          title: "chore: sync agent docs - ${{ steps.date.outputs.date }}"
          body: |
            This PR contains automated updates produced by `npm run sync:agents`.

            Changed files:
            ${{ steps.changes.outputs.changed_files }}

            Agent docs snapshot:
            - Words: ${{ steps.docstats.outputs.words }}
            - Lines: ${{ steps.docstats.outputs.lines }}
            - Headings: ${{ steps.docstats.outputs.headings }}
            - H2 sections: ${{ steps.docstats.outputs.sections }}
            - Code blocks: ${{ steps.docstats.outputs.codeblocks }}
            - Links: ${{ steps.docstats.outputs.links }}
            - Tasks: ${{ steps.docstats.outputs.tasks }}
            - Estimated read mins: ${{ steps.docstats.outputs.readmins }}

            Changes summary: ${{ steps.summary.outputs.added }} additions, ${{ steps.summary.outputs.removed }} removals â€” ${{ steps.summary.outputs.mood }}

            Sections touched:
            ${{ steps.touched.outputs.list }}

            Bonus: ${{ steps.fun.outputs.quote }}
          branch: auto/sync-agent-docs
          branch-suffix: timestamp
          labels: |
            automated
            documentation
            agents
          assignees: ${{ github.actor }}
          delete-branch: true

  verify_sync:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Verify Agent Docs Sync
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Verify targets match AGENTS.md
        run: |
          set -euo pipefail
          diff -u AGENTS.md GEMINI.md || { echo "GEMINI.md is out of sync with AGENTS.md"; exit 1; }
          diff -u AGENTS.md .github/copilot-instructions.md || { echo ".github/copilot-instructions.md is out of sync with AGENTS.md"; exit 1; }
          diff -u AGENTS.md .amazonq/rules/AgentQ.md || { echo ".amazonq/rules/AgentQ.md is out of sync with AGENTS.md"; exit 1; }
      - name: Write verification summary
        if: success()
        run: |
          echo "### Agent Docs Verification" >> "$GITHUB_STEP_SUMMARY"
          echo "Targets are in sync with AGENTS.md âœ…" >> "$GITHUB_STEP_SUMMARY"
