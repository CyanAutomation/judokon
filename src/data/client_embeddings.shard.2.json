[
{"id":"renderUtils.js-formatTags","text":"Format tag arrays for display.\n\n@param {string[]} tags - Tag names.\n@returns {string} Comma separated tag string.\n1. If `tags` is an array, join with `\", \"`.\n2. Otherwise, return an empty string.\n\nexport function formatTags(tags) {\n  return Array.isArray(tags) ? tags.join(\", \") : \"\";\n}","qaContext":"Why: Format tag arrays for display. How: @param {string[]} tags - Tag names.","embedding":[0.197,0.239,-0.2,0.029,0.087,0.016,0.08,0.137,0.134,-0.187,-0.114,-0.11,-0.021,0.046,0.174,0.263,-0.342,-0.135,0.012,-0.036,0.124,0.035,-0.02,0.07,0.124,0.245,0.043,-0.043,-0.3,0.111,0.034,-0.186,0.048,0.048,0.226,0.104,0.026,0.087,0.2,-0.054,0.225,0.186,-0.117,-0.184,0.117,-0.061,-0.087,0.03,-0.148,0.209,-0.211,-0.073,-0.065,0.032,0.257,0.127,-0.366,-0.373,0.097,0.213,0.011,-0.183,-0.111,0.201,0.04,-0.097,0.059,0.342,-0.057,0.067,-0.095,0.135,0.062,-0.123,-0.135,0.038,-0.113,-0.11,0.134,0.215,-0.189,0.003,-0.175,0.038,-0.086,0.122,-0.204,-0.038,-0.059,-0.109,-0.281,-0.026,-0.009,0.305,-0.111,0.127,0.212,-0.038,-0.099,0.234,-0.081,-0.1,0.214,-0.359,-0.24,0.013,0.134,0.017,-0.196,0.079,0.096,0.054,-0.085,-0.007,-0.21,-0.087,0.059,-0.274,0.23,0.074,0.186,0.059,-0.015,-0.111,0.129,0.029,0.008,0,0.052,-0.153,0.119,-0.043,-0.148,0.046,-0.265,-0.225,0.06,-0.007,0.182,0.061,0.101,0.014,-0.125,-0.029,0.39,0.008,0.049,0.131,-0.201,0.107,0.078,0.111,0.026,-0.049,0.053,-0.085,0.036,0.072,0.282,0.116,-0.002,0.012,0.201,0.15,-0.213,0.016,-0.282,0.177,-0.154,-0.06,0.068,0.073,0.078,-0.037,0.009,0.009,0.222,0.026,-0.297,-0.014,0.038,-0.014,-0.067,-0.035,0.118,0.01,-0.121,-0.215,-0.4,0.006,0.08,-0.151,-0.052,-0.124,0.392,0.204,-0.149,-0.186,-0.051,0.018,-0.103,0.023,0.13,-0.054,-0.029,-0.071,0.091,-0.132,0.002,-0.263,-0.115,0.22,-0.05,0.112,-0.147,-0.043,0.26,0.13,-0.041,0.081,-0.249,-0.299,0.052,0,0.346,0.008,-0.088,-0.056,0.064,-0.112,0.185,0.376,-0.023,0.038,-0.053,-0.132,-0.388,-0.047,0.177,0.133,0.117,0.051,0.235,-0.353,0.127,0.032,0.159,0.123,0.005,-0.021,0.112,0.04,-0.036,0.087,0.071,-0.127,0.194,0.122,-0.051,-0.094,0.102,0.111,0.257,-0.032,-0.177,0.134,0.059,0.065,-0.053,-0.103,0.144,0.047,-0.065,-0.137,0.085,-0.053,-0.273,-0.395,-0.144,-0.514,-0.027,-0.076,-0.182,-0.056,-0.141,-0.095,0.412,-0.153,0.109,-0.26,-0.219,-0.005,-0.047,0.16,0.146,-0.19,-0.185,0.144,-0.068,-0.054,-0.061,0.029,0.063,-0.085,0.3,0.018,0.087,0.192,0.076,-0.015,0.245,0.026,-0.094,0.054,0.163,0.011,0.118,0.125,-0.17,0,-0.195,-0.141,-0.112,-0.221,-0.261,0.154,0.166,-0.025,0.086,0.063,0.173,0.129,-0.077,-0.067,-0.022,-0.044,-0.078,0.162,-0.174,-0.012,-0.168,0.049,-0.285,-0.106,0.408,0.016,-0.096,-0.015,0.159,0.141,0.109,0.077,-0.071,-0.095,-0.095,-0.068,0.179,-0.255,0.109,0.175,-0.056,0.106,-0.112,-0.031,-0.075,-0.376,-0.026,0.157,0.206,-0.158,0.073,-0.087,-0.239,-0.187,-0.274,-0.091,0.118,0.028,0.215,0.002,0.239,-0.028,-0.019,0.029],"source":"src/helpers/vectorSearchPage/renderUtils.js [formatTags]","tags":["code","what","function","utility","isArray","join"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/vectorSearchPage/renderUtils.js","node":"formatTags"},"patterns":[],"relations":{"imports":[],"calls":["isArray","join"]}},"version":1},
{"id":"renderResults.js-renderResults","text":"Render search results into the table body.\n\n@param {HTMLElement} tbody\n@param {Array} toRender\n@param {string[]} queryTerms\n@param {(el: HTMLElement) => void} loadResultContext\n1. Iterate over matches to display.\n2. Build a row for each match, marking the first as top match.\n3. Attach click and keyboard handlers to load surrounding context.\n4. Append each row to the results table body.\n\nexport function renderResults(tbody, toRender, queryTerms, loadResultContext) {\n  for (const [idx, match] of toRender.entries()) {\n    const row = buildResultRow(match, queryTerms, idx === 0);\n    row.addEventListener(\"click\", () => loadResultContext(row));\n    row.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\" || e.key === \" \") {\n        e.preventDefault();\n        loadResultContext(row);\n      }\n    });\n    tbody?.appendChild(row);\n  }\n}","qaContext":"Why: Render search results into the table body. How: @param {HTMLElement} tbody @param {Array} toRender @param {string[]} queryTerms @param {(el: HTMLElement) => void} loadResultContext 1.","embedding":[-0.018,-0.044,0.02,0.117,-0.037,0.189,0,0.13,0.005,-0.032,-0.105,-0.057,0.12,-0.153,-0.025,0.008,-0.013,0.006,-0.035,-0.06,0.151,-0.029,0.043,-0.167,-0.001,0.087,0.002,-0.113,-0.043,0.037,-0.038,-0.128,-0.084,0.102,-0.117,-0.019,-0.163,-0.131,0.046,-0.076,0.034,0.012,-0.022,-0.104,0.181,-0.095,-0.081,-0.077,-0.004,0.031,-0.073,0.116,0.158,-0.051,0.018,0.034,0.05,-0.174,0.14,0.046,0.074,-0.162,0.079,-0.033,0.055,-0.064,0.063,-0.04,0.01,0.007,-0.013,-0.036,0.036,-0.058,-0.089,-0.024,-0.118,-0.066,-0.056,0.101,0.001,-0.111,-0.113,0.034,-0.006,0.101,-0.025,-0.169,-0.048,-0.106,-0.028,-0.018,-0.025,0.098,-0.08,0.116,0.143,0.007,0.024,0.047,-0.02,0.029,-0.13,-0.045,-0.184,-0.124,0.081,0.008,-0.117,-0.085,-0.042,0.109,-0.012,0.003,-0.204,-0.076,0.117,-0.137,0.159,0.031,0.19,0.081,-0.17,0.032,0.103,0.053,-0.012,0,0.065,-0.058,0.088,-0.041,0.037,0.061,0.083,0.05,-0.016,0.033,-0.089,-0.016,0.005,-0.069,-0.085,0.013,-0.048,-0.006,-0.04,0.03,-0.122,-0.05,0.102,0.013,-0.005,0.003,-0.099,0.088,-0.149,-0.015,0.154,0.084,-0.189,-0.021,0.026,0.021,0.08,0.06,-0.093,0.013,0.023,0.006,0.075,-0.067,-0.101,-0.084,0.015,0.004,-0.109,-0.066,-0.109,0.091,0.028,-0.122,0.089,0.033,-0.093,0.07,0.195,0.188,-0.057,-0.044,0.054,0.025,-0.077,0.075,0.047,-0.052,0.045,-0.105,0.078,-0.026,0.299,-0.122,0.136,-0.035,-0.205,-0.119,-0.005,-0.121,0.182,-0.045,-0.084,0.003,0.086,0.109,-0.152,-0.221,-0.018,0.021,0.047,-0.087,-0.023,-0.195,-0.025,0,0.238,0.069,-0.003,-0.077,0.155,-0.005,-0.015,0.041,-0.114,-0.012,0.05,-0.038,0.048,-0.064,-0.101,0.266,0.096,0.001,-0.035,-0.1,0.186,-0.042,0.023,0.023,-0.196,-0.059,0.105,0.063,-0.104,0.039,0.143,0.06,0.002,0.103,-0.113,0.005,0.11,-0.014,0.094,0.152,0.035,-0.155,0.131,0.119,0.026,-0.146,-0.097,0.119,0.019,-0.002,0.018,-0.053,-0.244,-0.137,0.096,-0.094,-0.087,0,-0.034,0.054,0.003,0.044,0.172,0.102,0.171,-0.047,-0.036,0.021,0.013,0.157,-0.178,-0.01,0.132,0.011,0.169,0.045,-0.109,0.026,0.12,0.015,0.018,-0.018,0.073,-0.123,0.053,0.021,-0.073,0.179,-0.082,-0.048,0.017,-0.217,-0.067,0.016,0.062,0,-0.07,-0.082,-0.098,-0.045,-0.091,0.061,0.084,0.175,-0.048,-0.162,0.048,0.171,0.082,0.041,0.051,0.071,-0.065,-0.05,-0.103,0.042,0.098,0.106,-0.024,0.148,0.252,-0.05,-0.138,0.023,0.134,0.086,-0.041,-0.058,-0.044,-0.037,0.008,-0.103,0.028,-0.174,0.043,0.212,0.121,0.03,0.036,0.065,-0.017,0.053,-0.099,0.049,0.146,0.047,0.044,-0.19,-0.118,-0.078,-0.101,-0.079,-0.042,0.085,0.171,0.226,0.07,-0.047,-0.04,0.035],"source":"src/helpers/vectorSearchPage/renderResults.js [renderResults]","tags":["code","what","function","utility","../snippetFormatter.js","./renderUtils.js","entries","buildResultRow","addEventListener","loadResultContext","preventDefault","appendChild","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/vectorSearchPage/renderResults.js","node":"renderResults"},"patterns":[],"relations":{"imports":["../snippetFormatter.js","./renderUtils.js"],"calls":["entries","buildResultRow","addEventListener","loadResultContext","preventDefault","appendChild"]}},"version":1},
{"id":"queryUi.js-prepareSearchUi","text":"Prepare DOM elements and query for a new search.\n\n@returns {{query: string, tbody: HTMLTableSectionElement|null, messageEl: HTMLElement|null}}\n1. Locate the search input, results table body, and message element.\n2. When the input is missing, return early with an empty query.\n3. Trim the query value and clear any previous results.\n4. Return the query, tbody reference, and message element.\n\nexport function prepareSearchUi() {\n  const input = document.getElementById(\"vector-search-input\");\n  const table = document.getElementById(\"vector-results-table\");\n  const tbody = table?.querySelector(\"tbody\");\n  const messageEl = document.getElementById(\"search-results-message\");\n  if (!input) return { query: \"\", tbody, messageEl };\n  const query = input.value.trim();\n  if (tbody) tbody.textContent = \"\";\n  return { query, tbody, messageEl };\n}","qaContext":"Why: Prepare DOM elements and query for a new search. How: @returns {{query: string, tbody: HTMLTableSectionElement|null, messageEl: HTMLElement|null}} 1.","embedding":[0.093,0.113,0.069,0.238,0.092,0.144,-0.019,0.073,0.152,-0.177,0.002,-0.003,0.103,-0.276,-0.114,-0.091,-0.069,-0.079,0.024,-0.058,0.057,0.126,0.065,-0.047,-0.017,0.105,-0.055,-0.249,-0.118,0.046,-0.062,-0.058,0.007,0.145,-0.093,0.059,-0.158,-0.086,0.055,-0.142,-0.167,-0.01,-0.042,0.008,0.181,-0.006,-0.179,-0.087,0.104,0,-0.115,-0.011,0.015,0.003,0.071,0.086,-0.129,-0.106,0.139,-0.051,-0.025,-0.177,0.172,-0.083,0.131,-0.132,-0.027,-0.101,0.009,0.048,-0.012,0.109,-0.064,0.124,-0.07,0.089,-0.133,0.024,-0.006,0.188,-0.046,-0.168,-0.15,-0.043,0.046,0.176,-0.032,-0.146,0.041,-0.191,-0.007,-0.023,-0.144,0.124,-0.098,0.172,0.125,0.005,0.066,0.081,0.064,-0.001,-0.102,-0.084,-0.218,0,0.114,-0.055,-0.043,-0.102,-0.149,0.109,-0.043,0.016,-0.188,-0.031,0.133,-0.2,0.099,0.067,0.142,0.148,-0.081,0.058,0.028,0.042,0.058,0,-0.059,-0.024,0.014,0.082,0.012,0.104,0.129,0.128,0.03,0.002,-0.18,-0.031,0.028,-0.139,-0.027,0.049,0.028,-0.066,0.157,0.004,-0.039,-0.019,0.073,0.106,0.091,-0.059,-0.039,-0.016,-0.208,-0.066,0.027,0.057,-0.037,0.04,0.067,0.178,0.025,0.096,-0.17,0,0.062,-0.014,0.013,-0.116,0.002,-0.074,-0.049,-0.058,-0.044,-0.124,-0.163,0.188,0,-0.144,0.152,0.064,-0.003,0.007,-0.01,0.018,0.027,0.035,0.108,-0.042,-0.125,-0.01,-0.063,-0.059,-0.02,-0.228,0.108,-0.164,0.243,-0.037,0.118,-0.062,-0.284,-0.208,0.138,-0.169,0.152,-0.073,-0.11,0.139,0.282,0.058,-0.06,-0.133,0.064,0.214,-0.054,-0.1,-0.153,-0.157,0.112,0,0.077,0.039,-0.028,0.021,-0.046,0.038,0.106,-0.018,-0.009,-0.101,0.02,-0.01,0.093,-0.094,-0.187,0.478,-0.063,-0.046,-0.1,0.002,0.14,0.038,0.031,0.039,-0.21,-0.001,0.151,0.121,-0.119,0.016,0.024,0.031,0.057,0.146,0.035,-0.043,0.113,0.034,0.09,0.243,0.043,-0.063,0.007,0.018,0.051,-0.025,0.014,0.172,0.06,0.046,-0.009,-0.181,-0.152,-0.067,0.071,-0.065,-0.136,-0.011,0.03,0.054,-0.067,0.053,0.113,0.074,0.052,-0.074,-0.055,0.264,0.134,0.063,-0.054,0.008,0.186,-0.004,0.168,0.173,-0.082,-0.045,0.031,-0.058,0.03,0.174,-0.007,-0.06,0.058,0.049,-0.107,0.01,-0.103,-0.026,-0.017,-0.125,-0.018,-0.009,-0.013,0,-0.087,-0.125,-0.101,-0.064,0.128,-0.015,0.084,0.178,-0.109,-0.162,0.027,0.112,0.001,-0.047,0.036,-0.075,-0.042,-0.083,-0.088,-0.108,0.186,0.089,0.03,0.149,0.284,-0.1,-0.066,-0.067,0.128,0.02,-0.06,0.04,-0.088,-0.033,0.037,-0.09,0.08,-0.134,-0.02,0.123,0.1,0.109,-0.019,-0.052,-0.089,0.024,-0.056,-0.076,0.176,-0.019,-0.026,-0.092,-0.122,0.007,-0.154,-0.145,0.015,0.142,-0.015,0.013,-0.044,0,0.024,-0.065],"source":"src/helpers/vectorSearchPage/queryUi.js [prepareSearchUi]","tags":["code","what","function","utility","getElementById","querySelector","trim"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/vectorSearchPage/queryUi.js","node":"prepareSearchUi"},"patterns":[],"relations":{"imports":[],"calls":["getElementById","querySelector","trim"]}},"version":1},
{"id":"queryUi.js-getSelectedTags","text":"Return an array containing the selected tag, if any.\n\n@returns {string[]}\n1. Read the value from the tag filter dropdown.\n2. When the value is not \"all\", return it in an array.\n3. Otherwise, return an empty array.\n\nexport function getSelectedTags() {\n  const tagSelect = document.getElementById(\"tag-filter\");\n  return tagSelect && tagSelect.value && tagSelect.value !== \"all\" ? [tagSelect.value] : [];\n}","qaContext":"Why: Return an array containing the selected tag, if any. How: @returns {string[]} 1.","embedding":[0.115,0.176,0.071,0.093,0.336,-0.093,0.21,0.027,0.131,-0.08,-0.062,-0.139,-0.284,-0.077,0.035,0.162,-0.087,-0.12,0.082,-0.021,-0.031,-0.088,-0.042,-0.065,0.06,0.381,-0.069,-0.26,-0.141,0.007,-0.056,-0.07,-0.118,-0.005,-0.002,-0.047,-0.055,-0.016,0.077,-0.01,0.011,0.278,-0.26,-0.048,0.08,-0.064,-0.092,-0.082,-0.011,0.105,0.067,-0.046,0.102,0.05,0.115,-0.013,-0.154,-0.397,0.095,-0.017,-0.06,-0.282,-0.087,0.15,0.109,0.029,-0.105,-0.016,-0.073,0.007,-0.009,0.042,0.278,0.131,0.109,-0.194,-0.133,-0.039,0.285,0.311,-0.177,-0.055,-0.113,-0.088,-0.04,0.252,-0.158,0.071,0.159,0.003,-0.165,-0.095,0.06,0.141,-0.046,0.183,0.028,-0.126,-0.012,0.034,-0.012,-0.082,0.096,-0.254,-0.157,-0.065,0.088,-0.141,-0.214,-0.078,-0.111,0.117,0.159,0.228,-0.189,-0.052,0.196,-0.225,-0.001,0.135,0.069,0.091,0.128,-0.022,-0.085,0.124,0.021,0,0.047,-0.167,-0.019,-0.133,-0.215,-0.04,-0.071,-0.115,0.046,0.035,0.075,0.061,0.067,0.097,0.043,0.028,0.113,-0.054,0.127,0.007,-0.107,-0.039,-0.03,-0.011,0.102,-0.166,-0.102,0.164,0.084,0.036,0.049,0.136,0.014,0.04,0.059,0.236,-0.221,0.121,-0.215,-0.039,0.035,-0.122,0.017,-0.103,0.021,-0.094,-0.062,-0.014,0.095,0.043,-0.097,-0.017,-0.007,-0.091,-0.077,0.111,0.075,0.154,-0.135,-0.055,-0.162,-0.034,0.161,-0.099,-0.006,0.006,0.158,0.077,-0.134,-0.151,0.073,-0.119,0.141,-0.04,0.082,-0.03,-0.143,-0.143,0.063,-0.054,-0.175,-0.179,-0.17,0.199,0.259,0.11,-0.085,-0.011,0.234,0.201,-0.026,-0.045,-0.135,-0.308,0.063,0,0.245,0.004,0.013,0.089,-0.088,-0.018,0.125,0.229,0.067,0.021,0.09,0.076,-0.132,0.024,0.206,0.416,-0.055,-0.13,0.146,-0.092,0.159,-0.126,0.089,0.106,-0.062,0.113,0.054,-0.009,0.137,-0.101,-0.024,0.16,0.082,0.187,0.053,-0.117,0.108,0.311,0.098,0.085,-0.247,-0.058,-0.012,0.004,-0.076,-0.144,0.108,0.068,-0.012,-0.093,-0.002,-0.136,-0.033,-0.01,-0.097,-0.183,0.091,-0.156,0.09,0.065,-0.153,-0.108,0.129,0.113,-0.063,-0.093,-0.154,0.109,-0.139,0.118,0.129,-0.027,-0.026,-0.116,0.022,0.077,-0.055,-0.053,0.182,0.004,0.291,0.179,-0.091,0.088,0.074,-0.081,0.01,-0.13,0.037,-0.008,0.081,-0.141,0.072,-0.141,-0.08,0,-0.163,-0.172,-0.038,-0.185,-0.036,0.105,0.059,-0.034,-0.115,-0.027,0.109,0.25,0.011,0.065,0.128,-0.053,0.136,0.119,-0.003,0.161,0.05,-0.035,-0.088,0.172,0.357,0.002,-0.203,-0.238,0.15,0.115,0.13,0.113,-0.037,-0.092,-0.019,0.019,0.032,-0.286,0.078,0.12,-0.044,-0.03,-0.067,-0.171,-0.382,-0.19,-0.081,0.051,0.177,0.001,-0.021,-0.164,-0.165,0.014,-0.181,-0.178,-0.027,-0.026,0.027,-0.062,0.175,-0.069,-0.109,0.038],"source":"src/helpers/vectorSearchPage/queryUi.js [getSelectedTags]","tags":["code","what","function","utility","getElementById"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/vectorSearchPage/queryUi.js","node":"getSelectedTags"},"patterns":[],"relations":{"imports":[],"calls":["getElementById"]}},"version":1},
{"id":"scorer.js-cosineSimilarity","text":"export function cosineSimilarity(a, b) {\n  if (!Array.isArray(a) || !Array.isArray(b) || a.length !== b.length) {\n    return 0;\n  }\n  let dot = 0;\n  let magA = 0;\n  let magB = 0;\n  for (let i = 0; i < a.length; i++) {\n    const x = a[i];\n    const y = b[i];\n    dot += x * y;\n    magA += x * x;\n    magB += y * y;\n  }\n  const denom = Math.sqrt(magA) * Math.sqrt(magB);\n  return denom === 0 ? 0 : dot / denom;\n}","qaContext":"Why: export function cosineSimilarity(a, b) { if (! How: Array.","embedding":[0.007,0.018,-0.194,-0.139,-0.196,-0.03,-0.017,0.004,-0.11,-0.026,-0.022,0.06,-0.045,0.062,0.055,0.041,-0.161,0.039,-0.063,-0.12,0.079,-0.022,-0.113,0.069,0.07,0.079,0.158,-0.04,0.052,-0.137,0.033,-0.081,0.001,0.009,-0.156,0.031,0.041,-0.126,0.219,-0.074,-0.135,0.217,0.044,0.081,0.092,-0.015,-0.033,0.01,0.076,0.035,-0.149,0.068,-0.155,-0.131,0.129,-0.067,-0.038,-0.041,0.324,0.025,0.029,-0.069,0.161,0.097,0.076,-0.067,0.149,-0.007,-0.009,0.06,-0.065,0.04,0.008,0.068,0.027,0.004,-0.18,-0.036,0.014,0.14,-0.12,-0.014,0.006,0.074,0.082,0.086,-0.116,-0.032,0.242,-0.06,-0.123,-0.043,-0.163,0.14,-0.033,-0.088,0.115,0.063,-0.16,0.122,0.086,-0.142,0.002,0.069,-0.047,-0.052,0.28,0.095,0.149,0.183,0.025,0.094,-0.014,0.035,-0.011,0.078,0.111,-0.025,0.155,-0.024,0.13,0.068,0.055,0.104,0.016,0.132,-0.053,0,-0.176,0.046,0.069,-0.019,-0.303,-0.031,-0.149,-0.038,-0.002,0.039,-0.022,0.187,-0.086,0.018,0.173,-0.163,0.293,-0.005,-0.029,-0.081,-0.023,-0.019,-0.158,0.184,-0.139,-0.18,0.085,-0.021,-0.125,0.029,0.114,-0.037,0.025,0.096,0.169,-0.075,-0.119,0.047,-0.045,0.065,0.028,-0.084,-0.049,0.02,0.039,-0.014,0.013,-0.013,-0.017,-0.054,-0.242,0.064,-0.103,0.139,0.135,-0.05,0.005,-0.093,0.001,0.066,-0.052,0.023,0.021,-0.067,-0.149,-0.112,-0.174,-0.065,-0.026,0.108,0.041,-0.001,-0.038,-0.001,0.008,-0.044,0.107,0.099,-0.067,-0.285,-0.085,0.069,0.102,-0.203,-0.033,0.047,-0.067,-0.139,-0.062,-0.028,-0.081,0.082,0.026,-0.04,-0.18,0,-0.083,0.11,0.023,-0.141,-0.149,0.031,0.148,-0.16,-0.033,-0.055,-0.131,-0.106,0.082,-0.073,0.063,0.103,0.083,-0.036,0.155,-0.011,0.044,0.097,0.139,-0.039,-0.01,0.064,-0.042,0.026,-0.049,-0.042,-0.03,0.004,0.008,-0.004,-0.141,-0.147,-0.052,-0.051,0.025,-0.064,-0.027,-0.038,0.061,0.001,0.04,0.069,0.189,0.081,0.019,0.075,0.006,-0.067,-0.067,0.012,-0.08,-0.035,-0.158,-0.071,0.183,0.006,-0.122,-0.13,0.001,-0.002,0.148,0.04,0.012,0.087,0.096,0.188,0.139,0.257,-0.055,-0.078,-0.214,-0.204,-0.032,-0.205,-0.098,-0.005,0.072,0.207,0.132,0.07,-0.074,0.017,0.044,-0.021,0.028,0.182,-0.178,-0.047,-0.027,-0.254,0.05,0,-0.254,-0.028,-0.238,0.048,0.147,-0.059,-0.025,-0.158,0.087,-0.203,-0.111,0.138,-0.019,0.113,-0.044,0.003,0.004,-0.071,0.039,0.018,0.065,-0.094,0.094,0.223,-0.015,-0.069,-0.169,-0.018,0.238,0.089,-0.173,0.084,0.107,-0.058,-0.069,-0.075,0.143,0.198,-0.075,0.194,-0.158,0.012,0.157,0.074,0.034,-0.057,0.075,-0.098,0.011,-0.115,0.146,0.129,0.051,0.146,-0.049,-0.27,-0.072,-0.019,-0.084,0.167,-0.049,0.027,0.037,-0.02],"source":"src/helpers/vectorSearch/scorer.js [cosineSimilarity]","tags":["code","what","function","utility","./loader.js","isArray","sqrt"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/vectorSearch/scorer.js","node":"cosineSimilarity"},"patterns":[],"relations":{"imports":["./loader.js"],"calls":["isArray","sqrt"]}},"version":1},
{"id":"scorer.js-scoreEntries","text":"export function scoreEntries(entries, queryVector, queryText) {\n  const terms = String(queryText).toLowerCase().split(/\\s+/).filter(Boolean);\n  return entries\n    .map((entry) => {\n      const sim = cosineSimilarity(queryVector, entry.embedding);\n      const normalized = (sim + 1) / 2;\n      const text = entry.text?.toLowerCase() ?? \"\";\n      const hasTerm = terms.some((t) => text.includes(t));\n      const bonus = hasTerm ? EXACT_MATCH_BONUS : 0;\n      return { score: Math.min(1, normalized + bonus), ...entry };\n    })\n    .sort((a, b) => b.score - a.score);\n}","qaContext":"Why: export function scoreEntries(entries, queryVector, queryText) { const terms = String(queryText). How: toLowerCase().","embedding":[-0.012,0.219,-0.044,-0.004,0.019,0.234,0.081,0.122,-0.011,0.049,-0.032,-0.037,0.058,-0.049,0.007,0.063,-0.099,-0.005,-0.046,-0.23,0.037,0.058,-0.045,-0.029,0.157,0.045,-0.032,0.036,0.048,0.024,0.026,-0.006,0.132,0.129,-0.145,-0.052,-0.204,-0.139,0.08,-0.009,0.028,0.142,-0.064,-0.023,0.098,-0.022,-0.119,-0.048,0.055,0.079,-0.186,0.097,-0.103,-0.045,0.01,0.122,-0.137,-0.177,-0.006,-0.185,-0.082,-0.258,0.2,-0.048,0.124,-0.138,0.065,0.21,-0.013,0.104,0.047,0.104,0.129,0.002,-0.041,0.152,-0.201,-0.096,-0.029,0.09,-0.143,-0.129,-0.053,0.045,0.145,0.007,0.074,-0.212,0.09,-0.025,-0.072,-0.094,0.03,0.1,-0.076,0.056,-0.02,0.016,0.075,0.164,-0.034,0.11,-0.064,-0.151,-0.169,-0.054,0.094,0.044,0.098,-0.134,-0.062,0.086,0.124,0.021,-0.202,-0.02,0.176,-0.063,0.207,0.049,0.139,0.181,-0.068,0.042,-0.019,0.176,0.108,0,0.072,-0.059,0.022,0.008,-0.146,0.098,-0.063,0.016,-0.184,0.07,-0.14,0.092,0.003,0.015,-0.004,-0.126,0.124,-0.033,-0.022,-0.023,-0.041,-0.063,-0.011,-0.011,0.03,-0.074,0.097,-0.056,-0.15,-0.045,0.073,-0.058,-0.023,0.078,0.154,0.069,0.024,0.048,-0.025,-0.02,-0.128,-0.038,0.039,-0.158,-0.124,0.052,-0.07,0.007,0.125,0.008,-0.143,0.038,0.098,0.04,-0.006,-0.04,0.025,0.057,-0.042,0,-0.132,0.104,0.046,-0.028,-0.075,0.092,-0.048,0.039,0.178,-0.005,0.027,0.018,0.021,-0.059,0.119,0.029,-0.028,-0.091,-0.083,-0.253,-0.104,-0.172,-0.014,0.047,0.04,0.067,-0.026,-0.151,0.118,-0.017,-0.124,0.053,-0.077,-0.034,0.007,0,-0.002,-0.012,-0.059,-0.108,0.125,-0.012,-0.049,0.028,-0.077,0.05,0.029,-0.025,0.052,-0.106,0.041,0.129,0.019,0.047,0.013,-0.026,0.05,0.151,0.014,0.024,-0.013,0.1,0.119,-0.015,-0.057,-0.054,0.015,-0.114,-0.113,0.038,-0.136,-0.168,0.035,-0.096,-0.085,0.146,-0.083,-0.046,-0.005,0.008,0.084,-0.023,0.029,-0.027,0.024,0.011,-0.034,0.013,-0.126,0.083,-0.099,-0.112,-0.164,-0.102,-0.099,-0.02,0.011,0.052,0.095,-0.027,0.09,-0.04,-0.057,0.061,0.117,0.083,-0.029,0.056,0.102,0.026,-0.033,0.002,-0.043,0.123,0.08,0.054,0.046,0.041,0.124,0.064,0.011,0.026,0.053,0.04,0.049,-0.008,-0.079,-0.068,0.07,-0.027,-0.048,0,-0.179,-0.107,-0.279,0.152,-0.058,-0.012,0.008,0.009,-0.13,-0.089,0.063,0.086,-0.146,-0.136,0.036,-0.041,-0.069,0.18,-0.069,-0.083,0.058,0.045,-0.055,0.131,0.05,0.031,0.07,-0.067,0.197,0.106,-0.069,0.089,0.051,-0.058,0.023,0.058,0.035,-0.034,0.061,0.168,-0.028,0.077,0.037,0.068,0.032,-0.184,0.077,-0.047,0.206,-0.04,0.098,-0.12,-0.128,0.018,-0.023,-0.097,-0.033,0.003,-0.169,-0.009,0.13,-0.1,0.065,0.052],"source":"src/helpers/vectorSearch/scorer.js [scoreEntries]","tags":["code","what","function","utility","./loader.js","filter","split","toLowerCase","String","sort","map","cosineSimilarity","some","includes","min"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/vectorSearch/scorer.js","node":"scoreEntries"},"patterns":[],"relations":{"imports":["./loader.js"],"calls":["filter","split","toLowerCase","String","sort","map","cosineSimilarity","some","includes","min"]}},"version":1},
{"id":"scorer.js-findMatches","text":"Find the top matching embeddings for a query vector.\n\n@param {number[]} queryVector - Vector to compare.\n@param {number} [topN=5] - Number of matches to return.\n@param {string[]} [tags=[]] - Tags that must be present on matching entries.\n@param {string} [queryText=\"\"] - Full query text for exact term matching.\n@returns {Promise<Array<{score:number} & Record<string, any>>|null>} Match results sorted by score.\n1. Load embeddings via `loadEmbeddings`.\n2. Build a pipeline of operations: normalize, filter by tags, score, limit.\n3. Execute steps sequentially, aborting early when a step sets an error status.\n4. Return `null` for missing embeddings, `[]` for any non-ok status, or the final list.\n\nexport async function findMatches(queryVector, topN = 5, tags = [], queryText = \"\") {\n  const entries = await loadEmbeddings();\n  if (entries === null) return null;\n  const initial = {\n    status: \"ok\",\n    entries,\n    queryVector,\n    topN,\n    tags,\n    queryText\n  };\n  const pipeline = [normalizeStep, tagFilterStep, scoringStep, limitStep];\n  const result = runPipeline(initial, pipeline);\n  if (result.status === \"null\") return null;\n  if (result.status !== \"ok\") return [];\n  return result.entries;\n}","qaContext":"Why: Find the top matching embeddings for a query vector. How: @returns {Promise<Array<{score:number} & Record<string, any>>|null>} Match results sorted by score.","embedding":[-0.094,0.093,-0.034,0.011,0.046,0.076,-0.005,0.038,-0.001,-0.056,-0.127,-0.025,0.056,-0.076,-0.041,0.101,-0.036,0.017,-0.005,-0.179,0.016,0.061,0.054,-0.078,0.013,0.1,-0.111,-0.116,-0.042,-0.016,0.073,-0.032,-0.072,0.212,-0.074,0.001,-0.175,-0.119,-0.044,-0.044,0.118,0.152,-0.11,-0.075,0.13,-0.025,-0.15,-0.053,-0.033,0.02,-0.195,-0.073,-0.051,0.052,0.103,0.049,-0.068,-0.212,0.002,-0.122,0.041,-0.276,0.156,-0.067,0.052,-0.112,0.049,0.095,0.071,0.133,-0.01,0.106,0.053,0.025,-0.137,0.132,-0.065,-0.084,0.022,0.073,-0.16,-0.135,-0.047,0.012,0.09,0.032,0.017,-0.152,0.018,-0.092,-0.107,-0.005,-0.051,0.028,0.118,0.098,0,0.077,0.119,0.102,-0.017,0.018,0.025,-0.114,-0.112,0.023,0.056,0.025,-0.092,-0.151,-0.069,0.02,0.138,0.06,-0.008,-0.077,0.236,-0.099,0.073,0.127,0.168,0.146,-0.025,-0.056,-0.009,0.134,0.016,0,0.065,-0.13,0.029,-0.038,-0.036,0.099,0.04,0.049,-0.091,0.078,-0.071,0.064,-0.028,-0.039,-0.053,-0.175,0.168,-0.041,-0.1,0.038,0.03,-0.135,-0.032,0.029,0.019,-0.094,-0.007,-0.12,-0.085,-0.055,0.016,0.003,-0.058,0.104,0.123,-0.012,0.096,0.062,-0.106,-0.111,-0.079,-0.02,-0.043,-0.077,-0.112,-0.102,-0.07,-0.014,0.074,0.007,-0.018,0.055,0.051,-0.162,0.058,-0.008,0.036,0.136,0,0.075,-0.184,-0.049,0.005,-0.089,0.075,0.055,0.086,0.056,0.024,-0.044,0.121,0.051,0.057,-0.05,0.169,-0.083,-0.086,-0.092,-0.099,-0.097,0.012,-0.145,-0.109,0.124,0.072,0.058,0.029,-0.172,0.083,0.084,-0.012,0.009,-0.047,-0.087,0.025,0,0.152,-0.011,-0.017,0.023,0.142,-0.074,0.047,0.094,-0.051,-0.028,0.033,-0.033,-0.017,-0.064,0.073,0.136,-0.08,-0.048,0.085,0.029,0.066,0.125,-0.006,0.138,-0.052,0.094,0.147,-0.008,-0.034,-0.128,0.003,-0.107,-0.096,0.041,-0.061,-0.129,0.075,0.043,-0.052,0.08,0.008,0.037,-0.06,0.016,-0.008,-0.063,-0.025,0.161,-0.029,-0.06,0.002,-0.043,-0.166,0.094,0.013,-0.09,-0.096,-0.09,-0.085,0.012,-0.023,0.009,0.15,-0.067,0.132,-0.01,-0.116,0.007,-0.06,0.158,-0.011,0.022,0.034,0.06,0.112,0.005,-0.03,-0.016,0.158,0.08,-0.062,0.006,0.077,0.066,0.068,0.144,-0.005,0.079,-0.003,-0.003,0.03,-0.095,-0.088,-0.025,0.014,0,-0.189,-0.103,-0.182,0.044,0.021,-0.013,0.077,0.086,-0.035,-0.068,0.125,0.075,0.022,-0.054,0.055,-0.035,-0.008,-0.009,-0.041,0.035,-0.024,0.122,-0.064,0.145,0.141,0.004,0.022,0.021,0.134,0.03,-0.005,0.012,0.017,-0.116,0.059,0.021,0.048,-0.122,-0.011,0.066,0.132,0.144,0.039,0.017,0.011,-0.136,0.017,-0.023,0.167,-0.067,0.021,-0.154,-0.155,0.084,-0.098,-0.091,0.058,-0.041,0.013,0.081,0.172,-0.181,0.05,0.076],"source":"src/helpers/vectorSearch/scorer.js [findMatches]","tags":["code","how","function","utility","./loader.js","loadEmbeddings","runPipeline"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/vectorSearch/scorer.js","node":"findMatches"},"patterns":[],"relations":{"imports":["./loader.js"],"calls":["loadEmbeddings","runPipeline"]}},"version":1},
{"id":"loader.js-loadEmbeddings","text":"Load vector embeddings from `client_embeddings.json`.\n\n@returns {Promise<Array<{id:string,text:string,embedding:number[],source:string,tags?:string[],qaContext?:string}>>} Parsed embeddings array.\n1. Return cached embeddings when available.\n2. Otherwise fetch `client_embeddings.json` via `fetchJson` and cache the promise.\n   - On failure, log the error and resolve to `null`.\n3. Await the promise, store the result, and return it.\n\nexport async function loadEmbeddings() {\n  if (cachedEmbeddings !== undefined) return cachedEmbeddings;\n  if (!embeddingsPromise) {\n    embeddingsPromise = fetchJson(`${DATA_DIR}client_embeddings.manifest.json`)\n      .then(manifest => {\n        const shardPromises = manifest.shards.map(shardFile =>\n          fetchJson(`${DATA_DIR}${shardFile}`)\n        );\n        return Promise.all(shardPromises);\n      })\n      .then(shards => {\n        return shards.flat();\n      })\n      .catch((err) => {\n        console.error(\"Failed to load embeddings:\", err);\n        return null;\n      });\n  }\n  cachedEmbeddings = await embeddingsPromise;\n  return cachedEmbeddings;\n}","qaContext":"Why: Load vector embeddings from `client_embeddings. How: json` via `fetchJson` and cache the promise.","embedding":[-0.098,0.102,0.079,0.1,0.03,0.059,-0.073,0.019,0.213,-0.111,-0.053,0.048,-0.02,0.012,0.071,0.1,0.009,0.042,-0.073,-0.088,0.039,-0.033,0.112,-0.041,0.103,-0.049,-0.138,-0.078,0.03,0.023,0.152,-0.072,-0.228,-0.002,-0.057,0.218,-0.098,-0.177,-0.072,-0.036,0.153,0.214,-0.26,-0.016,0.166,-0.156,0.004,0.007,-0.157,0.037,-0.01,-0.05,-0.119,0.047,-0.034,-0.069,-0.115,0.106,0.062,0.057,0.037,-0.255,0.168,-0.064,-0.006,-0.115,0.023,0.062,-0.069,0.17,-0.008,-0.003,-0.134,-0.081,-0.069,0.101,-0.026,-0.064,0.069,-0.146,-0.023,-0.16,-0.031,-0.104,0.039,0.1,0.046,-0.076,-0.066,-0.103,-0.027,-0.028,-0.052,0.127,0.088,-0.005,0.058,0.179,-0.034,0.042,0.057,0.08,0.133,0.001,-0.044,-0.095,0.007,-0.001,-0.222,-0.046,-0.045,0.181,-0.001,0.011,-0.095,0.016,0.02,-0.014,0.013,0.184,0.163,0.026,0.198,0.069,-0.022,-0.089,0.082,0,0.059,-0.119,-0.011,0.104,0.079,0.013,0.035,0.134,-0.137,0.006,-0.071,0.081,0.025,0.037,-0.096,0.056,0.152,-0.104,0.169,0.09,0.022,-0.064,-0.024,-0.017,-0.048,-0.035,0.046,0.052,-0.216,-0.047,0.046,-0.076,0.085,-0.025,0.068,-0.023,0.022,0.013,-0.282,-0.097,0.174,0.032,0.007,-0.061,-0.174,-0.102,0.067,0.004,-0.002,-0.121,-0.082,0.133,0.017,-0.127,0.194,-0.122,0.086,-0.026,-0.044,-0.109,-0.059,-0.103,0.02,-0.075,-0.066,0.032,-0.003,0.162,-0.13,0.052,0.033,0.083,0.019,-0.037,0.078,-0.069,-0.214,-0.046,-0.023,0.05,0.064,-0.113,-0.143,0.22,-0.167,0.076,0.104,-0.162,0.07,0.203,-0.078,-0.059,-0.022,-0.101,-0.006,0,0.121,-0.003,-0.085,0.07,0.034,-0.014,0.16,0.168,-0.135,-0.093,-0.081,-0.115,0.023,0.045,-0.038,0.245,-0.132,-0.096,0.108,-0.043,-0.004,0.011,0.1,0.209,-0.006,0.148,0.059,-0.12,-0.193,-0.08,0.03,-0.155,-0.132,-0.02,-0.093,-0.035,0.152,0.113,-0.141,-0.021,0.091,-0.002,-0.173,0.013,0.071,-0.2,0.027,0.027,0.042,-0.03,0.077,-0.022,-0.123,0.131,0.125,-0.078,-0.062,-0.027,0.051,0.048,-0.06,-0.246,-0.017,-0.179,0.004,-0.075,-0.094,-0.013,0.195,0.092,0,-0.009,-0.008,-0.012,-0.01,0,0.006,-0.138,0.151,0.007,0.02,-0.014,-0.042,0.022,0.184,-0.049,0.045,0.054,-0.093,0.003,0.068,0.049,-0.142,0.093,0.144,0,-0.133,-0.03,-0.067,-0.021,-0.012,-0.105,0.095,-0.039,-0.027,-0.058,-0.005,-0.004,0.01,-0.009,0.059,0.02,0.044,0.048,0.015,-0.035,-0.11,0.215,-0.007,-0.106,0.079,-0.018,0.094,0.06,0.121,-0.04,-0.059,-0.048,0.067,-0.135,-0.045,0.039,0.083,-0.109,0.125,0.138,0.106,0.076,0.037,-0.008,0.026,-0.078,-0.063,0.145,0.044,0.102,0.047,-0.234,-0.111,0.052,-0.039,-0.2,0.046,-0.019,0.077,0.029,0.134,-0.205,0.042,-0.18],"source":"src/helpers/vectorSearch/loader.js [loadEmbeddings]","tags":["code","what","function","utility","../dataUtils.js","../constants.js","catch","fetchJson","error","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/vectorSearch/loader.js","node":"loadEmbeddings"},"patterns":[],"relations":{"imports":["../dataUtils.js","../constants.js"],"calls":["catch","fetchJson","error"]}},"version":1},
{"id":"context.js-chunkMarkdown","text":"export function chunkMarkdown(text) {\n  const lines = text.split(/\\r?\\n/);\n  const sections = splitIntoSections(lines);\n  const chunks = [];\n  for (const section of sections) {\n    chunks.push(...chunkSection(section));\n  }\n  return chunks;\n}","qaContext":"Why: export function chunkMarkdown(text) { const lines = text. How: split(/\\r?","embedding":[-0.153,0.258,0.031,0.034,0.166,-0.103,0.008,0.169,-0.048,-0.093,-0.21,0.08,-0.229,-0.057,0.23,-0.088,-0.349,0.06,-0.046,-0.203,0.195,-0.018,-0.09,0.036,0.255,0.087,0.011,-0.09,0.126,0.009,0.233,-0.24,0.043,0.106,-0.019,0.238,-0.127,-0.077,0.177,-0.022,0.064,0.216,-0.326,-0.078,0.268,-0.052,-0.152,0.035,0.196,0.071,-0.207,0.055,-0.196,0.093,0.17,0.01,0.011,-0.208,0.032,0.13,0.077,-0.167,0.077,-0.087,0.289,-0.042,-0.034,0.239,-0.022,0.111,-0.168,0.211,0.125,0.129,-0.125,-0.05,-0.282,0.07,0.008,0.164,-0.062,-0.009,0.061,0.119,-0.141,0.295,0.018,-0.045,-0.217,-0.078,-0.216,-0.169,0.253,0.243,-0.248,0.016,0.007,-0.134,0.094,0.039,-0.181,0.066,0.228,-0.141,-0.41,-0.171,0.087,0.033,-0.083,0.054,0.059,0.143,-0.098,-0.09,-0.166,-0.224,0.026,-0.225,0.258,0.228,0.228,0.012,-0.131,0.106,0.024,0.081,0.332,0,-0.079,-0.122,-0.128,0.078,0.051,0.048,-0.208,-0.099,-0.289,0.033,-0.043,-0.264,0.141,0.313,0.051,-0.319,0.257,-0.026,0.023,0.092,-0.187,-0.029,0.047,0.024,-0.024,-0.122,-0.017,-0.014,-0.183,-0.05,0.261,-0.094,0.028,-0.015,0.214,0.122,-0.157,0.064,-0.339,-0.124,0.081,0.03,-0.039,0.028,-0.158,0.086,-0.13,0.033,0.187,-0.12,-0.079,0.348,0.194,-0.208,0.192,-0.129,0.12,-0.016,0.071,0.042,-0.124,0.162,-0.001,0.224,-0.149,0.146,-0.065,0.118,-0.156,-0.055,-0.158,-0.019,0.093,-0.122,-0.088,-0.04,-0.235,-0.068,-0.042,-0.438,-0.027,-0.167,0.111,-0.187,0.156,0.087,-0.118,-0.318,0.22,0.07,-0.284,-0.24,0.093,-0.267,-0.019,0,0.234,0.106,-0.058,-0.032,-0.07,0.174,-0.086,0.302,-0.083,0.238,-0.2,0.083,-0.133,0.007,-0.132,0.106,0.061,-0.019,0.105,-0.244,-0.011,-0.312,0.181,0.075,-0.026,0.18,0.199,0.06,-0.076,-0.147,-0.143,-0.023,-0.026,0.098,-0.154,-0.196,-0.056,0.31,0.189,-0.035,-0.058,0.062,-0.01,-0.026,-0.143,-0.094,0.08,0.291,-0.138,0.079,-0.171,-0.056,-0.125,-0.064,-0.053,0.022,-0.088,0,-0.018,-0.034,-0.29,-0.08,0.143,0.001,0.406,-0.123,-0.125,0.027,-0.014,0.267,-0.022,0.119,0.152,0.016,0.024,-0.005,-0.233,-0.044,0.063,0.238,0.28,-0.049,0.036,0.064,0.092,-0.019,-0.171,0.029,-0.083,-0.081,-0.063,0.107,0.243,-0.048,-0.005,0,-0.074,-0.257,-0.258,-0.122,-0.014,-0.005,-0.041,-0.07,-0.049,-0.085,0.065,-0.001,-0.221,-0.03,0.081,-0.103,0.142,0.244,-0.09,-0.047,-0.067,-0.04,0.162,0.244,0.217,-0.086,-0.015,0.22,0.167,-0.086,-0.068,0.153,0.12,-0.099,0.113,-0.072,0.13,-0.059,0.177,0.155,0.167,0.015,0.137,-0.008,-0.096,-0.116,-0.265,0.089,0.207,-0.012,-0.067,-0.017,-0.188,0.105,-0.181,-0.3,-0.101,-0.045,-0.028,0.004,0.109,0.046,0.145,0],"source":"src/helpers/vectorSearch/context.js [chunkMarkdown]","tags":["code","what","function","utility","split","splitIntoSections","push","chunkSection"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/vectorSearch/context.js","node":"chunkMarkdown"},"patterns":[],"relations":{"imports":[],"calls":["split","splitIntoSections","push","chunkSection"]}},"version":1},
{"id":"context.js-fetchContextById","text":"Fetch neighboring context chunks for a given embedding id.\n\n@param {string} id - Entry identifier like `foo.md-chunk-3`.\n@param {number} [radius=1] - Number of neighboring chunks to include.\n@returns {Promise<string[]>} Array of surrounding chunk strings.\n1. Validate that `id` matches the `filename-chunk-N` pattern.\n   - Return an empty array for invalid ids.\n2. Build a URL to the markdown file using the filename.\n3. Fetch the markdown text with `fetch` and split it using `chunkMarkdown`.\n4. Determine the slice of chunks around the requested index based on `radius`.\n5. Return the selected chunk texts.\n\nexport async function fetchContextById(id, radius = 1) {\n  const match = /^([^\\s]+\\.md)-chunk-(\\d+)$/.exec(id);\n  if (!match) return [];\n  const [, filename, num] = match;\n  const index = Number(num) - 1;\n  try {\n    const url = new URL(`../../design/productRequirementsDocuments/${filename}`, import.meta.url)\n      .href;\n    const res = await fetch(url);\n    if (!res.ok) return [];\n    const text = await res.text();\n    const chunks = chunkMarkdown(text);\n    const start = Math.max(0, index - radius);\n    const end = Math.min(chunks.length, index + radius + 1);\n    return chunks.slice(start, end);\n  } catch (err) {\n    console.error(`Failed to load context from ${filename}`, err);\n    return [];\n  }\n}","qaContext":"Why: Fetch neighboring context chunks for a given embedding id. How: Build a URL to the markdown file using the filename.","embedding":[-0.134,0.162,-0.039,0.004,0.153,-0.049,0.025,0.076,0.066,-0.071,-0.101,0.026,0.094,-0.08,0.043,-0.042,-0.092,0.082,-0.117,-0.113,0.128,0.077,0.124,-0.044,0.002,0.047,-0.016,-0.172,-0.015,-0.011,0.22,-0.005,-0.117,-0.081,0.029,0.146,-0.164,-0.046,0.003,-0.072,0.123,0.173,-0.028,-0.016,0.077,-0.128,-0.174,0.072,-0.023,0.013,-0.248,-0.052,-0.156,0.086,0.119,-0.024,-0.073,-0.076,-0.035,0.015,0.119,-0.312,0.068,-0.221,0.163,-0.059,0.028,0.07,0.04,0.028,0.017,0.127,-0.06,0.152,-0.112,0.152,-0.009,-0.015,-0.038,-0.057,-0.131,-0.032,0.095,-0.113,-0.024,0.043,0.034,-0.035,0.025,-0.048,-0.066,0.037,-0.06,0.071,0.15,0.096,-0.084,0.106,0.074,0.083,-0.011,0.079,-0.018,-0.054,-0.061,-0.041,0.007,0.081,-0.091,-0.032,-0.053,0.069,-0.002,0.032,-0.029,-0.111,0.246,-0.068,0.075,0.158,0.176,0.013,-0.06,0.03,0.064,0.037,0.12,0,0.065,-0.08,-0.014,0.029,0.051,-0.046,-0.033,0.072,-0.088,0.031,-0.147,-0.063,0.001,-0.044,-0.015,-0.174,0.18,-0.003,-0.027,0.006,-0.09,-0.153,-0.066,0.004,-0.039,-0.052,-0.007,-0.069,-0.084,-0.05,0.13,-0.087,-0.087,-0.019,0.152,0.033,-0.051,0.074,-0.253,-0.125,0.029,0.023,0.015,0.136,-0.2,-0.115,-0.057,-0.051,-0.026,-0.038,0.079,0.146,0.121,-0.143,0.061,-0.098,-0.05,0.05,0.074,0.097,-0.042,-0.05,-0.033,0.108,0.025,0.039,0.014,0.068,0.041,0.016,0.028,-0.017,0.147,-0.048,0.026,-0.109,-0.061,-0.036,-0.074,-0.213,0.002,-0.015,-0.007,-0.005,0.011,0.191,-0.051,-0.197,0.069,-0.142,-0.042,-0.023,-0.004,-0.168,0.034,0,0.224,-0.049,0.092,-0.043,0.133,0.007,0.073,0.227,-0.101,-0.025,-0.085,-0.046,0.014,-0.047,-0.03,0.071,0.056,-0.164,0.103,0.01,0.025,-0.036,0.072,0.137,-0.138,0.15,0.084,-0.073,-0.161,-0.107,-0.054,-0.06,-0.138,0.019,-0.004,-0.127,0,0.159,-0.057,0.107,0.065,0.052,-0.046,0.082,0.034,-0.241,0.119,0.245,-0.063,0.053,-0.031,-0.016,-0.052,0.029,0.067,-0.078,-0.032,-0.018,-0.038,0.029,-0.053,-0.021,0.022,-0.032,0.231,-0.053,-0.066,-0.063,-0.04,0.148,-0.052,0.11,0.119,0.009,0.109,-0.036,-0.024,-0.048,0.082,0.196,0.041,0.13,0.016,0.021,0.095,-0.016,-0.084,0.141,-0.054,-0.028,-0.084,-0.039,0.037,0.025,0.03,0,-0.163,-0.009,-0.178,0.034,0.059,0.055,-0.134,-0.023,0.058,-0.101,0.077,-0.02,-0.069,0.028,-0.106,-0.125,0.095,0.019,-0.092,0.093,-0.025,0.114,0.01,0.009,0.208,-0.048,0.005,0.081,0.022,-0.078,-0.071,-0.011,0.084,-0.002,-0.033,0.052,0.135,-0.044,0.01,0.077,0.194,0.052,0.118,-0.04,0.001,-0.145,-0.011,0.024,0.104,0.06,-0.037,-0.227,-0.071,0.066,0.002,-0.25,0.002,-0.078,0.051,0.107,0.182,-0.127,0.048,0.027],"source":"src/helpers/vectorSearch/context.js [fetchContextById]","tags":["code","what","function","utility","exec","Number","fetch","text","chunkMarkdown","max","min","slice","error","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/vectorSearch/context.js","node":"fetchContextById"},"patterns":[],"relations":{"imports":[],"calls":["exec","Number","fetch","text","chunkMarkdown","max","min","slice","error"]}},"version":1},
{"id":"renderList.js-renderList","text":"Render a list of tooltip entries filtered by search terms.\n\n@param {Record<string,string>} data - Flattened tooltips map.\n@param {string} filter - Search filter string.\n@param {(key: string) => void} select - Callback when an item is selected.\n@param {HTMLElement} listPlaceholder - Current list element to replace.\n@returns {{ element: HTMLElement, listSelect: (index: number) => void }}\n1. Build an array of list item configs from matching tooltip entries.\n2. Use {@link SidebarList} to create a list and wire selection to `select`.\n3. Append a warning icon and screen-reader text for invalid or malformed entries.\n4. Replace the previous list element and return the new element and select binding.\n\nexport function renderList(data, filter, select, listPlaceholder) {\n  const items = [];\n  const terms = filter.toLowerCase().split(/\\s+/).filter(Boolean);\n  Object.entries(data).forEach(([key, body]) => {\n    const haystack = `${key} ${body}`.toLowerCase();\n    const match = terms.every((t) => haystack.includes(t));\n    if (match) {\n      const bodyValid = typeof body === \"string\" && body.trim().length > 0;\n      const keyValid = KEY_PATTERN.test(key);\n      const valid = bodyValid && keyValid;\n      const { warning } = parseTooltipText(body);\n      const prefix = key.split(\".\")[0];\n      items.push({\n        label: key,\n        className: prefix,\n        dataset: {\n          key,\n          body,\n          valid: String(valid),\n          warning: String(warning),\n          keyValid: String(keyValid)\n        }\n      });\n    }\n  });\n  const list = new SidebarList(items, (_, el) => {\n    select(el.dataset.key);\n  });\n  Array.from(list.element.children).forEach((li) => {\n    let message = null;\n    if (li.dataset.keyValid === \"false\") {\n      message = INVALID_KEY_MSG;\n    } else if (li.dataset.valid === \"false\") {\n      message = INVALID_TOOLTIP_MSG;\n    } else if (li.dataset.warning === \"true\") {\n      message = MALFORMED_TOOLTIP_MSG;\n    }\n    if (message) {\n      const icon = document.createElement(\"span\");\n      icon.className = \"tooltip-invalid-icon\";\n      icon.textContent = \"!\";\n      icon.title = message;\n      icon.setAttribute(\"aria-hidden\", \"true\");\n      const sr = document.createElement(\"span\");\n      sr.className = \"tooltip-invalid-text\";\n      sr.textContent = message;\n      li.append(\" \", icon, sr);\n    }\n  });\n  list.element.id = \"tooltip-list\";\n  if (listPlaceholder) listPlaceholder.replaceWith(list.element);\n  return { element: list.element, listSelect: list.select.bind(list) };\n}","qaContext":"Why: Render a list of tooltip entries filtered by search terms. How: @param {Record<string,string>} data - Flattened tooltips map.","embedding":[-0.042,0.055,0.15,0.151,0.055,0.046,0.123,0.054,-0.028,-0.089,-0.038,-0.091,0.038,-0.186,0.016,0.156,-0.063,-0.071,-0.021,-0.037,0.179,0.023,-0.028,-0.058,-0.057,0.167,0.139,-0.118,-0.1,-0.003,-0.056,-0.036,-0.127,0.087,-0.109,0.037,-0.007,0.038,0,0.051,0.084,0.219,-0.167,-0.208,0.091,-0.22,-0.098,-0.167,0.045,0.154,-0.048,0.027,0.014,0.049,0.006,-0.034,-0.105,-0.164,0.139,-0.019,0.154,-0.184,0.112,-0.058,0.127,-0.144,-0.003,-0.001,0.014,0.036,-0.01,0.075,0.082,-0.01,-0.028,-0.004,0.005,-0.096,-0.038,-0.011,-0.018,-0.026,-0.045,0.001,-0.018,0.037,-0.083,-0.097,-0.062,-0.108,-0.162,-0.039,0.083,0.053,0.095,0.149,-0.061,-0.067,-0.022,0.004,-0.028,-0.037,-0.075,-0.154,-0.042,-0.056,0.017,-0.068,-0.173,-0.011,-0.025,0.157,-0.002,0.047,-0.07,-0.116,0.083,-0.037,0.063,0.11,0.169,0.048,-0.072,-0.032,0.137,-0.054,-0.051,0,0.15,-0.131,-0.075,0.019,-0.079,-0.008,0.062,0.063,-0.073,0.053,0.005,-0.002,-0.019,-0.042,-0.001,-0.166,0.028,0.034,-0.035,-0.076,-0.157,-0.114,-0.087,-0.089,-0.006,-0.009,-0.044,0.065,-0.115,-0.07,0.098,0.137,0.057,0.014,0.118,0.013,0.067,0.045,-0.079,-0.046,0.168,-0.029,0.014,-0.015,-0.019,-0.004,-0.028,0.093,0.025,-0.065,-0.108,0.126,-0.078,-0.093,0.008,0.014,-0.031,0.08,0.127,0.096,-0.152,0.126,-0.031,0.022,0.001,0.031,0.115,-0.008,0.014,-0.245,-0.023,-0.035,0.199,0.01,0.073,-0.134,-0.149,-0.102,-0.05,-0.186,-0.008,-0.196,-0.071,0.105,0.143,0.026,0.036,-0.13,-0.003,0.052,-0.132,0.039,-0.075,-0.195,-0.026,0,0.129,0.012,0.079,0.097,0.16,-0.02,0.029,0.069,-0.048,-0.011,-0.064,-0.095,0.035,-0.119,0.044,0.263,-0.161,0,0.053,-0.169,0.011,0.068,0.088,0.101,-0.204,0.066,0.112,0.118,0.033,-0.021,0.06,0.088,0.056,0.168,-0.04,-0.141,0.166,0.05,0.05,0.173,-0.019,-0.111,-0.045,-0.081,-0.08,-0.176,0.028,0.146,0,-0.007,0.07,-0.072,-0.245,0.07,0.029,-0.112,-0.039,-0.177,0.16,0.114,-0.091,-0.08,0.196,0.046,0.302,-0.014,-0.034,-0.085,0.041,0.153,-0.034,0.029,0.168,-0.126,0.151,-0.016,-0.014,-0.136,0.134,0.029,0.075,-0.091,0.056,0.021,0.029,0.022,-0.018,0.143,-0.102,-0.08,0.018,-0.258,0.075,-0.024,0.098,0,-0.164,-0.005,-0.077,0.013,0.024,0.036,0.027,-0.003,0.005,-0.129,0.037,0.142,0.054,0.052,0.105,-0.031,-0.035,0.086,-0.042,0.165,0.073,-0.027,-0.098,0.116,0.253,-0.013,-0.066,0.031,0.144,0.183,-0.056,-0.061,0.063,0.083,0.013,-0.161,0.013,-0.12,0.053,0.244,0.089,0.12,-0.103,-0.038,-0.012,-0.125,-0.073,0.035,0.134,0.095,-0.096,-0.103,-0.001,-0.157,0.011,-0.075,-0.007,0.092,0.061,0.091,0.051,-0.074,-0.046,0.093],"source":"src/helpers/tooltipViewer/renderList.js [renderList]","tags":["code","what","function","utility","../tooltip.js","../../components/SidebarList.js","filter","split","toLowerCase","forEach","entries","every","includes","trim","test","parseTooltipText","push","String","select","from","createElement","setAttribute","append","replaceWith","bind"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/tooltipViewer/renderList.js","node":"renderList"},"patterns":[],"relations":{"imports":["../tooltip.js","../../components/SidebarList.js"],"calls":["filter","split","toLowerCase","forEach","entries","every","includes","trim","test","parseTooltipText","push","String","select","from","createElement","setAttribute","append","replaceWith","bind"]}},"version":1},
{"id":"extractLineAndColumn.js-extractLineAndColumn","text":"Extract line and column numbers from a JSON parse error.\n\n@param {SyntaxError} error - SyntaxError thrown during JSON parsing.\n@returns {{ line: number|null, column: number|null } | null} Parsed line/column or `null`.\n1. Run a regex on `error.message` to capture `line` and `column` digits.\n2. When both numbers exist, return them as an object.\n3. Otherwise, attempt to parse a position and return it as `column`.\n4. If no numbers can be found, return `null`.\n\nexport function extractLineAndColumn(error) {\n  const message = error?.message ?? \"\";\n  let match = /line (\\d+)[^\\d]+column (\\d+)/i.exec(message);\n  if (match) {\n    return { line: Number(match[1]), column: Number(match[2]) };\n  }\n  match = /at line (\\d+)[^\\d]+column (\\d+)/i.exec(message);\n  if (match) {\n    return { line: Number(match[1]), column: Number(match[2]) };\n  }\n  match = /at position (\\d+)/i.exec(message);\n  if (match) {\n    return { line: null, column: Number(match[1]) };\n  }\n  match = /in JSON at position (\\d+)/i.exec(message);\n  if (match) {\n    return { line: null, column: Number(match[1]) };\n  }\n  return null;\n}","qaContext":"Why: Extract line and column numbers from a JSON parse error. How: @param {SyntaxError} error - SyntaxError thrown during JSON parsing.","embedding":[-0.176,0.111,-0.022,0.053,0.075,-0.033,-0.018,0.081,0.043,-0.02,-0.053,-0.076,-0.116,-0.016,0.109,0.058,-0.199,0.101,-0.134,-0.097,0.109,0.131,-0.007,-0.016,-0.03,0.055,0.04,-0.016,-0.12,0.022,-0.074,-0.072,-0.047,0.171,0.109,0.093,-0.021,0.015,0.004,-0.057,0.007,0.054,-0.092,-0.133,0.217,-0.137,-0.095,-0.014,-0.106,0.035,-0.021,0.183,-0.059,-0.021,0.11,-0.053,0.023,-0.131,0.11,0.019,0.137,-0.179,0.019,-0.144,-0.035,-0.213,-0.121,0.067,0.045,0.007,-0.099,0.033,-0.05,0.075,-0.198,0.154,-0.107,0.021,-0.05,0.088,0.012,-0.13,-0.029,0.118,-0.024,0.04,-0.061,0.04,0.023,0.087,-0.074,-0.054,0.075,0.185,0.104,0.144,-0.131,-0.016,0.015,0.106,-0.082,0.027,0.01,-0.026,-0.086,0.023,0.182,-0.035,-0.071,-0.056,0.06,0.03,-0.025,0.023,0.01,-0.136,0.048,-0.078,0.036,0.197,0.2,0,0.03,0.065,0.182,0.138,0.172,0,-0.053,-0.027,-0.014,-0.059,-0.006,-0.054,-0.045,0.016,-0.034,0.07,-0.079,-0.128,0.048,-0.055,-0.001,0.012,0.17,-0.088,0.092,0.093,0.119,-0.066,-0.035,0.119,0.168,-0.049,-0.08,-0.011,0.004,-0.023,0.102,-0.103,0.074,0.016,0.184,0.054,0.14,0.065,-0.077,-0.065,-0.15,0.017,-0.086,0.088,-0.045,-0.112,-0.024,0.059,0.076,-0.145,-0.032,0.256,0.159,-0.06,0.236,-0.074,0.154,0.054,0.038,0.03,-0.19,0.104,-0.061,-0.083,0.075,-0.005,-0.016,0.041,-0.192,-0.139,-0.016,-0.019,0.095,-0.076,-0.001,-0.098,-0.027,0.009,-0.02,-0.192,0.011,-0.077,-0.098,0.148,-0.022,0.202,-0.033,-0.164,0.047,0.048,0.04,-0.073,-0.182,-0.101,-0.038,0,0.052,0.117,-0.033,-0.045,0.055,-0.028,-0.034,0.032,0.058,0.048,-0.134,-0.006,-0.016,0.049,-0.022,0.084,-0.223,-0.03,0.044,-0.118,0.184,0.121,0.2,0.035,-0.128,0.016,0.11,0.043,-0.236,-0.003,-0.038,-0.053,0.021,0.069,-0.037,-0.122,0.041,0.156,0.026,0.091,-0.012,0.03,-0.072,-0.109,-0.003,-0.011,0.055,0.245,-0.135,-0.032,0.013,0.118,-0.131,0.102,-0.023,-0.062,0.052,-0.064,-0.095,0.102,-0.073,-0.108,0.051,0.017,0.244,-0.047,-0.119,0.012,0.015,0.003,0.033,-0.126,-0.117,0.118,0.065,0.001,-0.101,-0.037,0.051,0.208,0.054,-0.006,0.124,0.131,0.048,0.013,0.034,0.063,-0.056,-0.029,0.005,-0.083,-0.041,-0.141,-0.032,0,-0.222,-0.18,-0.052,-0.08,-0.004,0.005,-0.059,-0.043,0.154,-0.067,-0.038,0.165,-0.166,-0.057,0.036,-0.025,0.069,-0.026,-0.072,0.065,0.06,0.083,-0.016,-0.01,0.082,-0.029,0.066,0.008,-0.096,-0.027,-0.01,-0.05,0.081,-0.022,-0.068,0.004,0.194,-0.097,-0.039,0.018,0.097,0.074,-0.146,-0.012,-0.061,-0.154,-0.076,-0.036,0.164,-0.032,-0.048,-0.084,-0.106,-0.009,-0.216,-0.144,-0.034,0.011,0.001,0.196,0.146,-0.013,0.05,-0.088],"source":"src/helpers/tooltipViewer/extractLineAndColumn.js [extractLineAndColumn]","tags":["code","what","function","utility","exec","Number"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/tooltipViewer/extractLineAndColumn.js","node":"extractLineAndColumn"},"patterns":[],"relations":{"imports":[],"calls":["exec","Number"]}},"version":1},
{"id":"makeHandleUpdate.js-makeHandleUpdate","text":"export function makeHandleUpdate(setCurrentSettings, showErrorAndRevert) {\n  return function handleUpdate(key, value, revert) {\n    return updateSetting(key, value)\n      .then((updated) => {\n        setCurrentSettings(updated);\n        return updated;\n      })\n      .catch((err) => {\n        console.error(\"Failed to update setting\", err);\n        showErrorAndRevert(revert);\n        throw err;\n      });\n  };\n}","qaContext":"Why: export function makeHandleUpdate(setCurrentSettings, showErrorAndRevert) { return function handleUpdate(key, value, revert) { return updateSetting(key, value) . How: then((updated) => { setCur...","embedding":[0.025,0.044,0.054,0.127,-0.11,0.035,-0.058,0.106,0.029,0.066,0.018,-0.085,-0.051,-0.174,0.115,0.034,-0.165,0.039,-0.099,0.088,-0.108,-0.101,0.129,0.012,-0.034,-0.071,-0.045,-0.067,-0.095,0.021,-0.138,0.028,-0.109,-0.181,-0.029,0.222,-0.042,-0.063,0.07,0.034,-0.133,0.099,-0.015,-0.208,0.054,0.044,-0.04,0.123,-0.011,-0.017,0.096,0.066,-0.116,-0.199,0.189,0.169,-0.009,0.14,0.134,0.054,0.081,-0.124,-0.03,0.045,0.057,0.013,-0.061,-0.015,-0.015,0.008,-0.063,0.102,0.057,-0.078,-0.008,-0.033,-0.094,0.049,0.061,0.039,0.033,-0.107,-0.096,0.205,0.163,0.04,0.034,-0.022,0.093,0.094,-0.217,-0.168,0.087,0.006,-0.144,0.109,0.024,0.122,-0.139,0.025,-0.058,0.019,-0.008,0.026,0.037,-0.153,0.011,0.008,0.013,-0.012,-0.004,0.118,-0.015,-0.121,-0.026,0.009,0.067,0.009,-0.045,0.006,0.251,-0.041,0.083,-0.095,-0.004,0.002,0.338,0,0.031,-0.19,-0.095,0.01,0.192,0.078,-0.029,-0.117,-0.07,-0.082,0.134,0.011,-0.169,0.078,-0.008,-0.018,0.192,0.054,0.165,-0.013,0.132,-0.089,-0.08,-0.078,-0.025,0.023,0.021,0.118,-0.094,-0.063,0.213,-0.002,0.05,0.094,-0.064,-0.177,-0.135,-0.032,-0.136,-0.12,0.01,0.002,-0.234,0.054,0.119,-0.078,0.018,-0.009,0.268,-0.073,-0.064,0.221,0.03,-0.136,0.002,-0.073,0.006,-0.086,-0.013,-0.137,0.083,0.036,0.007,0.097,-0.072,0.05,0.011,-0.086,-0.132,-0.14,-0.045,-0.084,-0.137,0.135,-0.042,-0.057,0.006,0.041,0.012,-0.181,0.071,-0.031,-0.224,0.225,0.153,-0.028,-0.062,0.165,0.059,0.238,-0.108,-0.078,0.061,-0.097,-0.018,0,0.087,-0.02,-0.184,0.021,-0.127,-0.018,-0.051,0.101,0.06,-0.078,-0.047,0.039,-0.039,-0.101,-0.099,0.151,-0.071,0.036,-0.09,-0.119,-0.009,-0.073,0.031,0.261,-0.108,0.042,0.035,0.009,-0.144,-0.118,-0.074,0.105,0.006,0.213,-0.024,-0.158,0.062,-0.084,-0.161,0.272,0.123,0.007,-0.177,0.028,0.135,0.125,0.075,-0.041,0.021,-0.011,0.079,-0.238,-0.077,-0.064,0.127,-0.01,0.091,-0.129,0.102,0.091,-0.049,-0.165,0.183,-0.019,-0.026,0.172,-0.057,0.135,0.109,0.179,0.057,-0.12,0.06,-0.206,0.021,-0.143,-0.161,-0.184,0.132,0.089,0.069,0.052,0.078,0.023,-0.073,-0.005,-0.065,0.084,0.041,0.023,-0.114,-0.089,-0.067,0.028,-0.101,0,-0.178,0.069,0.047,-0.112,0.011,-0.074,0.014,-0.097,-0.047,-0.294,-0.055,0.085,0.127,0.089,0.052,-0.155,0.092,0.171,-0.14,-0.058,0.064,-0.015,0.242,0.009,0.225,-0.187,-0.021,0.112,0.019,-0.054,-0.056,-0.026,0.128,-0.019,-0.207,0.014,0.149,-0.055,0.123,0.043,0.01,-0.084,-0.094,0.096,-0.194,-0.044,0.099,0.018,-0.015,-0.004,-0.015,0.042,0.059,0.044,0.024,0.002,-0.06,-0.044,-0.089,-0.045,-0.108,-0.017,0.086,-0.028],"source":"src/helpers/settings/makeHandleUpdate.js [makeHandleUpdate]","tags":["code","how","function","utility","../settingsStorage.js","catch","then","updateSetting","setCurrentSettings","error","showErrorAndRevert","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/settings/makeHandleUpdate.js","node":"makeHandleUpdate"},"patterns":[],"relations":{"imports":["../settingsStorage.js"],"calls":["catch","then","updateSetting","setCurrentSettings","error","showErrorAndRevert"]}},"version":1},
{"id":"listenerUtils.js-attachToggleListeners","text":"Attach change listeners that persist settings updates.\n\n@param {Object} controls - Form controls with DOM references.\n@param {Function} getCurrentSettings - Returns the latest settings object.\n@param {(key: string, value: any, revert: Function) => Promise<any>} handleUpdate -\n  Persist function that returns a Promise.\n1. Listen for changes on each toggle or select element.\n2. Use `handleUpdate` to persist the new value, reverting if it fails.\n3. Apply side effects like `applyMotionPreference` and `applyDisplayMode`.\n4. After a successful update, show a snackbar confirming the change.\n\nexport function attachToggleListeners(controls, getCurrentSettings, handleUpdate) {\n  const {\n    soundToggle,\n    motionToggle,\n    displayRadios,\n    typewriterToggle,\n    tooltipsToggle,\n    cardOfTheDayToggle,\n    fullNavigationMapToggle\n  } = controls;\n  soundToggle?.addEventListener(\"change\", () => {\n    const prev = !soundToggle.checked;\n    Promise.resolve(\n      handleUpdate(\"sound\", soundToggle.checked, () => {\n        soundToggle.checked = prev;\n      })\n    )\n      .then(() => {\n        showSnackbar(`Sound ${soundToggle.checked ? \"enabled\" : \"disabled\"}`);\n      })\n      .catch(() => {});\n  });\n  motionToggle?.addEventListener(\"change\", () => {\n    const prev = !motionToggle.checked;\n    applyMotionPreference(motionToggle.checked);\n    Promise.resolve(\n      handleUpdate(\"motionEffects\", motionToggle.checked, () => {\n        motionToggle.checked = prev;\n        applyMotionPreference(prev);\n      })\n    )\n      .then(() => {\n        showSnackbar(`Motion effects ${motionToggle.checked ? \"enabled\" : \"disabled\"}`);\n      })\n      .catch(() => {});\n  });\n  if (displayRadios) {\n    displayRadios.forEach((radio) => {\n      radio.addEventListener(\"change\", () => {\n        if (!radio.checked) return;\n        const previous = getCurrentSettings().displayMode;\n        const mode = radio.value;\n        displayRadios.forEach((r) => {\n          r.tabIndex = r === radio ? 0 : -1;\n        });\n        withViewTransition(() => {\n          applyDisplayMode(mode);\n        });\n        Promise.resolve(\n          handleUpdate(\"displayMode\", mode, () => {\n            const prevRadio = Array.from(displayRadios).find((r) => r.value === previous);\n            if (prevRadio) prevRadio.checked = true;\n            displayRadios.forEach((r) => {\n              r.tabIndex = r.value === previous ? 0 : -1;\n            });\n            withViewTransition(() => {\n              applyDisplayMode(previous);\n            });\n          })\n        )\n          .then(() => {\n            const label = mode.charAt(0).toUpperCase() + mode.slice(1);\n            showSnackbar(`${label} mode enabled`);\n          })\n          .catch(() => {});\n      });\n    });\n  }\n  typewriterToggle?.addEventListener(\"change\", () => {\n    const prev = !typewriterToggle.checked;\n    Promise.resolve(\n      handleUpdate(\"typewriterEffect\", typewriterToggle.checked, () => {\n        typewriterToggle.checked = prev;\n      })\n    )\n      .then(() => {\n        showSnackbar(`Typewriter effect ${typewriterToggle.checked ? \"enabled\" : \"disabled\"}`);\n      })\n      .catch(() => {});\n  });\n  tooltipsToggle?.addEventListener(\"change\", () => {\n    const prev = !tooltipsToggle.checked;\n    Promise.resolve(\n      handleUpdate(\"tooltips\", tooltipsToggle.checked, () => {\n        tooltipsToggle.checked = prev;\n      })\n    )\n      .then(() => {\n        showSnackbar(`Tooltips ${tooltipsToggle.checked ? \"enabled\" : \"disabled\"}`);\n      })\n      .catch(() => {});\n  });\n  cardOfTheDayToggle?.addEventListener(\"change\", () => {\n    const prev = !cardOfTheDayToggle.checked;\n    Promise.resolve(\n      handleUpdate(\"showCardOfTheDay\", cardOfTheDayToggle.checked, () => {\n        cardOfTheDayToggle.checked = prev;\n      })\n    )\n      .then(() => {\n        showSnackbar(`Card of the Day ${cardOfTheDayToggle.checked ? \"enabled\" : \"disabled\"}`);\n      })\n      .catch(() => {});\n  });\n  fullNavigationMapToggle?.addEventListener(\"change\", () => {\n    const prev = !fullNavigationMapToggle.checked;\n    Promise.resolve(\n      handleUpdate(\"fullNavigationMap\", fullNavigationMapToggle.checked, () => {\n        fullNavigationMapToggle.checked = prev;\n      })\n    )\n      .then(() => {\n        showSnackbar(\n          `Full navigation map ${fullNavigationMapToggle.checked ? \"enabled\" : \"disabled\"}`\n        );\n      })\n      .catch(() => {});\n  });\n}","qaContext":"Why: Attach change listeners that persist settings updates. How: After a successful update, show a snackbar confirming the change.","embedding":[-0.06,-0.065,0.117,0.12,-0.096,0.177,0.112,0.038,0.043,-0.031,-0.021,-0.019,-0.05,-0.094,0.053,0.099,-0.013,-0.049,-0.067,-0.002,-0.002,-0.046,0.125,-0.049,-0.005,-0.001,0.07,-0.133,-0.024,-0.029,-0.044,0.062,-0.097,-0.095,-0.218,-0.096,-0.084,-0.079,-0.08,-0.023,-0.049,0.057,-0.136,-0.186,0.014,-0.012,-0.015,0.091,-0.013,0.07,0.137,-0.058,0.051,0.126,0.087,0.077,-0.033,0.109,0.089,-0.092,-0.027,-0.049,0.045,-0.042,0.067,0.067,0.001,0.015,0.063,0.19,-0.018,0.103,0.147,-0.073,-0.015,-0.112,0.034,0.014,-0.007,-0.013,0.032,-0.168,-0.161,-0.102,-0.034,-0.072,0.021,-0.069,0.016,-0.113,-0.17,0.025,0,-0.043,0,0.078,-0.149,0.077,-0.015,0.004,0.132,-0.057,-0.121,0.118,-0.013,-0.126,-0.054,-0.038,-0.042,0.202,0.003,0.084,0.078,0.066,-0.096,0.098,0.124,0.058,0.07,-0.06,0.236,0.034,0.084,-0.077,0.056,-0.06,0.091,0,0.086,-0.093,-0.153,0.01,0.037,0.062,0.05,0.04,-0.025,0.005,0.007,0.132,-0.02,-0.048,-0.012,-0.084,0.084,0.066,0.14,-0.008,0.034,-0.002,-0.116,0.02,-0.012,0.058,0.025,0.173,-0.139,-0.069,0.072,-0.014,0.005,-0.01,0.023,-0.093,-0.113,0.041,-0.083,-0.181,0.203,-0.07,-0.101,-0.024,-0.064,-0.106,0.032,0.129,0.158,-0.083,0.021,0.069,-0.083,-0.198,0.04,0.019,-0.038,0.067,-0.029,0.033,-0.025,-0.068,0.082,-0.077,-0.033,0.217,-0.068,-0.083,-0.057,-0.14,-0.11,0.035,0.097,-0.009,-0.01,-0.003,-0.191,-0.089,-0.154,-0.005,0.091,-0.054,-0.188,0.252,0.151,-0.06,0.076,-0.101,-0.201,0.189,-0.065,0.03,0.155,-0.064,0.081,0,0.041,0.009,-0.042,0.105,0.002,0.013,-0.003,0.11,-0.074,-0.187,-0.019,-0.061,0.013,-0.041,-0.162,0.275,-0.025,-0.052,-0.019,0.038,0.02,0.127,0.109,0.107,-0.107,0.05,0.123,0.117,0.035,-0.05,-0.135,-0.013,-0.119,0.06,0.054,-0.162,0.034,0.045,-0.132,0.057,0.026,-0.038,-0.056,0.03,0.017,0.003,0.083,0.137,-0.107,-0.005,0.083,-0.188,-0.083,0.078,0.09,0.031,0.025,-0.176,0.187,0.042,0.007,-0.173,0.039,-0.071,0.125,0.129,0.008,0.02,0.245,0.161,0.039,-0.071,0.141,-0.253,0.045,0.116,-0.072,-0.298,0.066,-0.103,-0.002,-0.086,0.074,-0.165,-0.051,0.106,-0.135,0.118,0.045,0.098,-0.131,-0.027,0.074,-0.135,-0.139,0,-0.047,0.052,-0.027,-0.058,-0.008,-0.091,-0.047,-0.135,-0.131,-0.178,0.001,0.087,0.215,0.089,0.009,-0.074,0.037,0.116,-0.132,0.041,-0.031,0.088,0.018,0.05,0.137,-0.039,0.099,0.045,0.146,0.055,-0.054,-0.092,0.035,0.011,-0.175,-0.052,0.064,-0.086,0.212,0.205,0.133,-0.003,-0.102,0.064,-0.209,-0.101,0.119,-0.052,0.051,0.156,-0.163,-0.058,-0.021,-0.078,0.102,-0.03,0.006,0.024,0.005,0.049,-0.072,-0.119,-0.044,-0.049],"source":"src/helpers/settings/listenerUtils.js [attachToggleListeners]","tags":["code","how","function","utility","../displayMode.js","../viewTransition.js","../motionUtils.js","../showSnackbar.js","addEventListener","catch","then","resolve","handleUpdate","showSnackbar","applyMotionPreference","forEach","getCurrentSettings","withViewTransition","applyDisplayMode","find","from","toUpperCase","charAt","slice"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/settings/listenerUtils.js","node":"attachToggleListeners"},"patterns":[],"relations":{"imports":["../displayMode.js","../viewTransition.js","../motionUtils.js","../showSnackbar.js"],"calls":["addEventListener","catch","then","resolve","handleUpdate","showSnackbar","applyMotionPreference","forEach","getCurrentSettings","withViewTransition","applyDisplayMode","find","from","toUpperCase","charAt","slice"]}},"version":1},
{"id":"gameModeSwitches.js-handleGameModeChange","text":"Handle a game mode toggle change.\n\n@param {{\n  input: HTMLInputElement,\n  mode: object,\n  label: string,\n  getCurrentSettings: Function,\n  handleUpdate: Function\n}} params - Handler dependencies.\n@returns {Promise<Array>} Resolves when persistence and navigation update complete.\n1. Create a copy of current game mode settings with the updated value.\n2. Persist the change via `handleUpdate`; on failure revert the checkbox.\n3. Update navigation visibility via `updateNavigationItemHidden`.\n4. Show a snackbar when the setting is saved.\n\nexport function handleGameModeChange({ input, mode, label, getCurrentSettings, handleUpdate }) {\n  const prev = !input.checked;\n  const updated = {\n    ...(getCurrentSettings().gameModes ?? {}),\n    [mode.id]: input.checked\n  };\n\n  const updatePromise = Promise.resolve(\n    handleUpdate(\"gameModes\", updated, () => {\n      input.checked = prev;\n    })\n  )\n    .then(() => {\n      showSnackbar(`${label} ${input.checked ? \"enabled\" : \"disabled\"}`);\n    })\n    .catch(() => {});\n\n  const navPromise = updateNavigationItemHidden(mode.id, !input.checked).catch((err) => {\n    console.error(\"Failed to update navigation item\", err);\n    input.checked = prev;\n    showSettingsError();\n  });\n\n  return Promise.all([updatePromise, navPromise]);\n}","qaContext":"Why: Handle a game mode toggle change. How: Persist the change via `handleUpdate`; on failure revert the checkbox.","embedding":[-0.04,0.084,0.037,0.091,0.011,0.156,0.062,-0.026,-0.03,0.049,-0.038,-0.014,-0.026,-0.07,0.069,0.12,-0.047,-0.016,-0.057,-0.014,0.061,-0.076,0.094,-0.04,-0.112,-0.014,0.039,-0.125,-0.09,-0.057,-0.012,0.085,-0.146,-0.147,-0.155,-0.062,-0.107,-0.151,-0.052,-0.038,0.004,0.172,-0.122,-0.099,0.068,-0.065,-0.005,0.056,-0.08,0.051,0.067,-0.104,-0.031,-0.037,0.123,0.131,-0.038,0.166,0.036,0.011,0.02,-0.054,0.032,-0.092,0.086,0.045,0.049,-0.019,0.012,0.12,0.011,0.08,0.193,-0.14,0.022,-0.137,-0.026,0.003,0.046,0.007,0.014,-0.036,-0.098,-0.065,0.03,-0.087,-0.017,-0.086,0.006,-0.155,-0.07,-0.037,0.006,0.02,-0.052,0.044,-0.128,0.061,0.001,0.054,0.05,-0.034,-0.004,0.108,0.072,-0.025,0.144,0.038,-0.087,0.253,-0.006,0.064,0.091,0.065,-0.133,0.066,0.046,0.057,0.096,0.041,0.144,0.04,0.19,-0.058,0.062,0.06,0.135,0,0.102,-0.07,-0.108,0.057,0.1,0.049,0.105,-0.032,0.013,0.022,0.024,0.17,-0.15,-0.049,0.091,-0.098,0.089,-0.023,0.15,-0.033,0.021,-0.02,-0.071,-0.06,0.071,0.014,-0.01,0.144,-0.113,-0.06,0.157,-0.003,-0.026,0.039,-0.06,-0.042,-0.146,0.009,-0.154,-0.113,0.155,-0.039,-0.056,0.042,-0.132,-0.195,0.043,0.067,0.158,-0.1,-0.054,0.061,-0.032,-0.257,-0.041,-0.013,-0.036,0.001,-0.005,-0.052,-0.011,-0.178,0.12,0.039,0.007,0.223,-0.043,-0.048,0.003,-0.182,-0.08,-0.048,0.083,-0.034,0.023,0.015,-0.206,-0.1,-0.081,-0.097,0.202,-0.121,-0.188,0.301,0.109,-0.025,0.033,0.009,-0.042,0.179,-0.13,-0.029,0.087,-0.058,0.057,0,0.028,-0.027,-0.041,0.082,0.005,-0.069,-0.004,0.124,-0.015,-0.146,-0.071,0.009,0.107,-0.046,-0.147,0.211,-0.046,-0.09,-0.019,-0.034,0.067,0.025,-0.007,0.037,-0.099,0.076,0.13,0.064,0.02,-0.029,0.021,0.003,-0.039,0.065,0.024,-0.12,0.092,-0.022,-0.248,0.136,0.075,-0.018,-0.119,0.037,0.096,0.059,0.141,0.042,-0.05,-0.016,0.066,-0.15,-0.122,-0.007,0.038,-0.005,-0.02,-0.153,0.081,0.011,0.05,-0.131,-0.028,-0.052,0.096,0.056,-0.06,-0.017,0.299,0.164,0.036,-0.078,0.116,-0.124,0.001,-0.003,0.013,-0.174,0.14,-0.029,0.015,-0.155,0.111,-0.125,0.026,0.1,-0.078,0.083,0.075,0.064,-0.01,-0.082,-0.106,-0.049,-0.148,0,0.042,0.073,-0.133,0.018,0.087,-0.061,0.018,-0.152,-0.098,-0.12,-0.047,0.091,0.045,0.015,0.083,-0.041,0.072,0.05,-0.105,0.091,-0.09,0.079,0.007,0.051,0.085,-0.045,0.043,0.063,0.125,0.072,-0.053,-0.05,0.059,-0.016,-0.154,0.021,0.131,-0.027,0.217,0.114,0.154,-0.057,-0.059,0.023,-0.206,-0.04,0.072,0.026,0.022,0.015,-0.162,-0.024,-0.065,-0.016,0.043,-0.074,-0.024,0.009,0.037,-0.009,0.038,-0.155,-0.074,-0.111],"source":"src/helpers/settings/gameModeSwitches.js [handleGameModeChange]","tags":["code","how","function","utility","../../components/ToggleSwitch.js","../gameModeUtils.js","../showSettingsError.js","../showSnackbar.js","../navigation/navigationService.js","getCurrentSettings","catch","then","resolve","handleUpdate","showSnackbar","updateNavigationItemHidden","error","showSettingsError","all","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/settings/gameModeSwitches.js","node":"handleGameModeChange"},"patterns":[],"relations":{"imports":["../../components/ToggleSwitch.js","../gameModeUtils.js","../showSettingsError.js","../showSnackbar.js","../navigation/navigationService.js"],"calls":["getCurrentSettings","catch","then","resolve","handleUpdate","showSnackbar","updateNavigationItemHidden","error","showSettingsError","all"]}},"version":1},
{"id":"gameModeSwitches.js-renderGameModeSwitches","text":"Render game mode toggle switches within the settings page.\n\n@param {HTMLElement} container - Target container for switches.\n@param {Array} gameModes - List of mode definitions.\n@param {Function} getCurrentSettings - Returns the current settings.\n@param {Function} handleUpdate - Persist function.\n1. If `container` is missing or `gameModes` is not an array, warn and exit.\n2. Sort `gameModes` by `order`, warn on missing `name`, skip malformed entries, create a toggle for each with a tooltip id, and attach debug data attributes.\n3. When toggled, update navigation visibility via `updateNavigationItemHidden`.\n4. Persist the updated `gameModes` setting using `handleUpdate`.\n5. Show a snackbar confirming the new mode state.\n\nexport function renderGameModeSwitches(container, gameModes, getCurrentSettings, handleUpdate) {\n  if (!container || !Array.isArray(gameModes)) {\n    console.warn(\"renderGameModeSwitches: invalid container or gameModes\", {\n      container,\n      gameModes\n    });\n    return;\n  }\n  const sortedModes = [...gameModes].sort((a, b) => a.order - b.order);\n  sortedModes.forEach((mode) => {\n    const current = getCurrentSettings();\n    const currentModes = current.gameModes ?? {};\n    const isChecked = Object.hasOwn(currentModes, mode.id) ? currentModes[mode.id] : !mode.isHidden;\n    let label = mode.name;\n    if (!mode.name) {\n      console.warn(\"Game mode missing name\", mode);\n      if (!mode.id) {\n        console.warn(\"Skipping malformed game mode\", mode);\n        return;\n      }\n      label = mode.id;\n    }\n    const tooltipId = `nav.${navTooltipKey(label)}`;\n    const toggle = new ToggleSwitch(label, {\n      id: `mode-${mode.id}`,\n      name: mode.id,\n      checked: isChecked,\n      tooltipId\n    });\n    const { element: wrapper, input } = toggle;\n    if (mode.category) wrapper.dataset.category = mode.category;\n    if (typeof mode.order !== \"undefined\") wrapper.dataset.order = String(mode.order);\n    if (mode.description) {\n      const desc = document.createElement(\"p\");\n      desc.className = \"settings-description\";\n      desc.id = `mode-${mode.id}-desc`;\n      desc.textContent = mode.description;\n      wrapper.appendChild(desc);\n      if (input) input.setAttribute(\"aria-describedby\", desc.id);\n    }\n    container.appendChild(wrapper);\n    if (!input) return;\n    input.addEventListener(\"change\", () =>\n      handleGameModeChange({\n        input,\n        mode,\n        label,\n        getCurrentSettings,\n        handleUpdate\n      })\n    );\n  });\n}","qaContext":"Why: Render game mode toggle switches within the settings page. How: Sort `gameModes` by `order`, warn on missing `name`, skip malformed entries, create a toggle for each with a tooltip id, and att...","embedding":[-0.058,0.011,0.092,0.133,-0.016,0.136,0.182,-0.014,-0.067,0.061,-0.061,-0.013,0.018,-0.078,0.043,0.1,-0.094,-0.059,0.021,-0.088,0.114,-0.122,0.071,-0.089,-0.053,0.107,0.034,-0.079,-0.145,-0.081,-0.062,0.145,-0.184,-0.078,-0.069,-0.129,-0.086,-0.075,0.007,-0.037,-0.051,0.178,-0.044,-0.08,-0.017,-0.052,-0.07,0.011,-0.023,0.091,0.099,-0.062,0.1,-0.067,0.135,0.085,-0.067,0.068,0.018,0.053,0.069,-0.014,0.047,-0.098,0.137,0.032,0.069,-0.055,-0.053,0.118,-0.008,0.038,0.257,-0.108,-0.04,-0.159,-0.03,-0.05,-0.05,-0.053,-0.057,0.008,-0.088,0.01,0.007,-0.146,-0.002,-0.108,-0.063,-0.119,-0.144,-0.019,0.099,0.035,0.003,0.067,-0.02,0.009,-0.079,0.059,0.033,-0.049,0.009,0.088,0.061,-0.001,0.077,0.001,-0.169,0.202,-0.003,0.164,0.052,0.036,-0.126,-0.018,0.092,0.018,0.152,0.07,0.189,0.033,0.089,-0.006,0.088,0.118,0.102,0,0.144,-0.118,-0.149,0.071,0.058,0.093,0.145,-0.011,-0.115,0.062,0.003,0.146,-0.156,0.02,0.086,-0.108,0.169,-0.004,0.035,-0.154,-0.074,-0.04,-0.047,-0.074,0.112,0.09,-0.072,0.079,-0.122,-0.048,0.096,0.051,0,0.01,0.001,-0.011,-0.064,0.002,-0.05,-0.079,0.08,-0.086,-0.028,-0.039,-0.152,-0.032,0.017,0.044,-0.009,-0.038,-0.034,0.03,-0.034,-0.221,-0.014,-0.076,-0.084,0.016,0.063,0.065,-0.025,-0.059,0.094,-0.003,-0.045,0.216,0.029,-0.017,0.058,-0.187,-0.106,0.026,0.133,-0.046,0.098,0.011,-0.177,-0.189,-0.06,-0.181,0.228,-0.169,-0.123,0.125,0.092,-0.051,0.087,-0.018,-0.111,0.145,-0.178,-0.032,0.109,-0.065,0.039,0,0.031,-0.013,-0.03,0.044,0.021,-0.09,0.009,0.103,-0.052,-0.128,-0.016,0.016,0.008,-0.04,-0.063,0.262,-0.065,-0.09,0.043,-0.064,0.006,0.055,-0.008,0.055,-0.157,0.028,0.149,0.055,0.027,-0.07,0.105,0.063,0.009,0.041,-0.028,-0.088,0.074,0.028,-0.224,0.188,0.036,-0.071,-0.078,-0.047,0.013,0.067,0.127,0.082,-0.064,-0.05,0.016,-0.219,-0.129,-0.032,-0.075,-0.041,-0.114,-0.113,0,0.039,0.136,-0.127,-0.013,0.015,0.146,-0.006,-0.128,-0.053,0.174,0.132,-0.002,-0.103,0.178,-0.162,0.058,-0.006,0.065,-0.11,0.143,-0.074,0.051,-0.104,0.08,-0.109,0.024,0.176,-0.069,0.071,0.037,0.014,-0.066,-0.101,-0.017,-0.037,-0.113,0,0.031,0.033,-0.11,-0.037,0.028,0.021,0.04,-0.066,-0.044,-0.111,0.058,0.159,0.021,0.061,0.09,0.026,0.004,0.03,-0.093,0.186,-0.054,0.029,-0.012,0.101,0.095,-0.017,-0.013,-0.002,0.219,0.16,-0.003,-0.001,0.062,0.051,-0.033,0.051,0.068,-0.005,0.188,0.04,0.113,-0.092,-0.139,0.016,-0.116,-0.049,0.051,0.004,0.038,0.025,-0.167,-0.033,-0.043,0,0.071,-0.091,0.038,0.094,0.023,0.039,0.014,-0.172,-0.086,-0.013],"source":"src/helpers/settings/gameModeSwitches.js [renderGameModeSwitches]","tags":["code","how","function","utility","../../components/ToggleSwitch.js","../gameModeUtils.js","../showSettingsError.js","../showSnackbar.js","../navigation/navigationService.js","isArray","warn","sort","forEach","getCurrentSettings","hasOwn","navTooltipKey","String","createElement","appendChild","setAttribute","addEventListener","handleGameModeChange","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/settings/gameModeSwitches.js","node":"renderGameModeSwitches"},"patterns":[],"relations":{"imports":["../../components/ToggleSwitch.js","../gameModeUtils.js","../showSettingsError.js","../showSnackbar.js","../navigation/navigationService.js"],"calls":["isArray","warn","sort","forEach","getCurrentSettings","hasOwn","navTooltipKey","String","createElement","appendChild","setAttribute","addEventListener","handleGameModeChange"]}},"version":1},
{"id":"featureFlagSwitches.js-handleFeatureFlagChange","text":"Handle a feature flag toggle change.\n\n@param {{\n  input: HTMLInputElement,\n  flag: string,\n  info: object,\n  label: string,\n  getCurrentSettings: Function,\n  handleUpdate: Function\n}} params - Handler dependencies.\n@returns {Promise} Resolves when persistence completes.\n1. Clone current feature flag settings with the updated value.\n2. Persist via `handleUpdate`; on failure revert the checkbox.\n3. Trigger side effects for specific flags.\n4. Show a snackbar confirming the new state.\n\nexport function handleFeatureFlagChange({\n  input,\n  flag,\n  info,\n  label,\n  getCurrentSettings,\n  handleUpdate\n}) {\n  const prev = !input.checked;\n  const updated = {\n    ...getCurrentSettings().featureFlags,\n    [flag]: { ...info, enabled: input.checked }\n  };\n  return Promise.resolve(\n    handleUpdate(\"featureFlags\", updated, () => {\n      input.checked = prev;\n    })\n  )\n    .then(() => {\n      showSnackbar(`${label} ${input.checked ? \"enabled\" : \"disabled\"}`);\n      if (flag === \"viewportSimulation\") {\n        toggleViewportSimulation(input.checked);\n      }\n      if (flag === \"tooltipOverlayDebug\") {\n        toggleTooltipOverlayDebug(input.checked);\n      }\n      if (flag === \"layoutDebugPanel\") {\n        toggleLayoutDebugPanel(input.checked);\n      }\n    })\n    .catch(() => {});\n}","qaContext":"Why: Handle a feature flag toggle change. How: Persist via `handleUpdate`; on failure revert the checkbox.","embedding":[-0.035,0.084,0.033,0.139,0.044,0.123,0.111,-0.017,-0.024,-0.045,-0.01,-0.078,-0.118,-0.044,0.047,0.128,0.027,-0.156,-0.08,0.022,0.017,-0.107,0.072,-0.027,-0.057,0.017,0.028,-0.146,-0.09,-0.03,-0.028,0.135,-0.244,-0.143,-0.06,-0.048,-0.038,-0.069,0.004,-0.068,-0.038,0.049,-0.098,-0.109,0.026,-0.039,0.059,0.084,-0.121,-0.008,0.121,-0.031,-0.001,0.019,0.112,0.092,0.023,0.077,0.014,0.039,-0.086,-0.02,0.024,-0.037,0.054,0.02,0.067,-0.063,0.034,0.125,-0.043,0.114,0.141,-0.077,0.088,-0.069,-0.043,0.051,0.133,-0.077,-0.05,-0.06,-0.072,-0.078,0.021,-0.056,-0.05,-0.067,0.071,-0.098,-0.016,-0.02,0.009,0.026,-0.044,0.076,-0.139,0.099,-0.055,0.091,0.002,-0.034,-0.041,0.08,0.068,-0.053,0.042,0.024,-0.03,0.178,0.017,0.067,0.095,0.01,-0.09,0.021,0.101,0.029,0.055,-0.055,0.144,0.018,0.024,-0.072,0.034,0.031,0.085,0,0.174,0.009,-0.137,0.048,-0.001,0.024,0.054,0.031,-0.033,0.08,0.013,0.079,-0.124,-0.071,0.021,-0.119,0.011,0.014,0.11,-0.055,0.009,-0.051,-0.127,-0.027,-0.005,-0.004,-0.01,0.114,-0.158,-0.033,0.098,-0.046,0.066,0.055,-0.109,-0.106,-0.132,-0.045,-0.091,-0.091,0.255,-0.009,-0.033,0,-0.014,-0.115,0.088,0.076,0.186,-0.135,-0.02,0.067,0.02,-0.118,0.012,-0.01,-0.027,-0.023,0.034,-0.015,-0.008,-0.068,0.01,0.005,-0.004,0.178,0.028,0.007,-0.022,-0.125,-0.117,-0.116,0.124,-0.029,0.059,-0.014,-0.118,-0.101,-0.034,-0.06,0.211,-0.06,-0.152,0.244,0.094,-0.061,0.05,0.008,-0.103,0.146,-0.062,0.012,0.103,-0.103,0.064,0,0.023,-0.036,-0.015,0.081,0.017,-0.022,-0.019,0.04,-0.005,-0.185,-0.088,-0.126,0.099,0.033,-0.119,0.222,-0.167,-0.092,0.01,0.026,0.012,0.097,0.024,0.119,-0.17,0.029,0.099,0.03,0.058,0.013,-0.031,-0.076,-0.118,0.064,0.066,-0.177,0.036,-0.003,-0.15,0.176,-0.01,-0.047,-0.153,0.056,0.041,0.031,0.089,0.078,-0.069,-0.021,-0.031,-0.112,-0.058,0.059,-0.021,-0.045,0.001,-0.149,0.136,0.066,-0.03,-0.15,0.08,-0.083,0.117,0.078,0.039,0.001,0.253,0.142,0.06,-0.117,0.036,-0.18,0.051,0.081,0.016,-0.22,0.05,0.011,0.002,-0.176,0.044,-0.145,0.02,0.026,-0.128,0.146,0.075,0.054,-0.077,-0.094,-0.01,-0.111,-0.104,0,0.001,0.081,-0.028,0.006,0.116,0.045,0.028,-0.072,-0.11,-0.13,-0.041,0.113,0.039,0.014,0.083,-0.056,-0.054,0.114,-0.119,0.078,-0.018,0.065,0.031,0.013,0.047,-0.055,0.109,0.1,0.134,0.135,-0.023,-0.034,0.085,-0.06,-0.118,0.013,0.116,-0.067,0.236,0.161,0.178,0.012,-0.154,0.026,-0.179,-0.013,0.057,-0.027,-0.051,0.037,-0.104,-0.039,-0.046,0.012,0.054,-0.067,-0.05,0.023,0.088,0.063,0.013,-0.122,0.052,-0.104],"source":"src/helpers/settings/featureFlagSwitches.js [handleFeatureFlagChange]","tags":["code","how","function","utility","../../components/ToggleSwitch.js","../showSnackbar.js","../viewportDebug.js","../tooltipOverlayDebug.js","../layoutDebugPanel.js","getCurrentSettings","catch","then","resolve","handleUpdate","showSnackbar","toggleViewportSimulation","toggleTooltipOverlayDebug","toggleLayoutDebugPanel","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/settings/featureFlagSwitches.js","node":"handleFeatureFlagChange"},"patterns":[],"relations":{"imports":["../../components/ToggleSwitch.js","../showSnackbar.js","../viewportDebug.js","../tooltipOverlayDebug.js","../layoutDebugPanel.js"],"calls":["getCurrentSettings","catch","then","resolve","handleUpdate","showSnackbar","toggleViewportSimulation","toggleTooltipOverlayDebug","toggleLayoutDebugPanel"]}},"version":1},
{"id":"featureFlagSwitches.js-renderFeatureFlagSwitches","text":"Render feature flag toggle switches.\n\n@param {HTMLElement} container - Container for the switches.\n@param {Record<string, { enabled: boolean, tooltipId?: string }>} flags - Feature flag metadata.\n@param {Function} getCurrentSettings - Returns current settings.\n@param {Function} handleUpdate - Persist function.\n@param {Record<string, string>} [tooltipMap] - Flattened tooltip lookup.\n1. For each flag, generate a labelled toggle switch element and description.\n2. When tooltip text is missing, convert the flag name to a readable label.\n3. Persist updates via `handleUpdate` when toggled.\n4. After saving, show a snackbar confirming the new state.\n5. When toggling `viewportSimulation`, call `toggleViewportSimulation`.\n\nexport function renderFeatureFlagSwitches(\n  container,\n  flags,\n  getCurrentSettings,\n  handleUpdate,\n  tooltipMap = {}\n) {\n  if (!container || !flags) return;\n  Object.keys(flags).forEach((flag) => {\n    const kebab = flag.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n    const info = flags[flag];\n    const tipId = info.tooltipId || `settings.${flag}`;\n    const label = tooltipMap[`${tipId}.label`] || formatFlagLabel(flag);\n    const getDescription = () => tooltipMap[`${tipId}.description`] || \"\";\n    const description = getDescription();\n    const toggle = new ToggleSwitch(label, {\n      id: `feature-${kebab}`,\n      name: flag,\n      checked: Boolean(getCurrentSettings().featureFlags[flag]?.enabled),\n      ariaLabel: label,\n      tooltipId: tipId\n    });\n    const { element: wrapper, input } = toggle;\n    if (input) input.dataset.flag = flag;\n    const desc = document.createElement(\"p\");\n    desc.className = \"settings-description\";\n    desc.id = `feature-${kebab}-desc`;\n    desc.textContent = description;\n    wrapper.appendChild(desc);\n    if (input) {\n      input.setAttribute(\"aria-describedby\", desc.id);\n      input.removeAttribute(\"tabindex\");\n      input.tabIndex = 0;\n    }\n    const firstHidden = container.querySelector(\":scope > [hidden]\");\n    if (firstHidden) {\n      container.insertBefore(wrapper, firstHidden);\n    } else {\n      container.appendChild(wrapper);\n    }\n    if (!input) return;\n    input.addEventListener(\"change\", () =>\n      handleFeatureFlagChange({\n        input,\n        flag,\n        info,\n        label: tooltipMap[`${tipId}.label`] || flag,\n        getCurrentSettings,\n        handleUpdate\n      })\n    );\n  });\n}","qaContext":"Why: Render feature flag toggle switches. How: Persist updates via `handleUpdate` when toggled.","embedding":[-0.095,0.017,0.042,0.181,-0.01,0.141,0.186,0.042,-0.056,-0.071,-0.018,-0.119,-0.064,-0.143,0.048,0.149,-0.003,-0.189,-0.04,-0.081,0.092,-0.146,0.068,0.011,-0.056,0.21,0.033,-0.074,-0.132,-0.02,-0.046,0.1,-0.283,-0.017,0.015,0.028,-0.086,0.013,0.031,-0.005,-0.029,0.058,-0.096,-0.147,-0.005,-0.086,-0.02,-0.061,-0.038,0.108,0.089,-0.033,0.101,-0.073,0.168,0.034,0.019,0.007,0.046,0.063,0.016,0.009,0.126,-0.057,0.103,-0.007,0.025,-0.075,-0.008,0.051,-0.09,0.112,0.191,-0.085,-0.051,-0.077,-0.029,0.011,0.059,-0.094,-0.009,0.069,-0.01,-0.005,-0.009,-0.09,0.022,-0.044,-0.02,-0.085,-0.122,-0.049,0.015,-0.025,-0.014,0.108,-0.066,-0.039,-0.096,0.06,0.048,-0.051,-0.037,-0.03,0.046,-0.051,0.012,-0.065,-0.126,0.093,0.05,0.224,-0.009,0.077,-0.077,-0.076,0.085,-0.086,0.117,0.021,0.2,0.017,-0.094,0.02,0.03,0.066,0.08,0,0.196,-0.068,-0.175,0.042,0.017,-0.012,0.065,0.037,-0.152,0.027,0.006,0.095,-0.097,-0.001,-0.004,-0.1,-0.008,0.021,0.023,-0.189,-0.093,-0.078,-0.054,-0.029,0.036,0.049,-0.05,0.024,-0.124,-0.043,0.105,0.01,0.12,-0.01,-0.047,-0.077,-0.019,-0.002,-0.03,-0.013,0.182,-0.05,0.06,-0.117,-0.017,0.038,0.028,0.051,0.045,-0.161,-0.01,0.03,0.01,-0.172,0.05,0.001,-0.038,-0.018,0.107,0.07,-0.089,0.116,0.038,-0.008,-0.021,0.179,0.116,0.026,0.052,-0.194,-0.129,-0.033,0.11,0.033,0.107,-0.054,-0.131,-0.215,-0.062,-0.084,0.193,-0.153,-0.035,0.069,0.109,-0.046,0.119,-0.126,-0.141,0.097,-0.091,0.018,-0.022,-0.182,-0.005,0,0.079,-0.01,-0.016,0.117,0.068,0.025,0.049,0.104,-0.016,-0.103,-0.079,-0.082,-0.036,-0.023,-0.026,0.221,-0.246,0.028,0.05,-0.036,0.018,0.065,-0.008,0.117,-0.198,0.003,0.113,0.023,0.05,-0.132,0.012,-0.007,-0.061,0.023,0.009,-0.126,0.089,0.021,-0.136,0.268,-0.028,-0.091,-0.112,-0.046,-0.064,0.036,0.002,0.102,-0.052,0.014,-0.004,-0.221,-0.089,0.029,-0.048,-0.113,-0.085,-0.172,0.044,0.104,-0.03,-0.162,0.101,0.016,0.226,0.015,-0.035,-0.083,0.073,0.121,0.033,-0.127,0.099,-0.195,0.137,0.084,0.022,-0.144,0.085,-0.072,0.063,-0.089,0.048,-0.076,0.059,0.091,-0.039,0.184,0.017,0.008,-0.109,-0.072,0.026,-0.047,0,0,-0.041,0.067,-0.055,0.042,0.01,0.122,0.085,-0.022,-0.036,-0.153,0.061,0.127,-0.013,0.061,0.002,0.035,-0.061,0.136,-0.027,0.108,0.044,0.058,-0.001,0.025,0.115,-0.027,0.024,0.106,0.162,0.137,0.019,-0.01,0.057,0.066,-0.049,-0.045,0.007,-0.063,0.241,0.185,0.114,0.031,-0.254,-0.034,-0.099,-0.005,0.022,-0.051,-0.006,0.058,-0.131,-0.021,-0.041,0.036,0.059,-0.061,0.04,0.05,0.025,0.067,-0.038,-0.086,-0.018,0.009],"source":"src/helpers/settings/featureFlagSwitches.js [renderFeatureFlagSwitches]","tags":["code","how","function","utility","../../components/ToggleSwitch.js","../showSnackbar.js","../viewportDebug.js","../tooltipOverlayDebug.js","../layoutDebugPanel.js","forEach","keys","toLowerCase","replace","formatFlagLabel","getDescription","Boolean","getCurrentSettings","createElement","appendChild","setAttribute","removeAttribute","querySelector","insertBefore","addEventListener","handleFeatureFlagChange","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/settings/featureFlagSwitches.js","node":"renderFeatureFlagSwitches"},"patterns":[],"relations":{"imports":["../../components/ToggleSwitch.js","../showSnackbar.js","../viewportDebug.js","../tooltipOverlayDebug.js","../layoutDebugPanel.js"],"calls":["forEach","keys","toLowerCase","replace","formatFlagLabel","getDescription","Boolean","getCurrentSettings","createElement","appendChild","setAttribute","removeAttribute","querySelector","insertBefore","addEventListener","handleFeatureFlagChange"]}},"version":1},
{"id":"applyInitialValues.js-applyInitialControlValues","text":"Initialize control states based on a settings object.\n\n@param {Object} controls - Collection of form elements.\n@param {import(\"../../config/settingsDefaults.js\").Settings} settings - Current settings.\n@param {Record<string, string>} [tooltipMap] - Flattened tooltip lookup.\n1. For each mapping: update value, tooltip ID, label, and description.\n2. Update display mode radio buttons.\n\nexport function applyInitialControlValues(controls, settings = DEFAULT_SETTINGS, tooltipMap = {}) {\n  /**\n   * Apply a value to an input or checkbox element.\n   *\n   * @private\n   * @pseudocode\n   * 1. Exit early when `element` is null or undefined.\n   * 2. For checkboxes, set the `checked` property based on `value`.\n   * 3. For other inputs, assign the `value` directly.\n   *\n   * @param {HTMLInputElement|HTMLSelectElement|null} element - Control to update.\n   * @param {*} value - Value to apply.\n   */\n  function applyInputState(element, value) {\n    if (!element) return;\n    if (element.type === \"checkbox\") {\n      element.checked = Boolean(value);\n    } else {\n      element.value = value;\n    }\n  }\n\n  CONTROL_MAP.forEach(({ control, setting, descId }) => {\n    const el = controls[control];\n    applyInputState(el, settings[setting]);\n\n    if (el && settings.tooltipIds?.[setting]) {\n      el.dataset.tooltipId = settings.tooltipIds[setting];\n    }\n\n    const labelEl = el?.closest(\"label\")?.querySelector(\"span\");\n    const descEl = document.getElementById(descId);\n    const label = tooltipMap[`settings.${setting}.label`];\n    const desc = tooltipMap[`settings.${setting}.description`];\n    if (label && labelEl) labelEl.textContent = label;\n    if (desc && descEl) descEl.textContent = desc;\n  });\n\n  if (controls.displayRadios) {\n    controls.displayRadios.forEach((radio) => {\n      radio.checked = radio.value === settings.displayMode;\n      radio.tabIndex = radio.checked ? 0 : -1;\n    });\n  }\n}","qaContext":"Why: Initialize control states based on a settings object. How: @param {Object} controls - Collection of form elements.","embedding":[0.007,0.009,-0.041,0.111,-0.062,0.058,0.153,0.086,-0.03,-0.081,0.033,-0.127,0.06,-0.145,0.077,0.078,-0.043,-0.167,-0.112,0.013,0.069,-0.056,0.089,-0.044,-0.085,0.148,0.093,-0.042,-0.162,-0.042,-0.06,-0.023,-0.08,-0.011,0.003,0.064,-0.076,-0.011,-0.009,-0.015,-0.099,0.071,0.011,-0.183,0.064,-0.025,-0.09,-0.038,0.005,0.115,0.101,-0.074,0.122,0.011,0.091,0.041,0.023,-0.002,0.088,0.029,-0.031,-0.066,0.056,-0.042,0.118,0.035,-0.035,-0.022,-0.104,0.037,-0.08,0.131,0.208,-0.012,-0.037,-0.124,-0.072,-0.041,0.067,-0.056,-0.018,0.015,-0.083,0.055,-0.005,-0.095,0.068,-0.02,0.033,-0.038,-0.14,-0.017,-0.038,0.019,0.047,0.162,0.008,-0.048,-0.136,0.033,0.08,-0.165,-0.111,-0.096,0.051,-0.111,0.005,-0.042,-0.055,0.019,-0.013,0.041,-0.042,0.057,-0.049,-0.036,0.201,-0.043,0.049,-0.03,0.158,-0.011,-0.069,-0.058,0.116,0.031,0.04,0,0.096,-0.126,-0.15,0.122,-0.02,0.017,0.03,0.083,-0.087,0.035,0.03,0.097,-0.11,-0.037,0.02,-0.073,0.068,0.076,0.003,-0.144,0.025,-0.047,-0.029,-0.088,0.038,0.055,-0.118,0.151,-0.095,-0.069,0.135,0.058,0.043,0.023,0.022,0.04,-0.06,0.021,0.001,-0.034,0.164,-0.11,0.008,-0.073,0.021,-0.01,-0.067,0.063,0.032,-0.115,-0.118,0.086,-0.054,-0.179,0.079,0.052,-0.091,-0.003,-0.016,0.088,-0.035,0.045,0,0.047,0.021,0.109,0.057,-0.006,0.102,-0.148,-0.128,-0.06,0.149,0.032,0.108,-0.013,-0.101,-0.047,-0.095,-0.081,0.037,0.002,-0.167,0.1,0.167,-0.052,0.016,-0.012,-0.127,0.137,-0.074,0.021,-0.14,-0.112,-0.002,0,0.062,0.003,0.012,0.122,0.109,-0.047,0.002,0.05,0.038,-0.06,0.015,-0.046,0.019,-0.121,-0.031,0.216,-0.205,-0.027,0.109,-0.095,0.058,0.11,0.063,0.108,-0.119,-0.06,-0.044,0.088,-0.021,0.051,-0.072,0.035,-0.025,0.078,-0.018,-0.196,0.163,0.006,-0.002,0.238,0.01,-0.094,-0.084,-0.043,-0.015,0.021,0.068,0.16,-0.044,0.031,0.006,-0.276,-0.148,0.035,0,-0.097,-0.047,-0.155,0.118,0.096,-0.094,-0.157,0.088,0.061,0.115,0.083,-0.08,0.044,0.133,0.148,-0.02,-0.122,0.156,-0.192,0.024,0.034,-0.012,-0.124,0.062,-0.133,0.099,-0.009,0.006,-0.066,0.029,0.142,-0.022,0.082,0.007,0.006,-0.108,-0.078,0.079,-0.069,-0.167,0,-0.128,0.105,-0.069,0.016,0.012,0.051,0.061,-0.024,0.033,-0.098,0.03,0.178,0.083,0.032,-0.011,-0.08,-0.089,0.141,0,0.156,0.157,-0.065,-0.001,0.146,0.238,-0.088,-0.031,-0.018,0.117,0.152,-0.002,-0.008,0.025,0.105,-0.027,-0.052,-0.023,-0.108,0.124,0.22,0.082,0.043,-0.229,-0.078,-0.037,-0.025,0.034,0.027,0.044,-0.061,-0.119,0.004,0.046,-0.078,0.083,-0.089,0.037,0.112,-0.003,0.148,-0.094,-0.023,-0.011,-0.066],"source":"src/helpers/settings/applyInitialValues.js [applyInitialControlValues]","tags":["code","what","function","utility","../../config/settingsDefaults.js","../../config/loadSettings.js","Boolean","forEach","applyInputState","querySelector","closest","getElementById","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/settings/applyInitialValues.js","node":"applyInitialControlValues"},"patterns":[],"relations":{"imports":["../../config/settingsDefaults.js","../../config/loadSettings.js"],"calls":["Boolean","forEach","applyInputState","querySelector","closest","getElementById"]}},"version":1},
{"id":"applyInitialValues.js-applyInitialValues","text":"Load settings and apply them to controls.\n\n@param {Object} controls - Collection of form elements.\n@param {Record<string, string>} [tooltipMap] - Flattened tooltip lookup.\n@returns {Promise<import(\"../../config/settingsDefaults.js\").Settings>} Resolved settings.\n\nexport async function applyInitialValues(controls, tooltipMap = {}) {\n  const settings = await loadSettings().catch(() => DEFAULT_SETTINGS);\n  applyInitialControlValues(controls, settings, tooltipMap);\n  return settings;\n}","qaContext":"Why: Load settings and apply them to controls. How: @param {Object} controls - Collection of form elements.","embedding":[-0.145,0.028,-0.008,0.223,-0.109,0.138,0.031,0.202,-0.067,-0.102,-0.004,-0.042,-0.088,-0.181,0.2,0.188,-0.126,-0.203,-0.038,0.014,0.126,-0.201,0.097,-0.079,0.011,0.204,-0.062,-0.034,0.045,0.049,-0.125,0.133,-0.22,-0.119,0.004,0.102,-0.013,-0.003,0.102,0.091,0.069,0.105,-0.049,-0.16,0.143,0.062,0.101,0.058,-0.001,0.146,0.146,-0.064,0.175,-0.084,0.155,0.16,-0.003,-0.091,0.12,0.083,-0.11,-0.104,0.078,0.048,0.042,0.132,0.01,0.047,-0.044,0.009,-0.075,0.088,0.19,-0.084,-0.026,-0.159,-0.287,-0.049,0.062,-0.078,0.115,0.047,0.022,0.128,-0.119,-0.021,0.085,-0.068,0.029,0.133,-0.195,-0.271,-0.167,0.077,-0.167,0.014,-0.022,-0.12,-0.201,-0.154,0.03,-0.17,0.033,-0.114,-0.07,-0.028,-0.115,-0.13,-0.153,0.099,0.094,0.139,0.012,-0.007,0.145,-0.063,0,-0.11,0.039,-0.02,0.134,0.067,0.075,-0.072,0.078,0.096,-0.061,0,0.178,0.005,-0.135,0.082,-0.05,0.012,0.029,-0.014,-0.144,0.048,-0.016,0.073,-0.19,-0.026,-0.027,0.046,0.151,0.06,-0.006,-0.077,0.001,0.105,-0.017,-0.221,0.136,-0.084,-0.091,0.201,-0.103,-0.074,0.28,0.094,0.119,-0.001,0.015,0.061,-0.043,0.018,-0.108,-0.012,0.141,0.073,-0.042,0.043,-0.119,-0.046,-0.031,0.06,0.261,-0.111,-0.203,0.107,-0.023,-0.174,0.196,-0.02,-0.163,-0.108,0.022,0.081,0.065,-0.159,-0.083,-0.039,0.059,0.176,0.025,-0.018,-0.084,-0.132,-0.016,-0.004,-0.04,0.096,0.18,-0.074,-0.03,-0.053,-0.024,0.037,0.03,-0.02,-0.106,0.134,0.12,-0.063,0.037,-0.086,-0.03,0.134,-0.114,-0.109,-0.071,-0.085,-0.221,0,0.147,-0.085,-0.061,0.197,0.104,0.072,0.026,0.048,0.051,0.066,-0.046,0.073,-0.017,-0.108,-0.004,0.144,-0.176,0.093,0.222,-0.33,0.151,-0.133,0.071,0.176,-0.136,-0.107,-0.104,-0.033,-0.039,-0.023,-0.09,-0.008,-0.032,0.026,-0.048,-0.072,0.076,0.004,-0.045,0.183,0.001,-0.038,-0.249,-0.063,0.017,-0.089,-0.068,-0.098,0.026,0.014,0.131,-0.303,-0.01,-0.011,0.008,-0.249,-0.047,-0.198,0.252,0.133,-0.046,-0.183,-0.062,0.054,0.027,0.138,0.026,0.033,0.155,0.03,0.044,-0.144,0.21,-0.181,0.027,-0.012,-0.005,-0.158,0.183,-0.11,0.128,-0.104,0.041,-0.005,-0.067,0.22,0.092,0.109,0.05,0.198,-0.038,-0.012,0.168,-0.023,-0.14,0,-0.207,0.109,0.047,-0.12,-0.036,0.09,0.165,0.004,-0.023,-0.118,-0.005,0.222,0.144,0.017,0.093,0.034,0.049,0.309,-0.066,0.04,0.091,0.015,0.051,0.122,0.222,-0.134,0.037,0.076,0.147,0.152,-0.127,0.008,0.027,-0.072,-0.184,0.001,-0.023,-0.152,0.135,0.225,-0.1,-0.037,-0.129,-0.114,-0.14,-0.101,-0.029,0.13,-0.044,-0.055,-0.036,0.146,-0.118,0.105,0.002,-0.144,0.043,0.056,0.001,-0.022,-0.078,-0.114,0.036,0.022],"source":"src/helpers/settings/applyInitialValues.js [applyInitialValues]","tags":["code","what","function","utility","../../config/settingsDefaults.js","../../config/loadSettings.js","catch","loadSettings","applyInitialControlValues"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/settings/applyInitialValues.js","node":"applyInitialValues"},"patterns":[],"relations":{"imports":["../../config/settingsDefaults.js","../../config/loadSettings.js"],"calls":["catch","loadSettings","applyInitialControlValues"]}},"version":1},
{"id":"addNavResetButton.js-addNavResetButton","text":"export function addNavResetButton() {\n  const section = document.getElementById(\"feature-flags-container\");\n  const existing = document.getElementById(\"nav-cache-reset-button\");\n  existing?.parentElement?.remove();\n  if (!section) return;\n  if (!isEnabled(\"navCacheResetButton\")) return;\n  const wrapper = document.createElement(\"div\");\n  wrapper.className = \"settings-item\";\n  const btn = createButton(\"Reset Navigation Cache\", {\n    id: \"nav-cache-reset-button\"\n  });\n  wrapper.appendChild(btn);\n  section.appendChild(wrapper);\n  btn.addEventListener(\"click\", () => {\n    resetNavigationCache();\n    populateNavbar();\n    showSnackbar(\"Navigation cache cleared\");\n  });\n}","qaContext":"Why: export function addNavResetButton() { const section = document. How: getElementById(\"feature-flags-container\"); const existing = document.","embedding":[-0.011,-0.01,0.042,0.08,-0.014,0.019,0.079,-0.038,-0.06,0.105,-0.052,0.002,-0.064,-0.028,0.048,-0.016,-0.1,-0.141,-0.055,-0.131,0.112,0.05,0.176,-0.047,-0.039,-0.084,0.107,-0.156,-0.032,0.004,0.03,0.004,-0.015,-0.139,-0.049,-0.052,-0.113,-0.052,0.018,-0.017,-0.082,0.117,-0.119,-0.013,0.09,0.092,0.049,0.084,0.062,0.106,0.224,-0.022,0.008,-0.132,-0.012,0.174,-0.103,0.059,-0.028,0.129,0.165,-0.108,-0.024,-0.037,0.101,0.109,0.118,-0.009,-0.043,0.009,-0.008,-0.035,0.165,0.083,0.094,-0.098,-0.037,0.04,-0.005,0.038,-0.022,-0.141,-0.089,-0.027,0.055,-0.027,0.085,-0.142,0.04,-0.004,-0.032,0.006,-0.004,-0.107,-0.048,0.006,-0.087,0.075,-0.184,0.064,0.091,0.031,-0.084,0.086,0.03,0.014,0.103,-0.025,-0.211,0.195,-0.013,0.167,0.03,-0.011,-0.076,0.026,0.106,0.089,0.128,-0.096,0.182,-0.016,0.022,-0.076,-0.019,0.01,0.053,0,-0.13,-0.099,-0.257,0.174,0.021,0.092,0.132,0.152,-0.157,0.065,0.018,-0.06,-0.052,0.018,-0.002,0.077,-0.076,-0.062,-0.01,-0.196,0,0.175,-0.024,-0.004,-0.046,0.042,0.035,-0.012,-0.22,-0.017,0.142,0.073,-0.063,0.066,-0.145,0.051,0.007,0.005,0.002,-0.014,-0.031,-0.02,-0.057,-0.016,-0.196,-0.071,0.101,0.011,0.158,-0.106,-0.05,0.058,0.084,-0.198,-0.078,0.101,0.05,0.004,-0.108,-0.071,-0.004,-0.053,0.111,0.032,-0.089,0.2,0.139,0.018,0.043,-0.322,0.049,-0.08,0.114,-0.098,0.011,0.106,-0.092,-0.034,-0.141,-0.025,0.119,-0.14,-0.084,0.189,0.255,-0.137,0.043,0.033,0.116,0.245,-0.142,-0.087,0.13,-0.015,0.021,0,0.112,0.106,-0.094,0.083,-0.096,-0.071,0.028,0.068,-0.154,-0.172,-0.01,0.041,0.035,-0.021,-0.03,0.305,-0.092,-0.006,-0.052,-0.036,0.067,-0.025,0.054,-0.021,-0.017,-0.059,0.137,0.12,0.074,-0.138,0.076,0.205,0.137,0.08,0.083,-0.043,0.053,-0.028,-0.134,0.062,0.022,-0.003,0.016,-0.061,-0.033,0.021,0.168,0.086,-0.055,0.053,0.105,-0.167,-0.08,-0.085,0.13,0.202,-0.152,-0.086,0.133,-0.003,0.181,-0.199,-0.044,-0.131,0.068,0.127,-0.07,0.122,-0.037,0.19,-0.014,-0.068,0.092,-0.225,-0.066,0.039,0.086,-0.167,0.031,-0.111,-0.01,-0.101,-0.038,-0.325,0.095,-0.067,-0.205,0.025,0.016,0.107,-0.096,-0.027,-0.004,-0.113,-0.157,0,0.002,-0.023,-0.063,-0.003,0.09,-0.026,-0.065,0.083,-0.253,-0.212,0.047,0.107,-0.072,0.042,-0.03,-0.044,-0.16,0.125,-0.059,0.017,-0.095,0.047,0.102,0.115,0.054,0.017,-0.03,0.055,0.32,-0.016,-0.04,-0.002,0.136,-0.091,-0.052,-0.027,0.001,0.055,0.128,-0.008,0.058,-0.045,-0.006,0.15,-0.199,-0.073,-0.094,0.191,0.007,0.096,-0.091,0.024,-0.035,0.021,-0.068,-0.066,-0.024,0.039,0.05,0.15,-0.047,0.05,-0.051,-0.166],"source":"src/helpers/settings/addNavResetButton.js [addNavResetButton]","tags":["code","how","function","utility","../../components/Button.js","../navigationCache.js","../navigationBar.js","../showSnackbar.js","../featureFlags.js","getElementById","remove","isEnabled","createElement","createButton","appendChild","addEventListener","resetNavigationCache","populateNavbar","showSnackbar"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/settings/addNavResetButton.js","node":"addNavResetButton"},"patterns":[],"relations":{"imports":["../../components/Button.js","../navigationCache.js","../navigationBar.js","../showSnackbar.js","../featureFlags.js"],"calls":["getElementById","remove","isEnabled","createElement","createButton","appendChild","addEventListener","resetNavigationCache","populateNavbar","showSnackbar"]}},"version":1},
{"id":"quoteService.js-fetchFables","text":"Fetches Aesop's Fables story and metadata from JSON files and merges them.\n\n@returns {Promise<Object[]>} A promise that resolves to an array of fables.\n@throws {Error} If the fetch request fails or the response is not successful.\n1. Send GET requests to retrieve both `aesopsFables.json` and `aesopsMeta.json` using the `fetch` API.\n   - Await both responses concurrently.\n2. Verify the response status for each request:\n   - Check that `response.ok` is `true` for both files.\n   - If either response fails, throw an error with a descriptive message.\n3. Parse the JSON responses:\n   - Convert both response bodies into JavaScript objects using `response.json()`.\n4. Merge the metadata with the corresponding story using the shared `id`.\n5. Return the combined array of fables.\n\nexport async function fetchFables() {\n  const [storyRes, metaRes] = await Promise.all([\n    fetch(`${DATA_DIR}aesopsFables.json`),\n    fetch(`${DATA_DIR}aesopsMeta.json`)\n  ]);\n\n  if (!storyRes.ok || !metaRes.ok) {\n    throw new Error(\"Failed to fetch Aesop's fables data\");\n  }\n\n  const [stories, metadata] = await Promise.all([storyRes.json(), metaRes.json()]);\n  const metaMap = new Map(metadata.map((m) => [m.id, m]));\n  return stories.map((story) => ({ ...story, ...(metaMap.get(story.id) || {}) }));\n}","qaContext":"Why: Fetches Aesop's Fables story and metadata from JSON files and merges them. How: json` using the `fetch` API.","embedding":[-0.021,0.157,0.009,0.126,0.103,-0.074,-0.11,-0.015,0.136,-0.038,-0.02,0.017,-0.071,0.005,0.099,-0.067,-0.114,-0.045,-0.129,-0.006,0.169,0.043,0.039,-0.01,-0.085,0.012,-0.157,-0.155,-0.131,-0.155,0.158,0.057,-0.215,-0.027,-0.063,0.141,-0.007,-0.067,0.036,-0.09,0.088,0.234,-0.075,-0.14,0.064,-0.199,-0.158,0.008,-0.098,0.137,-0.123,0.113,-0.126,0.101,0.154,0.148,-0.118,-0.062,-0.081,-0.015,0.02,-0.164,-0.016,0.009,0.052,-0.14,0.094,0.189,0.078,0.025,0.013,0.049,0.007,-0.034,0.027,0.061,-0.002,-0.076,-0.011,-0.013,-0.202,-0.006,0.052,-0.124,-0.03,0.006,-0.001,-0.039,0.009,-0.154,-0.037,-0.133,-0.004,0.266,0.186,0.126,0.049,-0.02,0.021,0.036,-0.01,0.044,0.073,-0.054,0.076,-0.071,-0.088,-0.089,-0.208,-0.02,0.001,0.13,0.009,0.023,-0.084,0.075,-0.064,-0.113,0.026,0.127,0.259,0.072,0.263,0.113,0.152,-0.041,0.11,0,0.084,-0.126,-0.044,-0.007,0.123,-0.028,0.027,-0.009,-0.198,0.015,-0.031,0.205,-0.142,-0.036,-0.056,0.004,0.1,0.002,0.059,0.134,0.068,0.039,-0.069,0.038,0.008,0.011,0.077,0.154,-0.148,0.005,0.186,-0.002,0.002,0.02,0.129,0.012,-0.008,0.025,-0.274,-0.119,0.073,0.018,-0.164,-0.074,-0.075,-0.213,-0.074,-0.107,0.072,0.016,-0.002,0.099,-0.002,-0.049,0.169,-0.068,-0.034,-0.062,0.023,-0.041,-0.013,-0.189,-0.058,-0.078,-0.002,0.109,-0.024,0.047,-0.017,-0.032,0.053,-0.097,0.133,-0.054,0.057,-0.052,-0.143,0.033,-0.022,-0.082,0.044,0.065,-0.278,0.201,-0.086,0.232,-0.051,-0.097,0.058,0.102,-0.064,0.155,0.101,-0.198,0.039,0,0.117,-0.02,-0.003,0.028,0.007,-0.039,0.175,0.066,0.04,-0.025,-0.197,-0.036,0.003,-0.126,0.057,0.071,0.16,-0.091,0.146,0.002,0.114,0.058,0.008,0.068,0.03,0.05,-0.008,-0.046,-0.142,-0.198,0.08,-0.137,-0.126,-0.002,-0.006,-0.108,0.063,0.196,-0.205,-0.034,0.054,-0.088,-0.15,-0.013,0.078,-0.164,0.101,0.085,0.065,-0.084,0.025,-0.113,-0.012,-0.042,0.085,-0.176,0.049,-0.156,0.131,0.114,0.078,-0.154,-0.039,-0.04,0.094,-0.112,-0.105,-0.127,0.13,0.226,0.002,0.089,-0.029,-0.038,0.235,0.052,-0.185,-0.271,0.074,0.107,-0.109,0.079,0.032,0.103,0.1,-0.047,0.109,0.08,-0.052,0.056,-0.058,-0.009,0.009,0.01,0.053,0,-0.145,-0.052,-0.162,0.03,-0.041,0.027,-0.021,-0.061,0.027,-0.117,0.009,0.129,0.043,0.079,0.079,-0.173,0.077,-0.071,-0.098,0.031,0.058,0.161,0.034,-0.071,0.071,0.123,0.209,0.039,-0.006,0.017,-0.183,-0.086,0.132,0.101,-0.001,-0.072,0.132,0.086,0.012,0.018,0.225,0.032,0.069,0.088,0.02,-0.078,-0.001,-0.034,0.128,0.009,-0.092,-0.167,-0.121,0.067,-0.092,-0.145,0.016,-0.139,0.077,-0.024,0.258,-0.158,-0.067,-0.043],"source":"src/helpers/quotes/quoteService.js [fetchFables]","tags":["code","what","function","utility","../constants.js","../testModeUtils.js","all","fetch","json","map","get"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/quotes/quoteService.js","node":"fetchFables"},"patterns":[],"relations":{"imports":["../constants.js","../testModeUtils.js"],"calls":["all","fetch","json","map","get"]}},"version":1},
{"id":"quoteService.js-displayRandomQuote","text":"Retrieves a random fable using a seeded RNG.\n\n@returns {Promise<Object|null>} A promise that resolves to a fable or `null`.\n1. Fetch the fables array using `fetchFables`.\n2. Determine the highest `id` among fables.\n3. Generate a seeded random id between 1 and `maxId`.\n4. Return the matching fable or `null` if not found.\n5. If an error occurs, log the error and return `null`.\n\nexport async function displayRandomQuote() {\n  try {\n    const fables = await fetchFables();\n    const maxId = Math.max(...fables.map((fable) => fable.id));\n    const randomId = Math.floor(seededRandom() * maxId) + 1;\n    return fables.find((fable) => fable.id === randomId) || null;\n  } catch (error) {\n    console.error(\"Error fetching the fable:\", error);\n    return null;\n  }\n}","qaContext":"Why: Retrieves a random fable using a seeded RNG. How: Fetch the fables array using `fetchFables`.","embedding":[-0.107,0.162,-0.073,0.155,-0.01,0,-0.015,-0.044,0.167,-0.03,-0.225,-0.009,0.043,-0.087,-0.03,-0.105,-0.07,-0.02,-0.007,-0.172,0.139,0.002,0.119,0.011,-0.004,-0.233,-0.106,-0.154,0.068,-0.101,0.183,0.117,-0.061,-0.105,0.013,0.094,-0.265,-0.071,0.159,-0.079,0.055,0.169,-0.041,0.003,0.204,-0.175,-0.244,0.086,-0.017,0.15,-0.172,0.143,-0.009,0.039,0.131,0.247,0.06,-0.082,-0.006,-0.005,0.084,-0.27,0.032,-0.078,0.051,-0.21,0.114,0.174,0.08,0.112,0.092,0.132,0.141,0.089,0.134,0.011,-0.105,-0.258,0.117,0.179,-0.375,-0.076,0.034,-0.062,0.05,0.007,0.137,0.072,0.15,-0.069,-0.128,-0.037,-0.143,0.283,0.194,0.189,0.163,-0.133,0.072,0.042,-0.02,-0.007,0.05,-0.07,0.041,-0.019,-0.113,-0.118,-0.108,-0.071,-0.048,0.156,0.15,0.151,-0.095,0.055,-0.026,-0.052,-0.068,0.07,0.247,0.159,0.282,0.059,-0.051,0.227,0.245,0,0.128,-0.137,0.036,-0.13,0.086,0.028,-0.015,-0.025,-0.113,0.124,-0.121,0.05,-0.091,0,0.014,-0.01,0.113,0.081,-0.087,0.041,0.005,0.029,-0.084,-0.215,0.091,0.045,0.015,0.067,-0.119,0.046,0.158,0.014,-0.093,0.015,0.149,0.05,-0.057,0.107,-0.344,-0.088,0.017,-0.025,-0.01,-0.033,-0.062,-0.215,0.052,-0.113,0.049,0.067,-0.051,0.087,0.017,-0.079,0.177,-0.124,0.125,-0.066,0.06,0.009,-0.045,-0.289,-0.072,0.001,-0.058,0.074,-0.109,-0.079,0.037,0.042,0.286,-0.143,0.024,-0.13,-0.038,-0.016,-0.052,0.19,-0.056,-0.258,0.142,0.008,-0.353,0.12,-0.066,0.283,-0.076,-0.121,0.063,0.124,-0.102,0.04,0.092,-0.127,-0.012,0,-0.084,0.063,0.107,0.021,0.043,-0.217,0.145,-0.091,0.018,-0.123,-0.192,0.096,0.03,-0.022,0.085,0.097,0.142,-0.05,0.057,0.018,0.098,0.094,-0.207,0.098,-0.001,0.118,0.033,-0.076,-0.145,-0.249,0.092,-0.109,-0.148,0.108,0.088,-0.132,0.268,0.065,-0.241,-0.006,-0.048,-0.13,-0.095,0.047,0.193,-0.217,0.045,0.147,0.239,-0.005,-0.045,-0.082,0.026,0.009,0.013,-0.212,-0.263,0.006,0.267,0.181,0.038,-0.04,-0.057,0.128,0.036,-0.054,-0.218,0.084,0.081,0.213,-0.019,0.224,0.054,-0.083,0.083,0.002,-0.242,-0.152,0.132,0.105,0.018,0.118,0.116,-0.02,0.006,-0.093,0.186,-0.082,0.05,-0.01,-0.165,0.076,-0.124,-0.098,-0.053,0,-0.069,-0.072,-0.088,-0.013,0.197,-0.004,-0.097,-0.029,0.02,-0.201,-0.037,0.055,0.042,-0.058,0.141,-0.25,-0.127,-0.046,-0.109,-0.029,0.03,0.194,0.057,-0.086,-0.001,-0.088,0.3,0.065,0.238,0.078,-0.191,0.025,0.177,0.018,0.047,0.061,0.022,0.071,0.095,-0.056,0.17,-0.041,0.161,-0.006,-0.202,-0.108,0.018,-0.128,0.221,-0.007,-0.096,-0.257,-0.154,-0.024,-0.13,-0.127,-0.147,-0.17,0.035,-0.03,0.153,-0.175,-0.063,0.018],"source":"src/helpers/quotes/quoteService.js [displayRandomQuote]","tags":["code","what","function","utility","../constants.js","../testModeUtils.js","fetchFables","max","map","floor","seededRandom","find","error","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/quotes/quoteService.js","node":"displayRandomQuote"},"patterns":[],"relations":{"imports":["../constants.js","../testModeUtils.js"],"calls":["fetchFables","max","map","floor","seededRandom","find","error"]}},"version":1},
{"id":"quoteRenderer.js-checkAssetsReady","text":"Removes fade-in once the KG image and quote have loaded.\n\n@param {QuoteLoadState} state\n@returns {void}\n1. If `kgImageLoaded` and `quoteLoaded` are both true:\n   a. Remove `fade-in` from `.kg-sprite img`.\n   b. Remove `fade-in` from `.quote-block`.\n\nexport function checkAssetsReady(state) {\n  if (state.kgImageLoaded && state.quoteLoaded) {\n    document.querySelector(\".kg-sprite img\")?.classList.remove(\"fade-in\");\n    document.querySelector(\".quote-block\")?.classList.remove(\"fade-in\");\n  }\n}","qaContext":"Why: Removes fade-in once the KG image and quote have loaded. How: @param {QuoteLoadState} state @returns {void} 1.","embedding":[-0.21,0.339,0.243,0.278,0.094,-0.029,0.357,-0.1,0.132,-0.076,0.063,0.053,-0.015,-0.118,-0.009,-0.054,-0.019,-0.039,-0.065,-0.135,0.182,-0.24,-0.06,0.128,0.122,0.077,0.048,-0.153,0.03,-0.052,-0.099,-0.115,-0.01,0.11,-0.067,0.134,0.108,-0.093,0.103,-0.021,0.051,-0.008,-0.129,-0.128,0.125,0.172,-0.166,-0.009,-0.036,0.18,0.019,-0.148,0.133,-0.046,-0.049,0.044,0.223,0.274,0.132,0.109,-0.085,-0.082,-0.049,0.126,0.266,0.139,0.084,-0.214,-0.209,-0.003,-0.016,-0.079,0.173,0.023,-0.119,0.036,0.003,-0.069,-0.072,0.169,0.083,-0.461,-0.068,-0.154,0.06,0.095,-0.175,-0.31,-0.055,-0.155,-0.217,0.051,0.005,0.172,-0.087,0.205,-0.251,0.015,-0.008,0.159,-0.091,-0.094,0.01,-0.009,-0.102,-0.085,-0.112,0.005,0.01,0.04,-0.217,0.015,0.111,0.035,-0.127,0.058,0.312,0.039,-0.114,0.076,0.287,0.038,-0.054,-0.043,0.025,-0.184,0.183,0,-0.011,-0.397,0.024,-0.062,-0.218,-0.041,0.038,-0.03,-0.249,-0.097,0.19,-0.013,-0.05,0.054,0.163,0.08,-0.002,-0.03,0.228,-0.01,-0.027,0.078,-0.03,0.062,-0.104,0.074,0.074,-0.156,-0.074,0.034,0.097,-0.013,-0.27,0.128,0.033,-0.008,-0.122,0.177,-0.079,-0.252,-0.1,0.011,-0.021,0.02,-0.091,-0.055,0.134,-0.122,0.036,-0.083,0.03,0.086,-0.045,-0.153,0.124,-0.098,0.236,0.085,0.015,-0.067,0.215,0.138,0.024,0.076,0.106,0.085,-0.117,0.052,-0.245,-0.248,0.143,-0.026,0.297,-0.041,0.081,-0.082,-0.1,0.028,-0.152,-0.022,-0.056,-0.262,-0.217,0.072,-0.046,0.022,-0.044,-0.222,0.12,0.151,0.008,0.041,-0.256,0.027,-0.012,0,0.273,0.448,0.016,0.143,-0.033,0.028,0.05,0.347,-0.059,-0.055,0.042,0.032,-0.061,-0.124,-0.271,0.263,-0.061,-0.082,-0.18,-0.062,0.133,0.185,0.138,0.117,-0.094,0.006,0.011,0.052,-0.074,0.063,-0.179,0.148,-0.056,0.029,-0.119,-0.076,0.022,0.143,-0.062,-0.017,-0.032,-0.132,-0.084,-0.087,-0.017,-0.07,0.063,0.169,0.097,0.068,-0.085,-0.027,-0.092,-0.021,0.072,-0.132,-0.099,-0.013,0.065,0.136,0.197,-0.001,-0.072,-0.26,-0.1,-0.129,0.03,0.113,0.153,0.08,0.102,0.005,0.236,-0.144,-0.008,0.121,0.016,-0.052,0.025,-0.013,0.009,-0.058,-0.004,-0.016,0.263,0.108,-0.388,-0.095,0.036,0.032,-0.193,-0.093,0.139,-0.094,-0.051,0,-0.033,-0.06,0.131,-0.334,-0.039,-0.136,-0.014,0.229,-0.009,-0.247,0.24,0.218,0.184,0.101,-0.151,-0.101,-0.104,0.098,-0.023,0.127,-0.158,-0.276,-0.05,0.122,-0.031,-0.06,-0.108,-0.038,0.164,0.149,-0.014,0.172,0.07,-0.054,-0.04,0.058,-0.084,0.163,-0.021,0.313,-0.149,-0.105,-0.16,0.073,-0.043,-0.049,0.171,-0.16,-0.017,0.115,0.095,-0.292,-0.314,0.075,0.027,-0.299,0.373,0.093,-0.067,0.23,0.129,-0.179,0.092,-0.019],"source":"src/helpers/quotes/quoteRenderer.js [checkAssetsReady]","tags":["code","what","function","utility","../utils.js","remove","querySelector","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/quotes/quoteRenderer.js","node":"checkAssetsReady"},"patterns":[],"relations":{"imports":["../utils.js"],"calls":["remove","querySelector"]}},"version":1},
{"id":"quoteRenderer.js-formatFableStory","text":"Formats a fable's story by replacing newline characters with HTML tags for proper rendering.\n\n@param {string} story - The fable's story text to format.\n@returns {string} The formatted story with HTML tags for rendering.\n1. Coerce the story to a string.\n2. Normalize newline characters by replacing escaped `\\n` with actual newlines.\n3. Split the story into paragraphs on two or more newlines.\n4. Trim and filter out empty paragraphs.\n5. Wrap each paragraph in `<p>` and replace single newlines with `<br>`.\n6. Join the paragraphs into a single HTML string and return it.\n\nexport function formatFableStory(story) {\n  story = String(story ?? \"\").replace(/\\\\n/g, \"\\n\");\n\n  return story\n    .trim()\n    .split(/\\n{2,}/)\n    .map((paragraph) => paragraph.trim())\n    .filter((paragraph) => paragraph.length > 0)\n    .map((paragraph) => `<p>${paragraph.replace(/\\n/g, \"<br>\")}</p><br>`)\n    .join(\"\");\n}","qaContext":"Why: Formats a fable's story by replacing newline characters with HTML tags for proper rendering. How: Normalize newline characters by replacing escaped `\\n` with actual newlines.","embedding":[0.017,0.166,0.149,0.123,0.047,0.125,-0.213,-0.111,0.176,0.04,-0.234,0.017,-0.035,0.042,0.114,0.068,-0.128,0.01,-0.034,-0.067,0.19,0.107,0.024,0.041,0.063,-0.097,0.016,0.024,-0.036,-0.07,0.045,-0.1,0.154,0.031,0.112,0.11,0.019,0.083,0.053,-0.041,0.036,0.03,-0.16,-0.084,0.155,-0.124,-0.244,-0.017,-0.105,0.089,-0.157,0.095,-0.071,-0.063,0.09,0.139,0.033,-0.231,0.106,-0.138,-0.033,-0.067,-0.01,0.04,0.009,-0.095,-0.024,0.318,0.018,0.088,-0.174,0.105,-0.03,-0.11,-0.053,0.026,-0.21,-0.055,0.095,0.133,0.063,-0.041,0.095,0.144,0.021,0.056,-0.047,-0.203,-0.034,-0.07,-0.001,-0.222,0.201,0.22,-0.163,0.173,-0.013,-0.069,0.084,0.067,0.031,-0.055,0.1,-0.185,-0.096,-0.007,0.065,0.133,-0.051,0.035,0.097,0.092,-0.228,-0.102,0.017,-0.034,0.069,-0.182,0.052,0.257,0.226,0.14,-0.176,0.111,0.123,0.096,0.387,0,0.132,-0.026,-0.044,0.034,0.077,0.087,-0.301,-0.093,-0.134,0.014,-0.005,-0.122,-0.034,-0.029,-0.049,-0.122,-0.154,0,0.117,0.127,-0.148,0.013,0.059,-0.035,-0.075,0.012,0.141,-0.084,-0.169,-0.022,0.144,-0.152,-0.045,-0.022,0.01,0.077,-0.033,0.007,-0.138,0.109,-0.17,-0.054,0.013,-0.051,0.068,-0.022,0.033,0.039,-0.097,0.06,-0.037,0.173,0.115,-0.164,0.114,-0.089,0.16,-0.245,0.124,-0.141,0.042,-0.006,0.095,0.001,0.061,0.047,0.255,0.038,-0.098,-0.175,-0.04,-0.133,0.067,0.001,-0.137,-0.13,-0.163,0.047,0.032,-0.055,0.041,-0.129,-0.107,0.021,-0.028,-0.045,-0.02,-0.165,0.155,-0.073,0.103,-0.051,-0.018,-0.143,0.148,0,0.148,0.149,-0.027,0.036,0.009,-0.03,0.012,0.28,0.179,0.002,-0.153,-0.014,-0.194,-0.097,0.033,0.12,0.017,0.138,-0.005,-0.058,0.098,-0.172,-0.06,0.127,0.134,0.077,0.182,0.04,-0.031,-0.124,0.043,-0.06,0.112,0.086,-0.13,-0.083,0.065,0.19,0.073,-0.049,0.09,-0.063,-0.118,-0.003,-0.027,-0.063,-0.081,0.044,0.096,0.01,-0.135,-0.021,-0.052,-0.017,-0.084,-0.24,-0.182,-0.005,-0.097,0,-0.141,0.117,0.08,-0.029,0.234,-0.177,-0.054,-0.021,-0.177,-0.019,-0.048,0.017,-0.054,0,0.111,-0.01,-0.132,-0.064,-0.059,0.106,0.125,-0.075,0.059,-0.008,0.07,-0.069,0.047,0.161,-0.062,0.026,-0.08,0.099,0.121,0.01,-0.047,0,-0.11,-0.164,-0.094,-0.019,-0.159,0.076,0.056,-0.065,-0.064,0.038,0.02,0.22,-0.131,0.029,-0.095,-0.032,-0.003,-0.064,-0.095,0.088,0.09,0.221,-0.14,-0.05,0.066,0.09,-0.191,-0.018,0.12,0.039,0.03,0.087,-0.004,-0.013,-0.202,-0.089,0.152,-0.053,0.083,0.074,0.054,-0.025,-0.064,-0.063,0.008,-0.244,-0.03,-0.135,0.122,0.138,0.127,-0.133,-0.071,-0.163,-0.1,-0.11,0.165,0.148,0.092,0.013,0.059,-0.082,0.106,-0.018],"source":"src/helpers/quotes/quoteRenderer.js [formatFableStory]","tags":["code","what","function","utility","../utils.js","replace","String","join","map","filter","split","trim"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/quotes/quoteRenderer.js","node":"formatFableStory"},"patterns":[],"relations":{"imports":["../utils.js"],"calls":["replace","String","join","map","filter","split","trim"]}},"version":1},
{"id":"quoteRenderer.js-displayFable","text":"Renders the fable or a fallback message and updates load state.\n\n@param {Object|null} fable - The fable object containing the title and story, or `null` if unavailable.\n@param {QuoteLoadState} state\n@returns {void}\n1. Query `#quote` and `#quote-loader` elements; exit if either is missing.\n2. Render the fable with `renderQuote` when provided; otherwise use `renderFallback`.\n3. Hide the loader and reveal the quote block.\n4. Reveal and focus the language toggle if it exists, updating live region text.\n5. Mark `quoteLoaded` on `state` and call `checkAssetsReady(state)`.\n6. Dispatch `quote:ready` to signal the markup is available.\n\nexport function displayFable(fable, state) {\n  const quoteDiv = document.getElementById(\"quote\");\n  const loaderDiv = document.getElementById(\"quote-loader\");\n  if (!quoteDiv || !loaderDiv) {\n    state.quoteLoaded = true;\n    checkAssetsReady(state);\n    return;\n  }\n\n  if (fable) {\n    renderQuote(fable);\n  } else {\n    renderFallback();\n  }\n\n  loaderDiv.classList.add(\"hidden\");\n  quoteDiv.classList.remove(\"hidden\");\n  const toggleBtn = document.getElementById(\"language-toggle\");\n  if (toggleBtn) {\n    toggleBtn.classList.remove(\"hidden\");\n    toggleBtn.setAttribute(\"aria-live\", \"polite\");\n    toggleBtn.focus();\n    const liveRegion = document.getElementById(\"language-announcement\");\n    if (liveRegion) {\n      liveRegion.textContent = \"language toggle available\";\n    }\n  }\n  state.quoteLoaded = true;\n  checkAssetsReady(state);\n  notifyQuoteReady();\n}","qaContext":"Why: Renders the fable or a fallback message and updates load state. How: @param {Object|null} fable - The fable object containing the title and story, or `null` if unavailable.","embedding":[-0.083,0.066,0.094,0.195,0.024,0.169,0.084,-0.065,0.073,-0.067,-0.176,-0.131,-0.111,-0.04,0.019,-0.026,0.02,-0.153,0.049,-0.076,0.193,-0.096,0.011,0.101,0.094,-0.026,-0.041,-0.105,-0.097,0,-0.029,-0.001,-0.083,-0.129,-0.082,-0.069,-0.051,-0.063,-0.039,-0.077,-0.107,0.038,-0.06,-0.046,0.045,-0.136,-0.138,0.145,-0.018,0.067,0,-0.035,0.05,-0.032,0.063,0.123,0.14,0.173,-0.009,0.037,-0.094,-0.049,0.057,0.096,0.057,0.01,0.072,-0.05,-0.093,0.121,-0.018,0.075,0.165,-0.089,-0.027,-0.098,0.075,-0.184,0.084,-0.007,-0.01,-0.067,-0.073,-0.086,-0.051,0.052,0.011,-0.205,0.029,-0.18,-0.07,-0.156,0.039,0.161,-0.044,0.109,-0.06,0.057,-0.023,0.094,0.08,-0.045,0.08,0.016,-0.042,-0.069,0.025,-0.016,-0.101,0.06,-0.005,0.13,0.031,0.027,-0.128,0.062,0.205,-0.097,-0.015,0.03,0.179,-0.007,-0.017,-0.061,0.065,-0.033,0.222,0,0.157,-0.228,-0.137,0.065,-0.017,-0.005,0.212,-0.046,-0.194,-0.006,0.114,0.077,-0.076,-0.013,0.045,-0.103,0.06,0.095,0.145,-0.022,0.056,-0.059,-0.047,-0.064,-0.007,0.15,0.016,0.022,-0.143,-0.001,0.178,-0.037,-0.027,-0.031,0.072,-0.14,-0.066,0.037,-0.04,-0.089,0.078,-0.094,0.016,-0.169,-0.023,-0.087,0.027,-0.066,-0.101,-0.032,0.022,0.145,-0.025,-0.159,0.155,0.01,-0.033,-0.037,0.122,-0.092,-0.063,-0.145,0.051,-0.057,-0.034,0.157,0.042,-0.132,-0.074,-0.142,-0.059,-0.161,0.24,0.037,0.034,0.082,-0.247,-0.04,-0.067,-0.062,0.131,-0.21,-0.165,0.166,0.101,-0.009,-0.02,-0.148,-0.077,0.14,-0.032,0.016,0.012,-0.117,0.09,0,0.076,0.056,-0.085,-0.02,-0.073,-0.066,0.056,0.23,0.054,-0.13,-0.083,0.061,-0.001,0.039,-0.149,0.278,0.071,0.099,-0.008,0.154,0.021,0.067,-0.136,0.035,-0.043,-0.004,-0.015,0.024,-0.021,-0.145,0.06,0.018,-0.212,0.064,-0.118,-0.062,0.031,0.064,-0.192,0.126,0.138,-0.077,-0.097,0.019,0.029,0.014,0.023,0.047,-0.051,0.035,-0.033,-0.16,0.059,0.02,-0.004,-0.055,0.004,-0.125,0.041,0.093,0.093,-0.051,-0.038,-0.139,0.178,0.023,-0.037,0.177,0.245,0.016,-0.014,-0.02,0.133,-0.116,0.206,0.112,-0.087,-0.227,0.007,0.07,0.107,-0.09,-0.007,-0.106,0.196,0.095,-0.19,0.064,-0.056,0.076,-0.174,0.07,-0.006,-0.057,-0.085,0,-0.046,-0.058,0.022,-0.144,-0.011,-0.009,0.071,-0.14,-0.109,-0.136,-0.044,0.105,0.122,0.033,0.003,-0.126,-0.057,-0.007,-0.118,0.065,0.047,0.027,-0.087,0.106,0.09,0.002,0.087,0.049,0.149,0.158,-0.005,0.109,-0.071,0.061,-0.024,0.118,0.089,0.023,0.162,0.204,0.198,-0.011,-0.071,0.008,-0.046,-0.044,-0.062,-0.195,0.184,0.017,-0.162,-0.192,-0.072,0.007,0.1,-0.16,0.122,0.027,0.035,0.156,0.124,-0.153,0.045,0.007],"source":"src/helpers/quotes/quoteRenderer.js [displayFable]","tags":["code","what","function","utility","../utils.js","getElementById","checkAssetsReady","renderQuote","renderFallback","add","remove","setAttribute","focus","notifyQuoteReady","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/quotes/quoteRenderer.js","node":"displayFable"},"patterns":[],"relations":{"imports":["../utils.js"],"calls":["getElementById","checkAssetsReady","renderQuote","renderFallback","add","remove","setAttribute","focus","notifyQuoteReady"]}},"version":1},
{"id":"ui.js-convertElementToPseudoJapanese","text":"Convert all text nodes within an element to pseudo-Japanese while\npreserving the original HTML structure.\n\n@param {HTMLElement} element - The element containing text to convert.\n@returns {Promise<void>} Resolves when conversion is complete.\n1. If `element` is `null` or `undefined`, return immediately.\n2. Traverse the element with a `TreeWalker` to collect all text nodes.\n3. For each text node, asynchronously convert its value using\n   `convertToPseudoJapanese`.\n4. Wait for all conversions to finish.\n5. Replace each text node's value with the corresponding converted text.\n\nexport async function convertElementToPseudoJapanese(element) {\n  if (!element) return;\n\n  const walker = document.createTreeWalker(element, NodeFilter.SHOW_TEXT);\n  const nodes = [];\n  while (walker.nextNode()) {\n    nodes.push(walker.currentNode);\n  }\n  const results = await Promise.allSettled(\n    nodes.map((node) => convertToPseudoJapanese(node.nodeValue))\n  );\n  nodes.forEach((node, idx) => {\n    if (results[idx].status === \"fulfilled\") {\n      node.nodeValue = results[idx].value;\n    } else {\n      console.error(`Failed to convert text node: ${results[idx].reason}`);\n      node.nodeValue = node.nodeValue || STATIC_FALLBACK; // Fallback to original or static text\n    }\n  });\n}","qaContext":"Why: reason}`); node. How: For each text node, asynchronously convert its value using `convertToPseudoJapanese`.","embedding":[-0.076,0.201,0.053,0.193,0.096,0.032,0.05,-0.046,0.08,-0.073,-0.042,-0.117,-0.008,-0.079,0.053,0.05,-0.074,0.146,0.005,-0.144,0.148,0.044,0.108,0.018,0.075,0.162,-0.158,-0.217,0.069,-0.029,-0.138,-0.042,-0.048,-0.02,0.031,0.107,-0.056,0.003,0.019,0.008,0.162,0.244,-0.05,-0.188,0.209,-0.143,-0.105,-0.063,-0.038,0.09,-0.002,-0.043,-0.026,0.023,0.007,0.133,0.059,-0.06,0.042,-0.027,0.027,-0.155,0.118,-0.093,0.132,-0.013,-0.041,0.028,-0.041,0.101,-0.026,-0.009,0.112,0.067,-0.077,-0.08,-0.098,-0.013,-0.005,0.185,-0.07,-0.049,-0.055,-0.016,0.037,0.174,-0.143,-0.004,-0.004,0.01,-0.182,-0.033,-0.001,0.135,-0.089,0.109,0.008,0.096,0.068,0.065,0.067,0.01,0.046,-0.243,-0.235,-0.137,0.035,-0.077,-0.124,0.008,-0.009,0.096,-0.022,0.082,-0.12,-0.076,0.067,-0.168,0.096,0.226,0.127,0.132,0.096,0.135,0.143,0.017,0.076,0,-0.031,-0.003,0.062,0,-0.004,0.003,-0.06,-0.134,-0.048,-0.017,-0.056,-0.053,-0.084,-0.198,-0.052,-0.165,0.17,-0.119,0.11,0.019,0.126,0.002,-0.113,0.004,-0.045,0.005,-0.048,0.02,-0.057,-0.042,0.01,0.006,0.037,0.126,0.004,0.037,0.095,-0.035,-0.138,-0.02,-0.071,0.098,0.004,0.07,0.019,-0.167,0.059,-0.029,0.078,-0.081,-0.168,0.135,0.073,-0.063,0.002,-0.016,0.152,0.011,0.04,0.154,-0.021,-0.076,-0.016,-0.099,0.022,0.039,0.045,-0.092,-0.158,-0.188,-0.018,-0.094,-0.011,0.091,0.069,-0.068,-0.233,-0.085,-0.008,-0.183,-0.098,-0.058,-0.052,0.068,0.234,0.131,0.017,-0.129,0.086,0.123,0.125,-0.089,0.003,-0.14,0.032,0,0.057,0.074,-0.002,0.119,0.003,-0.06,-0.037,0.059,0.068,-0.071,-0.094,-0.04,0.098,-0.006,-0.042,0.113,0.167,-0.007,0.157,-0.042,0.154,0.115,-0.002,0.039,-0.178,0.071,0.112,0.172,0.037,-0.063,0.017,-0.126,-0.062,0.105,-0.067,-0.153,0.009,0.088,-0.032,0.155,-0.014,-0.166,-0.113,0.023,-0.081,0.001,-0.094,0.097,0.062,-0.039,0.029,-0.047,-0.147,0.04,-0.075,-0.2,-0.067,-0.063,0.036,-0.019,-0.126,-0.105,0.133,-0.047,0.166,-0.005,-0.015,0.01,0.096,0.126,0.03,0.044,-0.012,-0.004,0.024,-0.099,0.009,-0.061,0.155,-0.125,-0.029,0.081,-0.041,-0.009,0.142,-0.053,-0.004,0.1,0.026,0.06,0.012,-0.06,-0.151,-0.058,-0.064,0,-0.308,-0.085,-0.209,0.001,-0.026,-0.039,0.101,-0.071,0.05,-0.164,0.01,0.076,0.123,-0.098,-0.026,0.014,0.061,0.198,0.053,0.093,0.024,0.04,-0.14,0.044,0.11,0.042,0.014,0.034,0.13,-0.072,-0.113,-0.034,0.052,0.139,-0.102,-0.081,0.116,-0.036,0.097,0.168,0.164,0.03,-0.144,-0.013,-0.156,-0.109,-0.091,0.008,0.273,0.01,0.063,-0.195,-0.114,-0.097,-0.015,-0.16,0.13,-0.006,0.016,0.225,0.086,-0.162,0.03,-0.028],"source":"src/helpers/pseudoJapanese/ui.js [convertElementToPseudoJapanese]","tags":["code","why","function","utility","./converter.js","createTreeWalker","nextNode","push","allSettled","map","convertToPseudoJapanese","forEach","error","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/pseudoJapanese/ui.js","node":"convertElementToPseudoJapanese"},"patterns":[],"relations":{"imports":["./converter.js"],"calls":["createTreeWalker","nextNode","push","allSettled","map","convertToPseudoJapanese","forEach","error"]}},"version":1},
{"id":"ui.js-setupLanguageToggle","text":"Create a button that toggles an element's text between English and pseudo-Japanese.\n\n@param {HTMLElement} element - The element whose text will be toggled.\n@returns {HTMLButtonElement|null} The toggle button if found, otherwise `null`.\n1. Find the existing button with id `language-toggle` and initialize\n   its `aria-pressed` attribute to `false`.\n2. Attach a click handler that adds a `fading` class to the element\n   to fade it out, then:\n   - On the first click, cache the element's HTML and convert all\n     text nodes using `convertElementToPseudoJapanese`.\n   - Swap between the cached original HTML and the generated\n     pseudo-Japanese HTML while toggling a Japanese font class.\n   - Update `aria-pressed` to reflect the current language state.\n   - Remove the `fading` class so the element fades back in.\n   - If an error occurs, log it and remove the `fading` class to\n     reset the UI.\n3. Return the button so callers can further manipulate it if needed.\n\nexport function setupLanguageToggle(element) {\n  const button = document.getElementById(\"language-toggle\");\n  if (!button) {\n    return null;\n  }\n\n  element.classList.add(\"fade-transition\");\n\n  button.setAttribute(\"aria-pressed\", \"false\");\n\n  let originalHTML = \"\";\n  let pseudoHTML = \"\";\n  let pseudoLoaded = false;\n  let showingPseudo = false;\n\n  button.addEventListener(\"click\", () => {\n    element.classList.add(\"fading\");\n    setTimeout(async () => {\n      try {\n        if (showingPseudo) {\n          element.innerHTML = originalHTML;\n        } else {\n          if (!pseudoLoaded) {\n            originalHTML = element.innerHTML;\n            const clone = element.cloneNode(true);\n            await convertElementToPseudoJapanese(clone);\n            pseudoHTML = clone.innerHTML;\n            pseudoLoaded = true;\n          }\n          element.innerHTML = pseudoHTML;\n        }\n        element.classList.toggle(\"jp-font\", !showingPseudo);\n        element.classList.remove(\"fading\");\n        showingPseudo = !showingPseudo;\n        button.setAttribute(\"aria-pressed\", String(showingPseudo));\n      } catch (error) {\n        console.error(error);\n        element.classList.remove(\"fading\");\n      }\n    }, 200);\n  });\n\n  return button;\n}","qaContext":"Why: Create a button that toggles an element's text between English and pseudo-Japanese. How: Attach a click handler that adds a `fading` class to the element to fade it out, then: - On the first c...","embedding":[-0.142,-0.001,0.063,0.138,-0.041,0.126,0.212,-0.046,0.009,-0.105,-0.034,-0.056,-0.069,-0.064,0.101,0.049,-0.029,0.032,-0.009,-0.141,0.137,-0.126,0.087,0.009,0.076,0.101,0.063,-0.133,-0.047,-0.024,-0.064,0.016,0.011,-0.045,-0.129,0.02,-0.016,-0.008,0.02,0.044,-0.17,0.017,-0.081,-0.168,0.111,-0.053,-0.123,0.053,0.034,0.054,0.037,-0.096,0.09,-0.081,-0.075,-0.005,0.131,0.123,-0.03,-0.023,-0.036,-0.02,0.111,0.061,0.136,0.067,0.001,-0.077,-0.088,0.083,-0.003,-0.06,0.226,0.203,-0.109,-0.117,0.017,0.077,-0.02,0.011,0.05,-0.084,-0.031,-0.062,0.061,0.072,-0.007,-0.096,-0.065,-0.03,-0.127,0.127,0.078,0.108,-0.053,0.123,-0.062,0.065,-0.099,0.105,0.057,-0.1,-0.085,-0.092,-0.137,-0.203,0.064,-0.047,-0.029,-0.014,0.024,0.057,-0.084,-0.003,-0.102,-0.003,0.264,0.041,0.1,0.056,0.161,0.014,-0.111,-0.034,0.073,-0.03,0.106,0,0.123,-0.048,-0.188,0.05,-0.078,-0.001,0.174,-0.082,-0.125,-0.113,0.121,0.006,-0.142,-0.12,0.069,-0.103,0.064,-0.02,0.143,-0.129,0.104,0.037,0.023,0.033,-0.169,0.165,0.051,-0.113,-0.144,0.02,0.08,0.016,-0.074,0.043,-0.039,-0.113,0.075,0.003,0.02,-0.034,-0.027,-0.048,0.012,-0.067,-0.02,-0.012,0.096,-0.009,-0.058,-0.042,-0.099,0.054,0.052,-0.151,0.044,0.083,0.135,0.01,-0.055,0.093,-0.017,0.005,0.1,0.006,-0.054,0.087,0.033,-0.195,-0.104,-0.275,0.015,-0.163,0.202,0.05,-0.012,-0.039,-0.118,-0.074,0.002,-0.146,0.027,-0.083,-0.118,0.045,0.16,0.11,0.142,-0.149,-0.003,0.158,0.01,-0.011,0.015,-0.104,0.033,0,0.018,0.149,-0.12,0.042,-0.084,0.061,0.043,0.275,-0.105,-0.082,0.138,-0.04,-0.068,-0.073,-0.163,0.225,0.188,0.068,0.011,0.074,0.029,0.053,-0.032,0.048,-0.097,-0.005,0.072,0.206,0.009,-0.058,0.071,0.071,-0.091,0.042,-0.082,-0.119,0.002,0.011,-0.083,0.141,0,-0.241,-0.013,-0.061,-0.082,0.022,-0.119,0.096,-0.062,0.01,0.085,-0.186,-0.104,-0.061,-0.106,-0.064,-0.061,-0.104,0.004,0.118,0.089,-0.195,0.113,-0.027,0.159,0.015,0.045,0.058,0.14,0.08,0.042,-0.036,0.127,-0.123,0.052,-0.025,0.057,-0.091,0.063,-0.096,0.058,0.088,-0.11,-0.215,0.095,0.046,-0.198,0.073,-0.001,-0.031,-0.126,0.037,0.06,-0.185,-0.063,0,-0.189,-0.117,0.088,-0.064,-0.006,-0.118,-0.07,-0.054,0.079,-0.264,0.009,0.207,0.161,0.076,-0.126,0.014,-0.033,0.19,0.018,0.174,-0.003,-0.057,-0.063,0.097,0.111,0.071,-0.061,0.069,0.236,0.056,-0.021,-0.052,-0.028,0.13,-0.091,-0.044,-0.017,-0.059,0.026,0.211,0.196,-0.142,-0.147,0.075,-0.009,-0.071,-0.101,-0.083,0.122,0.063,0.016,-0.172,-0.135,-0.066,0.054,-0.207,0.148,0.178,-0.028,0.361,0.028,-0.053,0.002,0.005],"source":"src/helpers/pseudoJapanese/ui.js [setupLanguageToggle]","tags":["code","how","function","utility","./converter.js","getElementById","add","setAttribute","addEventListener","setTimeout","cloneNode","convertElementToPseudoJapanese","toggle","remove","String","error","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/pseudoJapanese/ui.js","node":"setupLanguageToggle"},"patterns":[],"relations":{"imports":["./converter.js"],"calls":["getElementById","add","setAttribute","addEventListener","setTimeout","cloneNode","convertElementToPseudoJapanese","toggle","remove","String","error"]}},"version":1},
{"id":"converter.js-loadConverter","text":"export async function loadConverter() {\n  if (cachedConverter && lastFetch === fetch) {\n    return cachedConverter;\n  }\n  lastFetch = fetch;\n  try {\n    const response = await fetch(`${DATA_DIR}japaneseConverter.json`);\n    if (!response.ok) {\n      throw new Error(`Failed to fetch converter mapping: ${response.status}`);\n    }\n    cachedConverter = await response.json();\n  } catch {\n    cachedConverter = null;\n  }\n  return cachedConverter;\n}","qaContext":"Why: export async function loadConverter() { if (cachedConverter && lastFetch === fetch) { return cachedConverter; } lastFetch = fetch; try { const response = await fetch(`${DATA_DIR}japaneseConver...","embedding":[-0.186,0.074,-0.134,0.17,-0.029,-0.079,-0.101,0.047,0.075,-0.032,0.08,-0.115,-0.148,-0.023,0.122,0.08,0.07,-0.019,-0.006,-0.164,-0.017,0.03,0.125,-0.084,0.043,-0.185,-0.142,-0.185,-0.058,0.072,-0.1,-0.013,-0.057,-0.064,0.15,0.162,0.007,-0.134,0.07,-0.061,0.12,0.11,0.039,-0.139,0.098,-0.136,0.047,0.003,0.019,0.04,-0.005,0.195,-0.111,-0.031,0.036,0.081,0.04,0.121,-0.038,0.034,0.009,-0.09,0.056,-0.065,0.061,-0.095,-0.059,0,0.092,-0.103,-0.116,-0.046,0.061,-0.009,-0.055,-0.075,0.024,-0.033,0.091,-0.085,0.047,-0.079,-0.053,-0.039,0.029,0.152,0.04,-0.094,0.14,0.064,-0.111,-0.079,-0.045,0.212,-0.207,-0.086,0.115,0.25,-0.091,-0.023,0.091,0.08,0.118,-0.063,-0.222,-0.184,0.081,0.03,-0.112,-0.008,0.04,0.202,0.039,-0.114,0.033,-0.168,0.056,-0.09,-0.069,0.124,0.094,-0.051,0.008,-0.024,0.19,-0.045,0.132,0,-0.031,-0.066,0.088,0.053,-0.056,-0.054,0.068,-0.125,0.005,0.047,0.047,-0.025,-0.137,0.034,-0.147,0.027,0.138,-0.168,0.214,0.074,0.21,0.044,0.06,-0.096,0.024,-0.075,0.064,0.14,-0.172,-0.004,0.139,-0.039,-0.013,0.018,-0.111,-0.083,0.102,0.056,-0.292,0.041,-0.034,0.05,-0.159,0.119,-0.083,-0.158,0.112,-0.061,0.204,0.058,-0.213,0.052,-0.002,-0.022,0.188,-0.072,0.123,-0.215,0.037,-0.031,-0.138,-0.123,-0.125,-0.114,-0.022,-0.019,0.044,-0.203,-0.224,0.039,0.071,-0.13,0.067,0.045,0.133,0.09,-0.221,0.095,-0.052,-0.11,0.066,-0.064,-0.245,0.208,-0.003,0.3,0.067,-0.064,0.193,0.226,0,-0.043,0.101,-0.072,-0.07,0,0.085,-0.057,-0.141,-0.066,-0.126,-0.069,0.159,0.117,-0.114,0.049,-0.059,-0.116,0.165,0.106,0.051,0.131,0.145,-0.078,0.087,0.04,0.139,0.133,-0.025,0.124,-0.175,0.03,-0.008,0.092,-0.111,0.012,-0.023,-0.046,0.021,0.044,-0.151,-0.022,0.072,0.09,-0.18,0.074,-0.083,-0.155,-0.132,0.073,-0.052,-0.205,-0.017,0.063,0.004,0.063,0.145,-0.101,-0.158,-0.092,0.048,-0.02,-0.027,-0.161,0.124,0.021,-0.099,-0.369,0.146,-0.22,-0.003,0.007,0.159,0.076,0.289,0.206,0.085,-0.022,0.142,0.034,0.071,-0.118,-0.087,-0.049,0.201,0.16,-0.137,0.042,0.065,-0.083,0.169,-0.035,0.042,0.046,0.126,-0.04,0.05,-0.041,-0.106,0.058,0.033,0,-0.272,-0.102,0.015,0.001,-0.1,-0.03,0.15,-0.228,0.087,-0.058,0.091,0.135,0.114,0.107,0.027,-0.074,0.203,0.248,0.013,-0.109,-0.067,0.079,-0.03,-0.055,0.172,0.164,0.041,-0.005,0.028,-0.101,-0.106,-0.018,0.006,-0.085,-0.024,-0.01,0.187,-0.024,-0.008,0.177,0.048,0.074,-0.073,0.131,-0.121,-0.076,-0.095,0.148,0.06,0.01,0.105,-0.33,-0.155,-0.063,-0.052,-0.239,-0.073,0.053,-0.058,0.265,0.204,-0.074,-0.131,-0.187],"source":"src/helpers/pseudoJapanese/converter.js [loadConverter]","tags":["code","what","function","utility","../constants.js","../testModeUtils.js","fetch","json"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/pseudoJapanese/converter.js","node":"loadConverter"},"patterns":[],"relations":{"imports":["../constants.js","../testModeUtils.js"],"calls":["fetch","json"]}},"version":1},
{"id":"converter.js-convertToPseudoJapanese","text":"Convert English text to pseudo-Japanese using a JSON lookup table.\n\n@param {string} input - The text to convert.\n@returns {Promise<string>} The pseudo-Japanese representation.\n1. If input is null, undefined, or empty string, return empty string.\n2. Load the converter JSON using `loadConverter`.\n   - If loading fails, return `STATIC_FALLBACK`.\n3. Clean the `text` by removing characters other than letters, numbers, and whitespace.\n4. Build a list of fallback characters from the mapping values.\n5. If the cleaned text contains only digits and whitespace, return an empty\n   string.\n6. For each character in the cleaned text:\n   - Preserve whitespace characters as-is.\n   - Map letters (case-insensitive) using the converter table when possible.\n   - Replace digits and unmapped letters with a random fallback character.\n     - Use `seededRandom()` for deterministic output in Test Mode.\n7. Join and return the converted string.\n\nexport async function convertToPseudoJapanese(input) {\n  if (input === undefined || input === null || input === \"\") return \"\";\n\n  const converter = await loadConverter();\n  if (!converter || !converter.letters) {\n    return STATIC_FALLBACK;\n  }\n\n  const mapping = converter.letters;\n  const cleaned = String(input).replace(/[^A-Za-z0-9\\s]/g, \"\");\n  const fallbackChars = Object.values(mapping).flat();\n\n  if (/^[0-9\\s]*$/.test(cleaned)) {\n    return \"\";\n  }\n\n  return cleaned\n    .split(\"\")\n    .map((char) => {\n      if (/\\s/.test(char)) {\n        return char;\n      }\n\n      const letters = mapping[char.toLowerCase()];\n      if (letters) {\n        return letters[Math.floor(seededRandom() * letters.length)];\n      }\n\n      // digits or unmapped letters\n      return fallbackChars[Math.floor(seededRandom() * fallbackChars.length)];\n    })\n    .join(\"\");\n}","qaContext":"Why: Convert English text to pseudo-Japanese using a JSON lookup table. How: Load the converter JSON using `loadConverter`.","embedding":[-0.056,-0.006,0,0.065,-0.183,0.088,0.039,0.089,-0.045,-0.077,0.078,-0.088,0.056,-0.038,0.044,-0.042,-0.105,0.099,-0.158,-0.097,0.015,-0.035,0.041,-0.1,0.147,0.164,0.009,-0.033,-0.208,-0.005,-0.102,0.038,0.017,-0.064,0.112,0.094,-0.121,-0.07,0.09,-0.015,-0.118,-0.017,0.084,-0.025,0.224,-0.069,-0.166,-0.006,-0.033,0.095,0.008,0.119,-0.02,0.089,0.014,-0.073,-0.032,-0.085,-0.013,-0.069,-0.025,-0.122,0.086,-0.031,0.048,-0.052,-0.041,-0.035,-0.013,-0.001,-0.068,0.132,0.033,0.138,-0.206,0.091,-0.088,-0.1,0.15,0.115,-0.009,-0.163,-0.059,0.097,0.035,0.122,-0.056,0.018,-0.045,0.014,-0.134,-0.066,0.127,0.156,-0.125,0.072,0.075,0.09,-0.098,0.186,-0.104,-0.006,0.048,-0.196,-0.189,-0.072,0.162,-0.147,0.058,-0.115,-0.048,0.113,0.012,0.037,-0.086,-0.109,0.174,-0.137,0.044,0.17,0.136,0.023,-0.072,0.118,0.069,-0.02,0.129,0,-0.093,0.084,0.031,-0.076,0.011,-0.131,-0.027,0.08,-0.035,-0.025,-0.128,0.044,0.029,-0.05,0.006,-0.026,0.247,-0.09,0.004,-0.099,0.154,0.048,-0.002,0.066,-0.006,0.015,0.009,-0.063,-0.119,-0.019,0.17,0.002,-0.15,0.061,0.082,-0.065,0.086,0.073,-0.119,0.047,-0.079,-0.105,-0.132,0.052,0.133,-0.129,0.212,-0.115,0.059,-0.153,-0.088,0.106,-0.055,0.114,0.005,-0.043,0.164,-0.021,-0.015,0.177,-0.163,0.12,0.034,0.019,0.02,-0.191,-0.085,-0.228,-0.138,-0.072,0.014,-0.163,0.112,0.036,-0.109,-0.055,-0.054,-0.082,-0.118,-0.27,0.123,0.036,-0.124,-0.021,0.071,0.159,0.074,-0.25,0.091,-0.037,0.016,-0.126,-0.003,-0.218,0.097,0,0.006,0.084,-0.076,0.164,0.016,-0.14,0.179,0.179,-0.064,-0.101,-0.167,0.025,0.021,-0.019,0.059,0.137,0.084,0.104,0.105,0.01,0.148,0.269,-0.088,-0.021,-0.062,0.139,0.08,0.086,-0.003,0.012,-0.108,-0.07,-0.026,0.057,-0.179,-0.231,0.1,0.077,-0.072,0.12,-0.054,-0.09,-0.085,0.043,0.027,-0.026,-0.04,0.223,0.028,0.001,0.079,-0.115,-0.227,0.021,0.023,-0.008,-0.03,-0.158,-0.081,0.122,-0.142,-0.095,0.35,-0.129,0.271,-0.017,0.022,0.086,0.112,-0.053,-0.202,0.065,0.109,0.059,0.138,-0.094,-0.119,-0.039,0.136,-0.01,-0.07,-0.036,0.017,0.103,0.153,0.043,-0.004,0.038,0.029,-0.029,0.045,0.029,0.052,0.033,-0.027,0,-0.061,-0.086,-0.141,0.013,0.032,-0.081,-0.05,-0.14,0.171,-0.247,0.029,0.125,0.006,-0.026,-0.029,-0.002,0.073,0.194,-0.112,0.193,0.071,0.086,-0.159,0.043,0.152,0.015,-0.084,0.039,0.061,-0.079,-0.009,0.038,0.072,-0.024,-0.101,0.001,0.22,-0.075,0.088,0.226,0.238,0.122,-0.152,-0.01,-0.052,-0.237,-0.009,-0.051,0.284,-0.081,-0.046,-0.107,-0.07,-0.085,-0.034,-0.192,0.074,0.053,-0.046,0.325,0.043,-0.127,-0.059,-0.126],"source":"src/helpers/pseudoJapanese/converter.js [convertToPseudoJapanese]","tags":["code","what","function","utility","../constants.js","../testModeUtils.js","loadConverter","replace","String","flat","values","test","join","map","split","toLowerCase","floor","seededRandom"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/pseudoJapanese/converter.js","node":"convertToPseudoJapanese"},"patterns":[],"relations":{"imports":["../constants.js","../testModeUtils.js"],"calls":["loadConverter","replace","String","flat","values","test","join","map","split","toLowerCase","floor","seededRandom"]}},"version":1},
{"id":"navigationUI.js-buildMenu","text":"Build a navigation menu for a given orientation.\n\n@param {import(\"../types.js\").GameMode[]} gameModes - Modes to display.\n@param {{orientation: \"landscape\"|\"portrait\"}} options - Orientation settings.\n@returns {HTMLElement|null} Created menu element or null if skipped.\n1. Determine if the current viewport matches the provided orientation when `window` is available; otherwise assume landscape.\n2. Select the navbar and logo; exit if either is missing.\n3. Validate game modes and build a menu container with orientation class.\n4. Populate the container using the appropriate template per mode.\n5. Preserve the logo and wire click animations.\n6. Return the created menu element.\n\nexport function buildMenu(gameModes, { orientation }) {\n  const matches =\n    typeof window !== \"undefined\"\n      ? typeof window.matchMedia === \"function\"\n        ? window.matchMedia(`(orientation: ${orientation})`).matches\n        : orientation === \"landscape\"\n          ? window.innerWidth > window.innerHeight\n          : window.innerHeight >= window.innerWidth\n      : orientation === \"landscape\";\n  if (!matches) return null;\n\n  const navBar = document.querySelector(\".bottom-navbar\");\n  if (!navBar) return null;\n  const logo = navBar.querySelector(\".logo\");\n  if (!logo) return null;\n\n  const validModes = validateGameModes(gameModes);\n\n  const menu = document.createElement(\"div\");\n  const isLandscape = orientation === \"landscape\";\n  menu.className = isLandscape ? \"expanded-map-view\" : \"portrait-text-menu\";\n  const template = isLandscape\n    ? (mode) =>\n        `<a\n          href=\"${BASE_PATH}${escapeHtml(mode.url)}\"\n          aria-label=\"${escapeHtml(mode.name)}\"\n          data-tooltip-id=\"nav.${navTooltipKey(mode.name)}\"\n          data-testid=\"nav-${mode.id}\"\n          style=\"order: ${mode.order}\"\n          class=\"map-tile${mode.isHidden ? \" hidden\" : \"\"}\"\n        >\n          <img src=\"${escapeHtml(mode.image)}\" alt=\"${escapeHtml(mode.name)}\" loading=\"lazy\">\n          ${escapeHtml(mode.name)}\n        </a>`\n    : (mode) =>\n        `<a\n          href=\"${BASE_PATH}${escapeHtml(mode.url)}\"\n          aria-label=\"${escapeHtml(mode.name)}\"\n          data-tooltip-id=\"nav.${navTooltipKey(mode.name)}\"\n          data-testid=\"nav-${mode.id}\"\n          style=\"order: ${mode.order}\"\n          class=\"text-menu-item${mode.isHidden ? \" hidden\" : \"\"}\"\n        >\n          ${escapeHtml(mode.name)}\n        </a>`;\n  menu.innerHTML = validModes.map(template).join(\"\");\n\n  const animations = isLandscape\n    ? { show: \"slide-up 500ms ease-in-out\", hide: \"slide-down 500ms ease-in-out\" }\n    : { show: \"slide-down 500ms ease-in-out\", hide: \"slide-up 500ms ease-in-out\" };\n\n  preserveLogoAndWire(navBar, logo, menu, animations);\n  return menu;\n}","qaContext":"Why: Build a navigation menu for a given orientation. How: Populate the container using the appropriate template per mode.","embedding":[0.008,0.123,0.114,0.008,0.058,0.048,0.041,0.057,-0.003,0.026,0.006,0.01,0.054,-0.019,0.152,-0.02,-0.169,0.002,0.013,0.065,0.099,-0.063,0.035,-0.111,-0.105,0.045,0.152,-0.015,-0.101,-0.138,0.036,0.068,-0.103,-0.033,-0.094,-0.124,-0.018,-0.146,-0.119,-0.018,-0.078,0.133,0.044,-0.083,0.029,-0.043,-0.122,0.04,0.027,0.126,-0.063,-0.181,0.044,-0.074,0.015,0.081,-0.115,0.064,0.096,0.043,0.137,-0.018,0.054,-0.04,0.107,-0.056,-0.049,-0.039,-0.176,0.116,-0.011,-0.101,0.172,-0.041,-0.039,-0.103,-0.095,-0.028,-0.017,-0.013,-0.001,0.029,-0.151,0.034,0.131,-0.04,-0.038,-0.009,-0.045,-0.061,-0.081,-0.009,-0.044,-0.055,0.104,0.11,-0.249,-0.15,-0.082,0.054,-0.009,0.012,0.049,0.107,0.039,-0.01,0.047,-0.016,-0.112,0.173,0.013,0.145,-0.03,0.027,-0.112,-0.006,0.07,-0.006,0.123,0.078,0.163,0.02,0,-0.042,0.168,-0.014,0.073,0,-0.003,-0.078,-0.09,0.169,0.095,0,0.069,0.007,-0.09,0.026,-0.078,0.17,-0.071,0.045,0.011,-0.033,0.011,0.018,-0.042,-0.064,0.02,-0.022,-0.024,-0.033,0.044,0.116,-0.069,0.053,-0.237,-0.02,0.063,-0.088,-0.058,0.017,0.064,0.03,-0.031,0.064,-0.099,0.097,-0.006,-0.125,-0.01,0.072,-0.083,-0.035,0.092,-0.023,0.042,0.007,-0.06,-0.014,-0.059,-0.217,0.047,0.014,-0.131,0.114,-0.038,-0.019,-0.032,0.01,0.042,-0.029,0.014,-0.001,0.063,-0.061,-0.021,-0.191,0.037,-0.099,0.186,0.024,0.076,-0.005,-0.148,0.02,-0.004,-0.043,0.054,-0.165,-0.038,0.094,0.119,-0.023,0.127,-0.028,0.029,0.102,-0.14,-0.023,0.003,-0.032,0.037,0,0.058,0.019,0.034,0.03,-0.094,-0.003,0.132,0.073,-0.155,-0.159,0.002,0.12,0.024,-0.016,-0.038,0.211,-0.09,-0.034,-0.001,0.058,0.02,0.077,0.013,0.009,-0.03,0.015,0.226,0.099,0.003,-0.002,0.009,0.098,-0.012,0.049,0.081,-0.072,0.029,0.062,-0.139,0.12,-0.015,-0.09,-0.01,-0.079,-0.019,0.02,0.192,0.073,-0.06,-0.035,0.018,-0.071,-0.064,-0.014,0.044,-0.022,-0.086,-0.09,-0.041,0.155,0.125,-0.117,0.017,-0.101,0.102,0.009,-0.106,-0.001,0.014,0.154,-0.121,-0.066,0.157,-0.07,-0.054,0.05,0.133,-0.063,0.115,-0.126,-0.029,-0.089,-0.064,-0.113,0.029,0.049,-0.116,0,0.044,0.057,-0.003,-0.062,0.04,-0.026,-0.139,0,-0.066,0.035,0.019,-0.082,-0.095,0.029,0.077,-0.102,0.007,-0.068,0.023,0.141,0.071,0.076,-0.031,0.054,0.002,0.134,-0.038,0.092,-0.014,0.004,0.014,0.043,0.068,0.038,-0.151,-0.109,0.069,0.032,-0.108,0.054,0.006,0.028,-0.108,-0.051,0.063,-0.048,0.089,-0.113,0.051,-0.029,-0.08,-0.077,-0.042,-0.01,0.098,0.062,0.049,0.042,-0.116,-0.067,0.008,-0.041,0.099,-0.027,0.063,0.03,-0.009,-0.012,-0.021,-0.032,-0.081,-0.072],"source":"src/helpers/navigation/navigationUI.js [buildMenu]","tags":["code","how","function","utility","./navigationService.js","matchMedia","querySelector","validateGameModes","createElement","escapeHtml","navTooltipKey","join","map","preserveLogoAndWire"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/navigation/navigationUI.js","node":"buildMenu"},"patterns":[],"relations":{"imports":["./navigationService.js"],"calls":["matchMedia","querySelector","validateGameModes","createElement","escapeHtml","navTooltipKey","join","map","preserveLogoAndWire"]}},"version":1},
{"id":"navigationUI.js-setupHamburger","text":"Initialize a hamburger toggle for narrow viewports.\n\n@param {number} [breakpoint=480] - Maximum width to show the hamburger menu.\n@returns {() => void} Cleanup function to remove the `resize` listener.\n1. Select the `.bottom-navbar` and its `<ul>`; exit if either is missing.\n2. Create a button with `aria-expanded=\"false\"` linked to the list via `aria-controls`.\n3. Define `update()` to insert the button and hide the list when the width is below the breakpoint; otherwise remove the button.\n4. Define `toggle()` to flip `aria-expanded` and the `.expanded` class on the list.\n5. Attach `click` and `resize` listeners and invoke `update()` once.\n6. Return a cleanup function that removes the `resize` listener.\n\nexport function setupHamburger(breakpoint = 480) {\n  const navBar = document.querySelector(\".bottom-navbar\");\n  const list = navBar?.querySelector(\"ul\") || null;\n  if (!navBar || !list) return () => {};\n\n  const id = list.id || \"bottom-nav-menu\";\n  list.id = id;\n\n  const button = document.createElement(\"button\");\n  button.className = \"nav-toggle\";\n  button.setAttribute(\"aria-expanded\", \"false\");\n  button.setAttribute(\"aria-controls\", id);\n  button.setAttribute(\"aria-label\", \"Menu\");\n  button.innerHTML = \"\\u2630\";\n\n  const toggle = () => {\n    const expanded = button.getAttribute(\"aria-expanded\") === \"true\";\n    button.setAttribute(\"aria-expanded\", String(!expanded));\n    list.classList.toggle(\"expanded\", !expanded);\n  };\n\n  button.addEventListener(\"click\", toggle);\n\n  const update = () => {\n    if (window.innerWidth < breakpoint) {\n      if (!navBar.contains(button)) {\n        navBar.insertBefore(button, list);\n      }\n      button.setAttribute(\"aria-expanded\", \"false\");\n      list.classList.remove(\"expanded\");\n    } else if (navBar.contains(button)) {\n      button.remove();\n      list.classList.remove(\"expanded\");\n      button.setAttribute(\"aria-expanded\", \"false\");\n    }\n  };\n\n  window.addEventListener(\"resize\", update);\n  update();\n\n  return () => {\n    window.removeEventListener(\"resize\", update);\n  };\n}","qaContext":"Why: Initialize a hamburger toggle for narrow viewports. How: @param {number} [breakpoint=480] - Maximum width to show the hamburger menu.","embedding":[-0.047,-0.032,0.09,0.083,-0.03,0.136,0.09,0.119,-0.043,0.032,-0.102,0.003,-0.046,-0.162,-0.001,0.03,-0.1,-0.052,-0.064,-0.093,0.063,-0.113,-0.036,0.024,-0.032,0.043,0.089,-0.121,-0.186,-0.099,-0.022,-0.118,-0.031,-0.082,-0.088,-0.169,-0.092,0.027,-0.056,0.116,-0.085,-0.009,-0.027,-0.105,0.066,-0.071,-0.212,0.084,0.026,0.094,0.079,-0.023,-0.015,-0.073,-0.02,-0.138,-0.066,0.081,0.081,0.032,0.133,0.015,0.1,0.044,0.124,-0.105,0.029,-0.06,-0.175,0.169,0.041,-0.051,0.178,0.076,0.002,-0.185,0.01,0.074,-0.015,0.122,-0.036,-0.024,-0.141,-0.066,-0.038,-0.051,0.007,-0.133,-0.099,-0.117,-0.069,0.092,-0.065,0.007,0.07,0.075,-0.141,-0.102,-0.13,0.114,0.072,0.019,-0.069,-0.027,-0.144,-0.128,-0.018,-0.001,-0.056,0.091,0.055,0.126,-0.05,0.032,-0.154,0.07,0.23,-0.016,0.109,-0.026,0.199,0.089,-0.087,0.012,0.104,0.074,0.074,0,-0.086,-0.19,-0.185,0.102,0.01,0.073,0.126,0.151,-0.15,0.054,0.08,0.079,-0.006,-0.074,0.15,-0.034,0.011,0.097,-0.143,-0.132,0.031,-0.031,0.053,0.108,-0.026,0.114,-0.075,0.038,-0.247,-0.019,0.077,0.029,-0.094,-0.064,-0.032,-0.072,-0.075,0.044,0.085,-0.081,-0.012,-0.14,0.052,-0.092,0.007,0.019,0.145,0.001,-0.06,-0.147,0.024,0.015,-0.049,-0.232,-0.02,0.089,0.004,0.074,-0.022,0.063,-0.051,-0.073,0.091,0.05,-0.093,0.059,0.141,-0.044,0.121,-0.199,0.046,-0.02,0.354,0.037,-0.035,0.008,-0.092,-0.073,-0.068,-0.144,0.103,-0.141,0.004,0.166,0.153,-0.037,0.079,-0.041,-0.078,0.187,-0.07,0.023,0.053,-0.142,0.022,0,0.101,0.134,-0.042,-0.073,-0.049,0.056,-0.017,0.262,-0.153,-0.099,0.065,0.077,-0.04,-0.139,-0.151,0.209,0.009,0.049,-0.025,-0.016,0.064,0.055,0.108,0.037,0.058,-0.089,0.136,0.182,-0.022,-0.007,-0.02,0.089,-0.043,0.09,0,-0.115,0.063,0.07,-0.038,0.106,0.021,-0.128,0.075,-0.133,0.003,0.039,0.083,0.175,-0.153,-0.009,0.057,-0.213,-0.122,0.041,-0.047,0.179,-0.082,-0.13,-0.011,0.15,0.029,-0.099,0.079,-0.026,0.204,0.105,-0.05,0.077,0.021,0.126,-0.067,-0.055,0.122,-0.171,-0.048,0.016,0.015,-0.137,0.039,-0.1,0.012,-0.071,0.008,-0.193,0.084,0.007,-0.097,0.09,-0.003,0.069,-0.172,-0.1,0.135,-0.188,-0.188,0,-0.102,0.048,0.011,0.01,-0.044,-0.04,-0.106,0.036,-0.053,-0.039,-0.021,0.138,0.173,0.21,-0.008,-0.023,-0.109,0.153,-0.046,0.087,-0.045,-0.023,-0.005,0.063,0.143,-0.098,-0.168,0.097,0.267,-0.009,-0.008,-0.005,0.059,0.122,-0.086,-0.08,0.023,-0.051,0.113,0.167,0.043,-0.038,-0.044,0.071,-0.13,-0.11,0.013,0.03,0.053,0.099,-0.045,-0.027,0.051,-0.244,0.125,-0.081,0.009,0.083,-0.037,0.211,-0.051,0.016,-0.145,0.018],"source":"src/helpers/navigation/navigationUI.js [setupHamburger]","tags":["code","how","function","utility","./navigationService.js","querySelector","createElement","setAttribute","getAttribute","String","toggle","addEventListener","contains","insertBefore","remove","update","removeEventListener"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/navigation/navigationUI.js","node":"setupHamburger"},"patterns":[],"relations":{"imports":["./navigationService.js"],"calls":["querySelector","createElement","setAttribute","getAttribute","String","toggle","addEventListener","contains","insertBefore","remove","update","removeEventListener"]}},"version":1},
{"id":"navigationService.js-navTooltipKey","text":"Convert a game mode name to a camelCase key for tooltip ids.\n\n@param {string} name - Game mode name.\n@returns {string} camelCase key.\n1. Replace non-alphanumeric characters with spaces.\n2. Split into words.\n3. Lowercase the first word and capitalize the rest.\n4. Join the words without spaces.\n\nexport function navTooltipKey(name) {\n  return String(name)\n    .replace(/[^a-zA-Z0-9]+/g, \" \")\n    .trim()\n    .split(/\\s+/)\n    .map((w, i) => (i === 0 ? w.toLowerCase() : w[0].toUpperCase() + w.slice(1)))\n    .join(\"\");\n}","qaContext":"Why: Convert a game mode name to a camelCase key for tooltip ids. How: @param {string} name - Game mode name.","embedding":[0.019,0.092,0.064,-0.063,0.022,0.011,0.264,-0.004,-0.018,-0.009,-0.004,-0.006,0.134,-0.088,0.121,0.004,-0.125,-0.027,-0.021,-0.092,0.086,-0.029,0.067,-0.113,-0.01,0.14,0.077,0.129,-0.229,-0.083,0.037,-0.019,0.06,-0.072,0.054,0.021,-0.209,0.039,0.108,0.067,-0.037,-0.084,0.066,0.041,0.116,-0.049,-0.15,-0.033,0.049,0.349,-0.093,-0.21,-0.033,-0.06,0.03,0.052,-0.069,-0.046,0.15,-0.052,0.095,-0.094,0.09,0.021,0.199,-0.026,0.1,-0.087,-0.195,-0.008,0.028,-0.027,0.084,0.012,-0.251,-0.015,-0.228,-0.004,0.167,0.144,0.049,0.065,-0.086,0.178,0.036,0.106,0.03,-0.064,-0.056,0.072,-0.315,-0.189,0.311,0.048,-0.145,0.088,-0.018,-0.089,-0.21,0.114,-0.051,-0.055,0.018,-0.314,-0.044,0.164,0.01,-0.138,-0.162,0.053,-0.12,0.183,-0.021,-0.129,-0.094,-0.037,0.057,-0.005,0.219,0.051,0.278,0.091,-0.041,0.124,0.008,0.228,0.176,0,-0.05,0.015,-0.158,0.017,-0.027,-0.091,-0.064,0.057,-0.243,-0.028,-0.045,-0.039,-0.02,-0.083,0.037,0.011,0.173,-0.004,-0.115,-0.205,-0.104,0.123,0.076,0.109,0.025,0.023,-0.046,-0.172,0.156,0.031,0.112,-0.048,-0.262,-0.003,0.112,0.069,0.003,-0.045,-0.062,0.039,-0.11,-0.043,-0.062,0.058,-0.095,0.058,0.053,0.002,0.042,-0.02,-0.1,-0.027,0.076,0.037,-0.056,0.029,-0.02,0.118,-0.069,0.048,-0.032,0.118,0.175,0.102,0.084,-0.007,0.074,0.018,-0.006,-0.16,0.155,-0.125,0.112,0.223,0.003,-0.162,0.01,-0.139,0.003,-0.337,-0.005,-0.041,0.004,-0.038,0.058,-0.03,0.13,-0.184,-0.005,-0.108,-0.166,0.029,-0.212,-0.036,-0.092,0,0.121,-0.102,-0.104,0.076,-0.1,-0.098,0.048,0.032,-0.061,-0.018,-0.079,0.05,-0.103,-0.128,0.205,-0.045,-0.068,0.15,0.069,-0.158,0.072,-0.169,-0.195,0.114,-0.074,0.002,0.116,0.02,0.055,0.119,-0.08,0.228,0.017,0.071,-0.232,-0.008,0.176,0.033,-0.04,0.145,-0.004,-0.121,-0.076,-0.113,-0.027,0.03,-0.027,0.117,0.107,0.01,0.222,-0.047,-0.093,-0.142,-0.101,-0.054,-0.117,-0.284,-0.163,-0.051,0.038,-0.086,0.189,0.069,0.175,-0.17,-0.122,-0.006,-0.044,-0.147,0.049,-0.079,0.08,-0.071,0.012,0.045,0.163,0.037,0.093,-0.112,0.095,0.011,0.14,0.132,0.01,0.235,0.014,0.105,-0.037,0.012,0.044,0.087,0.137,0.088,-0.059,0,-0.006,0.167,-0.101,0.02,-0.055,0.252,-0.136,-0.111,0.207,-0.126,-0.059,0.205,-0.139,0.059,-0.126,0.171,0.043,0.327,-0.072,0.218,-0.023,0.118,-0.205,-0.076,-0.067,-0.105,-0.147,0.027,0.091,0.021,-0.087,0.085,-0.02,-0.132,-0.139,0.005,0.074,-0.017,0.094,0.146,-0.029,-0.086,-0.148,-0.099,-0.102,-0.006,0.091,0.018,0.11,0.004,0.024,0.014,-0.071,-0.169,-0.017,0.085,0.153,0.191,0.03,0,0.002,-0.001,-0.03,0.074],"source":"src/helpers/navigation/navigationService.js [navTooltipKey]","tags":["code","what","function","utility","../debug.js","join","map","split","trim","replace","String","toLowerCase","toUpperCase","slice"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/navigation/navigationService.js","node":"navTooltipKey"},"patterns":[],"relations":{"imports":["../debug.js"],"calls":["join","map","split","trim","replace","String","toLowerCase","toUpperCase","slice"]}},"version":1},
{"id":"navigationService.js-escapeHtml","text":"Escape special HTML characters to prevent injection.\n\n@param {unknown} value - The value to escape.\n@returns {string} Escaped string safe for HTML insertion.\n1. Convert the input to a string.\n2. Replace `&`, `<`, `>`, `\"`, and `'` with their HTML entity equivalents.\n\nexport function escapeHtml(value) {\n  return String(value)\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#39;\");\n}","qaContext":"Why: Escape special HTML characters to prevent injection. How: @param {unknown} value - The value to escape.","embedding":[0.037,0.111,0.105,0.049,0.014,0.08,-0.096,-0.075,0.228,-0.037,-0.111,-0.074,0.167,-0.146,0.249,0.174,0.012,-0.037,-0.008,-0.047,-0.031,0.022,-0.04,0.113,0.161,-0.177,0.033,-0.055,0.015,-0.005,-0.011,-0.211,-0.117,0.036,0.144,0.354,-0.111,-0.183,0.059,-0.082,-0.04,-0.068,-0.116,0.034,0.061,0.035,-0.066,-0.125,-0.221,0.023,-0.044,-0.103,-0.014,0.082,-0.023,-0.167,-0.07,-0.245,0.183,0.153,-0.011,-0.04,0.114,0.108,-0.001,-0.197,-0.009,0.1,-0.083,0.078,-0.108,-0.124,-0.279,-0.051,0.1,0.149,-0.098,0.019,0.064,0.114,0.215,-0.018,-0.031,0.147,0.154,0.236,-0.034,-0.156,0.076,-0.027,-0.083,-0.122,0.159,0.164,-0.02,0.114,0.067,-0.111,-0.145,0.069,0.06,-0.039,0.043,-0.156,-0.036,-0.126,0.072,0.059,0.151,-0.106,-0.033,0.181,-0.15,-0.15,-0.178,-0.151,0.199,-0.163,0.083,0.222,0.001,-0.051,-0.14,0.095,0.184,-0.009,0.175,0,0.116,0.099,0.106,-0.131,-0.127,0.073,-0.181,-0.059,0.075,0.049,-0.082,-0.301,0.075,-0.021,-0.035,-0.068,-0.04,-0.166,0.142,-0.079,-0.146,0.029,-0.031,0.074,-0.093,0.141,-0.008,-0.13,0.003,0.027,0.109,-0.106,-0.126,0.16,0.038,0.048,-0.056,0.045,-0.131,0.104,-0.131,-0.011,-0.009,0.158,0.109,-0.183,0.177,-0.058,0.035,-0.176,-0.236,0.3,0.146,-0.104,-0.099,0.01,0.128,-0.261,-0.049,0.041,-0.095,0.167,0.186,-0.057,0.025,-0.255,0.087,-0.018,-0.125,-0.075,-0.073,-0.113,0.112,0.019,-0.202,-0.213,-0.204,0.133,0.243,-0.122,0.028,-0.203,-0.113,0.202,0.06,-0.027,-0.092,-0.15,0.173,0.169,0.241,-0.112,-0.252,-0.235,-0.038,0,0.109,0.172,-0.063,0.135,0.009,-0.136,0.104,0.27,-0.029,0.046,-0.102,0.178,-0.059,-0.09,-0.08,0.106,-0.126,0.042,-0.06,-0.185,0.188,-0.037,0.112,0.273,0.002,0.126,0.163,0.116,-0.012,0.17,-0.058,0.211,0.167,0.126,-0.107,-0.259,0.117,0.146,0.055,0.005,0.091,-0.025,0.061,0.097,0.018,0.045,-0.152,-0.021,0.149,-0.021,-0.008,-0.013,-0.095,-0.18,-0.016,-0.317,-0.208,-0.076,0.014,0.042,-0.11,0.072,0.231,-0.027,0.062,-0.102,-0.124,-0.02,0.01,-0.176,0.075,-0.033,-0.019,-0.209,-0.04,-0.038,0.008,0.043,0.06,0.021,0.238,-0.072,0.045,0.167,0.009,-0.098,-0.15,0.146,-0.161,-0.162,0.014,0.254,-0.124,-0.103,0.129,0,-0.055,0.025,-0.109,-0.084,-0.167,-0.066,-0.098,-0.1,0.054,0.119,-0.028,0.221,0.007,-0.053,-0.14,0,-0.074,0.081,-0.059,0.123,-0.031,0.136,-0.221,-0.142,0.366,0.012,-0.181,0.002,0.023,0.03,0.072,-0.04,-0.127,0.027,-0.387,0.048,0.052,-0.193,-0.033,0.09,0.032,0.002,-0.228,-0.126,-0.269,0,0.1,0.005,0.018,0.012,0.24,-0.166,-0.094,0.029,0.005,-0.187,0.095,0.007,0.058,0.023,0.16,-0.007,0.092,-0.064],"source":"src/helpers/navigation/navigationService.js [escapeHtml]","tags":["code","what","function","utility","../debug.js","replace","String"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/navigation/navigationService.js","node":"escapeHtml"},"patterns":[],"relations":{"imports":["../debug.js"],"calls":["replace","String"]}},"version":1},
{"id":"navigationService.js-validateGameModes","text":"Validates game modes data to ensure all required properties are present.\n\n@param {import(\"../types.js\").GameMode[]} gameModes - The list of game modes to validate.\n@returns {import(\"../types.js\").GameMode[]} Validated game modes.\n1. Filter out items missing `name` or `url` properties.\n2. Return the filtered array.\n\nexport function validateGameModes(gameModes) {\n  const validatedModes = gameModes.filter((mode) => mode.name && mode.url);\n  debugLog(\"Validated modes:\", validatedModes); // Debug validated modes\n  return validatedModes;\n}","qaContext":"Why: Validates game modes data to ensure all required properties are present. How: @param {import(\".","embedding":[0,0.097,0.038,0.029,0.191,-0.058,0.069,0.009,-0.111,-0.055,-0.078,-0.075,-0.074,0.081,0.082,0.079,-0.169,0.065,0.052,-0.084,0.234,-0.095,-0.02,-0.133,-0.041,0.099,0.012,-0.014,-0.058,-0.169,0.142,0.083,-0.116,0.06,0.099,0.07,-0.061,-0.185,0.072,-0.106,0.024,0.125,-0.087,-0.072,0.003,-0.138,-0.161,-0.102,0.001,0.016,-0.086,-0.04,-0.059,-0.045,0.083,0.021,-0.155,0.067,0.075,0.008,0.088,-0.19,-0.088,-0.038,0.036,0.097,-0.117,0.007,-0.049,0.095,0.018,0.045,-0.026,0.026,-0.053,-0.101,-0.286,-0.064,0.051,-0.002,-0.035,-0.076,-0.075,0.255,0.169,0.2,-0.076,0.018,-0.001,0.037,-0.184,-0.085,0.073,0.28,-0.06,0.06,-0.055,-0.089,0.029,0.048,-0.171,-0.064,0.13,0.098,0.118,-0.037,0.124,0.052,-0.117,0.242,-0.024,0.209,0.104,-0.105,-0.015,0.043,0.051,0.043,-0.007,0.079,0.166,0.02,0.336,-0.077,0.229,0.123,0.082,0,0.015,-0.025,0.009,0.178,-0.159,0.078,0.033,-0.044,-0.105,-0.009,-0.156,0.218,-0.253,0.007,0.152,0.051,0.151,-0.043,0.14,0.012,0.046,-0.112,-0.086,0.045,0.013,0.002,0.062,0.078,-0.148,0.039,0.161,-0.133,0.082,0.067,0.271,0.103,-0.019,0.096,-0.232,-0.005,0.031,-0.065,-0.181,0.156,-0.145,-0.154,0.025,-0.113,0.055,0.096,-0.144,0.118,0.063,-0.259,-0.065,-0.043,0.03,0.006,-0.048,-0.075,0.122,-0.092,0.012,-0.009,0.021,0.075,-0.142,-0.074,-0.071,-0.142,-0.016,-0.139,0.031,-0.01,0.093,-0.152,-0.149,0.109,-0.04,-0.158,0.073,-0.202,-0.152,0.196,0.073,-0.042,-0.013,-0.11,0.111,0.076,-0.149,-0.053,-0.134,-0.107,-0.019,0,0.118,-0.072,0.018,0.156,-0.073,-0.065,0.08,0.203,0.164,0.08,0.085,0.012,0.019,-0.189,-0.115,0.194,-0.26,-0.161,0.075,-0.131,0.094,0.017,0.057,0.143,-0.169,0.14,0.018,-0.042,0.044,-0.001,0.187,0.239,0.085,0.106,0.003,-0.091,0.104,0.191,-0.06,0.008,0.018,0.016,-0.306,-0.057,0.008,-0.031,0.185,-0.064,0.038,-0.059,0.087,-0.128,-0.051,-0.064,0.001,-0.097,-0.07,-0.096,-0.073,0.132,0.028,-0.14,-0.068,0.032,-0.031,-0.119,-0.117,0.018,0.175,-0.052,-0.029,-0.117,0.07,-0.081,0.013,-0.128,-0.079,0.012,0.203,0.074,0.068,0.085,0.066,0.112,0.059,0.11,-0.107,0.041,-0.05,0.041,0.093,0.126,-0.086,-0.021,-0.123,0,-0.186,-0.132,-0.159,-0.104,0.044,-0.058,0.018,-0.158,0.132,-0.071,-0.005,0.12,-0.214,0.067,0.061,-0.074,0.121,0.217,-0.135,0.28,-0.006,0.011,0.015,0.043,0.183,-0.113,-0.107,-0.154,0.086,0.2,-0.08,0.056,0.05,-0.121,-0.142,0.231,0.159,-0.025,0.07,-0.015,0.082,-0.037,-0.096,-0.076,-0.071,-0.017,-0.005,0.091,0.04,0.096,0.023,-0.033,-0.148,-0.054,-0.221,-0.042,-0.037,0.061,0.14,-0.198,0.166,-0.113,0.131,-0.048],"source":"src/helpers/navigation/navigationService.js [validateGameModes]","tags":["code","what","function","utility","../debug.js","filter","debugLog","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/navigation/navigationService.js","node":"validateGameModes"},"patterns":[],"relations":{"imports":["../debug.js"],"calls":["filter","debugLog"]}},"version":1},
{"id":"navMenu.js-toggleExpandedMapView","text":"Toggles the expanded map view for landscape mode.\n\n@param {import(\"../types.js\").GameMode[]} gameModes - The list of game modes to display.\n@returns {HTMLElement|null} Created menu element or null.\n1. Delegate to {@link buildMenu} with `orientation: \"landscape\"`.\n2. Return the created menu element.\n\nexport function toggleExpandedMapView(gameModes) {\n  return buildMenu(gameModes, { orientation: \"landscape\" });\n}","qaContext":"Why: Toggles the expanded map view for landscape mode. How: @param {import(\".","embedding":[0.051,0.127,0.104,0.062,0.129,0.153,-0.033,0.066,-0.214,0.195,0.081,0.04,-0.083,-0.058,0.235,0.104,-0.15,-0.021,0.167,0.024,0.037,-0.066,-0.029,-0.125,-0.003,0.111,0.18,0.107,-0.202,-0.174,-0.034,0.206,-0.17,-0.02,-0.02,-0.002,0.007,-0.204,-0.036,-0.184,-0.063,0.215,0.052,-0.151,-0.01,-0.052,-0.09,0.085,-0.009,0.109,-0.002,-0.113,0.105,-0.193,0.058,0.012,-0.114,-0.035,0.027,0.055,0.07,-0.044,0.03,-0.099,0.092,-0.041,-0.083,-0.194,-0.157,-0.09,0.157,-0.215,0.255,-0.195,0.191,-0.211,-0.184,-0.042,0.093,-0.101,0.066,0.137,-0.14,0.077,-0.024,-0.008,-0.029,-0.059,0.023,0.087,-0.073,-0.12,-0.064,0.117,-0.089,-0.107,-0.301,-0.254,-0.202,-0.058,0.059,-0.022,0.217,-0.004,-0.007,0.031,0.039,-0.102,-0.155,0.2,0.125,0.133,0.061,-0.014,-0.269,0.03,0.07,0.14,0.117,0.145,0.174,0.128,0.146,-0.022,0.108,0.092,-0.066,0,0.075,-0.075,-0.051,0.309,0.192,-0.046,0.196,-0.075,-0.171,-0.138,-0.069,0.27,-0.157,0.202,0.086,0.002,0.017,0.037,-0.08,-0.064,-0.138,0.065,0,0.067,0.159,0.057,-0.016,0.043,-0.323,0.104,0.067,0.004,-0.158,-0.131,0.181,0.12,-0.087,0.056,-0.234,0.118,-0.132,-0.123,-0.114,-0.022,-0.168,-0.006,0.193,-0.063,0.036,0.018,0.049,-0.016,0.037,-0.26,0.042,0.009,-0.063,0.021,0.136,0.013,0.021,-0.046,0.095,0.054,-0.012,-0.031,0.104,-0.017,-0.164,-0.091,0.076,0.025,0.134,0.072,0.007,-0.047,-0.163,0.066,0.108,-0.121,0.029,-0.166,0.054,0.089,-0.003,-0.07,0.061,0.054,0.224,-0.012,-0.22,-0.133,-0.041,-0.111,0.077,0,-0.095,-0.122,-0.05,-0.107,-0.266,-0.132,0.07,0.193,-0.113,-0.02,0.001,0.178,0.001,-0.131,-0.036,0.144,0.046,0.106,-0.005,0.06,0.103,-0.069,0.135,0.034,0.078,-0.003,0.172,0.093,0.234,-0.025,0.092,0.052,0.116,-0.049,0.02,0.022,0.02,0.103,-0.088,0.121,-0.136,-0.019,0.025,-0.063,-0.036,0.047,0.159,-0.004,-0.119,-0.003,-0.005,-0.012,0.094,-0.17,-0.054,-0.181,0.003,-0.138,-0.083,0.135,0.071,-0.182,-0.071,-0.02,-0.077,0.037,-0.2,-0.113,0.062,0.137,-0.049,-0.147,0.142,-0.113,-0.124,0.034,0.166,0.014,0.198,-0.191,0.114,-0.204,0.125,0.062,0.124,0.076,-0.07,0.008,0.113,0.157,0.047,-0.046,-0.08,-0.018,-0.097,0,-0.118,0.018,0.03,-0.089,-0.158,-0.034,0.174,-0.041,0.081,-0.044,-0.063,0.105,0.044,0.095,0.219,0.099,0.071,0.268,-0.087,0.138,-0.179,0.062,0.063,0.036,0.051,0.036,-0.262,-0.24,0.148,-0.106,-0.006,0.06,-0.084,0.037,-0.286,0.007,0.145,-0.138,0.078,-0.101,-0.074,-0.091,-0.058,-0.048,-0.169,0.014,0.114,0.075,-0.146,0.062,-0.171,0.025,-0.013,-0.049,0.056,0.111,0.068,-0.067,-0.026,-0.13,-0.034,0.024,-0.14,0.031],"source":"src/helpers/navigation/navMenu.js [toggleExpandedMapView]","tags":["code","what","function","utility","./navigationUI.js","./navigationService.js","buildMenu"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/navigation/navMenu.js","node":"toggleExpandedMapView"},"patterns":[],"relations":{"imports":["./navigationUI.js","./navigationService.js"],"calls":["buildMenu"]}},"version":1},
{"id":"navMenu.js-togglePortraitTextMenu","text":"Toggles the vertical text menu for portrait mode.\n\n@param {import(\"../types.js\").GameMode[]} gameModes - The list of game modes to display.\n@returns {HTMLElement|null} Created menu element or null.\n1. Delegate to {@link buildMenu} with `orientation: \"portrait\"`.\n2. Return the created menu element.\n\nexport function togglePortraitTextMenu(gameModes) {\n  return buildMenu(gameModes, { orientation: \"portrait\" });\n}","qaContext":"Why: Toggles the vertical text menu for portrait mode. How: @param {import(\".","embedding":[-0.07,0.177,-0.076,0.036,0.046,0.129,-0.014,0.066,-0.094,0.12,0.061,0.083,0.035,-0.053,0.282,0.066,-0.04,0.015,0.152,0.044,0.042,-0.107,0.037,-0.054,-0.073,0.054,0.165,0.091,-0.146,-0.154,-0.09,0.175,-0.096,-0.067,-0.085,0.013,0.049,-0.202,-0.13,-0.127,-0.039,0.085,0.018,-0.135,-0.042,-0.038,-0.066,0.111,-0.013,0.088,0.001,-0.139,0.114,-0.113,0.038,0.076,-0.027,-0.015,0.013,0.097,0.08,-0.01,-0.066,-0.11,0.105,-0.057,-0.098,-0.057,-0.253,-0.008,0.156,-0.257,0.102,-0.069,0.114,-0.224,-0.054,0.01,0.138,-0.003,0.052,0.047,-0.165,0.145,-0.004,0.049,-0.025,0.012,-0.061,0.117,-0.077,-0.105,0.108,-0.034,-0.069,-0.02,-0.271,-0.083,-0.143,-0.037,-0.022,-0.077,0.172,0.166,-0.052,0.013,0.121,-0.075,-0.073,0.057,0.105,0.084,0.057,-0.037,-0.15,0.023,0.015,0.063,0.06,0.089,0.174,0.18,0.162,0.005,0.128,0.185,0.094,0,0.093,0.011,0.064,0.242,0.086,-0.021,0.098,0.031,-0.121,-0.043,-0.084,0.169,-0.166,0.206,0.009,-0.11,0.083,-0.014,0.012,-0.078,-0.009,-0.011,0.051,0.02,0.084,0.062,0.002,-0.049,-0.268,0.062,-0.033,-0.023,-0.003,-0.054,0.077,0.068,-0.067,0.043,-0.187,0.137,-0.083,-0.051,-0.07,-0.026,-0.102,-0.016,0.079,-0.119,0.048,-0.004,-0.03,0.043,0.111,-0.183,0.012,0.017,-0.022,0.095,0.028,-0.013,0.093,-0.013,0.05,-0.007,0.048,-0.015,-0.019,-0.073,-0.1,-0.061,0.08,0.037,-0.025,0.033,0.053,0.066,-0.146,0.108,0.058,-0.145,0.044,-0.111,0.058,0.025,0.055,-0.115,0.02,-0.038,0.231,0.014,-0.208,-0.133,-0.069,-0.028,0.068,0,-0.107,-0.041,-0.112,-0.04,-0.237,0.006,-0.026,0.165,-0.116,-0.049,0.055,0.257,-0.057,-0.191,0.048,0.159,-0.075,0.026,-0.015,-0.016,0.075,-0.087,0.147,0.031,-0.043,-0.051,0.255,0.089,0.256,0.05,0.102,0.152,0.079,-0.018,-0.076,0.005,-0.046,0.108,-0.018,0.076,0.031,0.07,-0.042,-0.005,-0.023,0.017,0.002,-0.159,-0.028,-0.079,-0.028,-0.106,0.118,-0.139,-0.024,-0.201,-0.032,-0.092,-0.014,0.15,0.065,-0.046,-0.105,-0.074,-0.061,0.112,-0.142,-0.001,0,0.064,-0.046,-0.137,0.135,-0.067,-0.249,0.027,0.158,0.072,0.088,-0.058,0.12,-0.164,0.03,-0.043,0.022,0.009,-0.104,0.044,0.089,0.069,-0.059,0.013,-0.011,-0.045,-0.069,0,-0.133,-0.141,-0.069,-0.021,-0.23,-0.017,-0.017,-0.144,0.139,-0.016,-0.083,0.068,0.013,0.007,0.125,0.182,0.018,0.257,-0.029,0.054,-0.047,0.088,0.091,0.015,0.015,-0.015,-0.218,-0.112,0.135,0.016,-0.01,0.067,-0.104,-0.098,-0.17,0.011,0.081,-0.12,0.206,-0.202,-0.039,-0.087,-0.184,-0.078,-0.116,-0.019,0.088,0.087,-0.081,0.036,-0.152,-0.001,0.037,-0.024,-0.009,0.049,0.091,-0.069,0.043,-0.235,0.07,0.013,-0.005,-0.026],"source":"src/helpers/navigation/navMenu.js [togglePortraitTextMenu]","tags":["code","what","function","utility","./navigationUI.js","./navigationService.js","buildMenu"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/navigation/navMenu.js","node":"togglePortraitTextMenu"},"patterns":[],"relations":{"imports":["./navigationUI.js","./navigationService.js"],"calls":["buildMenu"]}},"version":1},
{"id":"navMenu.js-setupHamburgerMenu","text":"Initialize a hamburger toggle for narrow viewports.\n\n@param {number} [breakpoint=480] - Maximum width to show the hamburger menu.\n@returns {() => void} Cleanup function to remove the `resize` listener.\n1. Delegate to {@link setupHamburger} with the provided breakpoint.\n2. Return the cleanup function from the API.\n\nexport function setupHamburgerMenu(breakpoint = 480) {\n  return setupHamburger(breakpoint);\n}","qaContext":"Why: Initialize a hamburger toggle for narrow viewports. How: @param {number} [breakpoint=480] - Maximum width to show the hamburger menu.","embedding":[-0.028,0.039,0.027,-0.033,0.007,0.117,-0.054,0.148,-0.198,0.111,-0.094,0.014,0.021,-0.059,0.039,-0.034,0.08,-0.074,0.019,0.006,0.008,-0.142,-0.09,0.043,-0.052,-0.082,0.105,-0.013,-0.141,-0.145,0.001,-0.061,-0.149,-0.038,0.073,-0.078,-0.035,-0.001,-0.033,-0.012,-0.042,0.104,0.127,-0.144,0.042,-0.011,-0.199,0.186,0.028,0.051,0.008,0.103,0.04,0.015,0.139,-0.139,-0.152,0.042,0.088,0.207,0.059,0,0.007,-0.017,0.117,-0.124,-0.006,-0.094,-0.183,0.134,0.003,-0.193,0.175,-0.044,0.107,-0.197,-0.046,0.074,-0.001,-0.039,-0.041,0.123,-0.124,0.057,-0.013,0.021,-0.019,-0.142,0.069,0.058,-0.089,-0.082,-0.131,-0.035,-0.11,-0.14,-0.22,-0.102,-0.106,0.063,-0.01,0.134,0.244,-0.006,-0.044,-0.044,-0.055,0.161,0.039,0.123,0.189,0.198,-0.065,-0.127,-0.066,0.075,0.144,-0.072,0.061,-0.094,0.13,0.239,0.044,0.062,0.094,0.258,0.155,0,-0.152,-0.173,-0.083,0.116,0.149,0.132,0.063,0.154,-0.062,0.031,0.061,0.062,-0.111,-0.058,0.16,-0.044,0.016,0.138,-0.241,-0.109,-0.06,-0.104,0.016,0.006,0.126,0.044,0.005,0.07,-0.194,0.044,0.015,0.012,-0.036,-0.099,0.01,-0.199,-0.096,0.038,-0.024,-0.109,-0.197,-0.043,-0.127,-0.053,-0.071,-0.037,0.255,0.035,0.017,-0.213,0.124,-0.047,0.139,-0.18,-0.075,0.049,0.085,0.002,0.172,0.002,-0.042,-0.023,0.035,0.084,-0.062,-0.044,0.096,0.028,0.044,-0.074,0.029,0.024,0.256,0.055,0.053,-0.1,-0.132,0.158,0.109,-0.131,0.122,-0.105,0.116,0.136,0.102,-0.132,0.05,-0.088,-0.062,0.042,-0.109,0.017,0.071,-0.026,0.036,0,0.073,-0.003,0.036,-0.1,-0.112,-0.109,-0.019,0.206,-0.184,-0.094,0.052,0.092,-0.219,-0.107,-0.036,0.093,-0.005,0.127,-0.012,-0.064,0.118,-0.127,0.085,0.012,0.086,-0.125,0.164,0.112,0.142,0.015,-0.07,0.06,0.064,0.005,0.005,-0.023,-0.116,0.224,0.014,0.017,0.083,0.042,-0.049,0.1,0.079,0.053,0.056,-0.06,-0.18,-0.005,0.01,-0.11,0.078,-0.06,-0.129,0.139,-0.06,-0.134,-0.024,0.051,0.069,-0.119,-0.096,0.067,0.099,0.093,-0.097,-0.016,-0.033,0.09,0.034,-0.222,0.076,-0.124,-0.147,0.028,0.105,-0.09,0.12,0.017,0.113,-0.139,0.123,-0.095,0.085,0.038,0.044,0.066,-0.084,0.221,-0.195,-0.003,0.157,-0.109,-0.155,0,-0.11,0.044,-0.022,-0.045,-0.08,-0.106,-0.081,0.123,0.01,0.087,-0.096,0.107,-0.091,0.314,0.011,-0.109,-0.012,0.13,-0.149,0.089,-0.173,0.082,0.086,0.013,0.016,-0.061,-0.122,0.153,0.174,-0.17,0.003,0.087,-0.118,0.094,-0.162,0.059,-0.169,-0.019,0.187,-0.063,-0.09,-0.07,-0.047,0.019,-0.106,-0.003,0.085,0.091,-0.085,0.107,-0.116,0.016,-0.018,-0.313,-0.004,0,0.06,-0.074,0.035,-0.006,-0.019,0.062,-0.149,0.116],"source":"src/helpers/navigation/navMenu.js [setupHamburgerMenu]","tags":["code","how","function","utility","./navigationUI.js","./navigationService.js","setupHamburger"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/navigation/navMenu.js","node":"setupHamburgerMenu"},"patterns":[],"relations":{"imports":["./navigationUI.js","./navigationService.js"],"calls":["setupHamburger"]}},"version":1},
{"id":"navData.js-loadMenuModes","text":"Load and validate main menu navigation items, marking hidden modes based on\nuser settings.\n\n@returns {Promise<import(\"../types.js\").GameMode[]>} Resolved array of game modes.\n1. Fetch all navigation items using `loadNavigationItems()`.\n2. Retrieve user settings via `loadSettings()`.\n3. Filter the modes to include only main menu items.\n4. Map each mode to set `isHidden` to true if originally hidden or disabled in settings.\n5. Sort the mapped modes by their `order` property.\n6. Validate the resulting array with `validateGameModes()`.\n7. Return the validated array.\n\nexport async function loadMenuModes() {\n  const data = await loadNavigationItems();\n  const settings = await loadSettings();\n  return validateGameModes(\n    data\n      .filter((mode) => mode.category === \"mainMenu\")\n      .map((mode) => ({\n        ...mode,\n        isHidden: mode.isHidden || settings.gameModes[mode.id] === false\n      }))\n      .sort((a, b) => a.order - b.order)\n  );\n}","qaContext":"Why: Load and validate main menu navigation items, marking hidden modes based on user settings. How: Fetch all navigation items using `loadNavigationItems()`.","embedding":[-0.009,0.118,0.033,0.056,-0.037,0.04,0.011,-0.03,-0.111,-0.019,-0.093,0.01,0.01,0.001,0.078,0.022,-0.124,0.028,0.008,-0.107,0.097,-0.08,-0.013,-0.136,-0.034,0.068,-0.036,-0.089,0.003,-0.123,0.017,0.12,-0.12,-0.048,-0.095,-0.109,-0.121,-0.246,0.044,-0.077,-0.04,0.206,-0.014,-0.117,-0.023,-0.011,-0.088,0.07,-0.044,0.101,0.048,-0.034,-0.015,0.013,0.106,0.106,-0.053,-0.055,-0.019,-0.021,-0.01,-0.173,-0.021,-0.053,0.062,0.107,-0.002,-0.046,-0.026,0.139,0.109,-0.073,0.196,0.032,-0.01,-0.096,-0.141,-0.099,-0.088,-0.063,-0.076,-0.056,-0.105,0.083,0.099,0.048,-0.092,-0.169,-0.068,0.024,-0.106,-0.086,0.08,0.097,0.07,-0.002,-0.016,0.025,-0.095,0.062,-0.085,-0.03,0.102,0.079,0.073,0.004,0.115,-0.068,-0.181,0.18,-0.018,0.182,0.099,-0.041,-0.122,0.012,0.11,0.128,0.12,0.151,0.138,0.088,0.252,-0.034,0.152,0.151,0.037,0,0.063,-0.129,0.03,0.036,0.025,0.127,0.057,-0.036,-0.049,0.013,0.044,0.249,-0.119,0.071,0.13,0.003,0.19,-0.089,-0.012,-0.067,-0.009,-0.033,-0.037,-0.039,0.073,-0.088,-0.05,0.161,-0.097,-0.006,0.131,-0.015,-0.057,0.045,0.075,0.058,-0.093,0.058,-0.125,-0.073,0.077,-0.1,-0.078,0.044,-0.232,-0.157,0.065,0.014,0.149,0.007,-0.114,0.062,-0.011,-0.215,-0.051,-0.132,-0.065,0.045,0.015,-0.016,0.076,-0.146,0.154,0.072,-0.009,0.059,-0.046,-0.087,-0.03,-0.144,-0.044,-0.041,0.139,-0.042,0.1,-0.023,-0.174,0.04,-0.109,-0.182,0.136,-0.153,-0.082,0.268,0.062,0.12,0.003,-0.047,0.029,0.131,-0.17,-0.044,0.086,0.015,-0.037,0,0.073,0.045,0.046,0.012,0.064,-0.137,0.006,0.084,-0.144,0.01,0.027,0.151,-0.041,-0.076,0.046,0.153,0.008,-0.059,0.091,-0.114,0.176,0.055,-0.123,0.112,-0.137,-0.04,0.121,-0.017,-0.034,-0.033,0.083,0.09,0.001,0,-0.012,-0.089,0.046,0.16,-0.189,0.19,-0.067,0.038,-0.191,-0.11,0.042,0.009,0.151,0.004,-0.137,-0.026,0.056,-0.025,-0.058,-0.048,0.076,-0.044,-0.009,-0.154,0.158,0.083,0.074,-0.072,0.004,-0.101,0.015,0.046,-0.13,0.027,0.121,0.104,-0.079,-0.156,0.13,-0.081,-0.097,-0.048,0.072,-0.079,0.211,-0.048,0.074,-0.109,0.03,0.025,0.037,0.123,0.039,0.027,-0.02,0.234,0.115,-0.019,0.02,-0.081,-0.136,0,-0.041,-0.125,-0.134,0.013,0.045,-0.061,0.053,-0.089,-0.03,-0.041,0.03,0.069,0.018,-0.032,0.116,0.008,0.014,0.013,-0.159,0.162,-0.024,0.078,0.023,0.104,0.136,0.044,0.007,-0.117,0.147,0.198,-0.087,0.001,0.059,-0.055,-0.178,0.107,0.029,-0.109,0.13,-0.058,0.078,-0.137,0.068,0.027,-0.085,-0.064,-0.004,0.111,0.095,0.008,-0.129,-0.018,-0.038,0.056,-0.037,-0.088,-0.006,-0.013,0.134,-0.036,0.17,-0.099,-0.091,-0.051],"source":"src/helpers/navigation/navData.js [loadMenuModes]","tags":["code","what","function","utility","../settingsStorage.js","../gameModeUtils.js","./navigationService.js","loadNavigationItems","loadSettings","validateGameModes","sort","map","filter"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/navigation/navData.js","node":"loadMenuModes"},"patterns":[],"relations":{"imports":["../settingsStorage.js","../gameModeUtils.js","./navigationService.js"],"calls":["loadNavigationItems","loadSettings","validateGameModes","sort","map","filter"]}},"version":1},
{"id":"createInspectorPanel.js-createInspectorPanel","text":"Build an expandable inspector panel showing the judoka JSON.\n\n@param {HTMLElement} container - Card container element.\n@param {object} judoka - Judoka data to display.\n@returns {HTMLElement} Inspector panel element.\n1. Attempt to serialize `judoka` to formatted JSON.\n   - If serialization fails, return a paragraph with \"Invalid card data\".\n2. Create a `<details>` element with class `debug-panel` and accessible summary.\n3. Append a `<pre>` element containing the JSON string.\n4. On toggle, set `container.dataset.inspector` when open and remove it when closed.\n5. Return the `<details>` panel.\n\nexport function createInspectorPanel(container, judoka) {\n  let json;\n  try {\n    json = JSON.stringify(judoka, null, 2);\n  } catch {\n    const p = document.createElement(\"p\");\n    p.textContent = \"Invalid card data\";\n    return p;\n  }\n\n  const panel = document.createElement(\"details\");\n  panel.className = \"debug-panel\";\n  panel.setAttribute(\"aria-label\", \"Inspector panel\");\n\n  const summary = document.createElement(\"summary\");\n  summary.textContent = \"Card Inspector\";\n  summary.tabIndex = 0;\n  summary.style.minHeight = \"44px\";\n  summary.style.minWidth = \"44px\";\n  summary.style.display = \"flex\";\n  summary.style.alignItems = \"center\";\n  summary.style.outline = \"2px solid transparent\";\n  summary.style.outlineOffset = \"2px\";\n  summary.addEventListener(\"focus\", () => {\n    summary.style.outlineColor = \"#000\";\n  });\n  summary.addEventListener(\"blur\", () => {\n    summary.style.outlineColor = \"transparent\";\n  });\n  summary.addEventListener(\"keydown\", (e) => {\n    if (e.key === \"Enter\" || e.key === \" \") {\n      e.preventDefault();\n      panel.open = !panel.open;\n      panel.dispatchEvent(new Event(\"toggle\"));\n    }\n  });\n  panel.appendChild(summary);\n\n  const jsonPre = document.createElement(\"pre\");\n  jsonPre.textContent = json;\n  panel.appendChild(jsonPre);\n\n  // Only show the card's JSON data. The markup preview was removed to\n  // keep the inspector output concise.\n\n  function updateDataset() {\n    summary.setAttribute(\"aria-expanded\", panel.open ? \"true\" : \"false\");\n    if (panel.open) {\n      container.dataset.inspector = \"true\";\n    } else {\n      container.removeAttribute(\"data-inspector\");\n    }\n  }\n\n  panel.addEventListener(\"toggle\", updateDataset);\n  updateDataset();\n\n  return panel;\n}","qaContext":"Why: Build an expandable inspector panel showing the judoka JSON. How: appendChild(jsonPre); // Only show the card's JSON data.","embedding":[-0.069,0.094,0.014,0.136,-0.082,0.151,0.046,0.098,0.11,-0.106,0.016,-0.04,-0.097,-0.003,0.09,-0.01,-0.04,-0.037,-0.122,-0.009,0.184,-0.078,0.061,-0.073,-0.043,0.153,0.015,0,-0.108,0.001,-0.046,-0.06,-0.025,-0.008,0.061,-0.036,-0.09,0.004,0.052,-0.026,-0.033,0.082,-0.097,-0.062,0.124,-0.257,-0.061,-0.093,0.06,0.062,-0.09,0.055,0.08,-0.084,0.023,-0.04,-0.014,-0.014,0.006,0.07,0.016,0.038,0.035,-0.011,0.051,-0.126,0.011,0.117,-0.036,0.03,0.092,0.002,0.102,0.011,-0.062,-0.058,-0.088,-0.015,0.039,0.051,0.009,-0.113,0.04,0.031,0.055,0.176,0.059,-0.045,-0.127,-0.038,-0.077,0.018,0.071,0.123,-0.008,0.07,-0.07,-0.083,-0.079,0.156,-0.005,-0.019,0.003,0.065,-0.005,-0.141,0.104,-0.051,-0.059,0.066,0.035,0.11,-0.135,0.052,-0.112,0.03,0.157,-0.038,0.119,0.068,0.26,-0.062,-0.127,0.05,0.061,-0.025,0.13,0,0.028,-0.184,-0.037,0.083,0.026,-0.102,-0.014,0.017,-0.11,-0.001,-0.007,0.051,-0.044,0,-0.014,-0.092,-0.051,0.111,0.101,-0.018,0.057,-0.102,0.06,0.016,-0.014,0.082,-0.044,0.065,-0.161,0.027,0.081,-0.056,-0.009,0.078,-0.051,-0.02,-0.013,0,-0.021,0.046,-0.012,-0.116,-0.048,-0.062,-0.022,-0.046,0.151,0.032,-0.067,-0.004,-0.128,0.186,0.028,-0.113,0.033,0.033,0.096,0.024,0.028,-0.084,-0.097,0.105,-0.034,0.029,-0.013,0.015,-0.01,-0.094,-0.039,-0.181,-0.072,-0.088,0.164,-0.056,0.013,-0.067,-0.146,0.031,-0.102,-0.174,0.062,-0.154,-0.087,0.121,-0.002,0.135,0.108,0.003,-0.039,0.096,0.008,0.026,-0.003,-0.077,-0.004,0,0.058,0.081,-0.07,-0.008,0.054,0.006,0.008,0.217,0.046,-0.007,0.046,-0.039,-0.047,-0.037,-0.141,0.174,-0.056,0.062,0.019,-0.033,0.121,0.046,0.104,-0.01,-0.144,-0.014,0.109,-0.02,-0.113,-0.058,0.037,-0.035,-0.078,0.069,0.049,-0.194,0.117,-0.082,-0.05,0.114,0.019,-0.059,-0.035,0.065,-0.035,-0.093,0.054,0.129,0.054,-0.043,-0.073,-0.12,-0.068,-0.076,-0.073,-0.012,0.09,-0.089,-0.087,0.177,-0.038,-0.14,0.054,0.009,0.249,-0.105,-0.029,0.041,0.071,0.023,-0.072,0.006,0.123,-0.012,0.105,-0.021,0.009,-0.131,0.098,-0.04,0.073,-0.043,-0.022,-0.129,0.142,0.018,-0.063,0.127,-0.065,-0.021,-0.072,-0.061,0.096,-0.09,-0.078,0,-0.142,-0.039,-0.058,-0.027,-0.113,-0.081,-0.005,-0.121,0.052,-0.175,0.131,0.195,-0.014,-0.002,-0.099,-0.044,-0.076,0.078,-0.026,0.073,0.096,-0.028,0.013,-0.048,0.15,0.01,-0.142,0.06,0.094,0.05,-0.024,0.016,0.12,0.141,-0.154,-0.075,0.18,-0.064,0.029,0.119,0.149,-0.067,-0.154,0.013,0.045,0.02,0.05,-0.017,0.098,-0.01,-0.036,-0.109,0.036,-0.086,-0.036,-0.067,0.109,0.124,0.041,0.116,0.087,-0.007,-0.08,0.033],"source":"src/helpers/inspector/createInspectorPanel.js [createInspectorPanel]","tags":["code","how","function","utility","stringify","createElement","setAttribute","addEventListener","preventDefault","dispatchEvent","appendChild","removeAttribute","updateDataset","factory","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/inspector/createInspectorPanel.js","node":"createInspectorPanel"},"patterns":["factory"],"relations":{"imports":[],"calls":["stringify","createElement","setAttribute","addEventListener","preventDefault","dispatchEvent","appendChild","removeAttribute","updateDataset"]}},"version":1},
{"id":"list.js-fetchActiveCountries","text":"Fetch and filter active countries from data files.\n\n@returns {Promise<{activeCountries: string[], nameToCode: Map<string,string>}>}\n  Active country names and lookup map for country codes.\n1. Load judoka data via `fetchJson` to gather countries present in the deck.\n2. Retrieve the country mapping and keep only active entries.\n3. Sort names alphabetically and deduplicate mapping entries.\n4. Return a list of active country names and a map of country name to code.\n\nexport async function fetchActiveCountries() {\n  const judoka = await fetchJson(`${DATA_DIR}judoka.json`);\n  const uniqueCountries = new Set(\n    Array.isArray(judoka) ? judoka.map((j) => j.country).filter(Boolean) : []\n  );\n\n  const mapping = await loadCountryMapping();\n  const entries = Object.values(mapping)\n    .filter((e) => e.active)\n    .sort((a, b) => a.country.localeCompare(b.country));\n  const uniqueEntries = [...new Map(entries.map((e) => [e.country, e])).values()];\n  const nameToCode = new Map(uniqueEntries.map((e) => [e.country, e.code]));\n  const activeCountries = uniqueEntries\n    .map((e) => e.country)\n    .filter((name) => uniqueCountries.has(name));\n\n  return { activeCountries, nameToCode };\n}","qaContext":"Why: Fetch and filter active countries from data files. How: Load judoka data via `fetchJson` to gather countries present in the deck.","embedding":[-0.004,0.189,-0.064,0.054,-0.054,0.01,0.083,-0.1,-0.005,-0.031,0.029,-0.131,-0.007,-0.092,-0.081,0.073,-0.129,0.004,-0.105,-0.23,0.109,-0.014,0.08,-0.128,0.069,0.087,0.017,-0.107,-0.142,-0.036,-0.053,0.02,-0.017,0.087,0.048,-0.03,-0.211,-0.016,0.108,-0.113,0.052,0.198,0.145,-0.15,0.089,-0.011,-0.094,0.052,0.067,0.13,-0.119,0.026,-0.023,-0.038,0.166,0.001,-0.16,-0.1,-0.193,-0.016,-0.042,-0.236,0.084,-0.014,0.05,-0.122,0.042,0.229,0.157,-0.084,0.126,0.132,0.028,0.009,-0.186,-0.034,-0.119,0.062,0.064,-0.066,-0.107,-0.134,0,-0.001,0.061,0.072,-0.019,-0.199,-0.013,-0.062,-0.125,-0.059,0.162,0.161,0.073,0.01,0.183,0.176,-0.012,0.119,-0.01,0.007,0.079,-0.009,-0.112,-0.12,0.031,-0.059,-0.09,0.01,-0.102,0.23,-0.105,0.017,-0.18,-0.045,0.053,-0.076,-0.034,0.096,0.18,-0.096,0.001,-0.044,0.074,0.109,0.039,0,0.141,-0.142,0.092,0.019,-0.124,-0.122,0.059,-0.077,-0.141,0.07,-0.099,0.195,0.004,0.024,-0.033,-0.022,0.084,-0.077,-0.024,0.118,0.088,-0.024,-0.063,-0.049,0.076,-0.051,-0.063,0.114,-0.153,0.045,0.223,-0.078,-0.141,0.066,0.193,0.039,0.073,-0.023,-0.163,0.015,0.13,-0.046,-0.024,0.013,0.037,-0.142,-0.012,-0.075,0.12,0.164,-0.041,0.081,0.079,-0.084,0.099,-0.124,0.063,0.118,0.078,0.169,-0.215,-0.098,-0.02,0.082,0.172,0.073,0.049,0.001,0.015,-0.146,0.141,-0.07,0.204,0.065,0.122,0.105,-0.038,-0.047,-0.219,-0.185,-0.081,-0.129,-0.278,0.199,-0.05,0.351,0.03,-0.135,0.119,0.105,-0.117,0.132,-0.027,-0.168,0.105,0,0.122,0.036,0.096,-0.147,0.119,-0.139,0.216,0.078,-0.064,-0.006,0.006,-0.086,0.13,0.006,0.192,0.152,0.069,-0.007,0.012,-0.023,0.039,0.187,0.009,0.042,-0.115,0.065,-0.094,-0.098,-0.112,-0.202,0.037,-0.192,-0.125,0.079,-0.056,-0.202,0.069,0.183,-0.037,0.162,-0.285,-0.125,-0.129,0.073,-0.042,-0.174,0.005,0.216,-0.01,-0.087,0.101,0.047,-0.203,-0.072,0.116,-0.059,0.021,-0.106,0.124,0.034,-0.077,-0.11,0.075,0.103,0.112,-0.1,-0.121,0.025,0.142,0.045,-0.194,-0.002,-0.046,0.005,0.078,0.05,-0.071,0.034,0.175,0.089,-0.065,-0.034,0.013,0.019,0.094,0.165,0.013,-0.164,0.05,-0.031,-0.01,-0.056,-0.113,-0.074,-0.105,0,-0.145,-0.089,-0.127,0.207,0.007,-0.016,0.088,0.078,-0.114,-0.08,0.182,0.207,-0.004,-0.05,0.093,-0.193,0.005,0.113,-0.128,0.162,0.063,0.004,-0.025,-0.021,0.131,0.015,0.117,-0.115,0.16,0.071,-0.069,-0.063,0.113,0.012,0.03,-0.133,0.039,-0.11,-0.048,0.042,0.101,0.1,0.115,0.107,0.033,-0.094,0.056,-0.111,0.193,-0.111,-0.219,-0.176,-0.07,0.042,-0.133,-0.016,-0.007,-0.035,0.103,0.092,0.124,-0.151,-0.207,0.036],"source":"src/helpers/country/list.js [fetchActiveCountries]","tags":["code","what","function","utility","../constants.js","../dataUtils.js","../api/countryService.js","fetchJson","isArray","filter","map","loadCountryMapping","sort","values","localeCompare","has"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/country/list.js","node":"fetchActiveCountries"},"patterns":[],"relations":{"imports":["../constants.js","../dataUtils.js","../api/countryService.js"],"calls":["fetchJson","isArray","filter","map","loadCountryMapping","sort","values","localeCompare","has"]}},"version":1},
{"id":"list.js-loadNextCountryBatch","text":"Load the next batch of countries into the list for the given container.\n\n@param {HTMLElement} container - Track element that receives buttons.\n@returns {Promise<void>} Resolves when the batch is appended.\n1. Retrieve batching state for the container.\n2. Slice the next batch of countries using `batchSize`.\n3. Render the batch and update the rendered count.\n\nexport async function loadNextCountryBatch(container) {\n  const state = batchState.get(container);\n  if (!state) {\n    return;\n  }\n  const { activeCountries, nameToCode, batchSize, imageObserver } = state;\n  const batch = activeCountries.slice(state.rendered, state.rendered + batchSize);\n  await renderCountryBatch(container, batch, nameToCode, imageObserver);\n  state.rendered += batch.length;\n}","qaContext":"Why: Load the next batch of countries into the list for the given container. How: Slice the next batch of countries using `batchSize`.","embedding":[-0.06,-0.001,-0.027,0.168,-0.009,0.073,-0.044,-0.025,-0.044,-0.041,0,-0.122,-0.06,-0.103,-0.085,-0.001,-0.065,-0.161,-0.044,-0.201,0.189,-0.141,0.16,-0.039,0.057,0.072,-0.025,-0.278,0.029,-0.054,0.082,0.003,-0.042,0.022,0.148,0.052,-0.169,-0.079,0.083,-0.094,0.2,0.064,0.015,-0.066,0.08,-0.008,-0.031,0.019,-0.078,0.095,0.03,-0.008,-0.002,-0.032,-0.042,0.126,0.139,0.069,-0.103,0.101,-0.051,-0.241,0.006,-0.052,0.182,0.012,0.034,0.043,-0.029,-0.02,0.009,0.027,0.135,-0.059,-0.145,-0.231,0.007,0.048,0.011,-0.068,0.027,-0.11,0.05,-0.16,0.02,0.021,-0.028,-0.152,-0.036,-0.098,-0.098,-0.073,0.015,0.13,-0.071,0.06,0.132,0.079,-0.041,0.013,0.088,-0.082,-0.065,-0.016,0.047,-0.081,-0.021,0.013,-0.125,0.017,0.019,0.289,0,0.011,0.001,-0.274,0.176,-0.084,0.081,0.031,0.214,0,0.043,-0.014,-0.003,-0.012,0.089,0,0.03,-0.222,0.045,0.005,0.067,0.128,0.103,-0.111,-0.174,-0.08,0.005,0.012,0.018,0.044,-0.088,-0.154,0.024,0.064,0.065,0.049,-0.048,-0.01,0.031,0.052,-0.078,0.024,-0.044,0.094,-0.149,-0.03,0.208,0.119,-0.15,0.073,0.034,0.047,0.057,-0.011,-0.059,-0.015,0.046,0.038,0.052,0.002,-0.177,-0.071,-0.01,-0.04,-0.004,0.137,-0.13,0.015,0.015,-0.178,0.161,-0.129,-0.029,0.029,0.236,-0.014,0.071,-0.098,-0.05,0.099,0.036,0.155,0.137,0.066,-0.051,-0.002,0.059,0.101,0.27,-0.001,0.196,0.056,-0.083,-0.036,-0.223,-0.011,0.019,-0.101,-0.275,0.097,0.175,0.136,-0.143,-0.037,0.14,0.064,-0.063,-0.15,0.044,-0.104,-0.054,0,0.301,0.188,0.01,0.027,0.106,-0.056,0.025,0.199,-0.204,-0.087,-0.076,0.061,-0.047,0.039,-0.064,0.172,0.149,-0.067,0.051,-0.197,0.039,-0.064,-0.054,0.168,-0.152,0.083,0.001,-0.02,0.014,-0.138,0.103,-0.032,0.017,0.191,-0.026,-0.01,0.106,0.165,-0.006,0.158,-0.104,-0.193,-0.016,0.048,-0.106,-0.137,-0.085,0.066,-0.045,-0.014,-0.003,-0.086,-0.288,0.005,-0.029,-0.192,-0.114,-0.099,0.123,-0.091,-0.071,-0.096,0.12,-0.093,-0.014,-0.054,-0.194,0.046,0.161,0.22,0.028,0,-0.004,-0.024,0.005,-0.034,0.054,-0.097,0.174,0.065,-0.052,-0.013,0.044,-0.111,0.058,0.147,0.046,-0.044,0.044,0.025,-0.044,-0.058,0.027,-0.041,0.024,0,-0.13,-0.078,0.017,0.029,-0.021,0.092,0.018,0.102,-0.017,-0.096,0.112,0.062,0.143,0.05,-0.024,0.027,-0.006,0.084,0.022,0.153,-0.075,-0.063,0.038,0.054,0.084,0.023,0.032,0.108,0.083,-0.026,0.042,0.046,0.084,0.081,-0.061,-0.142,-0.067,-0.169,0.094,0.054,-0.125,0.012,0.059,0.133,0.008,-0.114,-0.159,-0.096,0.03,0.02,-0.085,-0.122,-0.18,0.208,0.048,-0.088,0.002,-0.075,0.202,0.282,0.043,-0.156,-0.095,-0.074],"source":"src/helpers/country/list.js [loadNextCountryBatch]","tags":["code","what","function","utility","../constants.js","../dataUtils.js","../api/countryService.js","get","slice","renderCountryBatch","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/country/list.js","node":"loadNextCountryBatch"},"patterns":[],"relations":{"imports":["../constants.js","../dataUtils.js","../api/countryService.js"],"calls":["get","slice","renderCountryBatch"]}},"version":1},
{"id":"list.js-populateCountryList","text":"Populate a scrolling list of active countries with flag buttons.\n\n@param {HTMLElement} container - Element where buttons will be appended.\n@returns {Promise<void>} Resolves when the list is populated.\n1. Call `fetchActiveCountries` to get active names and code map.\n2. Show a message and exit when no active countries are returned.\n3. Render the \"All\" button.\n4. Determine batch size from connection info.\n5. Initialize a lazy flag loader via `IntersectionObserver`.\n6. Render batches of country buttons and attach a scroll listener for lazy loading.\n7. Replace contents with \"No countries available.\" on error.\n\nexport async function populateCountryList(container) {\n  try {\n    const { activeCountries, nameToCode } = await fetchActiveCountries();\n    if (activeCountries.length === 0) {\n      const message = document.createElement(\"p\");\n      message.textContent = \"No countries available.\";\n      container.replaceChildren(message);\n      return;\n    }\n\n    renderAllButton(container);\n\n    const scrollContainer = container.parentElement || container;\n    const connection = typeof navigator !== \"undefined\" ? navigator.connection : undefined;\n    const batchSize = determineBatchSize(connection);\n    const imageObserver = initLazyFlagLoader(scrollContainer);\n    const state = {\n      activeCountries,\n      nameToCode,\n      batchSize,\n      imageObserver,\n      rendered: 0\n    };\n    batchState.set(container, state);\n\n    await loadNextCountryBatch(container);\n    if (activeCountries.length > state.rendered) {\n      const handleScroll = async () => {\n        if (\n          scrollContainer.scrollTop + scrollContainer.clientHeight >=\n          scrollContainer.scrollHeight - SCROLL_THRESHOLD_PX\n        ) {\n          await loadNextCountryBatch(container);\n          if (state.rendered >= activeCountries.length) {\n            scrollContainer.removeEventListener(\"scroll\", handleScroll);\n          }\n        }\n      };\n      scrollContainer.addEventListener(\"scroll\", handleScroll);\n    }\n  } catch (error) {\n    console.error(\"Error fetching country data:\", error);\n    const message = document.createElement(\"p\");\n    message.textContent = \"No countries available.\";\n    container.replaceChildren(message);\n  }\n}","qaContext":"Why: Populate a scrolling list of active countries with flag buttons. How: Show a message and exit when no active countries are returned.","embedding":[-0.02,0.033,-0.013,0.149,0.036,0.059,0.054,0.03,-0.084,0.006,-0.008,-0.056,-0.044,-0.042,-0.051,0.046,-0.048,-0.125,-0.047,-0.069,0.114,-0.112,0.151,-0.029,-0.042,-0.016,-0.016,-0.206,-0.084,0.018,0.055,0.047,-0.042,-0.043,0.034,-0.112,-0.152,-0.065,0.001,-0.09,0.083,0.09,0.025,-0.015,0.091,-0.061,-0.068,0.048,0.033,0.12,0.068,-0.01,0.059,-0.025,-0.049,0.115,0.001,0.074,-0.065,0.103,0.016,-0.165,0,-0.004,0.067,0.01,0.082,-0.016,-0.052,0.011,-0.065,0.016,0.052,0.036,-0.018,-0.229,-0.016,-0.002,0.004,-0.037,-0.007,-0.089,-0.094,0.013,0.027,0.016,-0.071,-0.098,0.016,-0.131,-0.124,0.012,-0.043,0.082,-0.019,0.096,-0.014,0.079,-0.141,0.052,0.053,-0.013,-0.052,0.121,-0.013,-0.141,0.001,-0.052,-0.137,0.147,0.007,0.163,0.044,0.015,-0.088,-0.143,0.159,-0.026,0.035,-0.006,0.135,-0.05,-0.116,-0.116,0.069,-0.083,0.052,0,0.052,-0.211,-0.045,0.107,0.036,0.02,0.103,-0.073,-0.122,0.032,0.03,0.011,0.096,-0.032,-0.037,-0.115,0.07,0.025,0.062,0.024,-0.063,-0.054,-0.005,-0.043,-0.002,0.122,-0.109,0.102,-0.117,0.001,0.118,0.044,-0.08,0.064,0.028,-0.082,-0.056,-0.022,-0.018,-0.006,0.007,-0.058,0.046,0.011,-0.086,-0.145,0.044,0.052,0.127,0.078,-0.084,0.046,-0.053,-0.196,0.119,-0.055,-0.041,0.097,0.067,0.061,-0.114,-0.074,-0.064,-0.034,0.054,0.12,0.014,-0.041,-0.082,-0.179,0.096,0.023,0.281,0.094,0.118,0.116,-0.055,0.04,-0.121,-0.01,0.118,-0.172,-0.188,0.189,0.141,0.017,0.002,-0.061,0.026,0.159,-0.077,-0.064,0.047,-0.124,-0.09,0,0.161,0.122,-0.103,-0.065,0.031,0.038,0.107,0.137,-0.162,-0.144,-0.01,0.047,0.022,0.085,-0.047,0.271,0.071,-0.022,-0.028,0.015,0.075,0.074,-0.09,0.038,-0.11,-0.048,0.034,0.106,-0.071,-0.123,0.046,-0.01,-0.113,0.057,0.033,-0.103,0.04,0.095,-0.088,0.118,-0.027,-0.187,0.023,-0.027,-0.032,-0.108,-0.014,0.148,-0.061,0.041,-0.032,-0.057,-0.114,-0.017,0.025,0,-0.009,-0.164,0.147,-0.126,0.069,-0.133,0.096,-0.031,0.137,0.008,-0.061,0.132,0.088,0.204,-0.113,-0.031,0.122,-0.106,0.141,0.083,0.115,-0.061,0.149,-0.006,0.018,-0.032,0.007,-0.24,0.083,0.123,-0.176,-0.048,0.029,0.02,-0.08,-0.042,-0.027,-0.018,-0.054,0,-0.099,-0.029,0.022,-0.048,-0.012,0.071,0.119,0.061,-0.08,-0.128,0.037,0.114,0.124,0.015,0.044,-0.064,0.048,0.072,-0.096,0.115,-0.03,-0.02,-0.008,0.075,0.096,0.005,-0.02,0.005,0.065,0.008,-0.021,0.019,0.025,-0.002,-0.051,-0.052,0.054,-0.133,0.038,0.107,0.061,0.101,0.002,0.112,0.017,-0.027,-0.001,-0.02,0.132,0.087,-0.139,-0.076,-0.1,0.005,-0.008,-0.104,0.005,-0.004,0.016,0.291,-0.004,-0.077,-0.059,-0.004],"source":"src/helpers/country/list.js [populateCountryList]","tags":["code","how","function","utility","../constants.js","../dataUtils.js","../api/countryService.js","fetchActiveCountries","createElement","replaceChildren","renderAllButton","determineBatchSize","initLazyFlagLoader","set","loadNextCountryBatch","removeEventListener","addEventListener","error","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/country/list.js","node":"populateCountryList"},"patterns":[],"relations":{"imports":["../constants.js","../dataUtils.js","../api/countryService.js"],"calls":["fetchActiveCountries","createElement","replaceChildren","renderAllButton","determineBatchSize","initLazyFlagLoader","set","loadNextCountryBatch","removeEventListener","addEventListener","error"]}},"version":1},
{"id":"codes.js-getCountryNameFromCode","text":"Resolve the country name for a two-letter code.\n\n@param {string} code - Two-letter country code.\n@returns {Promise<string>} Resolved country name or \"Vanuatu\".\n1. Delegate to `getCountryName` from `countryService`.\n2. Return the resolved name.\n\nexport function getCountryNameFromCode(code) {\n  return getCountryName(code);\n}","qaContext":"Why: Resolve the country name for a two-letter code. How: @param {string} code - Two-letter country code.","embedding":[-0.109,-0.009,-0.062,0.018,-0.199,0.024,-0.041,-0.007,0.167,-0.071,0.028,-0.192,0.054,-0.077,0.112,0.007,-0.191,-0.086,0.032,-0.196,0.339,0.11,0.029,0.017,0.063,-0.083,-0.084,-0.16,-0.037,-0.028,0.17,0.163,-0.133,-0.029,0.128,0.153,-0.244,-0.016,0.076,-0.174,-0.009,-0.026,0.078,-0.115,0.045,-0.104,0.168,0.23,-0.148,-0.066,0.129,-0.184,-0.085,-0.17,0.082,0.042,-0.128,0,-0.042,0.217,-0.055,-0.132,0.042,-0.085,0.003,-0.057,0,0.116,-0.247,-0.229,0.07,-0.102,0.071,0.046,-0.04,-0.132,-0.173,0.139,0.206,0.057,0.058,-0.01,0.107,0.183,0.191,0.273,0.053,0,0.041,0.062,-0.121,-0.324,0.188,0.071,-0.296,-0.006,-0.024,0.056,-0.138,0.08,0.006,0.044,0.059,-0.118,0.052,0.144,0.015,-0.086,0.157,0.084,-0.072,0.302,-0.045,-0.036,-0.099,-0.13,0.164,-0.051,0.263,-0.139,0.113,-0.095,-0.069,-0.197,-0.151,0.128,0.207,0,0.021,0.056,0.097,0.132,-0.011,-0.156,-0.014,0.07,-0.029,0.035,0.03,-0.128,0.135,-0.074,-0.149,0.132,0.1,-0.079,0.068,0.22,0.07,0.035,0.088,0.079,0.146,0.001,0.039,-0.079,-0.052,0.033,0.257,-0.23,0.016,0.054,0.086,-0.096,0.146,-0.028,-0.302,0.132,0.102,-0.013,-0.14,0.25,0.052,-0.204,0.077,-0.065,0.369,0.158,-0.109,0.139,0.038,-0.116,0.243,0.081,0.082,0.12,0.128,-0.142,-0.125,-0.293,0.044,0.034,0.162,-0.017,-0.051,-0.096,-0.082,-0.13,0.097,-0.241,0.297,0.18,0.167,0.034,-0.058,-0.121,0.023,-0.156,-0.153,-0.033,-0.195,0.382,0.065,0.232,-0.029,-0.244,0.011,0.056,-0.284,-0.16,-0.075,-0.066,0.067,0,0.101,0.059,-0.072,-0.045,-0.104,-0.164,0.21,0.132,-0.128,0.046,-0.087,0.027,0.019,0.047,0.34,0.21,0.107,-0.052,0.049,0.077,-0.085,0.028,-0.066,-0.065,-0.065,0.081,0.099,-0.024,0.033,-0.179,-0.054,-0.019,-0.067,0.103,-0.349,-0.081,0.11,0.044,0.036,0.179,-0.014,-0.168,-0.109,0.166,-0.23,-0.151,-0.056,-0.157,0.219,-0.192,0.15,0.002,-0.228,0.01,-0.02,-0.111,-0.035,-0.044,0.122,-0.01,-0.146,-0.143,0.154,0.119,0.068,-0.135,-0.174,0.019,0.175,-0.031,-0.017,-0.125,-0.091,0.042,0.037,0.112,-0.098,-0.25,0.055,0.107,0.077,-0.097,-0.081,0.003,0.052,-0.083,0.177,0.01,-0.017,0.017,0.023,0.07,-0.142,-0.199,-0.161,0,-0.088,-0.039,0.001,-0.04,-0.177,0.081,-0.119,-0.083,-0.092,0.005,-0.052,-0.042,0.01,-0.062,0.054,-0.078,0.047,0.397,-0.122,0.067,-0.169,0.173,-0.015,-0.351,-0.042,-0.057,0.118,0.191,0.146,-0.058,-0.013,0.136,0.043,-0.038,-0.2,-0.14,0.08,-0.205,0.184,0.07,0.222,0.161,-0.058,0.123,0.018,0.057,0.216,-0.136,0.231,-0.037,-0.061,-0.059,-0.17,0.113,-0.14,-0.019,-0.084,-0.199,0.157,0.131,-0.135,-0.032,-0.023,-0.185],"source":"src/helpers/country/codes.js [getCountryNameFromCode]","tags":["code","what","function","utility","../api/countryService.js","getCountryName"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/country/codes.js","node":"getCountryNameFromCode"},"patterns":[],"relations":{"imports":["../api/countryService.js"],"calls":["getCountryName"]}},"version":1},
{"id":"codes.js-getFlagUrl","text":"Build the flag image URL for a country code.\n\n@param {string} countryCode - Two-letter country code.\n@returns {Promise<string>} URL for the flag image.\n1. Delegate to `getFlagUrl` from `countryService`.\n2. Return the resolved URL.\n\nexport function getFlagUrl(countryCode) {\n  return serviceGetFlagUrl(countryCode);\n}","qaContext":"Why: Build the flag image URL for a country code. How: @param {string} countryCode - Two-letter country code.","embedding":[-0.005,0.186,-0.134,-0.049,0.137,-0.122,-0.076,0.013,0.078,-0.078,-0.04,-0.07,-0.094,0.153,0.112,0.034,-0.212,-0.079,-0.012,-0.205,0.262,-0.135,0.151,-0.116,-0.094,-0.002,-0.016,-0.117,-0.026,-0.087,0.152,0.045,-0.371,-0.096,0.146,0.131,0.052,-0.006,0.25,-0.02,0.086,0.041,0.154,-0.212,-0.053,0.091,0.163,0.192,-0.083,-0.118,0.022,-0.063,-0.181,-0.14,0.207,-0.011,-0.208,0.051,-0.158,0.236,-0.111,-0.122,0.08,-0.093,0.127,-0.096,-0.2,0.074,-0.179,-0.157,0.039,-0.227,-0.008,0.065,-0.14,0.009,-0.123,0.168,0.137,-0.159,0.197,-0.036,0.17,0.149,0.192,0.073,-0.14,0.039,0.173,0.089,0.023,-0.054,0.004,0.094,-0.144,-0.01,-0.101,-0.169,-0.216,0.118,0.059,-0.062,0.258,-0.074,0.087,-0.045,-0.099,0.205,0.106,0.15,-0.036,0.277,-0.122,-0.093,-0.125,-0.245,-0.059,-0.21,0.142,-0.131,0.176,-0.052,-0.221,-0.048,0.046,-0.116,0.158,0,0.082,0.163,0.112,0.07,-0.111,-0.128,-0.045,-0.102,-0.125,0.027,-0.165,-0.003,-0.061,0.068,-0.233,0.129,-0.038,-0.18,-0.051,0.149,-0.033,0.029,0.03,0.009,0.124,-0.127,0.171,-0.098,0.043,0.016,0.306,-0.103,0.085,-0.025,0.121,-0.104,0.062,-0.009,-0.34,0.293,0.24,-0.048,-0.151,0.285,0.098,-0.116,0.109,-0.055,0.29,0.142,0.082,-0.006,0.131,-0.206,0.242,0.049,0.034,-0.092,0.053,-0.131,-0.012,-0.217,0.022,-0.084,0.078,0.096,0.04,-0.089,-0.199,-0.109,0.181,-0.174,0.211,0.173,0.043,0.082,-0.213,0.097,-0.028,-0.088,-0.141,-0.234,-0.14,0.281,0.062,0.219,0.075,-0.236,0.028,-0.033,-0.31,0.072,-0.052,-0.048,0.083,0,0.179,0.015,0.074,0.144,-0.077,0.057,0.346,0.119,-0.078,0.255,-0.107,-0.012,0.112,0.084,0.028,-0.01,-0.023,0.06,-0.083,0.145,-0.117,0.135,0.094,0.059,-0.327,0.162,0.193,-0.29,-0.064,-0.23,-0.129,-0.074,-0.045,-0.017,-0.029,0.056,0.067,0.176,-0.024,0.105,-0.215,-0.244,-0.139,0.146,-0.138,-0.234,-0.016,-0.178,0.002,0.019,0.035,0.026,-0.086,0.001,-0.102,-0.14,-0.165,-0.02,0.098,0.112,-0.081,-0.293,0.087,-0.082,0.2,-0.091,-0.106,-0.022,0.115,0.18,0.021,-0.104,0.005,0.087,0.187,0.018,0.074,0.01,0.123,0.062,0.019,-0.2,-0.106,0.008,0.136,0.017,0.029,-0.042,-0.04,0.004,-0.057,0.118,0.015,-0.223,-0.034,0,-0.097,0.008,0.032,-0.003,-0.137,0.171,0.084,-0.053,0.017,0.042,-0.09,-0.056,0.051,-0.044,-0.071,0.121,-0.047,0.263,0.027,0.105,-0.089,0.158,0.003,-0.291,0.057,0.008,-0.002,0.028,0.037,0.102,0.033,0.009,0.195,-0.148,-0.266,-0.029,0.036,-0.157,0.089,-0.044,0.221,0.109,0.085,-0.064,0.08,0.029,0.139,0.046,-0.021,0.137,-0.013,-0.119,-0.25,0.016,-0.027,-0.14,-0.042,-0.245,0.232,0.3,0.004,-0.028,-0.076,-0.068],"source":"src/helpers/country/codes.js [getFlagUrl]","tags":["code","what","function","utility","../api/countryService.js","serviceGetFlagUrl"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/country/codes.js","node":"getFlagUrl"},"patterns":[],"relations":{"imports":["../api/countryService.js"],"calls":["serviceGetFlagUrl"]}},"version":1},
{"id":"view.js-ClassicBattleView","text":"View layer for Classic Battle mode.\nHandles DOM interactions and binds to controller events.\n\nexport class ClassicBattleView {\n  /**\n   * @param {{ waitForOpponentCard?: () => Promise<void> }} [deps]\n   */\n  constructor({ waitForOpponentCard = () => {} } = {}) {\n    this.statButtonControls = null;\n    this.waitForOpponentCard = waitForOpponentCard;\n  }\n\n  /**\n   * Bind controller events to view handlers.\n   * @param {import(\"./controller.js\").ClassicBattleController} controller\n   */\n  bindController(controller) {\n    this.controller = controller;\n    controller.addEventListener(\"featureFlagsChange\", () => {\n      setBattleStateBadgeEnabled(controller.isEnabled(\"battleStateBadge\"));\n      try {\n        window.__disableSnackbars = controller.isEnabled(\"enableTestMode\");\n      } catch {}\n      const battleArea = document.getElementById(\"battle-area\");\n      const banner = document.getElementById(\"test-mode-banner\");\n      applyBattleFeatureFlags(battleArea, banner);\n    });\n    controller.addEventListener(\"roundStartError\", (e) => {\n      document.dispatchEvent(new CustomEvent(\"round-start-error\", { detail: e.detail }));\n    });\n  }\n\n  /**\n   * Initialize UI and side effects.\n   * @returns {Promise<void>}\n   */\n  async init() {\n    const store = this.controller.battleStore;\n    window.battleStore = store;\n    // Provide a robust skip helper: invoke the skip handler and return a\n    // Promise that resolves when either the next-round timer path completes\n    // or the next round prompts the player again. This makes tests deterministic\n    // and avoids racing the handler registration.\n    window.skipBattlePhase = () => {\n      try {\n        // Trigger skip (may be pending until a handler is set)\n        skipCurrentPhase();\n      } catch {}\n      // Clear any lingering selection immediately for deterministic tests\n      try {\n        resetStatButtons();\n        const c = document.querySelectorAll(\"#stat-buttons .selected\").length;\n        console.warn(`[test] skipBattlePhase: after immediate reset selected=${c}`);\n      } catch {}\n      // Avoid racing against self-resetting global promises. Instead, resolve\n      // once the machine announces the next round is waiting for input, or\n      // after a short fallback to prevent hangs in CI.\n      try {\n        return new Promise((resolve) => {\n          let done = false;\n          const finish = () => {\n            if (done) return;\n            done = true;\n            try {\n              document.removeEventListener(\"battle:state\", onState);\n            } catch {}\n            resolve();\n          };\n          const onState = (e) => {\n            try {\n              if (e && e.detail && e.detail.to === \"waitingForPlayerAction\") finish();\n            } catch {}\n          };\n          try {\n            document.addEventListener(\"battle:state\", onState);\n          } catch {}\n          // If we are already in the target state, resolve immediately.\n          try {\n            const s = document.body?.dataset?.battleState;\n            if (s === \"waitingForPlayerAction\") return finish();\n          } catch {}\n          // Fallback timeout to avoid hanging if no state event arrives.\n          setTimeout(finish, 1500);\n        });\n      } catch {\n        return Promise.resolve();\n      }\n    };\n\n    if (!(typeof process !== \"undefined\" && process.env.VITEST)) {\n      startScheduler();\n      window.addEventListener(\"pagehide\", stopScheduler, { once: true });\n    }\n\n    setupScoreboard(this.controller.timerControls);\n    initQuitButton(store);\n    initInterruptHandlers(store);\n    watchBattleOrientation(() => this.applyBattleOrientation());\n\n    setupNextButton();\n    this.statButtonControls = initStatButtons(store);\n    onBattleEvent(\"statButtons:enable\", () => this.statButtonControls?.enable());\n    onBattleEvent(\"statButtons:disable\", () => this.statButtonControls?.disable());\n\n    initDebugPanel();\n    registerRoundStartErrorHandler(() => this.startRound());\n\n    const cleanupBattleStateProgress = await initBattleStateProgress();\n    if (cleanupBattleStateProgress) {\n      window.addEventListener(\"pagehide\", cleanupBattleStateProgress, {\n        once: true\n      });\n    }\n\n    await applyStatLabels().catch(() => {});\n    await initTooltips();\n    maybeShowStatHint();\n\n    try {\n      window.startRoundOverride = () => this.startRound();\n      window.freezeBattleHeader = () => {\n        try {\n          this.controller.timerControls.pauseTimer();\n          stopScheduler();\n        } catch {}\n      };\n      window.resumeBattleHeader = () => {\n        try {\n          startScheduler();\n          this.controller.timerControls.resumeTimer();\n        } catch {}\n      };\n    } catch {}\n  }\n\n  /** @returns {\"portrait\"|\"landscape\"} */\n  getOrientation() {\n    try {\n      const portrait = window.innerHeight >= window.innerWidth;\n      if (typeof window.matchMedia === \"function\") {\n        const mm = window.matchMedia(\"(orientation: portrait)\");\n        if (typeof mm.matches === \"boolean\" && mm.matches !== portrait) {\n          return portrait ? \"portrait\" : \"landscape\";\n        }\n        return mm.matches ? \"portrait\" : \"landscape\";\n      }\n      return portrait ? \"portrait\" : \"landscape\";\n    } catch {\n      return window.innerHeight >= window.innerWidth ? \"portrait\" : \"landscape\";\n    }\n  }\n\n  /**\n   * Applies current orientation to header.\n   *\n   * @pseudocode\n   * 1. Query `.battle-header`; resolve `false` if missing.\n   * 2. Determine orientation via `getOrientation`.\n   * 3. Update `data-orientation` when changed.\n   * 4. Resolve `true` once attributes are set.\n   *\n   * @returns {Promise<boolean>} Resolves `true` when applied, `false` if header missing.\n   */\n  async applyBattleOrientation() {\n    const header = document.querySelector(\".battle-header\");\n    if (header) {\n      const next = this.getOrientation();\n      if (header.dataset.orientation !== next) {\n        header.dataset.orientation = next;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Wrapper around controller's startRound with UI state management.\n   * @returns {Promise<void>}\n   */\n  async startRound() {\n    this.statButtonControls?.disable();\n    try {\n      await this.controller.startRound();\n    } catch {\n      // error already dispatched\n    } finally {\n      this.statButtonControls?.enable();\n    }\n  }\n}","qaContext":"Why: View layer for Classic Battle mode. How: (typeof process !","embedding":[-0.101,0.087,-0.018,0.122,0.028,0.176,0.041,0.008,0.022,-0.022,0.058,-0.126,-0.096,-0.027,-0.052,-0.004,0.056,-0.027,0.027,0.061,0.007,-0.033,0.112,0.072,-0.156,-0.024,-0.022,-0.089,-0.048,-0.084,0.053,-0.035,-0.088,-0.024,-0.08,-0.136,-0.111,-0.027,-0.01,-0.041,-0.027,0.137,-0.159,0.003,0.04,-0.092,-0.091,0.046,0.066,0.046,0.04,0.019,-0.015,-0.105,0.119,0.027,0.075,0.093,0.046,0.106,-0.05,-0.131,0.005,-0.025,0.058,0.023,0.048,0.042,0.063,0.084,-0.021,0.12,0.087,0.004,0.003,-0.024,-0.187,0.019,0.006,-0.111,-0.041,-0.099,-0.073,-0.015,0.066,0.047,0.082,-0.046,0.028,-0.142,-0.104,0.04,-0.06,0.133,0.008,0.142,-0.036,0.005,-0.069,0.038,0.089,-0.052,-0.073,0.135,0.079,-0.119,0.066,-0.084,-0.17,0.059,0.018,0.107,0.038,0.056,-0.038,0.056,0.159,0.062,-0.018,0.033,0.219,-0.004,0.038,-0.13,0.145,-0.032,0.146,0,0.045,-0.201,-0.206,0.073,-0.046,0.131,0.156,0.076,-0.012,0.023,-0.051,-0.052,-0.019,-0.054,0.016,-0.124,0.003,0.037,0.012,-0.012,0.117,-0.093,-0.07,-0.023,0.005,0.065,-0.023,0.037,-0.096,-0.006,0.108,-0.022,-0.035,0.062,0.022,-0.067,-0.004,-0.045,-0.034,-0.03,-0.191,-0.056,-0.255,0.038,-0.162,-0.192,0.045,-0.013,0.022,-0.02,-0.044,0.082,0.009,-0.194,-0.005,0.018,-0.035,-0.037,-0.115,0.026,-0.023,-0.088,-0.141,0.031,-0.125,0.139,-0.119,-0.144,-0.071,-0.193,0.04,-0.129,0.183,-0.087,0.091,-0.01,-0.018,0.126,-0.052,-0.127,0.064,-0.109,-0.178,0.156,0.129,0.002,0.046,-0.079,-0.047,0.09,-0.036,0.012,0.125,-0.017,0.075,0,0.113,0.005,-0.007,0.02,0.095,0.075,-0.037,0.097,-0.112,-0.155,-0.044,0.059,-0.044,0.069,-0.112,0.189,0.053,0.008,-0.016,0.035,0.105,0.068,0.01,-0.034,-0.074,0.034,0.023,0.067,0.093,-0.048,0.055,0.044,-0.127,-0.027,0.088,-0.054,0.071,0.146,-0.179,0.143,0.06,-0.052,0.012,-0.017,0.015,0.053,0.073,0.043,-0.065,0.123,-0.105,-0.067,-0.108,-0.004,-0.044,-0.032,-0.016,-0.163,-0.019,0.128,0.093,-0.099,0.05,-0.026,0.145,0.089,0.009,0.133,0.234,0.172,-0.036,0.011,0.069,-0.097,0.13,0.059,-0.032,-0.174,0.144,-0.034,0.03,-0.005,0.037,-0.179,-0.032,0.153,-0.168,0.059,0.001,0.021,-0.022,-0.01,0.102,-0.079,-0.051,0,-0.119,0.013,0.065,-0.075,-0.029,-0.103,-0.036,-0.063,-0.068,-0.111,0.126,0.135,0.126,-0.009,-0.048,-0.11,0.079,0.031,-0.106,0.056,-0.045,0.013,0.028,-0.04,0.026,-0.015,0.105,0.037,0.144,-0.019,-0.027,0.044,0.008,-0.004,-0.09,0.094,0.139,-0.052,0.071,0.13,0.047,-0.031,0.026,0,-0.072,0.02,-0.048,-0.064,0.136,-0.004,-0.115,-0.089,-0.068,0.061,0.027,0,0.062,-0.123,0.041,0.109,-0.01,-0.109,-0.031,0.075],"source":"src/helpers/classicBattle/view.js [ClassicBattleView]","tags":["code","how","class","utility","../setupScoreboard.js","./quitButton.js","./skipHandler.js","./interruptHandlers.js","./uiHelpers.js","./battleEvents.js","../battleStateProgress.js","../tooltip.js","../../utils/scheduler.js","../setupBottomNavbar.js","../setupDisplaySettings.js","../setupSvgFallback.js","../setupClassicBattleHomeLink.js","addEventListener","setBattleStateBadgeEnabled","isEnabled","getElementById","applyBattleFeatureFlags","dispatchEvent","skipCurrentPhase","resetStatButtons","querySelectorAll","warn","removeEventListener","resolve","finish","setTimeout","startScheduler","setupScoreboard","initQuitButton","initInterruptHandlers","watchBattleOrientation","applyBattleOrientation","setupNextButton","initStatButtons","onBattleEvent","enable","disable","initDebugPanel","registerRoundStartErrorHandler","startRound","initBattleStateProgress","catch","applyStatLabels","initTooltips","maybeShowStatHint","pauseTimer","stopScheduler","resumeTimer","matchMedia","querySelector","getOrientation","logging","state-management"],"metadata":{"construct":"class","role":"utility","graph":{"module":"src/helpers/classicBattle/view.js","node":"ClassicBattleView"},"patterns":[],"relations":{"imports":["../setupScoreboard.js","./quitButton.js","./skipHandler.js","./interruptHandlers.js","./uiHelpers.js","./battleEvents.js","../battleStateProgress.js","../tooltip.js","../../utils/scheduler.js","../setupBottomNavbar.js","../setupDisplaySettings.js","../setupSvgFallback.js","../setupClassicBattleHomeLink.js"],"calls":["addEventListener","setBattleStateBadgeEnabled","isEnabled","getElementById","applyBattleFeatureFlags","dispatchEvent","skipCurrentPhase","resetStatButtons","querySelectorAll","warn","removeEventListener","resolve","finish","setTimeout","startScheduler","setupScoreboard","initQuitButton","initInterruptHandlers","watchBattleOrientation","applyBattleOrientation","setupNextButton","initStatButtons","onBattleEvent","enable","disable","initDebugPanel","registerRoundStartErrorHandler","startRound","initBattleStateProgress","catch","applyStatLabels","initTooltips","maybeShowStatHint","pauseTimer","stopScheduler","resumeTimer","matchMedia","querySelector","getOrientation"]}},"version":1},
{"id":"uiService.js-syncScoreDisplay","text":"Update the scoreboard with current scores.\n1. Read scores via `getScores()`.\n2. Forward the values to `scoreboard.updateScore`.\n\nexport function syncScoreDisplay() {\n  const { playerScore, opponentScore } = getScores();\n  if (typeof scoreboard.updateScore === \"function\") {\n    scoreboard.updateScore(playerScore, opponentScore);\n    return;\n  }\n  // Fallback for tests that partially mock setupScoreboard without updateScore\n  const el = document.getElementById(\"score-display\");\n  if (el) {\n    let playerSpan = el.firstElementChild;\n    let opponentSpan = el.lastElementChild;\n    if (!playerSpan || !opponentSpan) {\n      playerSpan = document.createElement(\"span\");\n      opponentSpan = document.createElement(\"span\");\n      el.append(playerSpan, opponentSpan);\n    }\n    playerSpan.textContent = `You: ${playerScore}`;\n    opponentSpan.textContent = `\\nOpponent: ${opponentScore}`;\n  }\n}","qaContext":"Why: Update the scoreboard with current scores. How: Read scores via `getScores()`.","embedding":[0.055,-0.075,-0.037,0.07,0.065,0.109,-0.033,0.063,0.008,-0.022,0.028,0.007,-0.067,-0.068,0.031,-0.044,0.092,-0.029,0.047,-0.014,-0.102,-0.132,0.084,0.033,-0.034,0.017,-0.139,-0.011,-0.072,-0.011,0.102,-0.152,0.121,-0.041,-0.058,0.06,-0.028,0.013,-0.006,-0.018,0.036,0.026,0.025,0.039,0.07,-0.045,-0.111,0.014,-0.036,0.156,-0.02,-0.078,-0.025,-0.106,0.016,0.224,0.128,0.129,0.09,0.059,0.052,-0.073,0.139,-0.022,0.14,-0.064,0.074,0.035,-0.127,0.043,0.094,0.133,0.251,-0.043,0.042,0.108,-0.171,-0.02,0.115,0.007,-0.105,-0.169,-0.041,-0.019,0.075,0.015,0.145,-0.07,-0.024,-0.02,-0.006,-0.042,0.027,0.166,-0.056,0.202,-0.079,-0.003,-0.051,0.082,0.027,0.093,0.066,0.008,0.014,-0.067,-0.009,0,-0.141,-0.042,0.082,0.157,0.003,0.103,-0.109,-0.128,0.145,0.069,0.156,0.041,0.297,0.077,0.015,-0.06,-0.035,0.055,0.206,0,0.019,-0.124,-0.018,0.052,0.022,0.008,-0.04,0.084,-0.154,-0.028,0.049,0.045,0.096,0.017,-0.028,-0.021,-0.019,-0.045,-0.002,0.061,0.061,-0.093,-0.019,-0.099,-0.014,0.039,-0.051,0.107,-0.163,-0.072,-0.008,-0.09,-0.09,0.1,0.041,-0.015,0.072,-0.021,-0.156,0.03,0.053,-0.111,-0.136,0.025,-0.119,-0.105,-0.026,0.087,0.079,-0.121,-0.122,0.069,-0.02,-0.308,0.005,0.014,0.001,-0.029,0.026,-0.131,0.023,-0.027,-0.039,-0.028,-0.134,0.087,0.007,-0.183,0.068,-0.207,-0.023,0.018,-0.074,0.071,-0.134,-0.04,-0.217,-0.001,-0.062,-0.218,0.095,-0.101,-0.205,0.172,0.147,-0.002,-0.083,-0.015,-0.136,0.042,-0.012,-0.033,-0.037,-0.099,0.057,0,0.001,0.002,-0.108,0.082,0.123,-0.072,0.02,0.12,-0.051,-0.05,0.022,-0.059,-0.069,-0.07,-0.061,0.207,-0.093,0.027,0.059,-0.14,0.145,-0.018,0.107,0.065,-0.053,-0.039,0.037,-0.027,-0.087,-0.083,0.049,0.032,-0.012,-0.028,0.016,0.011,0.011,-0.076,-0.052,0.164,0.093,0.055,-0.115,0.015,0.078,0.173,0.061,0.019,-0.037,0.039,-0.071,-0.131,-0.076,-0.054,-0.047,-0.018,-0.017,-0.05,0.018,0.082,0.054,-0.09,0.044,-0.025,0.092,0.094,-0.027,0.048,0.146,0.193,-0.094,-0.003,0.046,-0.112,0.05,0.045,-0.039,0.021,0.12,-0.037,0.076,-0.009,0.073,-0.113,0.106,-0.006,0.067,0.122,-0.022,0.052,-0.009,0.042,0.004,-0.142,-0.076,0,-0.104,-0.024,-0.167,0.11,-0.127,0.015,0.041,-0.18,-0.063,-0.129,-0.013,-0.011,0.08,-0.029,0.005,-0.053,0.004,0.108,-0.079,0.091,0.041,0.163,0.056,0.053,0.132,0.027,0.009,-0.02,0.131,-0.028,0.013,0.005,0.092,-0.16,-0.048,0.052,0.033,-0.022,0.153,0.134,0.008,-0.008,-0.168,-0.009,0.023,-0.158,-0.103,0.006,0.027,-0.042,-0.053,-0.093,-0.128,-0.043,0.034,-0.044,0.044,0.094,-0.068,0.071,-0.038,-0.039,0.01,-0.027],"source":"src/helpers/classicBattle/uiService.js [syncScoreDisplay]","tags":["code","what","function","utility","../battleEngineFacade.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../navUtils.js","./uiHelpers.js","./battleEvents.js","getScores","updateScore","getElementById","createElement","append"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiService.js","node":"syncScoreDisplay"},"patterns":[],"relations":{"imports":["../battleEngineFacade.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../navUtils.js","./uiHelpers.js","./battleEvents.js"],"calls":["getScores","updateScore","getElementById","createElement","append"]}},"version":1},
{"id":"uiService.js-showMatchSummaryModal","text":"Show a match summary modal with result message and scores.\n\n@param {{message: string, playerScore: number, opponentScore: number}} result\n@param {Function} onNext Callback invoked when starting the next match.\n@returns {ReturnType<typeof createModal>} Created modal instance.\n1. Build title and score elements.\n2. Create Quit and Next buttons using `createButton`.\n3. Assemble the modal via `createModal` and append it to the DOM.\n4. Both buttons close and destroy the modal:\n   - Quit navigates to `index.html`.\n   - Next runs `onNext`.\n\nexport function showMatchSummaryModal(result, onNext) {\n  const title = document.createElement(\"h2\");\n  title.id = \"match-summary-title\";\n  title.textContent = result.message;\n\n  const scoreEl = document.createElement(\"p\");\n  scoreEl.id = \"match-summary-score\";\n  scoreEl.textContent = `Final Score – You: ${result.playerScore} Opponent: ${result.opponentScore}`;\n\n  const actions = document.createElement(\"div\");\n  actions.className = \"modal-actions\";\n\n  const quit = createButton(\"Quit Match\", {\n    id: \"match-summary-quit\",\n    className: \"secondary-button\"\n  });\n\n  const next = createButton(\"Next Match\", { id: \"match-summary-next\" });\n\n  actions.append(quit, next);\n\n  const frag = document.createDocumentFragment();\n  frag.append(title, scoreEl, actions);\n\n  const modal = createModal(frag, { labelledBy: title });\n\n  quit.addEventListener(\"click\", () => {\n    modal.close();\n    modal.destroy();\n    // Navigate to home (robust base path handling)\n    navigateToHome();\n  });\n\n  next.addEventListener(\"click\", () => {\n    modal.close();\n    modal.destroy();\n    if (typeof onNext === \"function\") onNext();\n  });\n\n  document.body.appendChild(modal.element);\n  modal.open();\n  return modal;\n}","qaContext":"Why: Show a match summary modal with result message and scores. How: Create Quit and Next buttons using `createButton`.","embedding":[-0.015,-0.062,0.046,0.132,0.03,0.159,-0.039,0.161,0.151,-0.09,-0.06,-0.017,-0.03,-0.011,0.016,0.027,-0.1,-0.081,-0.095,-0.031,0.255,0.016,0.135,-0.063,-0.053,-0.011,-0.028,-0.087,-0.057,-0.127,0.15,0,-0.015,-0.085,-0.142,-0.002,-0.187,-0.064,-0.014,-0.127,-0.009,0.138,-0.041,-0.038,-0.014,-0.193,-0.13,-0.041,0.123,0.223,-0.04,-0.014,0.092,-0.052,0.023,0.112,-0.049,0.022,0.092,0.046,0.097,-0.05,-0.046,-0.078,0.198,-0.11,0.085,-0.058,-0.057,0.085,0.049,-0.004,0.147,0.08,-0.068,-0.098,-0.192,-0.022,-0.082,0.088,0.068,-0.222,-0.071,-0.008,0.135,0.048,0.036,-0.04,-0.083,-0.168,-0.168,0.124,0.067,0.171,0.015,0.231,-0.133,-0.037,0.041,0.175,0.031,0.1,-0.228,0.058,0.076,-0.134,0.011,0.03,-0.165,0.081,-0.011,0.139,-0.001,0.159,0.008,-0.001,0.285,0.115,0.212,0.008,0.324,-0.088,-0.178,-0.089,0.146,-0.084,0.045,0,0.211,-0.211,-0.161,0.202,0.046,0.096,0.066,0.126,-0.122,0.001,-0.118,0.027,0.036,-0.076,-0.045,-0.202,0.014,-0.003,-0.047,-0.108,0.068,0.029,0.015,0.17,0.031,0.117,0.054,0.042,-0.168,-0.091,0.033,-0.002,-0.177,0.106,0.07,0.068,-0.073,0.054,-0.12,-0.046,0.001,-0.197,-0.212,-0.074,-0.185,-0.177,-0.061,0.068,0.039,-0.053,-0.187,0.106,0.049,-0.234,0.025,0.002,-0.085,0.002,-0.024,-0.052,-0.095,0.012,-0.039,0.068,-0.127,0.161,-0.081,-0.126,0.12,-0.252,-0.095,0.008,0.196,-0.026,0.017,0.04,-0.247,-0.063,-0.011,-0.076,0.171,-0.083,-0.172,0.125,0.304,-0.008,-0.009,-0.16,-0.055,0.144,-0.117,0.001,-0.009,0.011,0,0,0.014,0.122,-0.162,0.021,0.107,0.072,0.058,0.18,-0.161,-0.077,0.023,0.046,0.148,-0.024,-0.076,0.175,0.048,-0.014,-0.027,-0.042,0.058,0.169,0.027,-0.11,-0.114,-0.028,0.085,0.045,-0.044,-0.027,0.197,0.013,-0.014,0.022,0.127,-0.011,0.054,-0.056,-0.001,0.13,0.075,-0.194,0.081,-0.043,0.088,-0.092,0.085,-0.041,-0.053,0.011,0.054,-0.091,-0.22,-0.13,0.062,-0.079,-0.014,-0.09,-0.003,0.101,0.072,-0.094,0.074,0.052,0.212,-0.019,-0.004,0.01,0.117,0.325,-0.207,0.052,0.295,-0.059,0.208,0.011,-0.059,-0.073,0.037,-0.025,0.035,-0.01,0.049,-0.182,0.032,-0.036,-0.132,0.197,-0.005,0.02,-0.058,-0.112,0.135,-0.114,0.044,0,-0.155,0.043,-0.107,-0.016,-0.082,-0.027,-0.049,-0.114,-0.047,-0.174,0.058,0.142,0.058,0.026,-0.13,-0.119,0.039,-0.016,-0.002,0.092,0.024,-0.074,-0.014,0.075,0.127,-0.034,-0.117,-0.016,-0.032,0.073,-0.017,0.007,0.008,0.025,-0.216,0.019,0.159,-0.056,0.122,0.174,0.174,0.009,-0.117,0.082,0.047,0.022,-0.074,-0.082,0.092,0.022,-0.095,-0.159,-0.053,-0.133,0.131,-0.056,0.05,0.082,0.033,0.09,0.03,0.006,-0.047,-0.105],"source":"src/helpers/classicBattle/uiService.js [showMatchSummaryModal]","tags":["code","how","function","utility","../battleEngineFacade.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../navUtils.js","./uiHelpers.js","./battleEvents.js","createElement","createButton","append","createDocumentFragment","createModal","addEventListener","close","destroy","navigateToHome","onNext","appendChild","open"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiService.js","node":"showMatchSummaryModal"},"patterns":[],"relations":{"imports":["../battleEngineFacade.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../navUtils.js","./uiHelpers.js","./battleEvents.js"],"calls":["createElement","createButton","append","createDocumentFragment","createModal","addEventListener","close","destroy","navigateToHome","onNext","appendChild","open"]}},"version":1},
{"id":"uiHelpers.js-showSelectionPrompt","text":"Display a snackbar prompting the player to choose a stat.\n1. Clear any existing text in `#round-message`.\n2. Show \"Select your move\" via `showSnackbar`.\n\nexport function showSelectionPrompt() {\n  const el = document.getElementById(\"round-message\");\n  if (el) {\n    el.textContent = \"\";\n  }\n  showSnackbar(\"Select your move\");\n  emitBattleEvent(\"roundPrompt\");\n  try {\n    if (isTestModeEnabled()) console.warn(\"[test] roundPrompt emitted\");\n  } catch {}\n}","qaContext":"Why: Display a snackbar prompting the player to choose a stat. How: Show \"Select your move\" via `showSnackbar`.","embedding":[0.038,0.135,0.064,0.041,0.147,0.159,0.347,0.13,0.235,0.018,-0.005,-0.187,-0.038,0.039,0.074,-0.158,0.052,-0.192,0.126,-0.016,0.014,-0.094,0.249,0.025,0.053,0.026,0.152,-0.059,-0.066,-0.058,0.016,0.078,0.115,-0.077,-0.16,-0.14,-0.081,-0.048,0.055,0.014,0.056,-0.035,-0.13,-0.047,-0.067,-0.084,-0.146,0.119,0.014,0.174,0.075,-0.166,0.055,0.013,0.145,-0.01,0.013,-0.065,0.062,0.135,-0.021,-0.21,-0.006,-0.04,0.115,0.025,0.039,0.014,-0.041,0.158,0.106,0.061,0.107,0.058,0.039,-0.168,-0.195,-0.038,-0.007,0.148,-0.303,-0.258,-0.039,-0.038,0.117,0.073,0.044,0.087,0.057,-0.048,-0.192,-0.066,-0.049,0.159,-0.192,0.143,-0.246,-0.118,-0.006,0.047,0.092,0.103,0.017,0.002,-0.052,-0.064,0.072,-0.113,-0.033,0.124,0.002,-0.009,0.177,0.181,-0.239,0.032,0.06,0.083,-0.105,-0.115,0.226,0.031,-0.032,0.009,0.086,0.057,0.172,0,-0.054,-0.122,-0.124,0.16,0.089,0.065,-0.062,0.071,0.03,-0.099,0.179,0.033,0.058,-0.077,0.039,-0.084,-0.015,0.086,0.146,-0.102,-0.02,-0.094,0.006,0.007,0.076,0.079,-0.015,-0.042,-0.057,0.012,0.049,-0.021,0.027,0.048,0.046,-0.043,-0.167,0.033,-0.113,0.008,-0.049,-0.16,-0.316,-0.037,-0.235,0.029,-0.009,0.071,-0.026,-0.048,-0.007,0.036,0.081,-0.16,0.078,0.004,0.084,-0.039,-0.1,-0.115,0.052,0.054,0.102,-0.037,-0.138,0.117,-0.146,-0.064,-0.028,-0.182,0.081,0.004,0.094,0.043,-0.089,-0.077,-0.103,0.011,0.054,-0.177,0.289,-0.342,-0.084,-0.027,0.161,0.081,0.011,-0.16,-0.103,0.169,-0.105,0.008,-0.018,0.11,0.012,0,-0.068,0.142,-0.051,0.112,-0.016,0.136,0.041,0.068,0.053,-0.084,-0.127,0.19,-0.137,-0.031,0.037,0.266,0.017,-0.021,-0.109,-0.068,-0.03,-0.147,-0.107,0.073,-0.065,0.071,0.124,-0.003,0.031,-0.21,-0.029,0.017,0.031,-0.044,0.117,-0.139,0.179,0.012,-0.103,0.273,0.061,-0.042,-0.103,0.004,-0.098,0.047,0.146,-0.036,0.004,0.015,0.038,0.015,0.031,0.012,-0.072,0.113,-0.085,-0.027,0.131,-0.087,-0.008,-0.159,0.096,-0.076,0.135,-0.028,-0.069,0.188,0.139,0.101,0.127,0.008,0.076,-0.198,0.047,0.059,0.062,-0.197,-0.063,-0.018,0.096,0.064,0.106,-0.204,-0.057,0.156,-0.147,0.083,-0.135,0.117,-0.052,0.145,0.138,-0.136,-0.022,0,-0.14,-0.177,0.004,-0.104,0.205,-0.027,-0.095,-0.047,-0.051,-0.215,-0.001,0.05,0.094,-0.01,0.056,-0.194,-0.036,0.104,-0.095,0.028,0.05,0.043,0.037,-0.002,-0.099,-0.059,-0.201,0.148,0.039,-0.106,-0.075,0.073,0.083,0.019,-0.053,0.054,0.144,-0.1,0.127,0.164,0.055,0.037,-0.198,0.102,-0.319,0.059,0.003,-0.184,0.006,0.111,-0.016,-0.055,-0.072,0.098,-0.147,0.068,0.027,-0.044,-0.055,0.108,0.085,-0.009,-0.12,0.027],"source":"src/helpers/classicBattle/uiHelpers.js [showSelectionPrompt]","tags":["code","how","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","getElementById","showSnackbar","emitBattleEvent","isTestModeEnabled","warn","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"showSelectionPrompt"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["getElementById","showSnackbar","emitBattleEvent","isTestModeEnabled","warn"]}},"version":1},
{"id":"uiHelpers.js-renderOpponentCard","text":"Render the opponent card inside a container element.\n\n@param {{lookup: object, enableInspector?: boolean}} judoka Judoka data plus render deps.\n@param {HTMLElement | null} container Target container for the card.\n1. Extract lookup and inspector flag from `judoka`.\n2. Create a `JudokaCard` instance and render it to a DOM node.\n3. Clear and update the container, preserving the debug panel.\n4. Initialize lazy portrait loading when supported.\n\nexport async function renderOpponentCard(judoka, container) {\n  if (!judoka || !container) return;\n  const { lookup, enableInspector, ...data } = judoka;\n  let card;\n  try {\n    const judokaCard = new JudokaCard(data, lookup, { enableInspector });\n    if (judokaCard && typeof judokaCard.render === \"function\") {\n      card = await judokaCard.render();\n    } else {\n      return;\n    }\n  } catch (err) {\n    console.debug(\"Error rendering JudokaCard:\", err);\n    return;\n  }\n  const debugPanel = container.querySelector(\"#debug-panel\");\n  container.innerHTML = \"\";\n  if (debugPanel) container.appendChild(debugPanel);\n  container.appendChild(card);\n  if (typeof IntersectionObserver !== \"undefined\") {\n    try {\n      setupLazyPortraits(card);\n    } catch {}\n  }\n}","qaContext":"Why: Render the opponent card inside a container element. How: @param {{lookup: object, enableInspector?","embedding":[-0.041,0.212,0.021,0.14,0.041,0.037,-0.006,-0.016,0.029,-0.116,-0.028,-0.11,-0.148,-0.067,0.083,0.023,0.092,0.002,-0.018,0.114,0.085,-0.192,0.015,-0.024,-0.031,0.107,0.032,-0.117,0.006,-0.048,0.045,0.095,-0.121,0.026,-0.038,0.074,-0.104,0.017,-0.03,-0.058,-0.059,0.164,-0.141,-0.06,0.144,-0.17,-0.005,0.028,0.017,-0.029,-0.084,-0.034,0.085,-0.028,0.059,0.066,-0.03,-0.053,0.015,0.079,0.027,-0.022,0.164,0.008,0.114,-0.093,0.047,0.061,-0.047,0.115,0.067,0.045,0.162,-0.071,-0.016,-0.033,-0.047,-0.044,0.115,0.005,-0.055,-0.101,-0.031,-0.028,0.06,0.157,-0.002,-0.053,-0.099,-0.069,-0.046,0.074,0.074,0.06,0.013,0.047,-0.045,0.038,-0.073,0.083,0.017,0,-0.023,0.064,0.057,-0.129,0.08,0.012,-0.019,0.032,-0.027,0.124,-0.096,0.023,-0.175,-0.011,0.055,-0.135,0.004,0.077,0.187,-0.051,0.049,0.034,0.116,-0.046,0.054,0,0.122,-0.105,0.003,0.075,0.042,-0.112,0.029,-0.058,-0.132,0.095,-0.009,0.055,-0.053,0.038,0.016,-0.024,-0.102,0.018,0.016,-0.022,0.031,-0.136,-0.081,-0.073,-0.074,0.144,-0.077,0.013,-0.102,0.013,0.111,-0.128,-0.045,0.153,0.014,-0.022,0.076,0.003,-0.197,0.037,0.035,-0.016,0.068,-0.052,-0.04,-0.124,0.057,-0.02,-0.004,0.03,-0.076,0.105,0.11,-0.13,0.017,0.043,0.058,0.06,0.05,-0.047,-0.127,-0.024,-0.169,0.033,-0.086,0.104,-0.083,-0.135,-0.042,-0.149,-0.046,-0.025,0.103,-0.047,0.083,0.004,-0.207,0,-0.126,-0.019,0.004,-0.099,-0.168,0.098,0.029,0.068,0.044,-0.036,0.062,0.205,-0.069,0.032,-0.075,-0.172,0.077,0,0.062,-0.023,-0.005,0.05,0.104,-0.057,0.055,0.155,0.052,-0.188,-0.023,0.03,-0.024,-0.014,-0.132,0.227,-0.13,0.021,-0.006,-0.092,0.055,0.033,0.154,-0.01,-0.215,0.157,0.186,-0.029,0.018,-0.075,0.079,-0.07,-0.058,0.126,0.024,-0.096,-0.102,0.045,-0.063,0.12,-0.02,-0.039,-0.13,0.134,-0.04,-0.156,-0.001,0.09,0.197,0.047,-0.056,-0.16,-0.076,0.056,-0.003,-0.086,0.023,-0.089,0.098,0.157,0.014,-0.098,0.048,-0.051,0.041,0.014,-0.137,0.097,0.164,0.097,-0.013,0.079,0.032,-0.009,0.121,0.009,0.05,-0.015,0.211,-0.043,-0.039,-0.061,-0.073,-0.109,0.199,0.03,-0.1,0.035,-0.05,-0.103,0.027,-0.024,0.019,0.008,-0.066,0,-0.161,-0.061,-0.042,-0.042,-0.081,-0.064,0.099,-0.15,-0.057,-0.16,0.081,0.251,0.013,-0.053,0.089,-0.091,-0.041,-0.005,-0.127,0.031,0.014,-0.063,-0.029,0.08,0.086,-0.001,0.01,-0.05,0.144,0.116,-0.084,0.136,0.03,0.097,0.029,0.028,0.015,-0.032,0.093,0.119,0.049,-0.083,-0.132,-0.082,0.038,-0.021,0.015,-0.085,0.083,0.079,-0.03,-0.177,-0.161,0.056,0.003,-0.123,0.122,0.02,0.066,0.065,0.105,-0.083,0.064,-0.02],"source":"src/helpers/classicBattle/uiHelpers.js [renderOpponentCard]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","render","debug","querySelector","appendChild","setupLazyPortraits","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"renderOpponentCard"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["render","debug","querySelector","appendChild","setupLazyPortraits"]}},"version":1},
{"id":"uiHelpers.js-enableNextRoundButton","text":"export function enableNextRoundButton() {\n  const btn = document.getElementById(\"next-button\");\n  if (!btn) return;\n  btn.disabled = false;\n  btn.dataset.nextReady = \"true\";\n}","qaContext":"Why: export function enableNextRoundButton() { const btn = document. How: getElementById(\"next-button\"); if (!","embedding":[0.005,-0.062,-0.015,0.103,0.033,0.236,0.014,-0.007,-0.062,-0.046,0.023,0.136,-0.184,-0.093,-0.08,0.018,-0.056,-0.202,0.061,-0.149,0.016,-0.044,0.143,-0.017,-0.07,-0.112,-0.086,-0.111,0.006,0.029,-0.094,0.03,-0.143,-0.134,-0.142,-0.117,-0.138,-0.048,0.005,-0.019,-0.263,-0.062,-0.16,-0.391,0.13,0.056,-0.126,-0.092,0.105,0.138,0.145,0.03,0.085,-0.118,0.116,0.128,0.004,0.026,0.089,0.136,0.134,-0.215,0.038,0.102,0.13,0.297,-0.08,0.001,-0.119,0.02,0.142,0.036,0.129,0.018,0.151,-0.29,-0.095,0.051,0.191,0.054,-0.113,-0.065,-0.018,0.211,-0.113,-0.06,-0.098,0.146,-0.143,0.021,-0.114,0.083,0.062,0.203,-0.034,0.178,-0.174,0.03,-0.203,-0.109,0.012,0.012,-0.053,0.093,0.168,-0.254,0.231,-0.255,0.033,-0.004,0.031,0.258,0.01,-0.002,-0.219,-0.085,0.129,-0.031,0.037,-0.156,0.328,-0.071,0.065,-0.086,0.126,-0.161,0.116,0,0.093,-0.251,-0.139,-0.18,-0.053,0.025,0.011,0.004,-0.284,0.032,0.011,0.036,-0.045,0.005,0.008,-0.142,0.232,-0.065,0.055,-0.109,0.238,0.019,0.069,0.175,-0.046,0.077,-0.053,0.012,-0.027,0.048,-0.012,0.047,-0.018,0.064,-0.022,-0.141,-0.185,-0.063,0.03,0.059,0.136,-0.12,-0.046,-0.102,-0.162,0.112,0.038,-0.194,0.022,-0.082,-0.242,0.165,0.002,-0.189,0.238,-0.093,-0.222,0.127,-0.227,0.034,0.091,-0.044,0.084,0.142,-0.328,0.115,-0.125,-0.184,-0.035,-0.337,-0.064,-0.2,0.131,-0.103,0.125,0.044,-0.151,-0.035,-0.048,0.015,-0.004,-0.06,-0.232,0.105,0.41,-0.014,-0.072,-0.046,0.214,0.08,-0.002,0.005,-0.084,-0.055,-0.155,0,0.176,0.192,-0.106,0.029,-0.134,0.136,-0.114,0.155,0.05,0.021,0.302,-0.015,0.039,-0.223,-0.031,0.368,0.007,0.021,-0.07,-0.165,0.038,-0.096,-0.062,0.052,-0.107,0.07,0.007,0.228,0.006,-0.126,-0.117,0.235,0.103,0.124,-0.048,0.041,0.052,0.047,-0.217,0.165,0.004,0.041,-0.064,0.039,-0.075,0.1,-0.021,0.018,0.024,0.008,0.074,-0.059,0.099,-0.136,0.046,-0.11,-0.069,-0.091,0.094,-0.004,0.223,-0.397,0.28,0.111,0.062,0.146,-0.041,0.295,0.232,0.26,0.032,0.134,0.283,-0.202,0.075,0.045,-0.128,-0.247,0.037,-0.04,0.134,0.128,0.063,-0.154,0.122,-0.022,-0.157,0.007,-0.014,0.122,-0.185,-0.047,0.021,0.039,-0.084,0,-0.192,-0.187,-0.035,-0.239,0.15,0.043,0.026,0.049,-0.187,-0.177,0.179,0.282,0.145,-0.011,-0.014,0.022,-0.017,0.032,-0.018,0.211,0.145,-0.06,-0.074,0.225,0.195,0.019,-0.03,-0.006,0.204,0.087,-0.058,-0.071,0.023,-0.042,-0.181,0.057,0.085,-0.002,0.032,-0.025,0.056,-0.094,-0.085,0.186,-0.151,-0.161,-0.023,0.115,0.014,-0.061,-0.091,0.067,-0.024,0.138,0.103,-0.12,-0.066,0.125,-0.164,0.173,-0.099,0.036,0.04,-0.132],"source":"src/helpers/classicBattle/uiHelpers.js [enableNextRoundButton]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","getElementById"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"enableNextRoundButton"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["getElementById"]}},"version":1},
{"id":"uiHelpers.js-disableNextRoundButton","text":"export function disableNextRoundButton() {\n  const btn = document.getElementById(\"next-button\");\n  if (!btn) return;\n  btn.disabled = true;\n  delete btn.dataset.nextReady;\n}","qaContext":"Why: export function disableNextRoundButton() { const btn = document. How: getElementById(\"next-button\"); if (!","embedding":[-0.066,0.038,-0.024,0.132,0.091,0.128,0.068,-0.129,0.059,-0.011,0.031,0.133,-0.116,-0.161,-0.212,0.014,-0.187,-0.205,0.045,-0.048,0.032,0.025,0.138,0.12,-0.016,-0.128,0.027,-0.17,-0.063,-0.013,-0.04,0.054,-0.165,-0.119,-0.049,-0.057,-0.18,-0.055,0.097,-0.031,-0.198,0.025,-0.189,-0.378,0.141,0.128,-0.23,-0.144,0.094,0.139,0.179,0.102,0.005,-0.095,0.105,-0.006,0.055,0.014,0.056,0.208,0.176,-0.195,0.004,0.039,0.205,0.336,-0.117,-0.035,-0.057,0.055,0.103,0.022,0.086,0.028,0.175,-0.246,-0.143,0.011,0.068,0.065,-0.046,-0.084,-0.008,0.204,-0.078,-0.109,-0.074,0.056,-0.081,0.009,-0.124,0.16,0.204,0.222,-0.035,0.124,-0.187,0.049,-0.194,-0.048,0.02,0.06,-0.049,0.187,0.052,-0.219,0.173,-0.235,0.055,0.054,-0.092,0.268,-0.099,0.018,-0.203,-0.064,0.198,0.089,-0.009,-0.095,0.273,-0.112,-0.001,0.003,0.062,-0.175,0.131,0,0.077,-0.321,-0.259,-0.155,0.1,0.073,0.014,0.066,-0.171,0.095,0.005,-0.057,-0.014,0.006,0.08,-0.121,0.267,-0.067,-0.014,-0.165,0.258,0.119,0.022,0.122,-0.061,0.103,-0.058,-0.01,-0.027,0.035,-0.026,0.128,-0.133,0.148,-0.029,-0.172,-0.175,-0.101,0.052,0.016,0.109,-0.067,-0.098,-0.048,-0.122,0.037,0.175,-0.176,-0.026,-0.122,-0.186,0.126,0.066,-0.21,0.125,-0.119,-0.135,0.026,-0.172,0.038,0.085,0.014,0.075,0.19,-0.378,0.081,-0.135,-0.147,-0.087,-0.439,-0.04,-0.125,0.166,-0.175,0.106,-0.025,-0.133,0.039,-0.04,-0.004,0.035,-0.02,-0.258,0.048,0.38,-0.051,-0.026,-0.048,0.246,0.164,-0.042,-0.021,-0.145,-0.048,-0.117,0,0.134,0.256,-0.078,-0.041,-0.176,0.072,-0.101,0.292,0.031,0.05,0.292,-0.04,0.066,-0.238,-0.012,0.391,0.057,-0.028,-0.255,-0.23,0.001,-0.053,-0.1,0.001,-0.155,0.013,-0.008,0.311,0.09,-0.085,-0.095,0.276,0.205,-0.012,0,-0.01,0.044,0.045,-0.18,0.084,-0.025,0.01,-0.006,0.012,-0.039,0.082,-0.08,0.077,0.095,0.053,-0.007,-0.079,0.01,-0.215,-0.007,-0.098,-0.039,-0.063,0.12,-0.124,0.338,-0.303,0.21,0.219,0.096,0.085,-0.027,0.372,0.167,0.224,0.027,0.177,0.288,-0.18,0.007,-0.073,-0.129,-0.232,0.082,0.009,0.204,0.096,0.069,-0.193,0.032,-0.086,-0.211,0.027,-0.14,0.168,-0.17,-0.17,0.138,0.07,-0.017,0,-0.135,-0.181,0.019,-0.166,0.088,-0.007,0.018,0.282,-0.092,-0.14,0.221,0.264,0.059,-0.073,-0.105,-0.044,-0.029,-0.024,0.02,0.19,0.095,-0.126,-0.053,0.14,0.165,-0.006,0.08,0.016,0.213,0.027,-0.095,-0.037,0.07,0,-0.228,0.076,0.065,0.04,-0.006,0.054,-0.009,-0.069,-0.141,0.18,-0.162,-0.204,0.024,0.097,0.052,0.017,-0.094,0.106,-0.076,0.174,0.041,-0.186,-0.056,0.177,-0.2,0.202,-0.038,0.091,0.025,-0.141],"source":"src/helpers/classicBattle/uiHelpers.js [disableNextRoundButton]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","getElementById"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"disableNextRoundButton"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["getElementById"]}},"version":1},
{"id":"uiHelpers.js-collectDebugState","text":"Gather scores, timer details, and machine diagnostics for the debug panel.\n1. Initialize state with scores, timer, and match end flag.\n2. Add test seed when test mode is active.\n3. Merge machine state and diagnostics when available.\n4. Append store snapshot, build info, and DOM status.\n5. Return accumulated state.\n\nexport function collectDebugState() {\n  const state = {\n    ...getScores(),\n    timer: getTimerState(),\n    matchEnded: isMatchEnded()\n  };\n  if (isTestModeEnabled()) state.seed = getCurrentSeed();\n\n  try {\n    const win = typeof window !== \"undefined\" ? window : null;\n    if (!win || !win.__classicBattleState) return state;\n    state.machineState = win.__classicBattleState;\n    if (win.__classicBattlePrevState) state.machinePrevState = win.__classicBattlePrevState;\n    if (win.__classicBattleLastEvent) state.machineLastEvent = win.__classicBattleLastEvent;\n    if (Array.isArray(win.__classicBattleStateLog))\n      state.machineLog = win.__classicBattleStateLog.slice();\n    if (win.__roundDecisionEnter) state.roundDecisionEnter = win.__roundDecisionEnter;\n    if (win.__guardFiredAt) state.guardFiredAt = win.__guardFiredAt;\n    if (win.__guardOutcomeEvent) state.guardOutcomeEvent = win.__guardOutcomeEvent;\n    addMachineDiagnostics(win, state);\n  } catch {}\n\n  try {\n    const store = typeof window !== \"undefined\" ? window.battleStore : null;\n    if (store) {\n      state.store = {\n        selectionMade: !!store.selectionMade,\n        playerChoice: store.playerChoice || null\n      };\n    }\n  } catch {}\n\n  try {\n    const win = typeof window !== \"undefined\" ? window : null;\n    if (win?.__buildTag) state.buildTag = win.__buildTag;\n    if (win?.__roundDebug) state.round = win.__roundDebug;\n    if (Array.isArray(win?.__eventDebug)) state.eventDebug = win.__eventDebug.slice();\n    const opp = document.getElementById(\"opponent-card\");\n    if (opp) {\n      state.dom = {\n        opponentChildren: opp.children ? opp.children.length : 0\n      };\n    }\n  } catch {}\n\n  return state;\n}","qaContext":"Why: Gather scores, timer details, and machine diagnostics for the debug panel. How: 1.","embedding":[-0.017,0.132,-0.053,0.074,0.054,0.006,0.056,0.039,-0.028,0.001,-0.029,-0.218,-0.031,-0.051,-0.032,-0.047,-0.079,-0.097,0.009,-0.036,0.046,-0.07,0.03,0.007,0.019,0.064,-0.021,-0.059,-0.038,-0.015,-0.015,-0.017,-0.031,0.012,0.085,-0.056,-0.017,-0.048,-0.032,-0.128,0.077,0.118,-0.05,-0.042,-0.005,-0.104,-0.206,-0.071,0.031,0.077,-0.093,0.019,0.047,-0.053,0.083,0.156,0.026,0.052,-0.009,0.062,0.063,-0.15,-0.039,-0.092,0.13,0.056,-0.002,0.072,-0.014,-0.011,-0.079,0.147,0.118,-0.061,-0.129,-0.107,-0.133,-0.151,0.027,-0.051,-0.141,-0.18,-0.151,0.008,0.168,0.044,0.045,-0.071,0.094,-0.081,-0.181,0.025,-0.013,0.106,0.08,0.214,-0.004,-0.043,0.004,0.088,0.002,0.001,0.112,0.028,0.006,-0.117,-0.029,0.041,-0.097,0.025,0.003,0.212,0.09,0,0.037,0.078,0.04,-0.029,0.065,0.094,0.266,0.021,-0.009,-0.087,0.085,-0.035,0.132,0,0.092,-0.231,-0.096,0.19,0.085,0.102,0.037,0.046,-0.048,-0.024,-0.031,0.141,-0.027,-0.026,0.082,-0.101,0.02,0.074,0.075,0.043,0.153,-0.066,-0.088,0.018,0.05,0.046,-0.023,0.096,-0.07,0,0.099,-0.042,-0.14,0.053,0.098,-0.003,-0.048,0.012,-0.067,-0.075,-0.028,-0.095,-0.096,-0.023,-0.081,-0.173,-0.131,-0.094,0.027,0.064,-0.08,0.109,-0.046,-0.155,-0.022,0.022,0.009,0.056,0.009,0.037,-0.093,0.042,-0.053,-0.02,-0.006,0.128,-0.073,-0.044,-0.011,-0.136,0.027,-0.058,0.189,-0.025,0.075,-0.062,0.02,0.001,-0.215,-0.235,0.142,-0.183,-0.214,0.098,0.103,0.091,-0.043,-0.081,-0.126,0.196,-0.1,0.019,0.077,-0.039,-0.101,0,0.053,-0.038,0.002,-0.044,0.058,-0.007,0.012,0.067,-0.11,-0.078,0.011,0.028,0.029,0.049,-0.071,0.244,0.063,-0.148,0.03,0.016,0.042,0.15,-0.04,0.043,-0.11,0.064,-0.005,-0.043,0.017,-0.161,0.107,0.018,-0.17,0.084,0.105,-0.159,0.1,-0.016,-0.179,0.122,0.12,-0.066,-0.122,-0.037,0.027,0.113,0.138,0.102,-0.051,0.044,-0.009,-0.18,-0.117,0.044,-0.059,-0.09,0.113,-0.171,-0.044,0.08,0.054,-0.144,-0.062,-0.044,0.08,-0.027,-0.045,0.111,0.082,0.098,-0.094,0.034,0.078,-0.144,-0.002,0.147,0.018,-0.098,0.058,-0.004,-0.123,0,0.02,-0.168,-0.028,0.011,-0.03,0.084,-0.028,-0.017,-0.128,0.037,-0.034,-0.09,-0.03,0,-0.137,-0.013,-0.06,-0.04,0.06,-0.018,0.052,-0.075,0.012,-0.164,0.088,0.04,-0.001,0.006,0.009,-0.129,-0.066,0.047,-0.053,0.052,0.046,-0.046,0.07,0.135,0.021,0.032,0.074,-0.017,0.143,0.091,-0.08,0.14,0.107,-0.027,-0.004,0.076,0.098,0.013,0.136,0.128,0.102,0.012,-0.154,0.018,-0.026,-0.037,-0.074,-0.027,0.234,-0.038,-0.209,-0.106,0.018,0.027,-0.016,-0.01,0.045,-0.038,0.05,0.126,0.127,-0.122,-0.11,0.12],"source":"src/helpers/classicBattle/uiHelpers.js [collectDebugState]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","getScores","getTimerState","isMatchEnded","isTestModeEnabled","getCurrentSeed","isArray","slice","addMachineDiagnostics","getElementById","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"collectDebugState"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["getScores","getTimerState","isMatchEnded","isTestModeEnabled","getCurrentSeed","isArray","slice","addMachineDiagnostics","getElementById"]}},"version":1},
{"id":"uiHelpers.js-renderDebugState","text":"Stringify debug state and write it to a DOM element.\n\n@param {HTMLElement | null} pre Target element to update.\n@param {object} state Debug state object to render.\n1. Exit if `pre` is missing.\n2. Stringify `state` with indentation.\n3. Assign result to `pre.textContent`.\n\nexport function renderDebugState(pre, state) {\n  if (!pre) return;\n  pre.textContent = JSON.stringify(state, null, 2);\n}","qaContext":"Why: Stringify debug state and write it to a DOM element. How: @param {HTMLElement | null} pre Target element to update.","embedding":[-0.011,0.088,0.155,0.162,0.168,0.023,-0.026,0.056,0.059,-0.029,-0.005,-0.196,-0.144,-0.181,0.034,0.148,0.006,-0.165,-0.002,-0.155,0.166,0.033,-0.094,0.164,0.223,0.229,0.247,-0.095,-0.024,0.085,-0.037,-0.26,0.026,-0.03,0.01,0.258,-0.109,-0.16,0.033,-0.115,0.097,0.218,-0.079,-0.134,0.102,-0.155,-0.074,-0.06,-0.119,-0.071,0.188,-0.004,0.118,-0.072,0.022,-0.021,0.036,0.025,-0.155,0.016,-0.022,-0.097,0.127,-0.004,0.269,0.065,0.082,0.15,-0.129,0.032,-0.053,0.059,0.132,-0.112,-0.039,-0.032,-0.042,0.074,0.066,0.186,-0.051,-0.191,-0.082,0.005,0.031,0.158,-0.058,0.066,-0.144,-0.042,-0.201,-0.067,0.03,0.04,-0.287,0.309,0,0.03,-0.084,0.012,0.103,0.027,0.075,-0.051,-0.042,-0.125,0.085,0.027,-0.006,0.079,0.028,0.163,-0.044,0.056,-0.197,-0.068,0.159,-0.111,0.218,0.032,0.365,-0.049,0.08,0.15,0.141,-0.046,0.174,0,0.104,-0.029,0.005,0.058,-0.011,0.031,0.007,-0.223,-0.004,-0.058,0.068,0.044,0.026,-0.08,-0.106,-0.199,0.059,-0.094,0.06,0.053,-0.149,-0.052,-0.041,-0.134,-0.026,-0.017,-0.066,0.073,-0.26,-0.066,0.163,-0.008,0.077,0.174,-0.038,-0.042,-0.014,-0.068,-0.095,-0.086,0.134,-0.038,0.021,-0.037,0.059,-0.14,-0.12,0.011,-0.062,-0.12,-0.073,0.247,0.13,-0.219,0.055,-0.025,0.099,-0.166,0.24,-0.107,0.001,0.117,-0.068,0.037,-0.139,0.011,0.092,-0.012,0.003,-0.122,-0.093,-0.126,0.043,0.077,0.047,0.05,-0.222,-0.11,-0.014,-0.071,0.163,-0.235,-0.182,0.142,0.238,0.004,-0.123,0.04,-0.001,0.244,-0.007,-0.112,-0.014,-0.157,0.131,0,0.082,-0.096,-0.009,0.082,-0.042,-0.118,0.047,0.23,0.049,-0.118,-0.068,-0.014,-0.067,0.073,-0.268,0.388,-0.033,-0.108,0.189,-0.214,0.235,-0.067,0.084,0.097,-0.194,-0.02,0.152,-0.032,-0.161,-0.103,0.047,0.109,0.118,0.113,-0.146,-0.127,0.172,-0.008,0.001,0.191,0,-0.077,-0.069,0.148,-0.035,-0.024,-0.019,0.014,0.028,0.062,-0.07,-0.077,-0.059,0.013,0.016,-0.237,-0.176,-0.153,-0.055,-0.028,-0.242,-0.165,0.169,-0.082,-0.07,-0.148,-0.094,0.16,0.224,0.025,0.115,0,-0.11,-0.098,0.093,-0.022,-0.082,-0.123,0.148,-0.01,0.135,0.004,-0.135,-0.064,0.211,0.043,-0.148,0.194,-0.114,-0.044,-0.149,0.171,-0.118,-0.091,-0.097,0,-0.192,-0.079,-0.136,-0.125,-0.062,0.073,0.013,-0.245,0.054,-0.267,-0.075,0.144,-0.086,-0.17,-0.099,0.033,-0.044,0.089,-0.058,0.026,0.189,0.161,-0.178,0.014,0.329,-0.051,-0.005,0.035,0.044,-0.024,0.044,0.128,-0.008,0.029,-0.046,-0.013,0.292,-0.078,0.165,0.13,0.126,0.118,-0.166,-0.009,-0.132,-0.061,0.019,-0.03,0.072,-0.07,0.044,-0.122,-0.176,0.142,-0.046,-0.188,0.129,0.237,-0.027,0.11,0.158,-0.157,0.236,0.053],"source":"src/helpers/classicBattle/uiHelpers.js [renderDebugState]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","stringify","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"renderDebugState"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["stringify"]}},"version":1},
{"id":"uiHelpers.js-updateDebugPanel","text":"Update the debug panel with current game metrics and diagnostics.\n1. Obtain `#debug-output` element; exit if absent.\n2. Collect state via `collectDebugState`.\n3. Render the state with `renderDebugState`.\n\nexport function updateDebugPanel() {\n  const pre = getDebugOutputEl();\n  if (!pre) return;\n  const state = collectDebugState();\n  renderDebugState(pre, state);\n}","qaContext":"Why: Update the debug panel with current game metrics and diagnostics. How: Collect state via `collectDebugState`.","embedding":[-0.051,-0.023,0.057,0.034,0.093,-0.034,-0.066,-0.032,-0.032,0.145,-0.034,-0.224,-0.183,-0.158,-0.019,0.028,0.022,-0.144,0.149,-0.104,0.049,-0.075,-0.055,0.096,0.157,0.174,0.1,0.011,-0.051,-0.035,-0.028,0.036,-0.054,-0.116,0.016,0.11,-0.046,-0.084,-0.03,-0.075,-0.025,0.212,-0.11,-0.131,-0.013,-0.089,-0.102,-0.007,0.004,-0.02,0.165,0.158,0.175,-0.102,0.132,0.042,0.238,0.079,-0.055,0.097,-0.066,-0.038,0.02,-0.061,0.176,0.127,0.167,0.012,-0.084,0.019,-0.065,0.081,0.074,-0.278,-0.035,-0.072,-0.093,-0.017,0.101,-0.043,-0.003,-0.07,0.032,0.042,0.169,0.108,0.009,-0.065,0.01,0.052,-0.131,-0.045,0.042,0.172,-0.204,0.114,0.046,0.069,-0.03,0.038,0.044,0.088,0.159,0.005,0.05,0.059,0.051,0.076,-0.095,0.007,0.007,0.058,0.089,0.105,0.006,-0.023,0.067,0.005,0.034,-0.046,0.342,-0.021,-0.003,0.124,0.088,0.057,0.135,0,0.077,-0.116,0.035,0.074,0.021,0.14,0.024,-0.052,-0.013,-0.035,0.034,0.142,-0.066,0.017,0.01,-0.209,-0.009,-0.052,0.012,0.097,-0.002,-0.094,-0.072,-0.216,0.046,0.236,-0.059,0.165,-0.239,-0.045,0.111,-0.06,0.021,0.094,-0.021,-0.166,-0.098,-0.008,-0.148,-0.106,0.024,-0.05,-0.16,0.007,0.024,-0.053,-0.022,-0.097,-0.002,0.005,-0.061,0.174,0.031,-0.309,0.003,-0.077,0.092,-0.042,0.174,-0.045,0.025,0.145,-0.042,-0.026,-0.121,0.14,-0.021,0.033,-0.036,-0.183,-0.007,-0.001,0.206,0.103,0.101,0.052,-0.12,-0.054,-0.189,-0.18,0.112,-0.268,-0.167,-0.004,0.208,0.013,-0.051,0.059,-0.076,0.202,-0.112,-0.074,0.076,-0.068,0.03,0,-0.026,-0.018,-0.125,0.011,-0.133,-0.116,0.041,0.159,0.061,-0.086,-0.061,0.107,-0.14,0.029,-0.091,0.283,-0.021,-0.101,0.054,-0.178,0.069,-0.011,0.038,0.046,-0.166,0.041,0.281,-0.083,0.024,-0.183,0.099,0.08,-0.012,0.148,-0.004,-0.094,0.124,-0.188,-0.153,0.144,0.034,0.066,-0.079,0.174,0.04,0.069,-0.106,-0.096,0.041,0.018,-0.004,-0.077,-0.012,0.017,-0.049,-0.189,-0.018,0.011,-0.03,-0.016,-0.102,-0.08,-0.001,-0.051,0.049,-0.006,-0.098,0.103,0.294,0.056,0.088,-0.028,-0.084,-0.069,0.056,0.068,-0.023,-0.046,0.15,0.063,0.01,-0.113,0,-0.045,0.003,-0.083,-0.141,0.18,-0.022,-0.054,-0.058,0.103,-0.035,-0.009,0.041,0,-0.07,-0.095,0.032,-0.122,0.143,-0.01,-0.001,-0.031,-0.085,-0.183,-0.023,0.055,0.01,-0.025,0.084,0.003,-0.022,0.092,-0.086,-0.089,0.075,0.05,-0.012,0.055,-0.025,-0.241,0.021,-0.018,0.034,-0.116,-0.113,0.161,0.073,-0.115,0.06,0.041,0.079,0.024,0.205,0.168,-0.081,-0.023,-0.116,-0.064,-0.148,-0.006,-0.033,0.028,0.072,0.001,-0.089,-0.038,-0.084,0.062,0.045,-0.096,-0.101,0.031,0.12,0.066,0.002,-0.123,0.019,0.052],"source":"src/helpers/classicBattle/uiHelpers.js [updateDebugPanel]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","getDebugOutputEl","collectDebugState","renderDebugState","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"updateDebugPanel"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["getDebugOutputEl","collectDebugState","renderDebugState"]}},"version":1},
{"id":"uiHelpers.js-showRoundOutcome","text":"Show the round outcome across UI elements.\n\n@param {string} message - Outcome text to display.\n1. Display `message` via `showResult`.\n2. Forward the message to `scoreboard.showMessage`.\n3. Show the same message in a snackbar.\n\nexport function showRoundOutcome(message) {\n  showResult(message);\n  scoreboard.showMessage(message);\n  showSnackbar(message);\n}","qaContext":"Why: Show the round outcome across UI elements. How: Display `message` via `showResult`.","embedding":[0.016,0.215,-0.091,0.157,-0.042,0.218,0.146,0.144,0.236,-0.183,-0.019,-0.236,0.069,-0.048,0.063,-0.312,0.01,-0.162,0.058,-0.161,0.202,-0.063,0.128,0.008,0.081,0.091,0.013,0.071,-0.043,-0.018,0.019,0.038,0.152,0.058,-0.244,-0.029,0,-0.065,0.052,-0.067,0.081,0.094,-0.026,-0.035,0.085,-0.236,-0.292,0.098,0.005,0.113,0.062,-0.138,0.025,0.126,0.153,0.031,-0.089,-0.057,0.057,0.083,0.001,-0.085,0.082,-0.042,0.122,-0.133,-0.014,0.006,-0.092,-0.074,0.106,-0.106,0.298,-0.07,0.036,-0.064,-0.213,-0.004,-0.117,0.106,-0.299,-0.166,0.133,-0.022,0.196,0.043,0.053,0.016,-0.017,0.01,-0.124,0.006,0.005,0.273,-0.143,0.082,-0.141,-0.127,-0.037,0.103,0.004,0.194,0.192,-0.203,0.004,0.079,0.077,-0.112,0.064,-0.003,0.051,0.146,0.257,0.19,-0.104,-0.184,-0.026,0.007,0.249,-0.2,0.159,0.075,-0.109,-0.064,0.188,0.13,0.288,0,-0.101,-0.158,-0.015,0.09,0.139,0.078,-0.144,-0.035,0.036,-0.048,-0.004,0.102,-0.052,-0.069,0.002,-0.074,-0.006,0.017,0.142,-0.083,-0.185,-0.107,0.078,-0.032,0.175,0.171,0.166,-0.096,-0.234,-0.061,0.108,0.01,0.149,0.01,0.103,0.001,0.045,0.155,-0.126,0.088,-0.082,-0.173,-0.163,-0.112,-0.215,0.148,0.035,0.275,0.14,-0.152,-0.099,0.067,0.06,-0.129,0.068,-0.031,0.112,0,-0.021,-0.081,-0.114,0.068,0.077,-0.063,-0.276,0.205,-0.206,-0.239,-0.085,-0.087,-0.074,0.113,0.15,0.148,-0.047,-0.046,-0.155,-0.092,0.022,-0.197,0.262,-0.306,-0.168,0.071,0.242,0.228,0.128,-0.31,-0.198,0.046,-0.329,-0.021,0.151,-0.019,0.053,0,-0.091,0.15,-0.148,-0.039,0.093,0.013,0.06,0.074,-0.087,0.072,-0.129,0.064,-0.127,-0.103,-0.145,0.378,0.128,0.056,-0.023,-0.334,0.052,0.002,-0.156,0.035,-0.224,0.043,0.337,-0.024,0.031,-0.174,0.184,-0.167,0.176,-0.078,0.045,-0.082,0.24,-0.288,-0.029,0.336,0.028,-0.102,-0.255,0.087,-0.006,0.063,0.063,-0.121,-0.079,-0.035,0.145,-0.052,-0.039,-0.027,-0.143,0.045,-0.065,-0.021,-0.006,-0.133,-0.162,-0.243,0.242,-0.089,0.265,0.022,-0.053,0.055,0.131,0.32,0.106,-0.018,0.102,-0.103,0.1,0.165,0.069,0.021,0.016,0.077,0.16,0.05,0.259,-0.053,-0.03,0.028,0.101,0.245,-0.06,0.199,-0.094,0.073,0.212,-0.038,0.135,0,-0.191,-0.292,-0.038,-0.104,-0.069,0.119,-0.145,-0.17,-0.094,-0.254,-0.042,0.115,-0.093,-0.097,0.094,-0.155,-0.148,0.211,-0.079,-0.092,0.117,0.111,-0.056,0.005,-0.088,-0.109,-0.251,0.239,-0.194,-0.109,-0.04,0.003,0.147,-0.037,-0.003,-0.057,0.031,-0.047,0.294,0.3,0.061,-0.181,-0.034,0.059,-0.102,0.084,-0.077,-0.083,-0.011,0.059,-0.061,-0.113,-0.133,-0.02,-0.131,-0.036,-0.03,-0.053,0.032,0.133,-0.057,0.065,-0.028,0.016],"source":"src/helpers/classicBattle/uiHelpers.js [showRoundOutcome]","tags":["code","how","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","showResult","showMessage","showSnackbar"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"showRoundOutcome"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["showResult","showMessage","showSnackbar"]}},"version":1},
{"id":"uiHelpers.js-showStatComparison","text":"Show animated stat comparison for the last round.\n\n@param {ReturnType<typeof createBattleStore>} store - Battle state store.\n@param {string} stat - Stat key selected for the round.\n@param {number} playerVal - Player's stat value.\n@param {number} compVal - Opponent's stat value.\n1. Obtain `#round-result` element; exit if missing.\n2. Cancel any previous animation frame stored in `store.compareRaf`.\n3. If reduced motion is preferred, update text immediately and exit.\n4. Otherwise animate values from current to target over 500ms using scheduler frames.\n5. Store the new frame id on `store.compareRaf`.\n\nexport function showStatComparison(store, stat, playerVal, compVal) {\n  const el = document.getElementById(\"round-result\");\n  if (!el) return;\n  cancelFrame(store.compareRaf);\n  const label = stat.charAt(0).toUpperCase() + stat.slice(1);\n  const match = el.textContent.match(/You: (\\d+).*Opponent: (\\d+)/);\n  const startPlayer = match ? Number(match[1]) : 0;\n  const startComp = match ? Number(match[2]) : 0;\n  if (shouldReduceMotionSync()) {\n    el.textContent = `${label} – You: ${playerVal} Opponent: ${compVal}`;\n    return;\n  }\n  const startTime = performance.now();\n  const duration = 500;\n  let id = 0;\n  const step = (now) => {\n    const progress = Math.min((now - startTime) / duration, 1);\n    const p = Math.round(startPlayer + (playerVal - startPlayer) * progress);\n    const c = Math.round(startComp + (compVal - startComp) * progress);\n    el.textContent = `${label} – You: ${p} Opponent: ${c}`;\n    if (progress >= 1) {\n      cancelFrame(id);\n      store.compareRaf = 0;\n      return;\n    }\n    const next = scheduleFrame(step);\n    cancelFrame(id);\n    id = next;\n    store.compareRaf = id;\n  };\n  id = scheduleFrame(step);\n  store.compareRaf = id;\n}","qaContext":"Why: Show animated stat comparison for the last round. How: Otherwise animate values from current to target over 500ms using scheduler frames.","embedding":[0.005,0.116,-0.028,0.007,-0.014,0.213,0.073,0.077,0.149,-0.055,-0.039,-0.074,-0.059,-0.049,0.008,-0.063,-0.013,0.006,-0.088,-0.163,-0.003,-0.087,0.087,0.079,-0.068,0.111,-0.078,-0.074,-0.041,-0.047,0.018,-0.041,0.026,-0.029,-0.102,-0.008,-0.166,-0.062,0.021,-0.11,0.052,0.131,0.024,-0.039,0.018,-0.014,-0.229,-0.021,0.027,0.132,-0.119,-0.038,0.053,-0.065,0.049,0.12,0.156,0.048,0.051,-0.06,0,-0.157,0.114,-0.079,0.064,-0.039,0.066,0.039,-0.049,0.126,-0.017,0.116,0.116,-0.028,-0.138,0.015,-0.058,-0.045,-0.012,0.062,-0.067,-0.272,-0.121,-0.129,0.073,-0.036,0.142,-0.006,0.013,-0.099,-0.16,0.235,0.038,0.075,0.029,0.298,-0.114,0.044,0.08,0.113,0.033,-0.01,0.043,0.048,0.027,-0.132,0.072,0.03,-0.128,0.025,-0.013,0.088,0.089,0.136,0.026,0.139,0.147,0.035,0.058,0.04,0.297,0.014,-0.042,-0.034,0.037,-0.055,0.214,0,-0.027,-0.246,-0.109,-0.048,-0.004,0.027,0.032,-0.01,-0.072,-0.061,-0.135,0.075,-0.038,-0.023,-0.025,-0.191,0.108,-0.001,0.053,-0.099,0.124,-0.143,-0.091,0.031,0.025,0.044,-0.017,0.006,-0.093,-0.108,0.131,-0.013,-0.109,0.017,0.156,-0.083,0.014,0.076,-0.068,-0.027,-0.124,-0.045,-0.146,-0.041,-0.123,-0.162,-0.04,0.089,-0.048,0.035,-0.013,0.084,-0.071,-0.23,0.028,-0.004,-0.009,-0.002,-0.116,0.091,-0.049,0.119,0.036,-0.038,-0.111,0.091,-0.065,-0.043,0.068,-0.108,0.045,-0.039,0.169,0.001,0.073,-0.073,-0.099,-0.016,-0.151,-0.21,0.13,-0.156,-0.139,0.137,0.1,0.039,0.006,-0.036,-0.036,0.137,-0.065,0.021,0.079,0.092,0.016,0,0.069,0.041,0.027,0.091,0.167,0.039,0.096,0.107,-0.012,-0.057,-0.013,-0.037,0.014,-0.054,0.016,0.081,0.082,-0.065,0.033,0.037,0.045,0.029,-0.054,-0.04,-0.124,0.082,0.152,-0.011,-0.078,-0.113,-0.006,-0.084,-0.112,0.063,-0.004,-0.172,0.133,-0.011,-0.11,0.122,0.094,-0.104,-0.069,-0.034,-0.037,0.068,0.078,0.145,0.011,-0.085,-0.018,-0.059,-0.119,-0.018,0.001,-0.092,-0.014,-0.142,-0.015,0.12,-0.043,-0.094,0.1,0.019,0.169,0.014,-0.127,0.042,0.049,0.197,0.007,0.152,0.135,-0.055,0.011,-0.018,-0.057,-0.018,0.169,0.062,0.036,0.104,0.051,-0.211,-0.059,0.152,-0.079,0.039,-0.013,-0.044,-0.071,-0.056,-0.031,-0.055,0.045,0,-0.105,-0.025,-0.015,0.031,-0.006,0.032,0.019,-0.111,0.038,-0.13,0.178,0.059,0.152,-0.032,-0.153,-0.079,-0.032,-0.069,0.043,0.187,0.03,-0.064,-0.064,-0.05,0.061,0.025,0.039,0.081,0.111,-0.014,0.005,0.003,0.068,-0.038,0.027,-0.113,0.097,-0.006,0.111,0.179,0.05,0.077,-0.103,-0.002,0.034,-0.105,0.004,-0.115,0.158,-0.007,-0.049,-0.222,-0.081,-0.042,0.11,-0.08,0.107,-0.021,-0.069,0.141,0.003,-0.166,-0.055,0.048],"source":"src/helpers/classicBattle/uiHelpers.js [showStatComparison]","tags":["code","how","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","getElementById","cancelFrame","toUpperCase","charAt","slice","match","Number","shouldReduceMotionSync","now","min","round","scheduleFrame","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"showStatComparison"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["getElementById","cancelFrame","toUpperCase","charAt","slice","match","Number","shouldReduceMotionSync","now","min","round","scheduleFrame"]}},"version":1},
{"id":"uiHelpers.js-watchBattleOrientation","text":"Watch for orientation changes and update the battle header.\n1. Determine current orientation via `matchMedia` when possible.\n2. Apply orientation to `.battle-header[data-orientation]` when changed.\n3. Expose `window.applyBattleOrientation` for manual updates.\n4. If the header is missing, poll via `scheduleFrame` until applied.\n5. On resize/orientation change, throttle updates with `requestAnimationFrame`.\n\nexport function watchBattleOrientation(callback) {\n  if (typeof callback !== \"function\") {\n    return;\n  }\n\n  const invoke = () => Promise.resolve(callback());\n  try {\n    window.applyBattleOrientation = invoke;\n  } catch {}\n\n  let pollId;\n  const pollIfMissing = () => {\n    if (pollId) return;\n    pollId = scheduleFrame(() => {\n      invoke().then((ok) => {\n        if (ok) {\n          cancelFrame(pollId);\n          pollId = 0;\n        }\n      });\n    });\n  };\n\n  invoke().then((ok) => {\n    if (!ok) {\n      pollIfMissing();\n    }\n  });\n\n  let rafId;\n  const onChange = () => {\n    invoke().then((ok) => {\n      if (!ok) {\n        pollIfMissing();\n      }\n    });\n    if (rafId) return;\n    rafId = requestAnimationFrame(() => {\n      rafId = 0;\n      invoke().then((ok) => {\n        if (!ok) {\n          pollIfMissing();\n        }\n      });\n    });\n  };\n\n  window.addEventListener(\"orientationchange\", onChange);\n  window.addEventListener(\"resize\", onChange);\n}","qaContext":"Why: Watch for orientation changes and update the battle header. How: Determine current orientation via `matchMedia` when possible.","embedding":[-0.092,0.12,0.042,0.032,0.034,0.08,0.079,0.012,0.013,0.007,-0.086,-0.049,-0.127,-0.06,0.026,-0.058,-0.016,0.037,-0.089,-0.024,-0.043,-0.025,0.094,0.029,-0.042,-0.012,-0.03,-0.088,0.009,-0.152,0.135,0.028,-0.13,0.011,-0.175,-0.114,-0.122,-0.077,-0.119,-0.035,-0.017,0.083,-0.134,-0.08,0.12,0.047,-0.129,0.045,0.035,0.03,-0.092,-0.12,-0.067,-0.045,0.128,0.037,0.105,0.091,0.112,0.05,0.034,-0.189,0.02,0.016,-0.035,-0.06,0.011,0.052,0.028,0.055,0.022,0.082,0.105,-0.15,-0.107,-0.079,-0.111,0.043,0.008,-0.046,0.003,-0.045,-0.109,0.07,0.097,-0.003,-0.028,0.002,0.016,0.021,-0.121,0.171,-0.13,0.041,-0.005,0.1,-0.163,-0.121,0.016,0.125,0.099,-0.073,-0.124,0.214,0.006,-0.099,-0.024,-0.031,-0.12,0.086,0.088,0.098,0.098,0.031,-0.098,0.092,0.096,0.017,-0.029,0.036,0.213,-0.003,0,-0.162,0.129,0.014,0.236,0,-0.029,-0.151,-0.094,0.093,0.063,0.104,0.153,0.011,-0.005,-0.087,0.034,0.173,-0.065,-0.037,-0.067,-0.193,0.079,0.18,-0.006,0,0.101,-0.078,-0.112,0.068,0.008,-0.028,0.006,0.13,-0.218,0.004,0.162,-0.07,-0.183,0.029,0.029,-0.117,-0.142,0.047,-0.162,-0.006,0.016,0.031,-0.267,-0.019,-0.157,-0.067,0.047,-0.031,0.139,-0.042,0.015,0.09,0.034,-0.208,0.082,0.127,0.01,0.064,-0.074,-0.039,-0.07,0.004,-0.09,-0.047,-0.024,0.069,-0.066,-0.096,-0.084,-0.131,0.105,-0.057,0.106,0.103,-0.002,-0.002,-0.1,0.177,-0.11,-0.111,0.101,0.054,-0.061,0.149,0.098,-0.085,0,-0.016,-0.088,0.203,-0.065,-0.018,0.158,-0.034,-0.009,0,-0.032,-0.024,-0.089,0.011,-0.032,0.13,0.036,0.12,-0.093,-0.106,-0.066,0.101,-0.058,0.01,-0.119,0.114,-0.065,-0.019,-0.085,0.089,0.047,0.11,0.088,0.036,0.028,0.085,0.122,0.072,0.062,-0.083,-0.074,-0.096,-0.206,0.079,0.181,-0.136,0.064,0.059,-0.146,0.224,0.024,-0.013,0.013,-0.021,0.041,0.004,-0.032,0.109,-0.084,-0.009,-0.016,0.005,-0.06,0.109,0.086,0.009,0.115,-0.138,0.009,0.176,0.084,-0.306,0.047,-0.044,0.076,0.11,-0.031,-0.049,0.195,0.167,0.026,-0.025,0.071,-0.103,0.086,0.031,0.096,-0.196,0.101,-0.023,-0.081,-0.005,0.086,-0.132,0.002,0.097,-0.142,-0.01,0.073,0.032,-0.104,-0.076,-0.004,-0.009,-0.011,0,-0.123,-0.083,0.12,0.052,-0.079,-0.1,-0.014,-0.129,0.048,-0.172,0.067,0.077,0.288,0.061,0.05,-0.107,0.042,0.038,-0.098,0.003,0.006,0.045,0.01,-0.01,0.068,-0.017,0.056,0.04,0.072,-0.03,-0.123,0.029,0.071,-0.052,-0.085,-0.012,0.021,-0.031,0.117,0.084,0.013,0.063,-0.043,0.022,-0.013,-0.006,0.049,-0.036,0.02,0.016,-0.062,-0.1,-0.031,0.045,-0.01,0.055,0.05,-0.167,0.035,0.064,-0.027,-0.028,-0.181,-0.042],"source":"src/helpers/classicBattle/uiHelpers.js [watchBattleOrientation]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","resolve","callback","scheduleFrame","then","invoke","cancelFrame","pollIfMissing","requestAnimationFrame","addEventListener"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"watchBattleOrientation"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["resolve","callback","scheduleFrame","then","invoke","cancelFrame","pollIfMissing","requestAnimationFrame","addEventListener"]}},"version":1},
{"id":"uiHelpers.js-registerRoundStartErrorHandler","text":"Register handler to surface round start errors via UI.\n\n@param {() => Promise<void>} retryFn - Function invoked when retrying.\n@returns {() => void} Cleanup function.\n1. Define `onError` to show a message and retry modal.\n2. Listen for `round-start-error` on `document`.\n3. Return cleanup function to remove the listener.\n\nexport function registerRoundStartErrorHandler(retryFn) {\n  const onError = () => {\n    scoreboard.showMessage(\"Round start error. Please retry.\");\n    showRetryModal(retryFn);\n  };\n  document.addEventListener(\"round-start-error\", onError);\n  return () => document.removeEventListener(\"round-start-error\", onError);\n}","qaContext":"Why: Register handler to surface round start errors via UI. How: Define `onError` to show a message and retry modal.","embedding":[-0.114,-0.04,0.117,0.119,-0.016,0.021,0.089,0.18,0.075,-0.109,-0.017,-0.113,-0.101,0.054,-0.041,-0.136,-0.139,-0.103,0.077,-0.031,0.033,0.094,-0.041,0.031,-0.04,-0.082,-0.068,-0.078,0.052,-0.118,0.071,0.064,-0.189,-0.096,-0.01,0.159,-0.091,-0.023,-0.071,-0.035,0.046,0.114,-0.087,0.079,0.126,-0.132,-0.041,0.098,0.041,0.193,0.082,0.072,0.032,-0.042,0.068,0.036,0.013,0.089,0.078,0.142,0.035,-0.256,0.025,-0.084,0.158,-0.008,0.088,-0.2,-0.014,0.12,0.021,-0.029,0.014,0.076,0.019,-0.028,-0.18,-0.025,-0.06,0.071,-0.057,-0.167,0.116,-0.024,0.118,-0.001,0.022,-0.032,0.12,-0.004,-0.116,0.136,-0.126,0.189,-0.1,0.077,-0.162,-0.016,-0.053,0.071,0.075,-0.031,0.016,0.064,0.005,0.004,-0.037,-0.052,-0.151,0.056,-0.019,0.078,0.279,0.033,0.039,0.1,-0.063,0.051,0.073,-0.072,0.119,0.054,0.09,-0.166,0.189,-0.048,0.143,0,-0.009,0.006,-0.175,0.063,0.05,-0.04,0.072,0.07,-0.071,0.012,0.056,0.014,-0.081,-0.255,0.06,-0.091,0.2,-0.01,-0.079,0.051,0.048,-0.153,-0.011,0.012,0.018,0.163,0.028,0.002,-0.058,-0.034,0.195,0.041,-0.031,0,0.061,-0.16,0.078,0.072,-0.154,-0.007,-0.215,0.075,-0.239,0.046,0.061,-0.211,-0.01,0.176,0.126,-0.203,0.001,0.149,0.101,-0.12,0.151,0.082,-0.032,0.003,-0.086,-0.115,0.044,-0.035,-0.178,-0.124,-0.063,0.035,-0.012,-0.024,-0.163,-0.173,0.051,-0.015,0.07,0.162,-0.041,-0.006,0.029,0.06,0.079,-0.303,0.15,-0.143,-0.126,0.113,0.04,-0.01,0.105,-0.054,-0.072,0.188,-0.089,-0.008,0.034,0.004,-0.201,0,-0.023,-0.005,-0.184,0.159,0.001,0.091,0.155,0.196,-0.009,-0.127,-0.08,-0.028,0.038,0.089,-0.099,0.119,-0.089,0.099,-0.073,0.006,0.18,-0.071,-0.041,0.08,-0.261,0.105,0.041,-0.035,-0.086,0.007,0.096,-0.018,0.082,-0.029,0.181,-0.028,0.132,-0.114,-0.124,0.014,0.237,0.032,-0.152,-0.055,0.053,-0.031,0.132,-0.086,-0.14,-0.088,-0.091,-0.078,-0.021,-0.017,-0.04,0.114,0.147,-0.206,0.001,0.162,0.021,-0.133,0.116,0.02,0.168,0.059,-0.091,0.059,0.263,0.137,0.009,0.064,0.145,-0.153,0.036,0.1,-0.089,-0.243,0.098,0.015,0.099,0.058,0.05,-0.001,0.156,-0.03,0.061,0.141,0.01,0.093,-0.026,-0.047,0.188,-0.037,0.033,0,-0.196,0.056,0.081,-0.179,0.042,-0.019,0.077,-0.088,-0.196,-0.236,-0.077,0.033,0.062,-0.012,0.063,-0.075,0.036,0.184,-0.118,-0.097,-0.003,-0.011,0.072,-0.085,-0.053,-0.095,0.033,0.244,-0.043,-0.188,-0.231,-0.065,0.103,0,-0.157,0.146,0.141,-0.015,0.175,0.032,0.026,0.045,-0.028,0.056,-0.005,0.007,-0.077,-0.053,0.086,0.008,-0.128,-0.087,-0.117,0.074,-0.016,0.054,-0.028,-0.086,-0.098,-0.041,-0.052,0.045,0.009,-0.156],"source":"src/helpers/classicBattle/uiHelpers.js [registerRoundStartErrorHandler]","tags":["code","how","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","showMessage","showRetryModal","addEventListener","removeEventListener"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"registerRoundStartErrorHandler"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["showMessage","showRetryModal","addEventListener","removeEventListener"]}},"version":1},
{"id":"uiHelpers.js-setupNextButton","text":"Attach click handler to the Next button.\n1. Locate `#next-button`; exit if missing.\n2. Add `onNextButtonClick` listener for `click` events.\n\nexport function setupNextButton() {\n  const btn = document.getElementById(\"next-button\");\n  if (!btn) return;\n  btn.addEventListener(\"click\", onNextButtonClick);\n}","qaContext":"Why: Attach click handler to the Next button. How: 1.","embedding":[-0.019,-0.118,0.049,-0.06,0.115,0.099,0.051,0.081,0.034,-0.015,0.062,-0.111,-0.097,0.014,-0.015,0.001,-0.186,-0.047,0.062,-0.143,-0.002,-0.009,0.126,-0.136,-0.222,-0.116,-0.013,-0.113,0.015,0.118,0.087,-0.089,-0.165,-0.146,-0.006,-0.037,-0.171,-0.052,0.102,-0.087,-0.097,0.025,-0.08,-0.153,0.059,-0.122,-0.218,-0.041,0.071,0.163,0.096,-0.091,0.098,-0.116,0.041,0.1,-0.034,-0.111,0.1,0.014,0.292,-0.214,-0.066,0.127,0.093,0.215,-0.01,0.063,-0.126,-0.055,-0.003,0.047,-0.073,0.179,0.059,-0.323,0.008,0.181,-0.079,0.048,-0.075,-0.055,0.032,0.046,0.003,-0.152,-0.117,0.074,-0.174,0.008,-0.078,0.045,-0.048,0.093,0.13,0.189,-0.133,0.094,-0.032,-0.095,0.017,-0.015,-0.161,-0.099,0.11,-0.066,-0.096,-0.21,0.018,0.031,-0.01,0.132,0,-0.119,-0.077,0.062,0.16,-0.033,0.198,-0.196,0.319,0.037,-0.087,-0.007,0.14,0.03,0.06,0,-0.028,-0.136,-0.177,-0.05,-0.072,0.15,0.154,-0.012,-0.201,0.035,-0.085,-0.026,0.013,-0.032,0.028,-0.172,0.076,-0.058,-0.025,-0.058,0.041,0.051,0.064,0.24,0.012,0.208,0.092,-0.081,0.072,0.005,0.035,-0.032,0.022,0.04,0.11,-0.051,-0.13,0.023,-0.024,-0.11,0.139,-0.05,-0.084,-0.076,-0.011,0.021,0.09,-0.138,0.114,-0.054,-0.168,0.008,0.061,-0.049,0.19,0.036,-0.075,-0.001,-0.079,-0.026,0.061,-0.084,0.095,0.162,-0.25,-0.003,-0.047,-0.007,0.062,-0.071,0.043,-0.033,0.082,-0.094,0.145,0.095,-0.213,-0.076,0.08,0.007,-0.062,-0.048,-0.17,0.115,0.256,-0.009,-0.043,-0.015,0.042,0.103,0.04,-0.092,-0.049,0.162,-0.011,0,0.091,0.207,0.044,-0.029,-0.113,0.1,-0.045,-0.054,-0.036,-0.008,0.069,0.108,0.101,-0.05,-0.023,0.404,0.065,-0.015,0.055,-0.192,0.165,-0.076,0.082,0.069,-0.084,-0.013,0.17,0.098,-0.113,-0.024,-0.064,0.117,0.131,0.222,0.06,0.087,0.224,-0.045,0.016,0.04,0.05,-0.088,0.057,-0.092,-0.119,0.128,-0.153,0.058,-0.105,-0.03,-0.007,-0.108,-0.061,-0.132,0.006,0.068,-0.177,-0.03,0.013,-0.019,0.055,-0.324,0.238,0.053,-0.064,0.125,-0.177,0.18,0.06,0.344,-0.147,0.129,0.076,-0.175,-0.026,-0.016,-0.07,-0.154,0.067,-0.121,0.046,0.005,0.118,-0.181,0.002,-0.016,0.019,-0.014,-0.046,-0.019,-0.201,0.085,0.067,-0.06,-0.005,0,-0.094,-0.067,0.064,-0.155,0.059,-0.021,-0.066,0.048,-0.152,-0.036,0.062,0.169,0.203,0.065,-0.103,-0.017,0.035,-0.06,0.003,0.1,0.196,-0.006,0.027,0.152,-0.016,-0.061,0.018,-0.015,0.203,-0.134,-0.011,0.011,-0.21,-0.038,-0.196,0.091,0.108,-0.046,0.094,-0.037,-0.055,-0.127,-0.062,0.187,-0.215,-0.116,-0.097,0.022,0.045,-0.029,0.04,-0.024,-0.08,0.051,0.144,-0.089,-0.108,0.129,-0.028,0.076,-0.233,0.034,-0.026,-0.115],"source":"src/helpers/classicBattle/uiHelpers.js [setupNextButton]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","getElementById","addEventListener","onNextButtonClick","getNextRoundControls"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"setupNextButton"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["getElementById","addEventListener","onNextButtonClick","getNextRoundControls"]}},"version":1},
{"id":"uiHelpers.js-selectStat","text":"Programmatically select a stat as if the user clicked the button.\n\n@param {ReturnType<typeof import('./roundManager.js').createBattleStore>} store\n@param {string} stat\n\nexport function selectStat(store, stat) {\n  const btn = document.querySelector(`#stat-buttons [data-stat='${stat}']`);\n  // derive label from button text if available\n  const label = btn?.textContent?.trim() || stat.charAt(0).toUpperCase() + stat.slice(1);\n  // best-effort visual state\n  try {\n    const container = document.getElementById(\"stat-buttons\");\n    container?.querySelectorAll(\"button\").forEach((b) => (b.disabled = true));\n    btn?.classList.add(\"selected\");\n  } catch {}\n  // read values from cards\n  const pCard = document.getElementById(\"player-card\");\n  const oCard = document.getElementById(\"opponent-card\");\n  const playerVal = getCardStatValue(pCard, stat);\n  const opponentVal = getCardStatValue(oCard, stat);\n  // fire selection and snackbar\n  try {\n    Promise.resolve(handleStatSelection(store, stat, { playerVal, opponentVal })).catch(() => {});\n  } catch {}\n  try {\n    showSnackbar(`You Picked: ${label}`);\n  } catch {}\n}","qaContext":"Why: Programmatically select a stat as if the user clicked the button. How: @param {ReturnType<typeof import('.","embedding":[-0.077,0.121,-0.097,0.149,0.005,0.198,0.199,0.155,-0.039,-0.041,-0.027,-0.14,-0.043,-0.08,0.114,0.009,0.031,-0.077,-0.006,-0.007,0.052,0.022,0.112,-0.036,-0.075,-0.014,0.027,-0.099,-0.09,-0.027,-0.039,0.054,0.025,-0.069,-0.05,-0.088,-0.084,-0.06,0.073,-0.053,-0.022,0.078,-0.081,-0.021,0.034,-0.051,-0.091,0.029,0.001,0.096,-0.019,0.005,0.035,-0.068,0.06,0.114,0.006,-0.051,0.016,0.08,0.01,-0.196,0.043,-0.021,0.074,0.013,0.119,0.014,-0.063,0.031,0.02,0.13,0.051,0.052,-0.029,-0.105,-0.108,-0.036,0.095,0.027,-0.13,-0.146,-0.113,0.069,0.116,0.043,0.016,0.046,0.006,-0.092,-0.146,0.115,-0.01,0.083,-0.008,0.115,-0.091,0.005,-0.073,0.06,0.063,-0.02,-0.022,-0.001,-0.016,-0.156,0.085,-0.064,-0.041,0.009,-0.053,0.15,-0.011,0.067,-0.173,0.022,0.14,-0.066,-0.014,0.021,0.201,0.06,-0.038,-0.001,-0.008,0.008,0.152,0,0.049,-0.144,-0.051,-0.01,-0.057,0.069,0.015,0.052,-0.03,0.033,0.001,-0.03,0.033,-0.027,-0.003,-0.074,-0.027,0.028,0.037,-0.082,0.059,0.037,0.007,0.027,-0.045,0.077,-0.075,0.115,0.002,-0.019,0.128,-0.105,-0.036,0.009,0.054,-0.012,-0.08,0.036,-0.118,0.023,0.027,-0.016,0.034,-0.013,-0.145,-0.058,-0.075,-0.109,-0.034,-0.051,-0.185,0.031,0.006,-0.117,0.054,0.008,-0.03,0.146,-0.123,-0.026,-0.064,-0.01,0.045,-0.004,-0.16,0.156,-0.026,-0.079,0.042,-0.18,0.09,-0.062,0.076,-0.053,0.073,-0.016,-0.075,-0.024,-0.119,-0.135,0.028,-0.22,-0.176,0.138,0.144,0.09,0.057,-0.117,0.101,0.104,-0.046,-0.011,-0.091,-0.101,-0.029,0,0.036,0.089,0.038,0.043,-0.021,0.035,-0.008,0.076,-0.032,-0.203,-0.047,0.057,-0.001,-0.036,0.017,0.219,-0.114,-0.014,-0.041,-0.013,-0.052,-0.028,0.073,0.059,-0.151,0.089,0.069,-0.032,0.068,-0.051,0.004,0.009,-0.099,0.158,0.03,-0.125,0.107,0.092,-0.12,0.237,-0.066,-0.095,-0.013,0.003,-0.069,0.009,0.143,0.119,0.032,-0.013,-0.054,-0.069,-0.17,0.006,-0.052,-0.101,-0.066,-0.114,0.06,0.051,-0.037,-0.14,0.046,-0.054,0.133,-0.015,-0.006,0.088,0.141,0.162,-0.033,0.076,0.196,-0.143,0.087,0.077,-0.09,-0.023,0.076,-0.038,0.104,-0.008,0.027,-0.204,0.005,-0.008,-0.058,-0.005,0.014,-0.086,-0.061,-0.003,0.005,0.035,-0.05,0,-0.049,-0.029,-0.031,0.015,0.049,0.016,-0.081,-0.017,-0.01,-0.02,0.014,0.129,0.069,-0.095,-0.021,-0.09,-0.007,0.119,-0.03,0.189,0.044,-0.089,0.007,0.045,0.103,-0.028,-0.101,-0.036,0.213,0.131,0.052,0.06,0.116,0.073,0.02,-0.036,0.001,-0.031,0.181,0.109,0.046,0.004,-0.127,0.097,-0.054,-0.06,0.035,0.002,0.161,0.068,-0.142,-0.111,0.021,0.031,-0.029,-0.041,0.005,0.021,-0.023,0.088,0.017,-0.085,-0.078,0.037],"source":"src/helpers/classicBattle/uiHelpers.js [selectStat]","tags":["code","how","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","querySelector","setStatButtonsEnabled","add","getElementById","getCardStatValue","getOpponentJudoka","Number","isFinite","catch","resolve","handleStatSelection","showSnackbar","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"selectStat"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["querySelector","setStatButtonsEnabled","add","getElementById","getCardStatValue","getOpponentJudoka","Number","isFinite","catch","resolve","handleStatSelection","showSnackbar"]}},"version":1},
{"id":"uiHelpers.js-removeBackdrops","text":"Remove modal backdrops and destroy the current quit modal.\n\n@param {ReturnType<typeof import('./roundManager.js').createBattleStore>} [store]\n\nexport function removeBackdrops(store) {\n  try {\n    document.querySelectorAll?.(\".modal-backdrop\").forEach((m) => {\n      if (typeof m.remove === \"function\") m.remove();\n    });\n  } catch {}\n  if (store?.quitModal) {\n    try {\n      store.quitModal.destroy();\n    } catch {}\n    store.quitModal = null;\n  }\n}","qaContext":"Why: Remove modal backdrops and destroy the current quit modal. How: @param {ReturnType<typeof import('.","embedding":[-0.047,0.149,0.093,0.094,0.294,-0.024,0.115,-0.067,0.084,-0.082,0.094,0.087,-0.061,-0.081,0.045,0.038,-0.137,-0.018,-0.052,0.084,0.053,-0.116,0.078,0.018,0.017,0.038,0.057,-0.094,0.007,-0.189,0.099,0.156,-0.116,-0.129,0.156,-0.011,-0.065,0.019,0.112,-0.086,0.078,0.135,-0.048,-0.127,-0.125,-0.003,0.005,0.064,0.059,0.098,0.155,0.04,-0.024,-0.028,-0.03,-0.036,0.176,-0.002,0.014,0.144,0.04,-0.071,-0.157,-0.119,0.26,0.07,0.125,-0.086,0.028,-0.07,0.011,-0.059,0.042,0.037,-0.014,-0.113,-0.091,-0.109,-0.085,0.158,0.15,-0.206,0.11,-0.101,-0.01,0.041,-0.015,-0.039,-0.027,0.044,-0.289,0.095,0.141,0.174,-0.144,0.083,-0.2,-0.134,0.047,0.12,0.062,0.005,0.107,0.123,-0.026,-0.064,-0.032,-0.023,-0.066,0.048,-0.063,0.219,0.059,0.122,0.005,0.079,0.224,0.13,-0.043,-0.216,0.228,0.188,0.149,-0.072,0.007,-0.009,0.073,0,0.007,-0.042,-0.179,0.045,0.161,-0.032,0.052,0.146,-0.038,0.03,-0.05,-0.012,-0.133,-0.067,0.148,-0.042,0.127,-0.084,-0.023,-0.117,-0.061,0.119,-0.095,0.191,-0.009,0.071,-0.07,0.018,-0.003,0.045,0.059,0.036,-0.144,0.051,0.115,-0.069,-0.17,0.067,-0.11,-0.139,-0.183,-0.079,-0.312,0.129,-0.123,-0.295,0.072,0.067,-0.013,-0.067,-0.139,0.029,0.053,-0.236,-0.037,-0.032,0.053,-0.073,0.121,-0.178,0.156,0.045,-0.011,0.132,-0.02,-0.013,-0.16,-0.034,-0.12,-0.213,-0.026,0.113,0.172,-0.066,0.117,-0.152,-0.077,0.118,0.169,-0.029,0.273,-0.025,0.049,-0.065,0.105,-0.009,0.123,-0.172,0.195,0.216,-0.112,-0.005,-0.009,-0.066,0.012,0,0.078,0.125,-0.111,0.101,-0.076,0.088,-0.065,0.209,-0.126,-0.168,-0.002,0.069,0.036,0.128,-0.054,0.146,0.056,-0.139,-0.238,-0.058,0.068,-0.094,-0.061,0.082,-0.225,-0.11,-0.168,-0.003,-0.002,0.011,0.023,0.136,0.107,-0.016,0.063,-0.11,-0.019,0.03,-0.134,0.016,-0.121,0.026,-0.001,-0.186,-0.023,-0.084,0.039,0.036,0.106,-0.059,-0.22,0.007,-0.114,-0.282,0.111,-0.079,0.028,-0.033,0.144,0.008,0.137,-0.11,-0.061,-0.085,0.114,-0.075,0.005,0.239,0.027,0.123,0.103,0.071,0.196,-0.133,-0.088,0.051,0.01,-0.124,0.128,-0.084,0.16,-0.07,0.073,-0.263,-0.108,-0.026,-0.18,0.027,-0.041,-0.003,-0.011,-0.061,0.217,-0.095,0.109,0,-0.17,-0.006,-0.074,-0.179,0.006,-0.041,0.052,0.222,0.162,-0.328,0.1,0.054,0.051,0.072,-0.105,-0.056,0.022,0.142,0.016,0.129,-0.045,-0.041,0.134,-0.058,-0.082,-0.015,0.006,-0.072,0.065,0.039,-0.09,0.139,-0.109,-0.012,-0.375,0.169,0.278,0.01,0.037,0.059,0.176,-0.015,-0.254,0.107,-0.039,0.017,0.263,-0.058,-0.077,0.085,-0.002,-0.041,-0.022,0.123,-0.065,-0.134,0.116,0.101,-0.032,-0.07,-0.002,-0.127,0.032,-0.03],"source":"src/helpers/classicBattle/uiHelpers.js [removeBackdrops]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","forEach","querySelectorAll","remove","destroy","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"removeBackdrops"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["forEach","querySelectorAll","remove","destroy"]}},"version":1},
{"id":"uiHelpers.js-resetActionButtons","text":"Replace Next and Quit buttons with fresh clones and wire Next click handler.\n\nexport function resetActionButtons() {\n  let nextBtn;\n  try {\n    nextBtn = document.getElementById ? document.getElementById(\"next-button\") : null;\n  } catch {}\n  if (nextBtn) {\n    const clone = nextBtn.cloneNode(true);\n    clone.disabled = true;\n    delete clone.dataset.nextReady;\n    clone.addEventListener(\"click\", onNextButtonClick);\n    nextBtn.replaceWith(clone);\n  }\n  let quitBtn;\n  try {\n    quitBtn = document.getElementById ? document.getElementById(\"quit-match-button\") : null;\n  } catch {}\n  if (quitBtn) {\n    quitBtn.replaceWith(quitBtn.cloneNode(true));\n  }\n}","qaContext":"Why: Replace Next and Quit buttons with fresh clones and wire Next click handler. How: export function resetActionButtons() { let nextBtn; try { nextBtn = document.","embedding":[-0.17,-0.077,0.19,0.027,-0.033,0.07,0.079,-0.076,0.053,-0.029,0.008,0.04,-0.12,-0.096,-0.028,0.1,-0.025,0.006,0.029,-0.088,0.047,-0.021,0.037,-0.041,-0.017,-0.027,-0.011,-0.243,-0.031,-0.115,0.01,0.019,-0.195,-0.146,0.009,0.042,-0.166,-0.093,0.095,-0.109,-0.09,-0.009,-0.167,-0.044,0.04,0.099,-0.179,0.005,0.147,0.128,0.163,-0.032,0.042,-0.041,0.197,0.002,0.198,0.02,0.093,0.15,0.253,-0.044,-0.016,0.002,0.149,0.192,-0.003,-0.042,-0.04,-0.037,0.056,0.011,0.06,0.082,-0.01,-0.195,-0.118,0.014,-0.039,0.134,-0.128,-0.169,-0.023,0.068,0.091,-0.043,-0.099,-0.029,0.041,0.029,-0.175,0.204,0.181,0.029,-0.023,0.179,-0.127,0.111,-0.025,0.032,0.039,0.002,-0.076,-0.072,0.026,-0.209,-0.034,-0.129,-0.005,0.031,-0.009,0.174,-0.029,0.044,-0.02,-0.129,0.121,0.033,-0.014,0.08,0.232,0.07,0.01,-0.016,0.08,0.029,0.12,0,0.169,-0.062,-0.144,0.036,0.03,0.04,0.064,0.115,-0.203,0.024,0,-0.17,0.02,-0.081,0.014,-0.143,0.113,-0.132,0.023,-0.108,0.088,0.005,0.07,0.096,-0.066,0.01,-0.13,-0.051,0.057,0.028,-0.106,0.077,-0.056,0.136,-0.048,-0.106,0,-0.02,-0.063,-0.15,-0.006,-0.009,-0.091,-0.075,0.098,-0.147,0.127,-0.065,0.039,-0.066,-0.087,0.041,0.077,-0.109,-0.004,-0.021,-0.059,0.008,-0.114,0.007,0.142,0.062,-0.021,0.158,-0.107,0.144,0.031,-0.132,-0.07,-0.208,0.05,-0.162,-0.016,-0.09,0.017,-0.066,-0.152,0.004,-0.035,-0.037,0.035,0.01,-0.297,-0.014,0.211,0.038,0.06,-0.026,0.043,0.144,0.174,-0.099,-0.08,-0.049,0.072,0,0.103,0.083,0.063,0.036,-0.073,0.006,-0.033,0.191,-0.055,-0.047,0.141,0.021,-0.017,-0.001,-0.167,0.231,-0.052,-0.025,-0.12,-0.097,0.174,0.034,-0.009,0.046,-0.147,-0.052,-0.051,0.187,0.122,-0.044,0.117,0.115,0.058,0.143,0.08,0.032,0.183,0.109,-0.06,0.029,0.015,-0.146,0.003,-0.107,0.012,0.018,-0.098,0.093,-0.054,-0.055,0.059,-0.087,-0.123,-0.125,-0.069,-0.046,-0.103,0.012,0.093,-0.057,0.111,-0.234,0.185,0.143,0.073,-0.009,-0.059,0.303,0.137,0.2,-0.046,0.166,0.092,-0.325,-0.021,-0.078,-0.07,-0.186,0.094,-0.052,0.123,0.028,0.021,-0.056,-0.007,0.055,-0.047,0.011,-0.026,0.047,-0.267,-0.018,0.025,-0.123,-0.084,0,-0.068,0.032,0.049,-0.051,0.06,-0.115,-0.124,0.08,-0.032,-0.174,0.051,0.3,0.103,-0.015,-0.144,-0.068,-0.009,-0.019,0.058,0.121,0.022,-0.082,-0.043,0.082,0.045,-0.006,0.091,-0.001,0.186,-0.032,-0.004,-0.084,0.003,0.02,-0.127,-0.014,0.058,-0.094,0.064,-0.089,0.007,-0.043,-0.131,0.143,-0.218,-0.154,0.042,-0.065,0.04,0.059,0.024,0.049,-0.147,0.069,0.019,-0.08,0.085,0.102,-0.027,0.185,0.07,0.036,0.036,-0.116],"source":"src/helpers/classicBattle/uiHelpers.js [resetActionButtons]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","getElementById","cloneNode","addEventListener","replaceWith"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"resetActionButtons"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["getElementById","cloneNode","addEventListener","replaceWith"]}},"version":1},
{"id":"uiHelpers.js-clearRoundInfo","text":"Clear scoreboard round info and synchronize display.\n\nexport function clearRoundInfo() {\n  try {\n    scoreboard.clearMessage();\n  } catch {}\n  try {\n    const timerEl = document.getElementById(\"next-round-timer\");\n    if (timerEl) timerEl.textContent = \"\";\n  } catch {}\n  try {\n    const rr = document.getElementById(\"round-result\");\n    if (rr) rr.textContent = \"\";\n  } catch {}\n  try {\n    syncScoreDisplay();\n  } catch {}\n}","qaContext":"Why: Clear scoreboard round info and synchronize display. How: export function clearRoundInfo() { try { scoreboard.","embedding":[0.073,0.053,-0.039,0.002,0.064,0.186,0.139,0.077,0.271,-0.209,0.021,-0.008,-0.126,-0.07,-0.142,-0.199,-0.079,-0.058,0.09,-0.095,0.002,-0.128,0.026,0.161,-0.069,0.105,-0.013,-0.076,0.002,-0.051,-0.013,-0.044,0.038,-0.047,-0.157,0.057,-0.1,0.02,0.146,-0.055,0.084,-0.044,-0.025,0.081,0.046,-0.003,-0.337,0.092,-0.059,0.145,-0.002,-0.074,-0.022,-0.159,0.03,0.185,0.069,0.088,0.028,0.025,-0.008,-0.104,0.042,0.03,0.207,0.039,-0.068,-0.095,-0.088,0.044,0.088,0.104,0.221,0.066,-0.111,0.019,-0.3,-0.083,-0.048,0.206,-0.096,-0.252,0.074,0.002,0.213,-0.009,0.261,0.038,0.022,-0.143,-0.098,0.145,-0.024,0.202,-0.183,0.204,-0.062,0.086,-0.05,0.027,0.023,0.02,-0.053,0.003,-0.122,-0.01,0.023,0.075,-0.042,-0.01,-0.038,0.064,0.138,0.12,-0.111,0.046,0.102,0.054,0.132,0.02,0.299,0.115,-0.054,-0.177,0.017,0.155,0.268,0,-0.104,-0.276,-0.19,0.023,0.152,0.097,-0.095,0.021,-0.077,0.019,0.098,-0.073,-0.058,-0.124,0.04,-0.063,0.239,0.031,0.06,0.016,0.105,-0.161,0.079,-0.014,0.048,0.121,-0.038,0.021,-0.129,-0.058,0.066,-0.06,-0.038,0.137,0.063,-0.092,0.056,0.034,-0.08,0.107,-0.124,-0.038,-0.24,-0.114,-0.038,-0.038,0.081,0.185,-0.007,-0.036,-0.117,0.208,-0.035,-0.397,0.084,0.05,0.039,-0.094,-0.217,-0.073,0.145,0.071,-0.103,-0.168,-0.118,0.071,0.001,-0.151,-0.094,-0.223,0.062,0.01,0.084,0.097,-0.106,0.022,-0.101,-0.075,0.055,-0.29,0.363,-0.271,-0.09,-0.011,0.202,0.056,-0.045,-0.006,-0.081,0.178,-0.102,-0.045,0,-0.057,-0.082,0,0.049,-0.028,-0.184,0.123,0.126,0.18,-0.012,0.112,-0.018,-0.014,0.166,0.121,-0.137,0.032,-0.09,0.293,0.182,0.117,-0.191,-0.196,0.226,-0.179,-0.007,0.047,-0.07,0.036,0.036,-0.016,-0.085,0.051,0.075,0.019,0.178,-0.081,0.047,-0.011,0.15,-0.122,-0.049,0.19,0.197,-0.021,-0.198,-0.081,-0.08,0.125,-0.094,0.099,-0.113,-0.021,-0.14,-0.196,0.004,-0.174,-0.112,0.111,-0.023,-0.013,0.036,0.075,0.052,-0.139,0.005,-0.076,0.19,0.137,-0.056,0.162,0.183,0.283,-0.092,0.134,0.025,-0.138,-0.049,0.116,-0.038,-0.015,0.108,0.041,0.143,0.03,0.04,-0.138,0.044,0.08,-0.058,0.056,0.017,0.136,-0.042,0.066,0.048,-0.048,-0.095,0,-0.075,-0.161,-0.097,-0.046,-0.099,-0.031,0.012,-0.11,0.051,-0.244,0.024,-0.005,0.049,-0.053,0.093,-0.171,-0.065,0.088,-0.041,-0.041,0.141,0.017,0.035,0.019,0.032,-0.073,0.034,0.2,0.043,-0.146,-0.107,0.139,0.022,-0.113,-0.044,0.047,0.085,-0.095,0.101,0.295,0,0.016,-0.176,0.036,-0.021,-0.129,-0.005,-0.16,0.103,-0.105,-0.095,-0.014,-0.18,0.08,0.007,-0.114,0.127,-0.041,-0.246,0.062,-0.115,0.052,0.094,-0.024],"source":"src/helpers/classicBattle/uiHelpers.js [clearRoundInfo]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","clearMessage","getElementById","syncScoreDisplay"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"clearRoundInfo"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["clearMessage","getElementById","syncScoreDisplay"]}},"version":1},
{"id":"uiHelpers.js-initStatButtons","text":"Initialize stat selection buttons.\n\n@param {ReturnType<typeof import('./roundManager.js').createBattleStore>} store - Battle store.\n1. Gather all stat buttons inside `#stat-buttons`.\n2. Define `setEnabled` to toggle disabled state, tabindex and `data-buttons-ready`.\n3. Resolve `window.statButtonsReadyPromise` when buttons are enabled; reset when disabled.\n4. On click or Enter/Space, disable all buttons and handle selection.\n5. Return controls to enable/disable the group.\n\nexport function initStatButtons(store) {\n  const statButtons = document.querySelectorAll(\"#stat-buttons button\");\n  const statContainer = document.getElementById(\"stat-buttons\");\n  // Use a resolver that is wired to a global so the promise exists\n  // synchronously during page init. When we reset/create a new\n  // promise we also publish its resolver on `window.__resolveStatButtonsReady`.\n  let resolveReady = typeof window !== \"undefined\" ? window.__resolveStatButtonsReady : undefined;\n  const resetReadyPromise = () => {\n    window.statButtonsReadyPromise = new Promise((r) => {\n      resolveReady = r;\n      try {\n        window.__resolveStatButtonsReady = r;\n      } catch {}\n    });\n  };\n\n  function setEnabled(enable = true) {\n    statButtons.forEach((btn) => {\n      btn.disabled = !enable;\n      btn.tabIndex = enable ? 0 : -1;\n      btn.classList.toggle(\"disabled\", !enable);\n      // Defensive: ensure no lingering selection styling when enabling\n      if (enable) {\n        try {\n          btn.classList.remove(\"selected\");\n          btn.style.removeProperty(\"background-color\");\n        } catch {}\n      }\n    });\n    if (statContainer) {\n      statContainer.dataset.buttonsReady = String(enable);\n    }\n    if (enable) {\n      try {\n        const count = document.querySelectorAll(\"#stat-buttons .selected\").length;\n        console.warn(`[test] setEnabled(true): selectedCount=${count}`);\n      } catch {}\n      // Resolve the current promise to signal readiness to tests / other code.\n      try {\n        resolveReady?.();\n      } catch {}\n      try {\n        if (isTestModeEnabled()) console.warn(\"[test] statButtonsReady=true\");\n      } catch {}\n    } else {\n      try {\n        const count = document.querySelectorAll(\"#stat-buttons .selected\").length;\n        console.warn(`[test] setEnabled(false): selectedCount=${count}`);\n      } catch {}\n      resetReadyPromise();\n      try {\n        if (isTestModeEnabled()) console.warn(\"[test] statButtonsReady=false\");\n      } catch {}\n    }\n  }\n\n  // Start disabled until the game enters the player action state\n  resetReadyPromise();\n  setEnabled(false);\n\n  statButtons.forEach((btn) => {\n    const statName = btn.dataset.stat;\n    const clickHandler = () => {\n      if (btn.disabled) return;\n      // Invoke selection logic immediately so tests observing the call\n      // don't need to wait for animation frames. Keep visual updates\n      // deferred to the next frame to avoid mid-dispatch UI changes.\n      try {\n        Promise.resolve(handleStatSelection(store, statName)).catch(() => {});\n      } catch {}\n      // Show snackbar immediately so tests and observers can see the message\n      // synchronously.\n      try {\n        showSnackbar(`You Picked: ${btn.textContent}`);\n      } catch {}\n      // Disable buttons right away; selected class is applied via the\n      // 'statSelected' event to keep a single source of truth.\n      try {\n        setEnabled(false);\n      } catch {}\n    };\n    btn.addEventListener(\"click\", clickHandler);\n    btn.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\" || e.key === \" \") {\n        e.preventDefault();\n        clickHandler();\n      }\n    });\n  });\n\n  return {\n    enable: () => setEnabled(true),\n    disable: () => setEnabled(false)\n  };\n}","qaContext":"Why: Initialize stat selection buttons. How: catch(() => {}); } catch {} // Show snackbar immediately so tests and observers can see the message // synchronously.","embedding":[-0.176,0.012,-0.016,0.217,-0.005,0.172,0.129,0.025,-0.039,0.032,-0.023,-0.043,-0.036,-0.048,0.018,0.041,-0.051,-0.122,-0.07,-0.027,0.031,-0.013,0.204,-0.041,-0.085,-0.002,-0.026,-0.151,-0.037,-0.069,-0.02,0.009,-0.077,-0.063,-0.04,-0.148,-0.102,-0.093,0.007,0.011,-0.073,0.095,-0.161,-0.133,0.063,-0.039,-0.097,0.056,0.011,0.032,0.048,0.049,-0.013,-0.075,0.039,0.126,0.017,0.007,0.058,0.078,-0.024,-0.147,0.013,-0.005,0.066,0.186,0.057,0.056,0.016,0.044,0.006,0.075,0.098,0.022,0.054,-0.088,-0.096,-0.066,-0.039,-0.086,-0.058,-0.13,-0.077,0.114,0.047,0.031,0.045,-0.016,0,-0.112,-0.185,0.048,-0.082,0.093,-0.035,0.108,-0.078,0.02,-0.047,0.037,0.094,-0.126,0.027,0.138,-0.027,-0.181,0.047,-0.133,-0.13,0.035,0.066,0.148,0.014,0.085,-0.096,-0.03,0.165,0.001,0.047,-0.011,0.283,0.038,-0.004,-0.115,0.044,-0.046,0.104,0,0.094,-0.237,-0.159,0.011,0.073,0.137,0.101,0.063,-0.097,0.081,-0.001,0.071,-0.072,-0.139,0.039,-0.039,0.067,0.073,0.02,-0.03,0.127,0.051,-0.028,0.097,-0.042,0.074,-0.023,0.152,-0.12,-0.023,0.133,0.04,-0.074,0.095,-0.006,-0.08,-0.092,-0.009,-0.028,-0.017,-0.028,0.008,-0.007,0.03,-0.166,-0.123,-0.025,-0.07,0.076,-0.025,-0.129,0.094,-0.024,-0.206,0.084,-0.049,-0.068,0.074,-0.075,0.029,-0.021,-0.093,-0.057,-0.044,-0.131,0.154,-0.059,-0.079,-0.075,-0.272,0.054,-0.036,0.182,-0.084,0.12,-0.047,-0.036,0.042,-0.176,-0.124,0.098,-0.107,-0.231,0.208,0.122,0.065,0.014,-0.093,-0.019,0.135,-0.019,-0.027,0.06,-0.131,-0.113,0,0.071,0.093,-0.041,0.083,-0.016,0.13,-0.007,0.129,-0.029,-0.143,0.049,0.055,0.01,-0.022,-0.061,0.247,-0.074,-0.008,-0.073,0.046,0.049,0.033,0.071,0.051,-0.117,0.056,0.004,0.09,0.06,0.008,0.014,0.046,-0.212,0.075,0.046,-0.19,0.029,0.059,-0.221,0.188,0.022,-0.077,-0.051,0.041,0.004,0.029,0.145,0.033,-0.053,-0.044,-0.039,-0.132,-0.056,-0.057,-0.073,-0.053,0.019,-0.206,0.029,0.118,0.134,-0.186,0.066,0.063,0.062,0.062,-0.014,0.094,0.215,0.173,0.027,-0.046,0.254,-0.244,0.122,0.065,-0.081,-0.212,0.059,0.014,0.037,-0.003,0.016,-0.28,-0.003,0.001,-0.144,0.134,0.027,0.024,-0.066,-0.034,0.073,-0.026,-0.103,0,-0.089,0.025,0.035,-0.067,0.038,-0.078,0.022,-0.002,-0.056,-0.085,0.036,0.175,0.14,-0.024,-0.07,-0.011,-0.008,0.094,-0.063,0.184,0.003,-0.036,0.043,0.128,0.092,0.047,-0.049,-0.006,0.17,0.161,-0.032,-0.022,0.123,0.076,-0.061,-0.053,0.04,-0.004,0.091,0.043,0.082,0.005,-0.102,0.155,-0.05,-0.122,-0.034,0.066,0.148,0.029,-0.166,-0.049,-0.044,0.052,0.029,-0.075,0.061,0.007,-0.038,0.112,-0.02,-0.163,-0.082,-0.017],"source":"src/helpers/classicBattle/uiHelpers.js [initStatButtons]","tags":["code","how","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","querySelectorAll","getElementById","resetStatButtonsReady","setStatButtonsEnabled","forEach","selectStat","addEventListener","preventDefault","handler","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"initStatButtons"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["querySelectorAll","getElementById","resetStatButtonsReady","setStatButtonsEnabled","forEach","selectStat","addEventListener","preventDefault","handler"]}},"version":1},
{"id":"uiHelpers.js-applyStatLabels","text":"Apply localized stat labels to selection buttons.\n1. Load stat names via `loadStatNames`.\n2. Map each name to the corresponding button's text and aria-label.\n\nexport async function applyStatLabels() {\n  const names = await loadStatNames();\n  names.forEach((n, i) => {\n    const key = STATS[i];\n    // Defensive: ensure `key` is a string before building a selector. If not, record for diagnostics.\n    let btn = null;\n    try {\n      if (typeof key !== \"string\") {\n        try {\n          if (typeof window !== \"undefined\")\n            window.__classicBattleQuerySelectorError = { key, where: \"uiHelpers.applyStatLabels\" };\n        } catch {}\n      } else {\n        btn = document.querySelector(`#stat-buttons button[data-stat=\"${key}\"]`);\n      }\n    } catch (e) {\n      try {\n        if (typeof window !== \"undefined\")\n          window.__classicBattleQuerySelectorError = {\n            key,\n            where: \"uiHelpers.applyStatLabels\",\n            err: String(e)\n          };\n      } catch {}\n    }\n    if (btn) {\n      btn.textContent = n.name;\n      btn.setAttribute(\"aria-label\", `Select ${n.name}`);\n    }\n  });\n}","qaContext":"Why: Apply localized stat labels to selection buttons. How: Load stat names via `loadStatNames`.","embedding":[-0.061,0.109,-0.04,0.189,0.032,0.138,0.185,0.015,-0.056,-0.1,-0.067,-0.218,-0.053,-0.021,0.033,0.088,0.013,-0.126,0.025,-0.048,0.072,0.078,0.141,0.032,0.001,0.041,-0.051,-0.055,0.003,0.002,-0.046,0,-0.046,-0.018,0.033,-0.054,-0.115,-0.1,0.1,0.052,0.104,0.027,-0.132,-0.017,0.071,-0.062,-0.077,0.016,-0.049,0.221,0.029,-0.026,0.019,-0.117,0.075,0.034,-0.008,-0.099,0.066,0.17,-0.01,-0.156,-0.011,-0.012,0.084,0.142,0.013,0.019,-0.105,0.044,-0.013,0.008,0.15,0.078,-0.113,-0.05,-0.116,-0.082,-0.061,-0.071,-0.147,-0.111,-0.089,0.083,0.151,0.162,-0.062,-0.122,-0.079,-0.059,-0.129,-0.075,-0.007,0.143,0.075,0.153,0,0.079,-0.005,0.044,-0.028,-0.076,-0.072,-0.022,-0.127,-0.183,0.031,-0.168,-0.124,-0.028,0.012,0.109,-0.066,0.085,-0.111,-0.127,0.096,-0.073,0.04,-0.031,0.168,-0.006,-0.058,0.001,0.03,0.027,0.082,0,0.095,-0.087,-0.094,0.02,-0.07,0.088,0.028,-0.011,0.04,0.061,0.058,0.136,0.006,-0.248,-0.057,0.013,0.022,0.039,-0.055,0.002,0.092,0.092,0.005,0.057,-0.139,-0.029,-0.093,0.081,-0.036,0.001,0.126,-0.074,0.025,0.076,0.052,-0.097,0.048,-0.01,-0.159,0.084,-0.008,0.088,0.012,-0.019,-0.143,-0.081,-0.044,-0.117,0.081,-0.159,-0.172,-0.035,-0.027,-0.075,0.091,0.039,-0.072,0.084,-0.037,0.063,-0.119,-0.089,0.015,-0.002,0.04,0.122,0.095,0.041,0.064,-0.197,0.095,-0.053,0.049,0.036,0.152,-0.005,-0.088,0.08,-0.1,-0.078,-0.016,-0.09,-0.152,0.185,0.161,0.188,-0.043,-0.19,0.039,0.105,-0.056,-0.018,-0.131,-0.156,-0.094,0,0.062,0.003,0.041,0.02,-0.081,0.016,0.018,0.135,0.048,-0.08,0.049,0.04,0.002,-0.074,-0.012,0.146,-0.109,0.01,-0.004,0.022,0.051,0.013,0.001,0.047,-0.017,-0.01,0.02,-0.061,0.058,-0.005,0.024,0.055,-0.099,0.13,-0.014,-0.1,0.135,0.056,-0.096,0.141,-0.103,-0.082,-0.043,-0.115,-0.106,0.051,0.008,0.081,-0.123,0.007,0.114,-0.132,-0.24,0.043,-0.1,-0.16,-0.089,-0.168,0.072,0.062,0.044,-0.105,0.107,-0.08,0.017,-0.1,-0.037,0.028,0.221,0.121,0.029,-0.083,0.083,-0.066,-0.084,0.014,-0.062,-0.093,0.069,0.036,0.1,0.132,0.016,-0.063,0.09,0.087,0.057,0.143,0.022,-0.025,0.031,-0.037,0.047,0.031,-0.118,0,-0.153,0.066,-0.062,0.007,-0.046,0.009,-0.058,0.044,0.006,-0.04,0.082,0.141,0.057,-0.074,-0.133,-0.05,0.028,0.27,0.018,0.143,0.073,-0.048,0.035,0.043,0.091,-0.023,-0.101,-0.101,0.2,0.068,-0.026,-0.043,0.049,0.079,-0.002,-0.03,0.02,-0.136,0.141,0.194,0.077,-0.044,-0.059,0.115,-0.016,-0.067,-0.121,0.035,0.183,0.029,-0.021,-0.196,-0.039,0.072,-0.026,-0.089,0.027,0.066,-0.075,0.162,0.002,-0.084,-0.015,0.021],"source":"src/helpers/classicBattle/uiHelpers.js [applyStatLabels]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","loadStatNames","forEach","querySelector","String","setAttribute"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"applyStatLabels"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["loadStatNames","forEach","querySelector","String","setAttribute"]}},"version":1},
{"id":"uiHelpers.js-updateBattleStateBadge","text":"Update the text content of the battle state badge.\n\n@param {string | null} state The current battle state.\n\nexport function updateBattleStateBadge(state) {\n  const badge = document.getElementById(\"battle-state-badge\");\n  if (!badge) return;\n  try {\n    badge.textContent = state ? `State: ${state}` : \"State: —\";\n  } catch {\n    badge.textContent = \"State: —\";\n  }\n}","qaContext":"Why: Update the text content of the battle state badge. How: @param {string | null} state The current battle state.","embedding":[-0.096,0.281,0.036,0.053,-0.055,0.211,0.126,-0.01,-0.052,-0.035,-0.102,-0.063,0.009,-0.052,0.003,0.039,0.02,-0.072,0.134,-0.018,0.007,-0.034,0.05,0.246,0.145,0.217,-0.038,-0.063,-0.095,0.069,0.058,-0.11,0,-0.047,-0.064,-0.058,-0.095,-0.085,0.089,0.082,0.004,-0.015,-0.122,0.085,0.18,0.024,-0.117,0,0.084,0.093,0.068,-0.136,0.049,-0.087,0.119,0.111,0.094,0.132,-0.029,-0.034,0.052,-0.09,0.156,0,0.104,-0.05,-0.036,0.2,-0.266,-0.049,0.175,0.155,0.232,-0.074,-0.167,-0.075,-0.122,0.045,0.267,0.261,-0.11,-0.189,-0.016,0.071,0.2,0.022,-0.005,-0.112,-0.024,0.054,-0.175,-0.092,0.067,0.154,-0.298,0.263,-0.168,0.021,-0.02,0.13,0.108,0.094,-0.085,-0.112,-0.061,0.027,0.053,0.012,-0.078,-0.038,0.139,0.105,-0.029,0.043,-0.259,0.085,0.024,-0.021,-0.076,0.133,0.146,-0.169,-0.081,-0.051,-0.083,-0.048,0.316,0,0.029,-0.126,-0.154,0.189,-0.116,0.079,-0.047,-0.26,-0.137,-0.064,0.016,0.187,0.084,0.002,-0.002,-0.139,-0.095,-0.164,0.111,-0.065,0.031,-0.034,-0.083,-0.093,0.027,0.067,0.034,0.034,-0.146,0.022,0.139,-0.083,0.092,0.024,0.059,-0.125,-0.088,-0.113,-0.186,-0.066,0.134,-0.071,-0.151,-0.007,-0.068,-0.062,-0.057,-0.139,0.038,-0.191,-0.14,0.224,0.04,-0.232,0.113,0.032,0.004,-0.041,-0.121,-0.191,-0.011,0.035,0.071,-0.013,-0.069,0.144,-0.112,-0.03,-0.135,-0.189,0.061,-0.095,-0.071,-0.06,-0.04,0.032,0.014,0.061,-0.125,-0.126,0.021,-0.315,-0.075,0.212,0.252,0.087,-0.098,-0.023,0.032,0.139,0.052,-0.11,-0.041,0.048,0.081,0,0.027,-0.036,-0.014,0.009,0.093,-0.013,0.039,0.238,-0.084,-0.022,-0.151,0.189,-0.21,0.021,-0.087,0.204,-0.055,0.123,-0.051,-0.029,0.072,0.048,0.011,0.06,-0.067,0.081,-0.094,-0.039,0.024,-0.044,0.071,-0.097,-0.09,0.299,-0.021,-0.004,0.331,-0.249,-0.071,0.193,-0.025,-0.048,-0.071,-0.069,0.06,0.123,-0.179,0.059,-0.031,0.052,-0.071,-0.098,-0.053,0.063,-0.022,-0.233,-0.377,-0.003,-0.055,0.147,-0.065,-0.081,0.011,0.021,-0.122,0.015,0.002,0.246,0.173,0.138,0.082,0.107,0.018,-0.06,0.048,0.067,0.018,0.08,0.002,-0.061,0.121,0.038,-0.1,-0.068,0.098,0.294,-0.068,0.044,-0.022,-0.083,-0.08,0.127,-0.004,-0.19,-0.121,0,-0.038,-0.004,-0.113,-0.004,-0.078,0.126,-0.001,-0.278,0.043,-0.148,0.113,0.052,0.031,-0.307,-0.18,-0.099,-0.055,0.109,0.032,-0.01,0.211,0.05,0.076,0.124,0.082,-0.052,-0.007,-0.129,-0.012,0.024,0.143,0.118,-0.016,0.038,-0.018,-0.03,0.217,-0.128,0.209,0.244,0.062,0.115,-0.077,0.07,-0.216,0.025,0.03,-0.124,0.088,-0.159,0.121,-0.093,-0.222,0.015,-0.129,0.047,0.209,0.056,-0.095,0.074,0.015,-0.266,-0.071,-0.039],"source":"src/helpers/classicBattle/uiHelpers.js [updateBattleStateBadge]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","getElementById","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"updateBattleStateBadge"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["getElementById"]}},"version":1},
{"id":"uiHelpers.js-setBattleStateBadgeEnabled","text":"Toggle visibility of the battle state badge based on feature flag.\n1. If disabled, remove existing badge and exit.\n2. Ensure badge element exists under scoreboard or header.\n3. Update text content with current state when available.\n\nexport function setBattleStateBadgeEnabled(enable) {\n  let badge = document.getElementById(\"battle-state-badge\");\n  if (!enable) {\n    if (badge) badge.remove();\n    return;\n  }\n  if (!badge) {\n    const headerRight =\n      document.getElementById(\"scoreboard-right\") ||\n      document.querySelector(\".battle-header .scoreboard-right\");\n    badge = document.createElement(\"p\");\n    badge.id = \"battle-state-badge\";\n    badge.dataset.flag = \"battleStateBadge\";\n    badge.setAttribute(\"data-tooltip-id\", \"settings.battleStateBadge\");\n    badge.setAttribute(\"aria-live\", \"polite\");\n    badge.setAttribute(\"aria-atomic\", \"true\");\n    if (headerRight) headerRight.appendChild(badge);\n    else document.querySelector(\"header\")?.appendChild(badge);\n  }\n  updateBattleStateBadge(typeof window !== \"undefined\" ? window.__classicBattleState : null);\n}","qaContext":"Why: Toggle visibility of the battle state badge based on feature flag. How: 1.","embedding":[-0.13,0.177,0.008,0.163,0.047,0.243,0.179,-0.011,-0.049,-0.082,-0.055,-0.079,0.06,-0.079,-0.033,0.012,0.006,-0.124,0.043,-0.006,0.023,-0.126,0.024,0.166,0.101,0.146,-0.045,-0.013,-0.109,0.018,-0.013,-0.073,-0.059,-0.019,-0.048,-0.166,-0.095,-0.002,-0.011,0.012,-0.095,-0.023,-0.041,0.016,0.085,0.09,-0.082,-0.004,0.025,0.093,0.07,-0.058,0.062,-0.089,0.126,0.067,0.063,0.072,0.03,0.059,-0.015,-0.033,0.166,-0.017,0.057,-0.026,-0.009,0.025,-0.102,0.033,0.127,0.118,0.212,-0.106,-0.038,-0.021,-0.165,0.092,0.113,-0.017,-0.16,-0.047,-0.079,0.082,0.089,-0.047,0.036,-0.067,-0.056,0.016,-0.139,0.058,0.023,0.156,-0.08,0.148,-0.146,-0.018,-0.069,0.121,0.057,0.007,-0.146,0.053,0.038,-0.023,0.029,-0.02,-0.108,0.019,0.096,0.129,-0.001,0.086,-0.149,0.136,0.077,0.066,0.013,-0.015,0.138,-0.078,-0.05,-0.16,0.027,0.019,0.145,0,0.093,-0.219,-0.219,0.105,-0.042,0.057,0.09,-0.074,-0.167,0.052,0.009,0.205,0.062,-0.058,0.068,-0.044,-0.009,-0.057,0.08,-0.097,0.052,-0.095,-0.031,-0.01,-0.013,0.147,0.018,0.012,-0.119,0.056,0.033,0.008,-0.015,0.046,0.002,-0.128,-0.056,-0.094,0.022,0.062,0.126,-0.138,-0.107,-0.077,-0.084,0.013,0.027,-0.035,0.041,-0.162,-0.117,0.12,0.097,-0.273,0.025,0.016,-0.131,0.073,-0.117,-0.089,-0.061,0.079,0.081,-0.051,-0.063,0.148,-0.063,-0.001,-0.141,-0.308,0.079,-0.08,0.144,-0.088,-0.001,-0.024,0.078,-0.01,-0.142,-0.149,0.048,-0.138,-0.054,0.088,0.237,-0.041,0.031,-0.085,-0.197,0.168,-0.051,0.001,0.043,-0.005,-0.1,0,0.026,0.041,-0.016,-0.078,0.085,0.022,-0.007,0.103,-0.062,-0.02,0.029,0.052,-0.151,0.021,-0.096,0.234,-0.107,0.139,-0.132,0.044,0.014,0.162,-0.027,0.051,-0.136,-0.017,0.024,0.016,-0.01,-0.078,0.128,-0.01,-0.233,-0.009,0.03,-0.096,0.117,-0.204,-0.098,0.305,-0.024,-0.055,-0.086,-0.075,0.085,0.184,-0.033,0.097,-0.069,0.109,-0.025,-0.095,0.021,0.058,-0.145,-0.092,-0.126,-0.042,-0.058,0.122,0.163,-0.104,-0.055,0.109,0.006,0.039,-0.015,0.213,0.078,0.148,-0.075,-0.029,0.088,-0.109,0.04,0.158,0.071,-0.035,0.025,-0.086,0.044,0.034,-0.028,-0.311,0.103,0.108,-0.143,0.097,0.027,-0.001,-0.062,-0.062,0.055,-0.167,-0.103,0,0.031,0.017,-0.02,-0.032,-0.049,0.089,0.014,-0.047,-0.022,-0.21,0.115,0.061,-0.036,-0.133,-0.104,-0.091,-0.127,0.061,-0.02,0.005,0.109,-0.034,0.061,0.126,0.05,-0.109,0.014,-0.108,0.075,0.115,-0.007,0.075,0.101,-0.019,0.121,0.029,0.084,-0.051,0.116,0.193,0.088,0.053,-0.155,0.045,-0.048,0.055,0.1,-0.035,0.032,-0.042,-0.017,-0.05,-0.043,0.007,-0.025,0.113,0.107,0.044,-0.02,0.092,-0.009,-0.085,-0.101,-0.015],"source":"src/helpers/classicBattle/uiHelpers.js [setBattleStateBadgeEnabled]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","getElementById","remove","querySelector","createElement","setAttribute","appendChild","updateBattleStateBadge","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"setBattleStateBadgeEnabled"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["getElementById","remove","querySelector","createElement","setAttribute","appendChild","updateBattleStateBadge"]}},"version":1},
{"id":"uiHelpers.js-applyBattleFeatureFlags","text":"Apply battle-related feature flags to the page.\n\n@param {HTMLElement|null} battleArea\n@param {HTMLElement|null} banner\n1. Set mode/test-mode data attributes on `battleArea`.\n2. Toggle test banner visibility and various debug features.\n3. Reapply flags when `featureFlagsEmitter` emits changes.\n\nexport function applyBattleFeatureFlags(battleArea, banner) {\n  if (battleArea) {\n    battleArea.dataset.mode = \"classic\";\n    battleArea.dataset.testMode = String(isEnabled(\"enableTestMode\"));\n  }\n  if (banner) banner.classList.toggle(\"hidden\", !isEnabled(\"enableTestMode\"));\n  setTestMode(isEnabled(\"enableTestMode\"));\n  toggleInspectorPanels(isEnabled(\"enableCardInspector\"));\n  toggleViewportSimulation(isEnabled(\"viewportSimulation\"));\n  setDebugPanelEnabled(isEnabled(\"battleDebugPanel\") || isEnabled(\"enableTestMode\"));\n\n  featureFlagsEmitter.addEventListener(\"change\", () => {\n    if (battleArea) battleArea.dataset.testMode = String(isEnabled(\"enableTestMode\"));\n    if (banner) banner.classList.toggle(\"hidden\", !isEnabled(\"enableTestMode\"));\n    setTestMode(isEnabled(\"enableTestMode\"));\n    toggleInspectorPanels(isEnabled(\"enableCardInspector\"));\n    toggleViewportSimulation(isEnabled(\"viewportSimulation\"));\n    setDebugPanelEnabled(isEnabled(\"battleDebugPanel\") || isEnabled(\"enableTestMode\"));\n  });\n}","qaContext":"Why: Apply battle-related feature flags to the page. How: @param {HTMLElement|null} battleArea @param {HTMLElement|null} banner 1.","embedding":[-0.036,0.082,-0.056,0.077,0.041,0.178,0.11,0.002,-0.164,-0.004,0.09,-0.153,-0.026,-0.039,0.062,0.108,0.051,-0.097,-0.003,0.049,0.08,-0.089,0.097,-0.009,0.076,0.061,-0.009,-0.051,-0.1,-0.058,0.06,0.025,-0.201,-0.007,0.073,-0.107,-0.06,-0.017,-0.062,-0.042,-0.11,-0.003,-0.023,-0.11,-0.014,-0.062,-0.037,0.057,0.037,-0.003,0.1,-0.044,0.033,-0.065,0.096,0.011,0.025,0.115,0.046,0.113,-0.006,-0.003,-0.014,0.003,-0.05,-0.025,0.04,-0.051,-0.067,0.032,-0.053,0.127,0.181,-0.089,0.048,-0.04,-0.129,0.053,0.036,-0.256,-0.004,-0.059,-0.119,0.059,0.062,0.013,0.07,-0.063,-0.004,0.07,-0.091,0.111,0.028,0.102,-0.039,0.078,-0.034,0.02,-0.076,0.18,0.011,-0.069,-0.103,0.109,0.01,-0.15,0.102,-0.046,-0.067,0.101,0.074,0.111,0.005,0.033,-0.116,0.03,0.135,0.002,0.027,-0.028,0.198,-0.014,0,-0.163,0.152,0.013,0.001,0,0.194,-0.173,-0.204,0.165,-0.043,0.114,0.07,0.057,-0.05,0.026,0.018,0.028,-0.041,0.01,0.101,-0.081,-0.024,0.016,-0.003,-0.053,0.006,-0.091,-0.08,-0.093,-0.054,0.103,-0.061,0.073,-0.2,0.054,0.072,-0.031,0.013,0.147,-0.009,-0.098,-0.067,-0.137,-0.003,0.057,-0.055,-0.131,-0.067,-0.113,-0.127,-0.081,-0.041,-0.022,0.014,-0.053,-0.048,0.147,0.019,-0.272,-0.024,0.025,-0.178,0.046,-0.046,0.081,-0.136,0.056,0.043,-0.067,-0.111,0.166,-0.029,-0.181,-0.086,-0.338,-0.033,-0.133,0.232,-0.104,0.008,0.05,-0.042,0.128,-0.108,-0.138,0.095,-0.1,-0.064,0.077,0.076,-0.075,0.027,-0.162,-0.127,0.075,-0.051,0.116,0.066,-0.199,0.116,0,0.014,0.122,-0.026,-0.053,0.065,0.004,0.055,0.071,-0.178,-0.048,0.036,-0.065,-0.199,-0.068,-0.124,0.226,0.024,0.054,0.058,0.089,0.011,0.235,0.062,0.03,-0.054,-0.064,0.058,0.11,0.128,-0.06,0.136,0.06,-0.22,-0.033,0.075,-0.109,0.013,-0.025,-0.145,0.188,0.101,-0.043,-0.041,0.068,0.032,0.067,0.025,0.053,-0.033,0.008,0.018,-0.176,0.03,-0.017,-0.013,-0.026,0.083,-0.167,-0.119,0.118,0.143,-0.084,0.054,0.066,0.198,0.061,-0.005,0.118,0.015,0.168,-0.045,-0.176,0.066,-0.197,0.112,0.136,0.076,-0.112,0.06,-0.061,-0.01,-0.041,-0.09,-0.284,0.059,0.103,-0.218,0.145,0.027,-0.01,-0.122,0.024,0.064,-0.02,-0.065,0,-0.14,-0.108,0.036,-0.084,-0.088,0.004,0.093,-0.094,-0.04,-0.162,-0.003,0.125,0.108,0.056,0.003,-0.1,-0.048,0.106,-0.151,0.117,-0.06,-0.029,-0.008,0.113,0.152,0.009,0.073,0.016,0.153,0.174,0.03,0.088,-0.002,0.009,-0.07,0.054,0.121,-0.039,0.058,0.159,0.124,-0.032,-0.084,0.069,-0.009,-0.023,0.022,0,0.044,-0.034,-0.162,-0.033,0.018,-0.034,0.019,-0.049,0.156,0.055,0.065,0.187,0.041,-0.124,-0.015,0.005],"source":"src/helpers/classicBattle/uiHelpers.js [applyBattleFeatureFlags]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","String","isEnabled","toggle","setTestMode","toggleInspectorPanels","toggleViewportSimulation","setDebugPanelEnabled","addEventListener","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"applyBattleFeatureFlags"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["String","isEnabled","toggle","setTestMode","toggleInspectorPanels","toggleViewportSimulation","setDebugPanelEnabled","addEventListener"]}},"version":1},
{"id":"uiHelpers.js-initDebugPanel","text":"Initialize the optional debug panel.\n1. Locate `#debug-panel`; exit if missing.\n2. If enabled and the battle area exists, ensure the panel is a `<details>` element.\n3. Insert a copy button into the summary.\n4. Restore open state from localStorage and insert before the battle area.\n5. Otherwise remove the panel.\n\nexport function initDebugPanel() {\n  const debugPanel = document.getElementById(\"debug-panel\");\n  if (!debugPanel) return;\n  const battleArea = document.getElementById(\"battle-area\");\n  if (isEnabled(\"battleDebugPanel\") && battleArea) {\n    if (debugPanel.tagName !== \"DETAILS\") {\n      const details = document.createElement(\"details\");\n      details.id = \"debug-panel\";\n      details.className = debugPanel.className;\n      const summary = document.createElement(\"summary\");\n      summary.textContent = \"Battle Debug\";\n      const pre = debugPanel.querySelector(\"#debug-output\") || document.createElement(\"pre\");\n      pre.id = \"debug-output\";\n      pre.setAttribute(\"role\", \"status\");\n      pre.setAttribute(\"aria-live\", \"polite\");\n      details.append(summary, pre);\n      debugPanel.replaceWith(details);\n    }\n    const panel = document.getElementById(\"debug-panel\");\n    ensureDebugCopyButton(panel);\n    try {\n      const saved = localStorage.getItem(\"battleDebugOpen\");\n      panel.open = saved ? saved === \"true\" : true;\n      panel.addEventListener(\"toggle\", () => {\n        try {\n          localStorage.setItem(\"battleDebugOpen\", String(panel.open));\n        } catch {}\n      });\n    } catch {}\n    battleArea.before(panel);\n    panel.classList.remove(\"hidden\");\n  } else {\n    debugPanel.remove();\n  }\n}","qaContext":"Why: Initialize the optional debug panel. How: 1.","embedding":[-0.047,0.034,0.047,0.151,0.014,0.072,0.064,0.072,0.065,0.033,0.071,-0.158,-0.107,-0.133,-0.039,-0.037,-0.055,-0.095,-0.013,0.017,0.086,-0.036,0.081,0.005,0.18,0.048,-0.068,0.003,-0.116,-0.035,0.065,0.023,-0.083,-0.105,0.041,0.06,-0.234,-0.001,-0.065,-0.062,-0.154,0.092,-0.091,-0.12,0.003,-0.169,-0.148,0.101,0.173,0.009,0.12,0.051,0.018,-0.117,-0.002,0.043,0.069,0.089,0.016,0.005,-0.046,0.016,0.062,-0.026,0.101,0.032,0.019,0.091,-0.038,0.094,0.007,0.11,0.06,0.003,0.001,-0.101,-0.14,0.104,0.047,-0.029,0.027,-0.081,-0.034,-0.005,0.131,0.061,0.133,-0.014,0.054,-0.147,-0.172,0.168,0.045,0.133,0.028,0.145,-0.084,0.083,-0.041,0.101,0.148,-0.033,-0.162,0.062,0.045,-0.17,0.087,-0.097,-0.04,0.028,0.001,0.126,-0.003,0.107,0.046,-0.008,0.306,0.047,0.061,-0.031,0.272,-0.026,-0.047,-0.158,0.12,0.045,0.153,0,0.113,-0.303,-0.144,0.191,0.012,0.087,0.104,0.186,-0.097,-0.023,-0.084,0.031,0.029,-0.127,-0.051,-0.023,-0.005,0.03,0.038,-0.066,0.079,-0.084,0.02,0.038,0.077,0.126,-0.018,0.072,-0.24,-0.028,-0.004,-0.147,-0.001,0.104,0.02,-0.056,-0.096,-0.076,-0.023,-0.036,-0.092,-0.185,-0.051,-0.101,-0.101,-0.082,0.013,0.034,-0.066,-0.012,-0.163,0.244,-0.038,-0.303,-0.084,0.077,-0.031,-0.007,-0.041,-0.067,-0.049,0.139,-0.065,0.029,-0.069,0.025,0.013,-0.058,0.018,-0.389,-0.073,-0.2,0.269,-0.035,0.075,0.022,-0.087,0.01,-0.134,-0.178,0.129,-0.289,-0.193,0.113,0.194,0.046,0.141,-0.148,-0.021,0.148,-0.008,-0.056,0.002,-0.155,0.12,0,0.101,0.039,-0.068,-0.079,0.041,0.06,0.017,0.114,-0.061,-0.018,-0.045,0.059,-0.063,-0.056,-0.08,0.33,-0.037,0.041,0,-0.002,0.121,0.138,0.096,0.046,-0.09,-0.064,0.185,-0.039,-0.058,-0.104,0.132,0.049,-0.155,-0.003,0.087,-0.22,0.108,-0.03,-0.177,0.143,0.059,-0.061,0.079,-0.04,-0.013,-0.019,-0.009,0.07,-0.128,0.117,-0.037,-0.16,-0.044,-0.042,0.019,-0.001,0.111,-0.074,-0.058,0.096,0.037,-0.14,0.041,0.076,0.145,0.002,-0.003,0.243,0.087,0.099,-0.106,-0.085,0.104,-0.145,0.071,0.151,-0.034,-0.127,0.077,-0.001,0.078,-0.075,-0.016,-0.308,0.015,-0.098,-0.157,0.176,-0.081,-0.046,-0.131,-0.027,0.115,-0.103,-0.068,0,-0.106,0.022,0.017,-0.072,-0.081,-0.14,0.033,0.004,-0.091,-0.058,0.142,0.142,0.11,-0.052,-0.153,-0.071,-0.005,-0.016,-0.054,-0.038,0.142,-0.075,0.025,0.092,0.209,-0.077,-0.023,0.005,0.137,0.053,-0.097,0.038,0.11,0.055,-0.043,0.057,0.123,-0.042,0.045,0.122,0.108,-0.037,-0.019,-0.031,-0.002,-0.025,0.056,0.001,0.224,-0.049,-0.135,-0.082,0.031,0,0.027,-0.028,0.083,0.095,0.123,0.153,-0.068,0.04,-0.038,-0.013],"source":"src/helpers/classicBattle/uiHelpers.js [initDebugPanel]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","getElementById","isEnabled","createElement","querySelector","setAttribute","append","replaceWith","ensureDebugCopyButton","getItem","addEventListener","setItem","String","before","remove","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"initDebugPanel"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["getElementById","isEnabled","createElement","querySelector","setAttribute","append","replaceWith","ensureDebugCopyButton","getItem","addEventListener","setItem","String","before","remove"]}},"version":1},
{"id":"uiHelpers.js-setDebugPanelEnabled","text":"Enable or disable the debug panel dynamically.\n1. If enabling, ensure a `<details>` panel exists and insert before the battle area.\n2. Attach a copy button to the panel summary.\n3. Persist open state to localStorage on toggle.\n4. If disabling, hide and remove the panel.\n\nexport function setDebugPanelEnabled(enabled) {\n  const battleArea = document.getElementById(\"battle-area\");\n  let panel = document.getElementById(\"debug-panel\");\n  if (enabled) {\n    if (!panel) {\n      panel = document.createElement(\"details\");\n      panel.id = \"debug-panel\";\n      panel.className = \"debug-panel\";\n      const summary = document.createElement(\"summary\");\n      summary.textContent = \"Battle Debug\";\n      const pre = document.createElement(\"pre\");\n      pre.id = \"debug-output\";\n      pre.setAttribute(\"role\", \"status\");\n      pre.setAttribute(\"aria-live\", \"polite\");\n      panel.append(summary, pre);\n    } else if (panel.tagName !== \"DETAILS\") {\n      const details = document.createElement(\"details\");\n      details.id = panel.id;\n      details.className = panel.className;\n      const summary = document.createElement(\"summary\");\n      summary.textContent = \"Battle Debug\";\n      const pre = panel.querySelector(\"#debug-output\") || document.createElement(\"pre\");\n      pre.id = \"debug-output\";\n      pre.setAttribute(\"role\", \"status\");\n      pre.setAttribute(\"aria-live\", \"polite\");\n      details.append(summary, pre);\n      panel.replaceWith(details);\n      panel = details;\n    }\n    ensureDebugCopyButton(panel);\n    try {\n      const saved = localStorage.getItem(\"battleDebugOpen\");\n      panel.open = saved ? saved === \"true\" : true;\n      panel.addEventListener(\"toggle\", () => {\n        try {\n          localStorage.setItem(\"battleDebugOpen\", String(panel.open));\n        } catch {}\n      });\n    } catch {}\n    panel.classList.remove(\"hidden\");\n    if (battleArea && panel.nextElementSibling !== battleArea) {\n      battleArea.before(panel);\n    }\n  } else if (panel) {\n    panel.classList.add(\"hidden\");\n    panel.remove();\n  }\n}","qaContext":"Why: Enable or disable the debug panel dynamically. How: 1.","embedding":[-0.027,0.009,0.029,0.172,-0.055,0.129,0.051,0.101,0.009,0.038,0.044,-0.136,-0.082,-0.104,-0.078,0.003,-0.029,-0.108,-0.041,0.037,0.094,-0.068,0.109,-0.009,0.185,-0.012,-0.07,0.013,-0.089,-0.021,0.073,0.009,-0.052,-0.08,-0.022,0.016,-0.135,-0.044,-0.036,-0.056,-0.134,0.078,-0.065,-0.129,0.03,-0.156,-0.099,0.052,0.161,0.087,0.066,0.025,0.086,-0.145,-0.025,0.062,0.073,0.105,0.019,-0.006,-0.091,0.026,0.091,-0.024,0.105,0.036,0.009,0.134,-0.071,0.082,-0.023,0.123,0.061,-0.03,-0.004,-0.124,-0.114,0.095,0.093,-0.042,0.063,-0.049,-0.058,-0.006,0.113,0.072,0.137,-0.002,-0.001,-0.117,-0.158,0.147,0.068,0.093,0.021,0.142,-0.068,0.064,-0.047,0.076,0.116,-0.051,-0.158,0.063,0.07,-0.194,0.109,-0.073,-0.069,0.044,0.033,0.121,-0.06,0.071,0.081,-0.022,0.251,0.011,0.104,-0.082,0.314,-0.016,-0.085,-0.099,0.13,-0.004,0.151,0,0.16,-0.276,-0.101,0.219,0.002,0.059,0.12,0.151,-0.142,-0.07,-0.113,0.044,0.055,-0.086,-0.054,-0.036,-0.009,0.032,0.086,-0.052,0.053,-0.055,0.012,0.074,0.053,0.116,-0.014,0.142,-0.245,-0.037,-0.014,-0.099,0.047,0.044,-0.016,-0.084,-0.14,-0.049,-0.006,0.044,-0.05,-0.183,-0.02,-0.104,-0.09,-0.066,0.014,0.028,-0.066,-0.027,-0.197,0.214,-0.015,-0.277,-0.022,0.074,-0.038,-0.013,-0.05,-0.05,-0.107,0.111,-0.076,0.046,-0.103,-0.001,0.045,-0.059,0.029,-0.316,-0.138,-0.182,0.219,-0.058,0.05,0.009,-0.096,0.017,-0.165,-0.113,0.072,-0.231,-0.183,0.078,0.244,0.006,0.096,-0.069,-0.029,0.11,0.065,-0.034,0.016,-0.147,0.074,0,0.075,0.058,-0.15,-0.063,0.031,0.057,0.016,0.104,-0.068,-0.037,-0.052,0.02,-0.058,-0.071,-0.068,0.274,-0.089,0.045,0.03,-0.01,0.112,0.138,0.172,0.015,-0.061,-0.087,0.132,0.005,0.003,-0.089,0.108,0.035,-0.202,0.017,0.089,-0.265,0.134,-0.075,-0.096,0.13,0.076,-0.091,0.068,-0.019,0.034,0.025,0.007,0.045,-0.119,0.13,-0.031,-0.171,-0.065,-0.005,0.012,-0.074,0.085,-0.064,-0.033,0.102,0.048,-0.128,0.072,0.049,0.146,-0.02,-0.028,0.25,0.068,0.148,-0.09,-0.145,0.127,-0.116,0.06,0.121,-0.066,-0.133,0.046,0.015,0.061,-0.034,-0.026,-0.243,0.006,-0.056,-0.148,0.215,-0.066,-0.037,-0.146,-0.048,0.088,-0.109,-0.108,0,-0.093,0.013,-0.011,-0.089,-0.087,-0.112,-0.003,-0.043,-0.056,-0.096,0.144,0.107,0.093,-0.075,-0.154,-0.045,-0.062,-0.024,-0.045,-0.083,0.131,-0.063,-0.017,0.095,0.208,-0.048,-0.042,0.007,0.093,0.067,-0.095,0.009,0.092,0.051,-0.018,-0.006,0.142,-0.069,0.074,0.143,0.119,0.039,-0.005,0.004,0.016,-0.017,0.08,-0.016,0.226,-0.024,-0.136,-0.076,0.048,0.014,0.023,-0.014,0.082,0.108,0.156,0.19,-0.036,0.046,0.004,0.016],"source":"src/helpers/classicBattle/uiHelpers.js [setDebugPanelEnabled]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","getElementById","createElement","setAttribute","append","querySelector","replaceWith","ensureDebugCopyButton","getItem","addEventListener","setItem","String","remove","before","add","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"setDebugPanelEnabled"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["getElementById","createElement","setAttribute","append","querySelector","replaceWith","ensureDebugCopyButton","getItem","addEventListener","setItem","String","remove","before","add"]}},"version":1},
{"id":"uiHelpers.js-maybeShowStatHint","text":"Show a temporary hint for stat buttons.\n\n@param {number} [durationMs=3000] Hover duration in milliseconds.\n1. Skip if `localStorage.statHintShown` is set or unavailable.\n2. Trigger hover events on `#stat-help` for `durationMs` milliseconds.\n3. Record that the hint has been shown.\n\nexport function maybeShowStatHint(durationMs = 3000, setTimeoutFn = globalThis.setTimeout) {\n  try {\n    if (typeof localStorage === \"undefined\") return;\n    const hintShown = localStorage.getItem(\"statHintShown\");\n    if (hintShown) return;\n    const help = document.getElementById(\"stat-help\");\n    help?.dispatchEvent(new Event(\"mouseenter\"));\n    setTimeoutFn(() => {\n      help?.dispatchEvent(new Event(\"mouseleave\"));\n    }, durationMs);\n    localStorage.setItem(\"statHintShown\", \"true\");\n  } catch {}\n}","qaContext":"Why: Show a temporary hint for stat buttons. How: statHintShown` is set or unavailable.","embedding":[-0.054,0,0.068,0.149,0.146,0.142,0.094,0.103,0.053,-0.06,0.074,-0.075,-0.143,-0.002,0.024,-0.065,0.013,-0.101,-0.041,-0.012,0.096,-0.212,0.134,0.096,0.003,-0.066,-0.006,-0.023,0.055,0.044,-0.009,0.012,-0.056,-0.1,0.046,-0.004,-0.135,0.084,0.004,-0.083,-0.06,0.035,-0.034,-0.064,-0.07,-0.005,0.062,-0.004,0.001,0.25,0.014,0.014,0.097,-0.206,0.248,0.064,0.067,0.026,0.042,0.079,-0.037,-0.087,0.003,-0.107,0.152,0.1,0.033,-0.007,-0.031,0.076,-0.023,0.07,0.011,0.095,-0.033,-0.067,-0.141,0.03,0.077,-0.003,0.031,-0.149,-0.009,-0.009,0.1,0.014,0.127,0.105,-0.112,-0.172,-0.106,0.038,-0.133,0.04,-0.105,0.098,-0.115,0.081,-0.079,-0.022,0.007,-0.063,0.032,-0.053,0.062,-0.068,0.012,-0.009,-0.056,0.169,-0.016,0.063,-0.07,0.095,0.022,-0.016,0.13,0.01,0.145,-0.117,0.322,0.135,0.015,-0.094,0.139,0.102,0.16,0,0.012,-0.201,-0.182,-0.016,-0.021,0.049,0.065,0.02,0.052,0.018,0.073,-0.07,-0.036,-0.105,0.041,0.001,0.21,-0.079,0.058,-0.127,0.074,-0.115,-0.006,0.093,0.069,0.005,0.044,0.046,-0.016,-0.085,0.084,0.025,-0.086,0.02,0.046,-0.079,0.021,-0.064,0.011,-0.096,-0.088,-0.056,-0.106,-0.008,-0.123,0.007,0.035,-0.044,-0.012,0.102,-0.093,0.063,-0.004,-0.192,0.029,0.026,-0.02,0.018,-0.136,-0.073,0.039,-0.122,0.054,-0.166,-0.081,0.188,-0.027,0.047,0.06,-0.11,-0.02,0.01,0.164,0.015,-0.082,-0.068,-0.081,-0.09,-0.021,-0.131,0.132,-0.229,-0.139,0.171,0.191,-0.086,0,0.02,-0.157,0.065,-0.049,-0.007,-0.045,0.025,-0.212,0,0.075,0.115,-0.088,0.045,-0.07,0.135,-0.08,0.145,-0.019,-0.093,-0.093,-0.017,-0.041,-0.079,-0.104,0.189,-0.064,0.094,0.011,-0.035,0.085,-0.069,-0.007,0.065,-0.074,0.038,0.157,-0.012,-0.066,-0.03,-0.039,0.05,-0.044,-0.059,0.015,-0.179,0.068,-0.001,-0.118,0.192,0.077,-0.12,0.09,-0.112,-0.132,0.22,0.047,-0.004,-0.067,0.072,0.087,-0.201,-0.009,-0.023,-0.045,-0.117,-0.013,-0.249,0.069,0.034,-0.003,-0.117,-0.049,0.08,0.007,0.074,-0.003,0.001,0.143,0.179,0.144,0.088,0.054,-0.206,-0.055,0.114,0.065,-0.131,0.075,-0.115,0.148,-0.011,0.04,-0.276,0.017,0.096,-0.074,0.214,-0.009,-0.004,-0.104,0.085,0.029,0.007,-0.057,0,-0.022,0.096,0.016,-0.105,0.075,0.058,-0.019,0.066,0.021,-0.043,0.192,0.095,0.064,-0.049,-0.083,-0.157,-0.063,0.081,-0.06,0.129,-0.021,-0.035,-0.019,0.062,0.021,0.009,-0.059,0.167,0.131,0.002,-0.023,-0.017,0.086,-0.005,-0.12,-0.016,0,-0.041,0.113,0.119,-0.001,-0.123,-0.131,0.029,-0.045,-0.117,-0.009,-0.13,-0.04,0.032,-0.095,-0.039,-0.021,0.182,0.039,-0.007,0.005,0.044,0.021,0.071,-0.028,0.027,-0.192,0.111],"source":"src/helpers/classicBattle/uiHelpers.js [maybeShowStatHint]","tags":["code","how","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","getItem","getElementById","dispatchEvent","setTimeoutFn","setItem"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"maybeShowStatHint"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["getItem","getElementById","dispatchEvent","setTimeoutFn","setItem"]}},"version":1},
{"id":"uiHelpers.js-resetBattleUI","text":"Reset battle UI elements to their initial state.\n\n@param {ReturnType<import(\"./roundManager.js\").createBattleStore>} [store]\n- Optional battle state store used to tear down the quit modal.\n1. Remove any active modal backdrops and destroy `store.quitModal`.\n2. Replace the Next Round and Quit buttons with fresh clones.\n3. Clear scoreboard messages and disable the Next Round button.\n\nexport function resetBattleUI(store) {\n  try {\n    document.querySelectorAll?.(\".modal-backdrop\").forEach((m) => {\n      if (typeof m.remove === \"function\") m.remove();\n    });\n  } catch {}\n  if (store?.quitModal) {\n    try {\n      store.quitModal.destroy();\n    } catch {}\n    store.quitModal = null;\n  }\n\n  let nextBtn;\n  try {\n    nextBtn = document.getElementById ? document.getElementById(\"next-button\") : null;\n  } catch {}\n  if (nextBtn) {\n    const clone = nextBtn.cloneNode(true);\n    clone.disabled = true;\n    delete clone.dataset.nextReady;\n    clone.addEventListener(\"click\", onNextButtonClick);\n    nextBtn.replaceWith(clone);\n  }\n\n  let quitBtn;\n  try {\n    quitBtn = document.getElementById ? document.getElementById(\"quit-match-button\") : null;\n  } catch {}\n  if (quitBtn) {\n    quitBtn.replaceWith(quitBtn.cloneNode(true));\n  }\n\n  try {\n    scoreboard.clearMessage();\n  } catch {}\n  let timerEl;\n  try {\n    timerEl = document.getElementById ? document.getElementById(\"next-round-timer\") : null;\n  } catch {}\n  if (timerEl) timerEl.textContent = \"\";\n  let roundResultEl;\n  try {\n    roundResultEl = document.getElementById ? document.getElementById(\"round-result\") : null;\n  } catch {}\n  if (roundResultEl) roundResultEl.textContent = \"\";\n  try {\n    syncScoreDisplay();\n  } catch {}\n  updateDebugPanel();\n}","qaContext":"Why: Reset battle UI elements to their initial state. How: @param {ReturnType<import(\".","embedding":[-0.054,0.055,0.048,0.092,-0.003,0.129,0.066,0.008,0.048,-0.07,0.029,-0.061,-0.07,-0.07,0.007,-0.041,-0.059,-0.002,-0.029,0.005,0.116,0.007,0.109,0.036,0.004,0.044,-0.028,-0.127,-0.038,-0.166,0.015,0.093,-0.085,-0.077,0.072,-0.059,-0.12,-0.002,0.042,-0.115,-0.083,0.083,-0.084,-0.012,-0.011,-0.038,-0.161,0.024,0.095,0.127,0.094,-0.015,0.025,-0.028,0.034,0.082,0.141,0.076,0.079,0.135,0.042,-0.077,-0.007,-0.071,0.138,0.061,0.044,-0.125,-0.039,-0.06,0.04,0.058,0.141,0.041,-0.065,-0.102,-0.135,-0.062,-0.03,0.092,-0.068,-0.249,-0.031,-0.043,0.063,-0.036,0.089,-0.051,0.095,-0.056,-0.21,0.24,0.082,0.138,0.018,0.188,-0.098,-0.015,-0.038,0.126,0.134,-0.008,-0.068,0.019,-0.018,-0.167,0.031,-0.073,-0.117,0.068,-0.008,0.179,0.064,0.096,-0.019,0.032,0.146,0.074,0.033,-0.073,0.23,0.061,-0.023,-0.141,0.095,0.05,0.152,0,0.034,-0.203,-0.196,0.087,0.049,0.045,0.122,0.125,-0.068,-0.038,-0.031,-0.015,-0.033,-0.11,0.061,-0.174,0.114,0.003,0.026,-0.146,0.112,-0.034,-0.002,0.122,-0.032,0.135,-0.041,0.031,-0.114,-0.018,0.041,0.038,-0.055,0.122,0.082,-0.072,-0.018,0.075,-0.063,-0.081,-0.101,-0.051,-0.177,0.005,-0.044,-0.216,0.029,-0.009,-0.097,-0.045,-0.114,0.125,-0.033,-0.267,-0.018,-0.014,-0.016,-0.053,-0.096,-0.088,0.09,0.058,-0.061,0.068,-0.132,0.114,-0.084,-0.134,-0.096,-0.257,0.005,-0.075,0.218,-0.08,-0.025,-0.102,-0.031,0.065,-0.053,-0.208,0.232,-0.102,-0.215,0.093,0.192,-0.056,0.048,-0.105,-0.011,0.171,-0.107,-0.018,0,-0.035,-0.006,0,0.073,0.084,-0.077,0.063,0.064,0.065,0.014,0.171,-0.078,-0.167,-0.014,0.12,-0.01,-0.011,-0.126,0.217,0.105,0.006,-0.147,0.006,0.106,0.083,-0.062,0.005,-0.083,-0.01,-0.074,0.06,0.052,0.049,0.172,0.005,0.025,0.036,0.123,-0.139,0.128,-0.02,-0.132,0.153,0.059,-0.116,-0.054,-0.075,0.01,0.048,0.073,0.089,-0.077,0.008,-0.057,-0.141,-0.127,-0.149,-0.022,-0.014,0.012,-0.123,0.057,0.005,0.092,-0.114,0.066,0.012,0.185,0.051,-0.019,0.222,0.079,0.275,-0.11,0.129,0.244,-0.185,0.056,0.059,-0.062,-0.044,0.101,-0.052,0.103,0.019,-0.009,-0.203,0.007,0.011,-0.176,0.084,-0.01,0.065,-0.149,-0.106,0.181,-0.05,-0.03,0,-0.144,-0.041,0.012,-0.013,0.035,-0.078,0.001,0.058,0.035,-0.269,0.085,0.156,0.117,-0.023,-0.095,-0.133,-0.033,0.004,-0.022,0.089,-0.007,-0.096,0.02,0.001,0.085,-0.009,-0.01,0.034,0.094,0.046,-0.036,0.035,0.032,-0.016,-0.17,0.03,0.13,-0.032,0.121,0.058,0.071,0.025,-0.151,0.051,-0.067,-0.036,0.044,-0.05,0.076,0.036,-0.163,-0.049,-0.069,0.087,0.055,-0.077,0.121,0.035,-0.024,0.14,0.024,-0.051,-0.045,-0.017],"source":"src/helpers/classicBattle/uiHelpers.js [resetBattleUI]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","forEach","querySelectorAll","remove","destroy","getElementById","cloneNode","addEventListener","onNextButtonClick","getNextRoundControls","replaceWith","clearMessage","syncScoreDisplay","updateDebugPanel","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"resetBattleUI"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["forEach","querySelectorAll","remove","destroy","getElementById","cloneNode","addEventListener","onNextButtonClick","getNextRoundControls","replaceWith","clearMessage","syncScoreDisplay","updateDebugPanel"]}},"version":1},
{"id":"uiHelpers.js-setOpponentDelay","text":"Set the delay before the opponent snackbar appears.\n\n@param {number} ms Delay in milliseconds.\n1. If `ms` is a finite number, update `opponentDelayMs`.\n\nexport function setOpponentDelay(ms) {\n  if (Number.isFinite(ms)) {\n    opponentDelayMs = ms;\n  }\n}","qaContext":"Why: Set the delay before the opponent snackbar appears. How: @param {number} ms Delay in milliseconds.","embedding":[0.095,0.073,-0.028,-0.074,-0.199,0.315,0.19,0.076,0.184,-0.06,0.009,-0.114,-0.096,-0.166,0.015,-0.138,0.119,-0.189,0.078,-0.083,0.172,-0.228,0.131,-0.026,0.003,-0.162,0.023,-0.121,0.141,-0.056,0.085,0.077,0.225,0.046,-0.21,-0.15,-0.087,-0.002,0.004,0.044,0.177,0.08,-0.225,-0.254,0.104,-0.125,-0.058,0.123,-0.072,0.102,-0.057,-0.082,0.04,0.02,0.332,-0.035,0.098,0.101,0.139,0.176,-0.082,-0.141,0.056,-0.147,0.153,-0.065,0.096,0.032,-0.02,0.321,0.166,-0.014,0.325,-0.033,-0.075,-0.216,-0.067,0.026,0.189,0.19,-0.109,-0.245,-0.013,-0.139,0.152,-0.036,0.206,0.091,0.116,-0.149,-0.157,0.011,0.099,0.286,-0.171,0.102,-0.059,-0.014,-0.03,0.133,0.008,0.143,-0.01,0.152,0.064,0.016,0.224,0.08,-0.004,0.177,0.146,0.156,0.084,0.127,-0.334,-0.043,0.118,-0.062,0.039,-0.207,0.326,0.213,0.058,-0.157,0.065,0.078,0.098,0,-0.173,-0.259,-0.158,0.001,0.115,0.039,0.045,-0.03,-0.038,-0.018,-0.017,-0.158,-0.142,-0.106,0.056,-0.272,0.052,0.026,0.221,-0.123,-0.041,-0.355,-0.17,-0.16,0.071,0.165,0.026,-0.026,0.106,0.005,0.17,0.14,-0.162,0.057,0.066,-0.198,0.036,0.031,-0.085,-0.078,-0.101,-0.112,-0.186,0.003,-0.262,-0.072,0.104,0.32,0.164,0.065,-0.124,0.139,0.105,-0.132,-0.024,-0.011,0.175,0.027,-0.059,-0.184,-0.052,-0.105,0.084,0.104,-0.208,0.28,-0.112,-0.106,-0.008,-0.256,0.076,-0.023,0.102,0.057,-0.157,-0.082,-0.009,-0.031,-0.204,-0.143,0.439,-0.299,-0.274,0.141,0.015,0.011,0.061,-0.112,0.016,0.221,-0.249,-0.069,0.04,0.054,-0.218,0,-0.01,-0.09,0.027,0.218,0.182,-0.103,0.023,0.116,-0.147,-0.083,-0.109,0.12,-0.09,-0.218,-0.048,0.516,0.156,0.025,0.021,-0.359,0.034,-0.17,-0.138,0.078,0.016,0.179,0.273,0.093,0.052,-0.169,-0.12,-0.164,0.074,-0.097,0.079,0.142,0.084,-0.136,-0.115,0.129,-0.024,-0.02,-0.071,0.052,-0.1,0.11,0.018,-0.089,0.023,-0.016,0.11,-0.064,0.062,-0.108,0.076,0.038,-0.073,-0.13,0.163,-0.096,0.042,-0.246,0.143,-0.059,0.199,0.175,-0.136,0.083,0.202,0.223,0.223,0.107,0.076,-0.001,-0.22,-0.073,-0.019,-0.009,0.095,0.064,0.141,0.117,0.269,-0.129,-0.321,0.192,0.169,0.25,-0.056,0.164,-0.073,0.05,0.158,-0.072,-0.076,0,0.01,-0.305,-0.026,-0.079,-0.069,-0.027,-0.212,-0.302,0.011,-0.273,0.121,0.181,0.187,0.122,0.173,-0.345,-0.174,0.029,-0.182,0.041,-0.13,0.149,0.165,-0.1,0.169,-0.165,-0.141,0.3,0.06,0.002,-0.226,0.164,0.015,0.005,-0.126,0.009,-0.048,0.034,0.193,0.225,-0.041,-0.328,-0.219,0.068,-0.152,0.015,-0.237,-0.099,0.002,0.063,0.082,0.11,-0.197,-0.032,-0.104,-0.058,-0.043,0.017,0.173,0.052,-0.139,-0.058,-0.08,-0.018],"source":"src/helpers/classicBattle/uiHelpers.js [setOpponentDelay]","tags":["code","what","function","utility","./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js","isFinite"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/uiHelpers.js","node":"setOpponentDelay"},"patterns":[],"relations":{"imports":["./opponentController.js","../featureFlags.js","../battleEngineFacade.js","../testModeUtils.js","../../components/JudokaCard.js","../lazyPortrait.js","../showSnackbar.js","../setupScoreboard.js","../battle/index.js","../motionUtils.js","../../utils/scheduler.js","./selectionHandler.js","./cardStatUtils.js","./cardSelection.js","./timerService.js","../stats.js","../viewportDebug.js","../cardUtils.js","../../components/Modal.js","../../components/Button.js","./uiService.js","./battleEvents.js"],"calls":["isFinite"]}},"version":1},
{"id":"timerService.js-onNextButtonClick","text":"Handle clicks on the Next button. Uses the active timer controls provided by\n`scheduleNextRound` to either resolve the ready promise or cancel the timer.\n\n@param {MouseEvent} _evt - Click event.\n@param {{timer: {stop: () => void} | null, resolveReady: (() => void) | null}} [controls=currentNextRound]\n- Timer controls returned from `scheduleNextRound`.\n\nexport async function onNextButtonClick(_evt, { timer, resolveReady } = currentNextRound ?? {}) {\n  const btn = document.getElementById(\"next-button\");\n  if (!btn) return;\n\n  if (btn.dataset.nextReady === \"true\") {\n    btn.disabled = true;\n    delete btn.dataset.nextReady;\n    await dispatchBattleEvent(\"ready\");\n    if (typeof resolveReady === \"function\") {\n      resolveReady();\n    }\n    setSkipHandler(null);\n    return;\n  }\n\n  if (timer) {\n    timer.stop();\n  }\n}","qaContext":"Why: Handle clicks on the Next button. How: Uses the active timer controls provided by `scheduleNextRound` to either resolve the ready promise or cancel the timer.","embedding":[-0.131,-0.043,0.01,0.127,0,0.059,0.043,0.017,0.05,-0.038,-0.04,-0.044,-0.101,-0.024,-0.059,0.032,-0.06,-0.074,0.033,-0.02,0.139,-0.054,0.136,0.058,-0.134,-0.117,-0.039,-0.158,0.018,0.045,0.056,-0.029,-0.172,-0.137,-0.031,0.007,-0.083,0.006,0.086,-0.082,0.065,0.025,-0.117,-0.077,0.057,0.002,-0.064,-0.07,-0.058,0.176,0.058,0.009,-0.055,-0.11,0.139,0.159,0.075,0.061,0.032,0.062,0.033,-0.152,-0.096,0.001,0.031,0.116,-0.035,0.01,-0.003,-0.057,-0.073,0.01,0.033,0.077,-0.038,-0.156,-0.04,0.029,0.011,-0.033,0.046,-0.051,0.014,0.016,0.024,-0.055,0.039,0.074,0.006,0.022,-0.081,0.064,-0.076,0.072,0.035,0.086,-0.011,0.153,-0.038,-0.028,0.097,-0.046,-0.137,-0.06,-0.004,-0.108,-0.014,-0.111,-0.062,0.038,0.006,0.087,-0.068,-0.038,0.014,0.046,0.058,0.007,0.167,-0.132,0.164,0.02,0.022,-0.131,0.128,-0.007,0.139,0,-0.034,-0.172,-0.164,-0.117,0.056,0.095,0.117,0.053,0.009,-0.003,0.019,-0.162,0.015,-0.04,-0.048,-0.101,0.138,-0.018,0.022,-0.018,0.173,0.017,-0.021,0.1,-0.043,-0.004,-0.062,0,0.032,0.011,0.05,0.094,-0.1,0.126,0.005,-0.04,-0.048,0.004,0.024,-0.068,0.011,-0.038,-0.107,0.064,-0.086,-0.14,0.032,-0.127,0.083,0.016,-0.066,0.06,0.055,-0.179,0.098,-0.034,-0.058,0.014,-0.112,0.017,0.074,-0.082,-0.022,-0.02,-0.093,0.102,-0.059,-0.042,-0.052,-0.131,0.081,-0.048,0.143,-0.068,0.075,0.084,-0.076,0.077,-0.1,0.016,0.071,-0.011,-0.093,0.128,0.169,-0.06,-0.09,0.048,0.087,0.101,-0.011,-0.057,-0.055,0.079,-0.156,0,0.15,0.127,-0.065,0.074,-0.053,0.115,-0.033,0.025,-0.046,-0.01,0.042,0.088,0.039,-0.058,-0.083,0.109,0.113,0.026,-0.067,-0.082,0.114,0.014,-0.075,0.024,-0.01,0.01,0.028,0.11,0.013,0.014,-0.019,-0.002,0.088,0.012,0.095,0.021,0.057,0.001,-0.106,0.099,0.104,-0.144,-0.005,-0.054,0.016,0.053,-0.087,0.076,0.037,0.083,0.03,-0.094,0.009,-0.051,0.012,-0.117,-0.002,-0.198,0.092,-0.009,0.025,-0.181,0.12,0.049,0.024,0.028,-0.083,0.086,0.16,0.171,-0.041,0.048,0.049,-0.137,-0.017,0.021,0.003,-0.105,0.032,0.033,0.115,0.031,0.13,-0.14,0.003,0.062,-0.084,0.024,0.019,0.055,-0.047,-0.063,-0.022,0.083,0.032,0,-0.057,0.019,0.069,-0.088,0.045,-0.053,-0.038,-0.004,-0.008,0.001,0.089,0.055,0.195,0.007,-0.041,-0.026,0.067,0.008,0.032,0.022,0.048,-0.117,-0.002,-0.064,0.043,0.019,0.039,0.048,0.083,-0.02,-0.094,0.02,-0.076,0.029,-0.172,-0.049,0.039,-0.046,0.08,0.038,0.019,-0.061,-0.029,0.103,-0.051,-0.112,-0.056,-0.03,0.021,0.011,-0.12,0,-0.036,0.057,0.094,-0.079,-0.043,-0.068,-0.033,0.106,-0.068,-0.023,-0.065,-0.058],"source":"src/helpers/classicBattle/timerService.js [onNextButtonClick]","tags":["code","what","function","utility","../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js","getElementById","dispatchBattleEvent","resolveReady","setSkipHandler","stop"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/timerService.js","node":"onNextButtonClick"},"patterns":[],"relations":{"imports":["../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js"],"calls":["getElementById","dispatchBattleEvent","resolveReady","setSkipHandler","stop"]}},"version":1},
{"id":"timerService.js-getNextRoundControls","text":"Expose current next-round controls for helpers like `setupNextButton`.\n\n@returns {{timer: ReturnType<typeof createRoundTimer>|null, resolveReady: (()=>void)|null, ready: Promise<void>|null}|null}\n\nexport function getNextRoundControls() {\n  return currentNextRound;\n}","qaContext":"Why: Expose current next-round controls for helpers like `setupNextButton`. How: Expose current next-round controls for helpers like `setupNextButton`.","embedding":[-0.115,-0.042,-0.079,0.218,-0.066,0.202,0.011,0.104,0.026,0.056,0.04,-0.107,-0.123,-0.031,0.11,0.024,0.01,-0.104,0.157,-0.105,0.086,-0.054,0.116,0.008,-0.2,-0.126,-0.119,-0.103,0.21,-0.04,-0.057,0.18,-0.336,-0.157,-0.135,0.057,0.051,0.139,0.035,-0.065,0.089,0.111,-0.055,-0.173,0.095,-0.079,-0.027,0.052,-0.051,-0.021,0.076,-0.009,0.146,-0.226,0.168,0.148,0.018,0.023,0.074,0.165,0.028,-0.243,-0.076,-0.124,-0.031,0.174,-0.018,0.009,-0.002,-0.112,-0.047,-0.018,0.074,-0.036,0.072,-0.196,-0.09,0.055,0.007,0,0.071,0.077,0.021,0.012,-0.02,-0.04,0.13,0.061,0.085,0.06,-0.185,0.001,-0.17,-0.035,-0.048,0.042,-0.149,-0.027,-0.18,-0.018,0.039,-0.173,-0.024,0.011,0.107,-0.044,0.01,-0.035,-0.013,0.126,0.016,0.15,0.039,-0.04,0.071,0.025,0.043,-0.13,0.242,-0.079,0.243,0.082,0.035,-0.066,0.175,-0.005,0.139,0,0.001,-0.041,-0.132,0.086,0.093,0.16,0.077,0.079,0.087,-0.022,0.051,-0.123,-0.227,-0.047,-0.045,-0.146,0.118,0.012,-0.05,-0.052,0.058,0.01,-0.081,-0.037,0.088,-0.014,-0.092,0.045,-0.123,-0.035,0.149,-0.033,-0.01,0.085,0.048,-0.004,-0.028,0.071,0.036,0.008,-0.072,-0.018,-0.223,-0.032,-0.116,-0.157,0.057,-0.001,0.129,0.013,-0.155,0.163,-0.023,-0.205,0.193,-0.104,-0.119,0.073,-0.04,0.068,0.025,-0.129,-0.137,-0.013,-0.247,0.071,-0.05,-0.074,0,-0.095,-0.006,0.021,0.054,0.12,0.137,0.007,-0.112,0.029,0.072,-0.059,0.178,0.06,-0.172,0.309,0.185,-0.061,0.028,-0.023,0.067,-0.005,-0.197,-0.145,0.117,0.077,-0.138,0,0.154,0.011,-0.028,-0.01,0.011,-0.003,0.013,0.03,0.049,0.121,0.07,0.141,-0.019,-0.129,-0.104,0.116,0.045,-0.067,0.094,-0.212,0.036,-0.102,-0.053,-0.067,-0.061,0.091,0.144,0.182,-0.06,0.012,-0.14,-0.041,0.117,0.004,0,-0.012,0.013,0.04,-0.146,0.117,0.072,-0.057,-0.139,0.013,-0.115,0.03,0.044,-0.148,-0.038,-0.01,0.005,-0.191,0.049,-0.075,-0.15,-0.068,0.051,-0.103,0.229,0.077,-0.01,-0.184,0.083,0.025,0.081,0.068,-0.025,0.087,0.158,0.136,0.06,0.007,0.13,-0.195,0.069,0.117,-0.026,-0.205,0.076,0.004,0.04,-0.048,0.084,-0.21,0.005,-0.027,-0.021,0.073,0.014,0.167,-0.088,-0.023,-0.046,0.032,0.02,0,-0.115,0.085,0.012,-0.14,-0.027,-0.042,0.002,-0.094,-0.079,0.009,0.018,0.115,0.216,0.046,0.171,-0.097,0.007,0.046,-0.106,-0.038,0.005,0.071,0.114,-0.086,-0.002,0.038,0.036,0.192,0.157,0.105,-0.013,0.108,-0.074,0.089,-0.234,-0.011,-0.156,0.031,0.057,0.144,-0.039,-0.035,-0.166,0.076,-0.15,-0.068,-0.109,-0.025,0.005,-0.081,-0.094,0.046,-0.046,0.159,0.071,0.005,0.058,-0.069,-0.047,-0.013,-0.296,-0.008,0.07,0.015],"source":"src/helpers/classicBattle/timerService.js [getNextRoundControls]","tags":["code","what","function","utility","../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/timerService.js","node":"getNextRoundControls"},"patterns":[],"relations":{"imports":["../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js"],"calls":[]}},"version":1},
{"id":"timerService.js-startTimer","text":"Start the round timer and auto-select a random stat on expiration.\n\n@param {(stat: string, opts?: { delayOpponentMessage?: boolean }) => Promise<void>} onExpiredSelect\n- Callback to handle stat auto-selection.\n@returns {Promise<void>} Resolves when the timer begins.\n1. Determine timer duration using `getDefaultTimer('roundTimer')`.\n   - On error, temporarily show \"Waiting…\" and fallback to 30 seconds.\n2. Start the timer via `engineStartRound` and monitor for drift.\n   - On drift trigger auto-select logic and dispatch the outcome event.\n3. Register a skip handler that stops the timer and triggers `onExpired`.\n4. When expired, dispatch \"timeout\" and call `autoSelectStat` to pick a stat\n   and invoke `onExpiredSelect` with `delayOpponentMessage`.\n\nexport async function startTimer(onExpiredSelect) {\n  const timerEl = document.getElementById(\"next-round-timer\");\n  let duration = 30;\n  let synced = true;\n\n  const onTick = (remaining) => {\n    if (!timerEl) return;\n    if (remaining <= 0) {\n      scoreboard.clearTimer();\n      return;\n    }\n    timerEl.textContent = `Time Left: ${remaining}s`;\n  };\n\n  const onExpired = async () => {\n    setSkipHandler(null);\n    scoreboard.clearTimer();\n    // If a selection was already made, do not auto-select again.\n    try {\n      const store = typeof window !== \"undefined\" ? window.battleStore : null;\n      const alreadyPicked = !!(store && store.selectionMade);\n      try {\n        console.warn(`[test] onExpired: selectionMade=${alreadyPicked}`);\n      } catch {}\n      if (alreadyPicked) {\n        return;\n      }\n    } catch {}\n    await dispatchBattleEvent(\"timeout\");\n    await autoSelectStat(onExpiredSelect);\n  };\n\n  try {\n    const val = await getDefaultTimer(\"roundTimer\");\n    if (typeof val === \"number\") {\n      duration = val;\n    } else {\n      synced = false;\n    }\n  } catch {\n    synced = false;\n  }\n  const restore = !synced ? scoreboard.showTemporaryMessage(\"Waiting…\") : () => {};\n\n  const timer = createRoundTimer(onTick, onExpired, {\n    starter: engineStartRound,\n    onDriftFail: () => forceAutoSelectAndDispatch(onExpiredSelect)\n  });\n\n  setSkipHandler(() => timer.stop());\n\n  timer.start(duration);\n  restore();\n}","qaContext":"Why: Start the round timer and auto-select a random stat on expiration. How: Determine timer duration using `getDefaultTimer('roundTimer')`.","embedding":[-0.144,0.042,-0.005,0.262,0.032,0.076,0.107,0.087,0.208,-0.079,-0.037,-0.18,-0.141,-0.043,-0.087,-0.039,-0.023,-0.113,-0.01,-0.051,0.021,-0.114,0.089,0.055,-0.068,-0.066,-0.066,-0.093,-0.045,-0.079,-0.047,-0.001,-0.096,-0.046,-0.132,-0.021,-0.041,0.033,0.026,-0.081,0.083,0.071,-0.132,-0.028,0.036,-0.115,-0.191,-0.032,-0.047,0.179,-0.038,0.016,0.026,-0.06,0.096,0.149,0.041,0.054,0.028,0.006,0.035,-0.194,-0.022,-0.04,0.078,0.042,0.035,-0.068,0.027,0.101,0.021,0.059,0.107,0,-0.044,-0.097,-0.112,-0.104,0.046,0.058,-0.125,-0.109,-0.094,0.002,0.065,0.01,0.152,0.099,0.071,-0.13,-0.143,0.093,-0.082,0.118,0.016,0.159,-0.004,0.06,0.026,-0.044,0.062,-0.051,-0.044,0.086,-0.019,-0.151,0.005,-0.07,-0.014,0.106,-0.028,0.083,0.154,0.103,-0.007,0.24,0.022,0.03,0.142,0.011,0.208,0.063,0.005,-0.17,0.143,-0.037,0.277,0,-0.053,-0.264,-0.145,-0.018,0.003,0.014,0.065,0.082,-0.018,0.008,-0.016,-0.04,-0.05,-0.08,0.058,-0.106,0.105,0.019,0.17,-0.009,0.186,-0.119,-0.085,0.004,0.039,0.039,-0.014,0.111,-0.1,-0.021,0.079,0.093,-0.135,0.055,0.037,-0.051,-0.065,0.168,-0.072,-0.018,-0.009,0.007,-0.109,0.025,-0.082,-0.22,-0.015,0.059,0.047,0.058,0.014,0.052,-0.062,-0.154,0.078,0.167,0.028,0.031,-0.114,0.087,-0.049,-0.086,-0.054,-0.082,-0.034,0.117,-0.064,-0.092,-0.063,-0.09,0.037,-0.107,0.19,-0.015,-0.018,-0.04,0.05,0.008,-0.107,-0.187,0.155,-0.165,-0.173,0.131,0.146,0.047,0.041,-0.059,-0.091,0.137,-0.114,0.027,0.116,-0.044,-0.124,0,0.128,-0.08,-0.031,0.18,0.162,0.057,-0.033,0.104,-0.028,-0.174,-0.03,0.09,0.043,0.047,-0.087,0.224,0.094,-0.093,-0.049,0.07,0.141,-0.067,-0.077,-0.033,-0.068,0.143,0.067,0.062,-0.026,-0.105,-0.028,-0.024,-0.027,0.024,0.141,-0.148,0.092,-0.018,-0.092,0.202,0.118,-0.06,-0.096,-0.057,-0.019,0.078,0.083,0.101,-0.01,0.068,-0.069,-0.097,-0.124,0.117,-0.032,-0.055,0.056,-0.175,0.16,0.173,0.006,-0.135,0.147,-0.023,0.174,-0.003,-0.072,-0.012,0.096,0.235,0.017,0.087,0.009,-0.129,0.027,0.005,-0.061,-0.133,0.141,-0.051,-0.007,0.07,0.073,-0.195,-0.049,0.123,-0.06,0.106,0.101,-0.004,-0.048,-0.048,0.014,-0.084,-0.084,0,-0.101,0.02,0.031,-0.032,0.063,-0.092,-0.03,-0.094,-0.007,-0.218,0.1,0.083,0.18,0.003,-0.026,-0.158,0.054,0.041,-0.017,0.049,0.003,-0.024,0.003,-0.132,-0.006,0.041,0.022,0.082,0.145,0.013,-0.158,0.093,0.106,-0.065,-0.057,-0.057,0.025,-0.124,0.109,0.074,0.116,0.021,-0.144,-0.035,-0.098,-0.097,0.025,-0.102,0.108,0.086,-0.096,-0.213,-0.031,-0.028,0.095,-0.04,0.067,-0.152,-0.05,0.068,-0.057,-0.183,-0.122,0.01],"source":"src/helpers/classicBattle/timerService.js [startTimer]","tags":["code","how","function","utility","../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js","getElementById","clearTimer","setSkipHandler","dispatchBattleEvent","autoSelectStat","getDefaultTimer","showTemporaryMessage","createRoundTimer","forceAutoSelectAndDispatch","stop","start","restore","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/timerService.js","node":"startTimer"},"patterns":[],"relations":{"imports":["../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js"],"calls":["getElementById","clearTimer","setSkipHandler","dispatchBattleEvent","autoSelectStat","getDefaultTimer","showTemporaryMessage","createRoundTimer","forceAutoSelectAndDispatch","stop","start","restore"]}},"version":1},
{"id":"timerService.js-handleStatSelectionTimeout","text":"Handle stalled stat selection by prompting the player and auto-selecting a\nrandom stat.\n\n@param {{autoSelectId: ReturnType<typeof setTimeout> | null}} store\n- Battle state store.\n@param {(stat: string, opts?: { delayOpponentMessage?: boolean }) => void} onSelect\n- Callback to handle stat selection.\n@param {number} [timeoutMs=5000] - Delay before auto-selecting.\n1. Display \"Stat selection stalled\" via `scoreboard.showMessage`.\n2. After `timeoutMs` milliseconds call `autoSelectStat(onSelect)`.\n\nexport function handleStatSelectionTimeout(\n  store,\n  onSelect,\n  timeoutMs = 5000,\n  scheduler = realScheduler\n) {\n  scoreboard.showMessage(\"Stat selection stalled. Pick a stat or wait for auto-pick.\");\n  store.autoSelectId = scheduler.setTimeout(() => {\n    autoSelectStat(onSelect);\n  }, timeoutMs);\n}","qaContext":"Why: Handle stalled stat selection by prompting the player and auto-selecting a random stat. How: Display \"Stat selection stalled\" via `scoreboard.","embedding":[-0.051,0.01,-0.08,0.175,0.069,0.209,0.106,0.053,0.144,0.026,-0.051,-0.138,-0.143,-0.023,-0.068,-0.033,0.07,-0.172,0.061,0,-0.026,-0.008,0.071,0.059,-0.008,-0.095,0.005,-0.038,-0.026,-0.031,-0.101,-0.15,0.049,-0.012,-0.033,-0.052,-0.097,0.053,-0.083,-0.045,0.14,0.009,-0.13,-0.042,0.026,-0.044,-0.137,-0.023,-0.003,0.17,-0.152,0.021,0.107,-0.1,0.13,0.227,0.161,0.063,0.055,0.068,-0.053,-0.203,-0.051,-0.063,0.11,0.156,0.114,-0.044,-0.028,0.145,-0.004,0.152,0.014,0.02,0.101,0.057,-0.253,-0.114,0.133,-0.092,-0.104,-0.125,-0.087,0.037,0.098,0.061,0.216,0.05,0.088,-0.037,-0.117,-0.019,-0.004,0.112,-0.15,0.238,-0.102,0.042,0.054,-0.074,0.081,0.033,-0.003,0.005,-0.034,-0.187,0.012,0.066,-0.106,0.041,-0.026,0.098,0.075,0.143,-0.114,0.287,0.011,-0.02,0.124,-0.062,0.268,0.096,-0.046,-0.16,0.139,0.13,0.176,0,-0.057,-0.291,-0.114,-0.005,-0.095,-0.033,-0.044,0.017,0,0.017,-0.122,-0.11,0.026,-0.092,0.035,-0.11,0.095,0.063,0.105,-0.016,0.262,-0.132,-0.019,-0.031,0.06,0.129,-0.028,0.108,-0.01,0.012,0.068,-0.051,-0.084,0.058,0.034,-0.031,-0.035,0.083,-0.083,-0.012,-0.054,-0.058,-0.229,0.142,-0.069,-0.21,-0.042,0.006,-0.026,0.077,-0.031,0.133,0.04,-0.116,0.06,0.055,0.036,-0.04,-0.066,0.026,-0.075,-0.024,-0.056,-0.021,-0.102,0.142,-0.054,-0.11,-0.034,-0.154,0.097,-0.049,0.038,0.007,-0.098,-0.032,0.02,-0.016,-0.11,-0.196,0.15,-0.251,-0.175,0.048,0.196,0.017,0.031,-0.077,-0.101,0.039,-0.106,0.043,-0.006,0.073,-0.082,0,0.1,-0.058,0.034,0.215,0.125,0.005,-0.051,0.084,0.028,-0.192,-0.079,0.043,0.044,0.087,-0.025,0.149,0.017,-0.079,0.002,0.045,0.036,-0.105,-0.043,-0.033,-0.157,0.102,0.088,0.003,0.026,-0.038,-0.014,0.057,-0.125,0.024,0.061,-0.064,0.038,0.016,-0.076,0.373,0.113,0.012,-0.145,0.004,-0.05,0.263,0.091,0.028,-0.024,0.031,-0.145,0.005,0.012,0.066,-0.09,0.015,-0.091,-0.08,0,0.185,0.029,-0.065,0.166,-0.062,0.191,0.011,0.01,0.007,0.055,0.177,0.091,0.029,0.008,-0.067,-0.006,0.032,-0.178,0.005,0.127,0.037,0.064,0.078,0.062,-0.191,-0.099,0.143,-0.058,0.273,0.131,-0.038,0.021,0.003,-0.005,-0.043,-0.115,0,0.049,0.025,0.087,-0.046,0.111,-0.086,-0.061,-0.046,0.004,-0.078,-0.019,-0.014,0.006,0.001,-0.067,-0.163,-0.07,0.1,-0.03,-0.003,-0.035,-0.061,-0.007,-0.065,0.049,-0.06,-0.01,-0.039,0.083,-0.035,-0.09,0.082,0.129,-0.12,-0.033,0.081,0.032,-0.106,0.171,0.01,0.005,-0.058,-0.179,-0.021,-0.143,-0.049,-0.008,-0.005,0.079,-0.014,-0.143,-0.267,-0.048,0.016,0.149,0.037,0.03,-0.162,0.047,0.023,-0.063,-0.113,-0.243,0.064],"source":"src/helpers/classicBattle/timerService.js [handleStatSelectionTimeout]","tags":["code","how","function","utility","../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js","showMessage","setTimeout","autoSelectStat","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/timerService.js","node":"handleStatSelectionTimeout"},"patterns":[],"relations":{"imports":["../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js"],"calls":["showMessage","setTimeout","autoSelectStat"]}},"version":1},
{"id":"timerService.js-createRoundTimer","text":"export function createRoundTimer(onTick, onExpired, { starter = startCoolDown, onDriftFail } = {}) {\n  const MAX_DRIFT_RETRIES = 3;\n  let retries = 0;\n\n  function start(dur) {\n    return starter(onTick, onExpiredInternal, dur, handleDrift);\n  }\n\n  async function onExpiredInternal() {\n    await onExpired();\n  }\n\n  async function handleDrift(remaining) {\n    retries += 1;\n    if (retries > MAX_DRIFT_RETRIES) {\n      if (typeof onDriftFail === \"function\") {\n        await onDriftFail();\n      } else {\n        await onExpiredInternal();\n      }\n      return;\n    }\n    const msgEl = document.getElementById(\"round-message\");\n    if (msgEl && msgEl.textContent) {\n      snackbar.showSnackbar(\"Waiting…\");\n    } else {\n      scoreboard.showMessage(\"Waiting…\");\n    }\n    await start(remaining);\n  }\n\n  function stop() {\n    stopTimer();\n    onExpiredInternal();\n  }\n\n  return { start, stop };\n}","qaContext":"Why: export function createRoundTimer(onTick, onExpired, { starter = startCoolDown, onDriftFail } = {}) { const MAX_DRIFT_RETRIES = 3; let retries = 0; function start(dur) { return starter(onTick, ...","embedding":[-0.103,-0.039,0.005,0.146,0.012,0.083,-0.014,0.135,0.152,-0.079,-0.017,-0.092,-0.111,-0.062,-0.001,0.012,0.013,-0.198,-0.009,0.009,0.107,-0.034,0.044,0.103,-0.054,-0.034,-0.094,-0.108,0.029,-0.022,0.047,0.011,-0.045,-0.033,-0.033,0.109,-0.064,-0.046,-0.019,0.012,0.046,0.031,-0.09,0.02,0.129,-0.101,-0.134,0.046,-0.002,0.17,0.06,-0.009,-0.079,-0.092,0.148,0.168,-0.026,0.122,0.014,0.013,0.006,-0.072,0.156,-0.075,0.017,-0.073,0.018,-0.025,0.038,0.185,0.018,0.08,0.025,0.041,-0.029,-0.216,-0.052,0.054,0.003,-0.012,-0.195,-0.242,0.004,-0.05,0.099,-0.007,0.067,0.096,0.054,-0.07,-0.077,0.179,-0.097,0.16,-0.123,0.091,-0.115,0.131,0.017,0.056,-0.03,0.091,0.002,0.087,0.004,-0.204,0.005,-0.027,-0.069,0.113,0.002,0.134,0.16,0.115,-0.093,0.154,-0.043,0.044,0.167,0.008,0.241,0.069,0.069,-0.08,-0.036,-0.027,0.3,0,-0.126,-0.221,-0.111,0.032,-0.022,0.005,-0.021,0.073,-0.081,-0.018,0.001,0.037,-0.059,-0.024,0.05,-0.176,0.198,-0.05,0.14,-0.048,0.119,-0.181,-0.026,-0.029,0.016,-0.009,0.124,0.122,-0.1,-0.039,0.073,-0.017,-0.149,0.035,0.036,-0.086,-0.079,0.073,-0.124,-0.051,-0.032,0.001,-0.174,-0.059,-0.121,-0.123,0.064,0.003,0.11,-0.028,-0.103,0.061,0.029,-0.154,0.023,0.031,-0.006,-0.067,-0.176,-0.022,0,-0.117,0.038,-0.089,-0.062,0.2,-0.032,-0.108,-0.085,-0.156,0.077,-0.097,0.143,-0.016,-0.039,0.085,-0.078,0.039,-0.097,-0.168,0.178,-0.161,-0.188,0.202,0.179,-0.007,-0.011,-0.059,-0.074,0.19,-0.235,-0.074,0.116,-0.052,0.016,0,0.077,-0.016,-0.073,0.035,0.061,0.046,-0.045,0.102,-0.033,0.002,-0.057,0.008,-0.058,0.036,-0.109,0.186,0.159,-0.005,-0.045,-0.029,0.031,-0.01,-0.126,0.016,-0.035,0.2,0.112,0.042,-0.194,-0.161,-0.039,-0.141,0.045,-0.022,0.121,0.03,0.016,-0.067,-0.094,0.147,0.173,-0.054,-0.098,-0.074,0.032,0.062,0.073,-0.038,-0.064,0.112,0.024,-0.088,0.01,-0.033,0.008,-0.081,0.031,-0.175,0.084,-0.042,0.06,-0.24,0.126,-0.052,0.152,-0.097,-0.031,-0.039,0.179,0.194,0.049,0.122,-0.025,-0.091,-0.007,-0.051,-0.034,-0.252,0.056,0.02,-0.033,-0.018,0.115,-0.087,-0.002,0.037,-0.049,0.053,0.067,-0.013,-0.034,-0.017,-0.026,0.074,-0.141,0,-0.132,-0.015,-0.01,-0.03,0.159,-0.105,-0.032,-0.189,-0.072,-0.161,0.052,0.047,0.155,-0.051,0.034,-0.142,0.008,0.054,-0.024,-0.036,0.067,0.072,-0.011,-0.087,0.059,-0.077,0.065,0.163,0.159,-0.024,-0.105,0.044,0.16,-0.077,-0.14,-0.075,0.105,-0.016,0.17,0.154,0.116,0.072,-0.078,0.089,0.034,-0.042,-0.034,-0.04,0.06,0.092,-0.089,-0.096,-0.052,0.07,-0.061,-0.062,-0.036,-0.034,-0.017,0.109,-0.088,-0.065,-0.035,-0.002],"source":"src/helpers/classicBattle/timerService.js [createRoundTimer]","tags":["code","how","function","utility","../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js","starter","onExpired","onDriftFail","onExpiredInternal","getElementById","showSnackbar","showMessage","start","stopTimer","factory"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/timerService.js","node":"createRoundTimer"},"patterns":["factory"],"relations":{"imports":["../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js"],"calls":["starter","onExpired","onDriftFail","onExpiredInternal","getElementById","showSnackbar","showMessage","start","stopTimer"]}},"version":1},
{"id":"timerService.js-computeNextRoundCooldown","text":"Determine the cooldown duration before the next round.\n\n@param {{isTestModeEnabled: () => boolean}} [utils] - Test mode utilities (for injection).\n@returns {number} Cooldown in seconds.\n1. Read `window.__NEXT_ROUND_COOLDOWN_MS` or default to 3000ms.\n2. If test mode is enabled via `utils.isTestModeEnabled()`, force cooldown to 0.\n3. Otherwise convert to whole seconds and clamp to \\>=0.\n4. Log test mode state and resolved cooldown; wrap each warn in try.\n\nexport function computeNextRoundCooldown(utils = { isTestModeEnabled }) {\n  const overrideMs =\n    typeof window !== \"undefined\" && typeof window.__NEXT_ROUND_COOLDOWN_MS === \"number\"\n      ? window.__NEXT_ROUND_COOLDOWN_MS\n      : 3000;\n  let cooldownSeconds;\n  try {\n    const enabled =\n      typeof utils.isTestModeEnabled === \"function\" ? utils.isTestModeEnabled() : false;\n    cooldownSeconds = enabled ? 0 : Math.max(0, Math.round(overrideMs / 1000));\n  } catch {\n    cooldownSeconds = Math.max(0, Math.round(overrideMs / 1000));\n  }\n  if (isTestModeEnabled()) {\n    try {\n      console.warn(`[test] scheduleNextRound: testMode=true cooldown=${cooldownSeconds}`);\n    } catch {}\n  } else {\n    try {\n      console.warn(`[test] scheduleNextRound: testMode=false cooldown=${cooldownSeconds}`);\n    } catch {}\n  }\n  return cooldownSeconds;\n}","qaContext":"Why: Determine the cooldown duration before the next round. How: If test mode is enabled via `utils.","embedding":[-0.063,0.103,0.013,0.109,0.002,-0.013,0.069,0.063,0.101,-0.036,-0.041,-0.056,-0.057,0.043,0.077,-0.067,-0.05,0.002,-0.055,-0.089,0.152,-0.077,0.019,0.056,-0.105,-0.055,-0.035,-0.108,-0.014,0.059,-0.003,0.011,-0.145,-0.048,-0.019,-0.039,-0.037,-0.054,-0.018,-0.092,-0.032,-0.002,-0.06,-0.127,0.115,-0.045,-0.167,0.017,-0.061,0.071,0.016,0.005,0.019,0.008,0.127,0.09,0,-0.108,0.029,0.127,-0.027,-0.161,-0.08,-0.057,0.134,0.039,-0.042,0.042,0.051,0.154,0.084,0.078,0.145,-0.042,-0.034,-0.036,-0.065,-0.05,-0.013,-0.117,-0.071,-0.108,-0.025,0.033,-0.012,0.016,0.202,0.045,0.024,-0.005,-0.052,0.105,-0.166,0.11,0.013,0.115,-0.065,0.014,-0.063,0.041,-0.015,-0.04,0,0.066,0.073,-0.095,0.069,-0.125,-0.022,0.076,0.02,0.111,0.182,0.044,0.021,0.011,0.056,0.047,0.099,0.027,0.241,0.211,0.007,-0.06,0.172,0.059,0.151,0,0.095,-0.16,-0.123,0.022,0.05,0.034,-0.015,0.079,-0.053,0.118,0.048,-0.08,-0.072,-0.114,0.048,-0.086,0.135,-0.052,0.086,0.02,0.146,-0.172,-0.104,0.017,0.019,0.072,-0.023,0.051,-0.057,0.009,0.07,0.007,-0.179,0.024,0.071,-0.049,0.009,0.099,-0.107,-0.052,-0.04,-0.038,-0.094,0.042,-0.057,-0.156,-0.016,-0.008,0.075,0.023,-0.008,0.104,-0.058,-0.15,0.002,-0.006,0.034,0.021,-0.091,0.075,-0.04,-0.069,-0.084,-0.036,-0.148,0.083,-0.11,-0.019,-0.045,-0.025,-0.081,-0.014,0.044,0.032,-0.033,-0.077,0.076,0.009,-0.072,-0.213,0.165,-0.058,-0.107,0.132,0.075,-0.06,-0.037,-0.041,-0.048,0.006,-0.176,-0.057,0.074,0.025,-0.118,0,0.078,0.016,-0.033,0.145,0.051,0.025,0.052,0.083,0.02,-0.059,0.083,0.003,-0.011,-0.093,-0.003,0.078,-0.026,-0.159,0.07,0.099,0.055,0.069,-0.039,-0.031,-0.064,0.136,-0.004,0.041,0.068,-0.059,-0.027,-0.013,-0.119,0.073,-0.004,-0.137,0.091,0.027,-0.082,0.183,0.241,0.04,-0.074,0.004,-0.045,0.162,0.084,-0.055,-0.024,-0.083,0.015,-0.208,-0.071,0.206,-0.011,-0.139,0.039,-0.174,0.069,0.095,0.056,-0.175,0.098,0.005,0.073,0.002,-0.165,0.023,0.151,0.116,0.009,0.089,0.022,-0.173,-0.041,0.07,-0.037,-0.183,0.068,0.082,0.016,0.098,-0.053,-0.041,0.014,0.152,-0.067,0.198,-0.014,0.026,-0.051,0.027,0.063,0.071,-0.05,0,-0.122,-0.085,-0.018,0.025,0.031,-0.052,-0.038,-0.091,-0.021,-0.174,0.056,0.098,0.116,0.047,-0.052,-0.151,-0.077,-0.002,-0.003,0.062,-0.051,0.017,0.024,-0.017,-0.064,0.118,0.078,0.015,0.091,0.028,-0.165,0.046,0.001,0.006,-0.099,0.027,0.011,0.065,0.189,0.142,0.084,-0.07,-0.183,-0.001,-0.017,-0.227,-0.013,0.011,0.059,0.047,-0.096,-0.045,-0.003,0.087,0.015,-0.101,0.013,-0.144,-0.161,0.052,0.017,-0.194,-0.112,-0.022],"source":"src/helpers/classicBattle/timerService.js [computeNextRoundCooldown]","tags":["code","what","function","utility","../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js","isTestModeEnabled","max","round","warn","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/timerService.js","node":"computeNextRoundCooldown"},"patterns":[],"relations":{"imports":["../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js"],"calls":["isTestModeEnabled","max","round","warn"]}},"version":1},
{"id":"timerService.js-createNextRoundSnackbarRenderer","text":"Create a tick handler that renders the next-round countdown via snackbar.\n\n@returns {(remaining: number) => void} Tick handler for the countdown.\n1. Track whether the snackbar was shown and last rendered value.\n2. When remaining \\<=0, show \"Next round in: 0s\" and clear the scoreboard timer.\n3. Skip rendering if the remaining value hasn't changed.\n4. Otherwise show or update the snackbar with the new remaining seconds.\n\nexport function createNextRoundSnackbarRenderer() {\n  let started = false;\n  let lastRendered = -1;\n  return (remaining) => {\n    if (remaining <= 0) {\n      const text = \"Next round in: 0s\";\n      if (!started) {\n        snackbar.showSnackbar(text);\n        started = true;\n      } else {\n        snackbar.updateSnackbar(text);\n      }\n      scoreboard.clearTimer();\n      return;\n    }\n    if (remaining === lastRendered) return;\n    const text = `Next round in: ${remaining}s`;\n    if (!started) {\n      snackbar.showSnackbar(text);\n      started = true;\n    } else {\n      snackbar.updateSnackbar(text);\n    }\n    lastRendered = remaining;\n  };\n}","qaContext":"Why: Create a tick handler that renders the next-round countdown via snackbar. How: Track whether the snackbar was shown and last rendered value.","embedding":[-0.04,0.115,-0.016,0.015,-0.068,0.238,0.014,0.055,0.274,-0.063,-0.132,-0.102,-0.054,-0.096,-0.029,-0.159,-0.077,-0.122,0.131,-0.122,0.145,-0.145,0.091,0.128,0.026,0.083,0.08,-0.057,0.12,0.008,0.052,0.017,0.014,-0.06,-0.115,-0.065,-0.041,0.018,0.017,-0.011,0.073,0.009,-0.197,-0.025,0.063,-0.04,-0.135,-0.056,-0.119,0.122,0.089,-0.068,0.018,-0.108,0.138,0.088,0.073,-0.085,0.057,0.039,0.022,-0.075,0.123,-0.11,0.117,-0.038,0.039,0.035,0.079,0.148,0.106,0.061,0.245,-0.087,-0.156,-0.165,-0.037,-0.006,0.012,0.067,-0.148,-0.229,0.089,-0.042,0.024,-0.087,0.111,0.032,0.006,-0.076,-0.116,0.067,0.027,0.175,-0.101,0.104,-0.054,0.026,0.018,0.054,-0.021,0.072,0.011,0.011,0.009,-0.098,0.022,0.013,-0.04,0.108,0.026,0.133,0.155,0.134,-0.115,-0.036,0.022,0.038,0.139,0.074,0.212,0.146,-0.06,0.005,0.103,0.115,0.228,0,-0.023,-0.197,-0.069,-0.041,0.073,0.039,-0.072,0.057,-0.006,0.032,0.139,-0.057,-0.102,0.081,-0.006,-0.249,0.172,-0.033,0.133,-0.158,-0.1,-0.171,-0.046,-0.075,0.02,0.156,0.021,0.043,-0.149,-0.062,0.214,0.012,-0.049,0.022,0.094,-0.09,0.027,0.127,-0.051,-0.053,-0.025,-0.075,-0.133,-0.044,-0.122,0.007,0.175,0.184,-0.009,0.006,-0.07,0.134,-0.049,-0.171,-0.016,-0.017,0.064,-0.144,-0.105,-0.096,-0.007,0.035,-0.012,-0.047,-0.199,0.184,-0.022,-0.028,-0.022,-0.079,-0.035,0.045,0.16,-0.053,-0.099,0.008,-0.031,-0.087,-0.06,-0.196,0.302,-0.189,-0.133,0.103,0.163,0.001,0.082,-0.02,-0.082,0.111,-0.206,-0.138,0.178,0.019,-0.14,0,0.048,0.002,-0.057,0.072,0.115,0.001,0.004,0.103,-0.013,-0.028,-0.001,0.152,-0.066,-0.088,-0.183,0.35,0.104,0.039,-0.03,-0.26,0.044,-0.033,-0.139,0.049,0.008,0.14,0.189,0.029,-0.037,-0.05,0.085,-0.204,0.191,-0.086,-0.024,-0.09,0.095,-0.159,-0.085,0.197,0.096,-0.1,-0.051,-0.058,-0.041,0.06,-0.047,0.103,-0.051,-0.075,-0.012,-0.157,-0.111,-0.014,-0.048,-0.017,-0.122,-0.042,0.115,-0.049,-0.063,-0.156,0.156,-0.011,0.134,-0.012,-0.095,0.035,0.168,0.2,0.062,0.172,0.041,-0.106,-0.025,-0.013,-0.024,0.023,0.009,-0.058,0.002,-0.008,0.077,-0.086,-0.111,0.051,-0.023,0.113,0.05,0.08,-0.072,0.058,0.042,-0.01,-0.028,0,-0.04,-0.203,-0.071,0.058,0.005,-0.053,-0.005,-0.117,-0.023,-0.215,0.134,0.096,0.051,-0.059,-0.039,-0.126,-0.021,0.002,-0.012,-0.018,-0.079,0.099,-0.004,-0.079,0.014,-0.041,-0.084,0.149,0.102,-0.032,-0.041,0.105,0.019,0.023,-0.056,-0.061,-0.031,-0.021,0.171,0.325,-0.021,-0.067,-0.178,0.021,-0.119,-0.188,-0.014,-0.077,-0.018,0.024,-0.06,-0.023,-0.149,0.094,0.04,-0.03,-0.059,0.025,-0.064,0.177,-0.032,-0.059,-0.103,-0.022],"source":"src/helpers/classicBattle/timerService.js [createNextRoundSnackbarRenderer]","tags":["code","how","function","utility","../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js","showSnackbar","updateSnackbar","clearTimer","factory"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/timerService.js","node":"createNextRoundSnackbarRenderer"},"patterns":["factory"],"relations":{"imports":["../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js"],"calls":["showSnackbar","updateSnackbar","clearTimer"]}},"version":1},
{"id":"timerService.js-handleZeroCooldownFastPath","text":"Handle zero-second cooldown by enabling the Next button immediately.\n\n@param {{resolveReady: (() => void) | null}} controls - Timer controls.\n@param {HTMLButtonElement | null} btn - Next button element.\n@returns {{resolveReady: (() => void) | null, ready: Promise<void>, timer: ReturnType<typeof createRoundTimer> | null}} Controls.\n1. Show a deterministic \"Next round in: 0s\" snackbar.\n2. Mark the Next button as ready and ensure it is enabled.\n3. Register a skip handler that dispatches \"ready\" when invoked.\n4. Emit \"nextRoundTimerReady\" and resolve the ready promise.\n\nexport function handleZeroCooldownFastPath(controls, btn) {\n  try {\n    snackbar.showSnackbar(\"Next round in: 0s\");\n  } catch {}\n  if (btn) {\n    btn.dataset.nextReady = \"true\";\n    btn.disabled = false;\n  }\n  setSkipHandler(async () => {\n    try {\n      if (btn) btn.disabled = true;\n      const state =\n        typeof window !== \"undefined\" && window.__classicBattleState\n          ? window.__classicBattleState\n          : null;\n      // Dispatch when state is unknown (tests) or explicitly cooldown\n      if (!state || state === \"cooldown\") {\n        await dispatchBattleEvent(\"ready\");\n        updateDebugPanel();\n      } else {\n        try {\n          console.warn(`[test] skip: suppress ready; state=${state}`);\n        } catch {}\n      }\n    } catch {}\n  });\n  try {\n    emitBattleEvent(\"nextRoundTimerReady\");\n  } catch {}\n  if (typeof controls.resolveReady === \"function\") {\n    try {\n      controls.resolveReady();\n    } catch {}\n  }\n  // In test mode, auto-advance to the next round to avoid flakiness from\n  // relying on external calls to the skip handler.\n  try {\n    if (isTestModeEnabled && isTestModeEnabled()) {\n      setTimeout(() => {\n        try {\n          const state =\n            typeof window !== \"undefined\" && window.__classicBattleState\n              ? window.__classicBattleState\n              : null;\n          if (!state || state === \"cooldown\") {\n            Promise.resolve(dispatchBattleEvent(\"ready\")).catch(() => {});\n          } else {\n            try {\n              console.warn(`[test] auto-advance suppressed; state=${state}`);\n            } catch {}\n          }\n        } catch {}\n      }, 0);\n    }\n  } catch {}\n  currentNextRound = controls;\n  return controls;\n}","qaContext":"Why: Handle zero-second cooldown by enabling the Next button immediately. How: Show a deterministic \"Next round in: 0s\" snackbar.","embedding":[-0.154,0.03,0.021,0.191,-0.005,0.084,0.05,0.013,0.076,-0.009,0.02,-0.083,-0.058,-0.078,0.057,0.02,0.054,-0.144,-0.059,-0.07,0.122,-0.089,0.103,-0.027,-0.15,-0.1,-0.014,-0.234,0.031,0.008,0.022,-0.044,-0.213,-0.095,-0.089,-0.11,-0.01,-0.002,-0.04,-0.062,0.035,0.049,-0.146,-0.117,0.125,-0.094,-0.016,-0.022,-0.103,-0.017,0.022,0.01,0.029,0.074,0.172,0.042,0.039,0.05,0.02,0.149,-0.03,-0.207,-0.071,-0.072,0.2,0.143,0.029,0.005,0.064,0.137,0.005,0.019,0.097,-0.005,-0.011,-0.135,-0.003,-0.023,-0.03,-0.104,-0.063,-0.091,-0.065,-0.059,-0.038,-0.021,0.041,-0.028,0.076,-0.014,-0.074,0.054,-0.083,0.089,0.017,0.129,0.024,0.035,-0.056,0.033,0.086,-0.035,-0.067,0.089,0.069,-0.129,0.075,-0.123,-0.057,0.08,0.037,0.099,0.119,0.02,-0.109,-0.025,0.129,0.031,0.124,0.008,0.193,0.088,0.076,-0.106,0.147,-0.03,0.042,0,0.026,-0.181,-0.212,-0.018,0.04,0.044,0.117,0.078,-0.002,0.047,0.115,-0.141,-0.065,-0.104,0.007,-0.136,0.082,-0.002,0.026,0.024,0.144,-0.087,-0.042,0.01,0.023,0.033,-0.007,0.079,-0.095,0.023,0.121,0.028,-0.122,0.092,-0.015,-0.068,-0.078,0.033,-0.036,-0.157,-0.011,-0.044,-0.166,0.093,-0.126,-0.261,0.022,-0.024,0.098,0.02,-0.016,0.128,0.02,-0.185,0.07,-0.023,-0.05,-0.032,-0.044,0.063,-0.043,-0.134,-0.125,-0.011,-0.133,0.181,-0.105,-0.082,-0.027,-0.238,0.011,-0.059,0.147,-0.015,0.097,-0.026,-0.004,-0.018,-0.127,-0.156,0.181,-0.115,-0.163,0.219,0.059,-0.028,0.012,-0.073,-0.061,0.085,-0.129,-0.072,0.088,0.024,-0.061,0,0.154,-0.039,-0.033,0.113,0.047,0.034,-0.017,0.045,-0.026,-0.151,0.011,0.072,0.026,-0.036,-0.08,0.229,0.076,-0.149,0.053,0.05,0.063,0.055,-0.039,0.033,-0.106,0.132,0.022,0.173,0.019,-0.062,-0.015,-0.016,-0.073,-0.037,0.059,-0.106,0.038,0.036,-0.126,0.195,0.188,0.003,-0.052,0.064,-0.033,0.03,0.008,0.015,-0.063,0.076,0.034,-0.102,-0.103,0.089,0,-0.072,0.064,-0.133,0.035,0.048,0,-0.229,0.166,0.027,0.166,0.089,-0.057,0.023,0.314,0.202,0.037,0.05,0.053,-0.235,0.074,0.055,0.038,-0.267,0.091,-0.009,-0.057,0.061,0.094,-0.14,0.005,0.136,-0.145,0.087,0.009,0.057,-0.067,-0.046,0.063,0.036,-0.023,0,-0.055,-0.033,0.042,0.002,0.083,-0.035,-0.09,-0.116,-0.084,-0.132,0.086,0.133,0.163,0.046,0.034,-0.161,0.061,0.007,-0.11,0.054,-0.029,0.065,0.022,0.039,0.049,0.1,0.113,0.071,0.143,0.007,-0.144,0.061,0.004,0.028,-0.15,0.059,0.074,-0.003,0.109,0.131,0.129,-0.064,-0.083,0.064,-0.111,-0.089,-0.107,0.038,0.106,0.059,-0.158,-0.052,-0.094,0.135,0.045,-0.106,0.024,-0.038,-0.008,0.177,0.03,-0.164,-0.089,0.01],"source":"src/helpers/classicBattle/timerService.js [handleZeroCooldownFastPath]","tags":["code","how","function","utility","../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js","showSnackbar","setSkipHandler","dispatchBattleEvent","updateDebugPanel","emitBattleEvent","resolveReady","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/timerService.js","node":"handleZeroCooldownFastPath"},"patterns":[],"relations":{"imports":["../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js"],"calls":["showSnackbar","setSkipHandler","dispatchBattleEvent","updateDebugPanel","emitBattleEvent","resolveReady"]}},"version":1},
{"id":"timerService.js-handleNextRoundExpiration","text":"Handle expiration of the next-round cooldown.\n\n@param {{resolveReady: (() => void) | null}} controls - Timer controls.\n@param {HTMLButtonElement | null} btn - Next button element.\n@param {HTMLElement | null} timerEl - Countdown display element.\n@returns {Promise<void>}\n1. Clear the skip handler and scoreboard timer.\n2. Remove any countdown text from the timer element.\n3. Enable the Next button and mark it as ready.\n4. Dispatch \"ready\", update the debug panel, and resolve the ready promise.\n\nexport async function handleNextRoundExpiration(controls, btn, timerEl) {\n  setSkipHandler(null);\n  scoreboard.clearTimer();\n  if (timerEl) {\n    timerEl.textContent = \"\";\n  }\n  if (btn) {\n    btn.dataset.nextReady = \"true\";\n    btn.disabled = false;\n  }\n  try {\n    const state =\n      typeof window !== \"undefined\" && window.__classicBattleState\n        ? window.__classicBattleState\n        : null;\n    if (!state || state === \"cooldown\") {\n      await dispatchBattleEvent(\"ready\");\n    } else {\n      try {\n        console.warn(`[test] expiration suppressed ready; state=${state}`);\n      } catch {}\n    }\n  } catch {}\n  updateDebugPanel();\n  if (typeof controls.resolveReady === \"function\") {\n    controls.resolveReady();\n  }\n}","qaContext":"Why: Handle expiration of the next-round cooldown. How: @param {{resolveReady: (() => void) | null}} controls - Timer controls.","embedding":[-0.1,0.03,-0.013,0.172,-0.048,0.129,0.052,0.051,0.155,-0.034,0.005,-0.032,-0.051,-0.055,-0.018,0.019,-0.038,-0.143,0.008,-0.068,0.172,-0.031,0.049,0.109,-0.093,-0.012,-0.083,-0.15,0.068,0.057,-0.037,-0.033,-0.127,-0.119,-0.063,-0.018,-0.006,-0.01,0.019,-0.045,0.067,0.061,-0.081,-0.072,0.079,-0.01,-0.071,-0.054,-0.095,0.066,0.068,0.04,0.044,-0.07,0.055,0.119,0.048,0.047,-0.02,0.066,-0.072,-0.168,-0.016,-0.055,0.099,0.116,-0.005,-0.006,-0.006,0.045,0.01,0.01,0.119,0.009,-0.063,-0.085,-0.033,-0.016,0.012,-0.044,0.011,-0.173,-0.024,-0.043,-0.02,-0.045,0.096,-0.008,-0.013,-0.058,-0.021,0.085,-0.043,0.137,-0.057,0.149,-0.063,0.097,-0.089,0.058,0.041,-0.093,-0.124,0.037,-0.05,-0.077,-0.013,-0.045,-0.053,0.022,-0.02,0.068,0.051,0.056,-0.006,-0.009,0.08,0.045,0.14,-0.048,0.16,0.054,-0.034,-0.112,0.146,0.067,0.167,0,0.021,-0.176,-0.177,0.013,0.098,0.092,0.072,0.079,-0.029,0.071,0.071,-0.123,-0.06,-0.124,-0.008,-0.138,0.093,-0.025,0.095,-0.034,0.163,-0.051,-0.033,0.02,-0.039,0.058,-0.086,0.026,-0.121,-0.029,0.112,0.054,-0.107,0.092,-0.01,-0.06,-0.024,0.043,-0.016,-0.081,-0.026,-0.014,-0.111,0.055,-0.08,-0.242,0.084,0.022,0.073,-0.002,-0.078,0.141,0.01,-0.188,0.07,0.036,-0.047,0.014,-0.04,-0.019,0.022,-0.108,-0.088,-0.06,-0.021,0.151,-0.024,-0.02,-0.033,-0.186,0.042,-0.06,0.137,0.004,0.053,0.01,-0.013,-0.002,-0.092,-0.113,0.168,-0.12,-0.113,0.207,0.198,-0.011,-0.018,-0.022,0.025,0.119,-0.11,-0.088,0.027,0.032,-0.113,0,0.118,0.055,-0.111,0.056,0.063,0.037,-0.066,0.109,-0.018,-0.094,0.095,0.095,0.027,-0.038,-0.135,0.146,0.084,-0.059,0,-0.094,0.098,0.046,-0.136,0.026,-0.072,0.067,0.05,0.094,0.052,0.053,-0.024,-0.035,0.036,-0.062,0.025,-0.125,0.093,-0.062,-0.154,0.164,0.106,-0.025,0.003,-0.033,-0.007,0.074,-0.043,0.02,-0.072,0.068,-0.044,-0.18,-0.109,0.03,-0.046,-0.141,-0.009,-0.124,0.08,0.042,0.027,-0.137,0.097,0.014,0.102,0.092,-0.076,0.072,0.248,0.139,0.016,0.046,0.006,-0.161,0.011,0.047,-0.033,-0.089,0.046,-0.021,0.013,0.025,0.041,-0.137,0.053,0.011,-0.093,0.131,0.014,0.067,-0.042,-0.071,0.057,0.071,-0.028,0,-0.113,0.045,0,-0.048,-0.019,0.008,-0.001,-0.077,-0.042,-0.152,0.126,0.078,0.148,-0.056,-0.028,-0.072,-0.081,0,0.026,-0.013,0.017,-0.047,0.087,-0.036,0.052,0.042,0.04,0.095,0.101,0.046,-0.115,0.077,0.072,0.014,-0.081,-0.008,-0.017,-0.041,0.132,0.179,0.042,-0.016,-0.154,0.05,0.026,-0.143,-0.043,-0.058,0.028,0.022,-0.093,-0.001,-0.089,0.119,0.073,-0.067,0.047,-0.052,-0.11,0.129,-0.048,-0.06,-0.062,-0.068],"source":"src/helpers/classicBattle/timerService.js [handleNextRoundExpiration]","tags":["code","what","function","utility","../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js","setSkipHandler","clearTimer","dispatchBattleEvent","updateDebugPanel","resolveReady","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/timerService.js","node":"handleNextRoundExpiration"},"patterns":[],"relations":{"imports":["../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js"],"calls":["setSkipHandler","clearTimer","dispatchBattleEvent","updateDebugPanel","resolveReady"]}},"version":1},
{"id":"timerService.js-scheduleNextRound","text":"Enable the Next Round button after a cooldown period.\n\n@param {{matchEnded: boolean}} result - Result from a completed round.\n@returns {{\n  ready: Promise<void>,\n  timer: ReturnType<typeof createRoundTimer> | null,\n  resolveReady: (() => void) | null\n}} Controls for the scheduled next round.\n1. If the match ended, resolve immediately.\n2. Determine cooldown seconds via `computeNextRoundCooldown`.\n3. Locate `#next-button` and `#next-round-timer` and enable the button.\n4. If cooldown is zero, delegate to `handleZeroCooldownFastPath`.\n5. Otherwise create `onTick` with `createNextRoundSnackbarRenderer` and\n   `onExpired` with `handleNextRoundExpiration`.\n6. Register a skip handler that logs the skip (for tests) and stops the timer.\n7. Start the timer and resolve when expired.\n\nexport function scheduleNextRound(result, scheduler = realScheduler) {\n  const controls = { timer: null, resolveReady: null, ready: null };\n\n  controls.ready = new Promise((resolve) => {\n    controls.resolveReady = () => {\n      emitBattleEvent(\"nextRoundTimerReady\");\n      resolve();\n      controls.resolveReady = null;\n    };\n  });\n\n  if (result.matchEnded) {\n    setSkipHandler(null);\n    if (controls.resolveReady) controls.resolveReady();\n    currentNextRound = controls;\n    return controls;\n  }\n\n  const btn = document.getElementById(\"next-button\");\n  const timerEl = document.getElementById(\"next-round-timer\");\n\n  const cooldownSeconds = computeNextRoundCooldown();\n\n  if (btn) {\n    btn.disabled = false;\n    delete btn.dataset.nextReady;\n  }\n\n  if (cooldownSeconds === 0) {\n    return handleZeroCooldownFastPath(controls, btn);\n  }\n\n  const onTick = createNextRoundSnackbarRenderer();\n  const onExpired = () => handleNextRoundExpiration(controls, btn, timerEl);\n\n  controls.timer = createRoundTimer(onTick, onExpired);\n  setSkipHandler(() => {\n    try {\n      console.warn(\"[test] skip: stop nextRoundTimer\");\n    } catch {}\n    if (controls.timer) controls.timer.stop();\n  });\n\n  if (btn && btn.dataset.nextReady === \"true\") {\n    if (typeof controls.resolveReady === \"function\") controls.resolveReady();\n    currentNextRound = controls;\n    return controls;\n  }\n\n  onTick(cooldownSeconds);\n  scheduler.setTimeout(() => controls.timer.start(cooldownSeconds), 0);\n  currentNextRound = controls;\n  return controls;\n}","qaContext":"Why: Enable the Next Round button after a cooldown period. How: Determine cooldown seconds via `computeNextRoundCooldown`.","embedding":[-0.163,0.01,-0.026,0.178,-0.144,0.053,0.034,0.048,0.133,0.037,0.035,-0.076,-0.04,-0.077,0.024,0.005,-0.043,-0.069,-0.038,-0.091,0.154,0.016,0.08,0.049,-0.127,-0.09,-0.026,-0.137,0.058,0.021,0.04,0.038,-0.213,-0.096,-0.052,-0.017,-0.051,-0.017,-0.018,-0.079,0.052,0.036,0.001,-0.076,0.102,-0.016,-0.14,0.021,-0.027,0.036,0.054,-0.029,-0.015,0.002,0.06,0.175,-0.025,0.027,0.044,0.079,-0.037,-0.144,-0.054,-0.123,0.083,0.085,-0.028,-0.04,0.046,0.096,0.005,0.021,0.065,-0.002,-0.044,-0.137,-0.024,0.021,0.011,-0.111,-0.02,-0.128,-0.033,0.027,-0.055,-0.127,0.154,0.106,0.137,-0.047,-0.053,0.197,-0.125,-0.018,-0.031,0.096,0.008,0.101,-0.043,0.054,0.086,-0.061,-0.189,0.084,-0.009,-0.102,0.008,-0.103,-0.046,0.051,-0.032,0.115,0.086,-0.045,0.017,0.068,0.087,0.022,0.164,-0.043,0.131,0.07,-0.049,-0.133,0.087,-0.013,0.142,0,-0.004,-0.214,-0.19,-0.065,0.106,0.102,0.032,0.141,-0.071,0.034,0.034,-0.128,-0.103,-0.098,-0.045,-0.186,0.135,0.049,0.031,-0.067,0.186,-0.091,-0.072,0.059,-0.022,0.095,0.031,0.068,-0.072,-0.007,0.113,0.032,-0.161,0.072,-0.044,-0.017,-0.057,0.091,0.047,-0.018,-0.026,-0.053,-0.116,-0.012,-0.15,-0.188,0.028,-0.014,0.093,-0.004,0.009,0.074,-0.011,-0.237,0.043,0,-0.068,0.047,-0.069,0.074,0.011,-0.046,-0.129,0.005,-0.174,0.168,-0.086,-0.085,0.017,-0.157,-0.012,-0.035,0.25,-0.03,0.075,0.005,-0.01,0.017,-0.202,-0.145,0.15,-0.043,-0.161,0.172,0.212,-0.124,-0.043,-0.027,-0.046,0.034,-0.141,-0.102,0.083,0.105,-0.094,0,0.142,0.041,-0.005,0.081,0.083,0.051,-0.024,0.02,-0.041,-0.067,0.051,0.052,-0.062,-0.106,-0.031,0.12,0.1,-0.06,-0.055,0.056,0.033,0.097,-0.124,-0.015,-0.025,0.095,0.049,0.179,0.081,-0.006,-0.127,-0.083,-0.047,-0.007,0.06,-0.107,0.024,0.05,-0.091,0.14,0.224,-0.098,-0.052,0.063,0.058,0.083,-0.001,0.051,-0.077,0.05,0.019,-0.142,-0.088,0.071,0.013,-0.06,0.103,-0.212,0.098,-0.004,0.049,-0.27,0.186,0.064,0.181,0.103,-0.06,0.06,0.18,0.158,-0.03,0.105,0.109,-0.208,0.115,0.058,-0.037,-0.15,0.046,0.053,-0.057,0.053,0.054,-0.171,0.012,0.048,-0.156,0.1,0.03,0.083,-0.106,-0.081,0.076,0.069,-0.051,0,-0.117,-0.006,0.038,0.002,0.07,-0.051,-0.009,-0.019,-0.042,-0.118,0.11,0.081,0.21,0.047,0.002,-0.109,0.029,-0.037,-0.021,-0.004,-0.017,-0.056,0.065,-0.04,0.001,0.094,0.019,0.17,0.14,0.107,-0.125,0.022,0.021,0.051,-0.126,-0.073,-0.021,-0.006,0.131,0.12,0.097,0.003,-0.135,0.075,0.047,-0.147,-0.045,0.015,0.064,0.098,-0.142,-0.082,-0.048,0.074,0.07,-0.072,0.039,-0.128,-0.115,0.147,-0.077,-0.052,-0.108,-0.049],"source":"src/helpers/classicBattle/timerService.js [scheduleNextRound]","tags":["code","what","function","utility","../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js","emitBattleEvent","resolve","setSkipHandler","resolveReady","getElementById","computeNextRoundCooldown","handleZeroCooldownFastPath","createNextRoundSnackbarRenderer","handleNextRoundExpiration","createRoundTimer","warn","stop","onTick","setTimeout","start","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/timerService.js","node":"scheduleNextRound"},"patterns":[],"relations":{"imports":["../timerUtils.js","../battleEngineFacade.js","../setupScoreboard.js","./uiHelpers.js","../showSnackbar.js","./skipHandler.js","./autoSelectStat.js","./battleEvents.js","../scheduler.js","../testModeUtils.js","./battleDispatcher.js"],"calls":["emitBattleEvent","resolve","setSkipHandler","resolveReady","getElementById","computeNextRoundCooldown","handleZeroCooldownFastPath","createNextRoundSnackbarRenderer","handleNextRoundExpiration","createRoundTimer","warn","stop","onTick","setTimeout","start"]}},"version":1},
{"id":"stateMachine.js-BattleStateMachine","text":"Minimal event-driven state machine for Classic Battle.\n\nTracks current state, runs onEnter handlers, and uses an embedded state table.\nTransitions are matched by the `on` field value in each state's `triggers`.\n```text\nasync create(onEnterMap, context, onTransition):\n  states = CLASSIC_BATTLE_STATES (embedded module)\n  for each state in states:\n    byName[state.name] = state\n    if state.type is 'initial' or initial unset -> initial = state.name\n  initName = initial or 'waitingForMatchStart'\n  machine = new BattleStateMachine(byName, initName, onEnterMap, context, onTransition)\n  if onTransition -> await onTransition({from:null, to:initName, event:'init'})\n  await machine.#runOnEnter(initName)\n\ndispatch(event, payload):\n  state = statesByName[current]\n  trigger = state.triggers.find(t.on == event)\n  if trigger and statesByName has trigger.target:\n    from = current; current = trigger.target\n    if onTransition -> await onTransition({from, to:current, event})\n    await #runOnEnter(current, payload)\n\n#runOnEnter(name, payload):\n  fn = onEnterMap[name]\n  if fn -> await fn(machine, payload) catching errors\n```\n\nexport class BattleStateMachine {\n  constructor(statesByName, initialName, onEnterMap, context = {}, onTransition) {\n    this.statesByName = statesByName;\n    this.current = initialName;\n    this.onEnterMap = onEnterMap || {};\n    this.context = context;\n    this.onTransition = typeof onTransition === \"function\" ? onTransition : null;\n  }\n\n  static async create(onEnterMap, context = {}, onTransition) {\n    // Load states from the embedded table for reliability in all environments.\n    // Allow a narrow test-only override via globalThis.__CLASSIC_BATTLE_STATES__\n    // so unit tests can inject minimal tables without network mocks.\n    const override =\n      typeof globalThis !== \"undefined\" && Array.isArray(globalThis.__CLASSIC_BATTLE_STATES__)\n        ? globalThis.__CLASSIC_BATTLE_STATES__\n        : null;\n    const states = override || (Array.isArray(CLASSIC_BATTLE_STATES) ? CLASSIC_BATTLE_STATES : []);\n    const byName = new Map();\n    let initial = null;\n    for (const s of states) {\n      byName.set(s.name, s);\n      if (s.type === \"initial\" || initial === null) {\n        initial = s.name;\n      }\n    }\n    // Fallback initial state to keep orchestration alive even if table is empty in tests\n    const initName = initial || \"waitingForMatchStart\";\n    const machine = new BattleStateMachine(byName, initName, onEnterMap, context, onTransition);\n    if (machine.onTransition) {\n      try {\n        await machine.onTransition({ from: null, to: initName, event: \"init\" });\n      } catch {}\n    }\n    await machine.#runOnEnter(initName);\n    return machine;\n  }\n\n  getState() {\n    return this.current;\n  }\n\n  async dispatch(eventName, payload) {\n    const state = this.statesByName.get(this.current);\n    try {\n      if (!state || !Array.isArray(state.triggers)) {\n        console.log(\"STATE_MACHINE: dispatch no triggers for state\", this.current, eventName);\n        return;\n      }\n      console.log(\"STATE_MACHINE: dispatch\", { state: this.current, event: eventName });\n      const match = state.triggers.find((t) => t.on === eventName);\n      if (!match) {\n        console.log(\"STATE_MACHINE: dispatch no matching trigger\", {\n          state: this.current,\n          event: eventName\n        });\n        return;\n      }\n      const target = match.target;\n      if (!this.statesByName.has(target)) {\n        console.log(\"STATE_MACHINE: dispatch target missing\", { target });\n        return;\n      }\n      const from = this.current;\n      this.current = target;\n      console.log(\"STATE_MACHINE: transitioning\", { from, to: target, event: eventName });\n      if (this.onTransition) {\n        try {\n          await this.onTransition({ from, to: target, event: eventName });\n        } catch (err) {\n          console.log(\"STATE_MACHINE: onTransition error\", String(err));\n        }\n      }\n      await this.#runOnEnter(target, payload);\n      console.log(\"STATE_MACHINE: onEnter complete for\", target);\n    } catch (err) {\n      console.log(\"STATE_MACHINE: dispatch unexpected error\", String(err));\n    }\n  }\n\n  async #runOnEnter(stateName, payload) {\n    const fn = this.onEnterMap[stateName];\n    if (typeof fn === \"function\") {\n      try {\n        console.log(\"STATE_MACHINE: running onEnter\", stateName);\n        await fn(this, payload);\n        console.log(\"STATE_MACHINE: finished onEnter\", stateName);\n      } catch (err) {\n        // Swallow onEnter errors to avoid breaking game flow\n        console.debug(\"State onEnter error\", stateName, err);\n      }\n    }\n  }\n}","qaContext":"Why: Minimal event-driven state machine for Classic Battle. How: Transitions are matched by the `on` field value in each state's `triggers`.","embedding":[-0.084,-0.015,-0.053,0.143,-0.008,-0.028,-0.003,0.084,-0.143,0.025,-0.037,-0.151,0.122,-0.049,-0.014,0.029,0.136,-0.064,0.026,0.018,0.044,0.008,0.07,0.02,-0.031,-0.06,-0.12,-0.056,-0.037,-0.063,-0.037,-0.018,-0.163,0.038,0.094,-0.03,0.008,-0.023,-0.082,-0.076,0.018,0.039,0.014,-0.007,-0.002,-0.082,-0.085,-0.077,-0.024,0.039,-0.04,0.094,0.1,0.045,0.172,-0.039,0.139,0.021,-0.032,0.012,-0.064,-0.111,0.036,-0.04,0.02,0.168,0.085,-0.007,0.081,-0.07,-0.051,0.095,0.02,0.065,-0.025,0.036,0.05,0.065,0.003,-0.107,-0.135,-0.028,-0.064,-0.064,0.052,-0.007,0.023,-0.095,0.1,-0.024,-0.037,-0.031,-0.016,0.089,0.111,0.06,0.146,0.035,0.071,0.083,0.038,-0.112,-0.048,0.162,0.015,0.024,-0.01,-0.192,-0.065,-0.094,0.012,0.016,0.055,-0.069,-0.075,0.072,-0.021,-0.024,0.063,0.154,0.058,-0.096,0.016,0.017,0.099,-0.015,0.019,0,0.065,-0.218,-0.073,0.042,0.038,0.126,0.168,0.04,-0.038,-0.052,-0.07,0.102,-0.048,-0.104,0.157,-0.081,0.017,-0.027,0.037,0.066,0.091,-0.022,-0.122,-0.082,0.04,0.049,-0.053,0.123,-0.121,0.068,-0.018,-0.018,-0.131,0.042,0.016,-0.09,-0.047,0.02,-0.12,-0.091,0.013,-0.042,-0.177,-0.096,-0.035,-0.252,-0.056,-0.028,0.071,-0.115,0.052,0.069,-0.021,-0.186,0.048,0.052,0.01,0.044,0.115,0.198,-0.198,-0.06,-0.079,0.084,0.024,0.139,-0.149,-0.185,0.011,-0.074,-0.002,-0.028,0.04,-0.05,0.124,-0.072,0.02,-0.018,-0.188,-0.16,0.077,0.015,-0.215,0.197,-0.07,0.004,-0.112,-0.136,-0.183,-0.045,0.034,-0.113,0.066,-0.031,-0.042,0,0.032,0.04,-0.001,0.036,0.087,-0.003,0.123,0.021,-0.176,-0.035,-0.009,-0.069,-0.034,0.012,-0.095,0.133,0.034,-0.076,0.07,0.134,0.144,0.16,-0.002,-0.02,-0.033,0.048,-0.083,0.089,0.01,-0.026,-0.009,-0.006,-0.152,0.007,0.05,-0.08,0.061,0.018,-0.067,0.022,0.176,0.059,-0.041,0.052,0.017,0.081,-0.022,0.049,-0.08,0.016,-0.025,-0.106,-0.08,0.072,-0.102,-0.053,0.061,-0.042,-0.095,0.064,0.043,-0.026,0.036,0.132,0.125,0.027,-0.091,0.019,0.086,0.169,-0.02,0.054,0.033,-0.045,0.159,0.125,-0.078,-0.158,0.052,0.033,-0.157,-0.039,-0.015,-0.101,0.02,0.117,-0.004,0.196,0.026,0.056,-0.1,-0.057,-0.036,0.002,-0.018,0,-0.022,0.038,-0.008,0.114,0.008,-0.005,0.039,-0.138,-0.059,-0.087,0.054,0.134,0.021,-0.024,0.02,-0.024,0.04,-0.032,-0.11,0.04,0.076,0.002,-0.057,0.081,0.019,0.067,0.109,0.073,0.153,0.027,-0.032,-0.022,0.011,-0.004,-0.061,0.162,0.112,0.004,0.079,0.062,-0.034,0.099,-0.064,0,-0.023,0.034,-0.209,-0.089,0.063,-0.063,-0.097,-0.152,-0.143,0.135,-0.043,0.012,0.099,-0.094,0.016,0.087,0.052,-0.076,0.015,0.021],"source":"src/helpers/classicBattle/stateMachine.js [BattleStateMachine]","tags":["code","how","class","utility","./stateTable.js","isArray","set","onTransition","get","log","find","has","String","fn","debug","logging","state-management"],"metadata":{"construct":"class","role":"utility","graph":{"module":"src/helpers/classicBattle/stateMachine.js","node":"BattleStateMachine"},"patterns":[],"relations":{"imports":["./stateTable.js"],"calls":["isArray","set","onTransition","get","log","find","has","String","fn","debug"]}},"version":1},
{"id":"skipHandler.js-setSkipHandler","text":"Set the current skip handler and notify listeners of its presence.\nIf a skip was requested before a handler existed, invoking this with\na function will immediately trigger it and clear the pending state.\n\n@param {null|function(): void|Promise<void>} fn - Handler to invoke when skipping.\n@returns {void}\n\nexport function setSkipHandler(fn) {\n  skipHandler = typeof fn === \"function\" ? fn : null;\n  try {\n    window.dispatchEvent(\n      new CustomEvent(\"skip-handler-change\", {\n        detail: { active: Boolean(skipHandler) }\n      })\n    );\n  } catch {}\n  if (pendingSkip && skipHandler) {\n    // Immediately consume the pending skip by invoking the handler.\n    // Call synchronously so tests observe the invocation right after\n    // `setSkipHandler` returns (the handler itself may decide to defer work).\n    pendingSkip = false;\n    try {\n      skipHandler && skipHandler();\n    } catch {}\n  }\n}","qaContext":"Why: Set the current skip handler and notify listeners of its presence. How: dispatchEvent( new CustomEvent(\"skip-handler-change\", { detail: { active: Boolean(skipHandler) } }) ); } catch {} if (pe...","embedding":[-0.116,0.018,0.052,0.138,0.059,0.018,0.107,-0.043,0.13,-0.072,0.049,0.003,-0.094,-0.038,-0.091,-0.078,0.009,0.019,-0.012,-0.072,0.015,-0.049,0.095,0.05,-0.177,-0.169,-0.052,-0.111,0.125,-0.036,0.024,-0.079,-0.092,-0.072,-0.04,0.036,-0.027,0.063,0.068,-0.04,0.08,-0.047,-0.106,-0.048,0.011,0.023,-0.046,0.033,-0.107,0.007,0.006,0.011,-0.017,0.021,0.165,-0.018,0.061,-0.032,0.031,0.071,-0.097,-0.199,-0.033,0.006,0.101,0.203,0.057,0.023,0.073,0.078,0.036,0.087,0.153,0.123,-0.045,-0.081,-0.043,0.007,-0.085,0.019,-0.047,-0.153,-0.016,0.058,0.015,0.127,-0.049,-0.001,-0.041,0.033,-0.121,-0.127,-0.111,0.043,-0.046,0.161,0.03,0.004,-0.088,0.094,0.087,0.026,0.044,-0.033,-0.008,0.008,-0.083,-0.153,-0.08,0.062,0.026,0.01,0.13,0.026,-0.137,0.138,0.17,0.005,0.082,-0.066,0.236,0.061,0.151,-0.116,0.064,0.049,0.04,0,-0.016,-0.144,-0.181,-0.068,-0.016,0.02,0.117,-0.009,-0.039,0.062,-0.017,-0.131,-0.004,-0.146,-0.028,-0.084,0.18,-0.097,-0.022,0.065,0.163,-0.14,-0.15,0.031,0.026,-0.076,-0.103,-0.006,-0.022,0.016,0.025,0.123,-0.12,0.048,-0.007,-0.089,-0.064,-0.052,-0.053,-0.163,-0.092,0.019,-0.266,0.109,-0.061,-0.252,-0.033,-0.03,0.181,0.076,0.144,0.134,0.099,-0.127,-0.002,0.014,0.035,-0.064,0.04,0.04,0.057,-0.176,-0.115,0.123,-0.074,0.064,-0.096,-0.081,-0.086,-0.131,0.054,-0.004,-0.04,-0.008,0.139,-0.005,-0.093,-0.073,-0.018,-0.177,0.311,-0.074,-0.154,0.092,0.042,0.046,-0.059,-0.019,-0.03,-0.007,0.038,0.006,0.008,0.049,0.013,0,0.145,0,-0.016,0.092,0.032,0.095,-0.002,0.09,-0.027,-0.124,-0.005,0.009,0.042,0.158,-0.148,0.197,0.059,-0.101,0.02,0.045,0.151,-0.066,-0.056,0.114,-0.22,0.082,-0.056,0.086,-0.117,0.087,-0.051,0.003,-0.037,-0.128,0.119,-0.099,0.031,0.224,-0.152,0.045,0.235,0.045,-0.028,0.002,-0.082,0.122,-0.009,-0.042,-0.118,0.056,-0.112,0.044,0.017,0.117,-0.033,0.008,-0.004,-0.123,-0.036,0.047,0.023,-0.249,0.106,-0.005,0.047,0.012,-0.002,0.079,0.263,0.126,-0.02,0.087,-0.086,-0.093,0.058,0.066,0.04,-0.289,0.113,0.139,0.128,0.06,0.056,-0.091,-0.059,0.228,-0.078,0.058,0.022,-0.018,0.047,0.127,0.014,-0.126,-0.13,0,-0.055,-0.09,0.001,-0.038,-0.075,-0.116,-0.019,-0.099,-0.19,-0.198,-0.006,0.108,0.152,0.003,0.109,-0.156,0.179,0.108,-0.105,0.035,0.029,0.104,0.147,-0.015,-0.035,0.018,0.167,-0.009,0.117,-0.112,-0.102,0.059,-0.05,-0.066,-0.23,0.206,0.053,-0.053,0.033,0.053,0.074,-0.086,-0.043,0.008,-0.094,-0.027,-0.037,-0.111,0.083,-0.032,-0.053,-0.036,-0.062,0.172,-0.034,-0.018,0.02,-0.041,-0.135,0.004,0.072,-0.079,0.07,0.008],"source":"src/helpers/classicBattle/skipHandler.js [setSkipHandler]","tags":["code","what","function","utility","dispatchEvent","Boolean","skipHandler","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/skipHandler.js","node":"setSkipHandler"},"patterns":[],"relations":{"imports":[],"calls":["dispatchEvent","Boolean","skipHandler"]}},"version":1},
{"id":"skipHandler.js-skipCurrentPhase","text":"Skip the current timer phase if a handler is set. When no handler is\navailable, mark the skip as pending so it runs once a handler is provided.\n\n@returns {void}\n\nexport function skipCurrentPhase() {\n  if (skipHandler) {\n    const fn = skipHandler;\n    setSkipHandler(null);\n    // Defer to avoid executing inside event handlers synchronously.\n    setTimeout(() => {\n      try {\n        fn();\n      } catch {}\n    }, 0);\n  } else {\n    pendingSkip = true;\n  }\n}","qaContext":"Why: Skip the current timer phase if a handler is set. How: When no handler is available, mark the skip as pending so it runs once a handler is provided.","embedding":[-0.02,0.071,0.034,0.13,0.04,0.092,0.072,-0.079,0.246,-0.11,0.058,-0.019,-0.055,-0.143,0.004,-0.12,-0.062,0.004,0.055,-0.099,-0.015,-0.104,0.004,0.068,-0.207,-0.156,-0.031,-0.081,0.101,0.004,-0.027,-0.092,-0.241,-0.056,-0.028,0.094,-0.035,0.074,0.1,-0.038,0.079,-0.026,-0.034,-0.065,0.089,0.036,-0.093,0.01,-0.13,-0.013,0.062,0.02,-0.038,-0.065,0.195,0.124,0.025,0.062,0.058,0.105,-0.064,-0.223,-0.037,-0.027,0.101,0.11,-0.002,-0.027,0.047,0.147,0.013,0.028,0.043,0.242,-0.059,-0.074,-0.015,-0.061,-0.051,0.072,-0.095,-0.142,0.007,0.082,-0.036,0.043,0.011,0.083,-0.012,-0.047,-0.201,-0.069,-0.054,0.031,-0.066,0.185,0.021,0.096,-0.094,0.018,0.076,-0.038,-0.067,0.027,-0.041,-0.056,-0.006,-0.114,-0.124,0.038,0.048,0.144,0.164,-0.062,-0.064,0.183,0.219,-0.044,0.183,-0.057,0.202,0.07,0.138,-0.181,0.081,0.019,0.093,0,-0.158,-0.192,-0.193,-0.151,-0.02,0.013,0.108,-0.034,-0.017,0.065,0.013,-0.192,-0.046,-0.067,-0.054,-0.101,0.253,-0.083,0.087,0.037,0.119,-0.162,-0.095,0.127,0.012,-0.073,-0.118,-0.098,0.055,0.051,0.145,0.11,-0.176,0.024,0.047,-0.195,-0.059,0.047,-0.07,-0.119,-0.106,0.025,-0.251,0.039,-0.089,-0.172,0.113,-0.033,0.166,0.054,0.192,0.19,0.14,-0.144,0.055,0.023,0.002,-0.137,-0.104,0.071,0.076,-0.118,-0.12,0.024,-0.032,0.064,-0.068,-0.067,-0.148,-0.121,0.118,-0.078,0.083,-0.022,0.085,0.041,0.009,0.006,0.017,-0.135,0.158,-0.057,-0.125,0.04,0.115,0.024,0.004,-0.015,0.037,0.05,0.009,-0.051,0.024,0.091,-0.063,0,0.198,-0.07,-0.022,0.026,0.011,0.089,-0.083,0.034,0.019,-0.046,0.11,-0.007,-0.008,0.08,-0.161,0.152,0.08,-0.102,0.017,0.037,0.147,-0.065,-0.034,0.155,-0.147,0.051,-0.047,0.083,-0.173,0.04,-0.131,-0.019,0.15,-0.096,0.004,-0.103,0.005,0.146,-0.1,0.049,0.219,-0.034,-0.099,-0.014,-0.126,0.153,-0.024,0,-0.059,0.205,-0.166,-0.094,0.134,0.042,0.008,-0.016,-0.039,-0.181,0.034,0.161,0.01,-0.296,0.112,0.036,0.091,0.034,-0.036,0.1,0.174,0.171,0.037,0.169,-0.098,-0.118,-0.059,0.124,-0.034,-0.241,0.079,0.104,0.12,0.105,-0.033,-0.136,0.002,0.2,-0.134,-0.038,0.102,-0.024,0.018,0.067,0.009,-0.033,-0.125,0,-0.014,-0.065,0.093,-0.138,0,-0.091,-0.002,-0.156,-0.112,-0.055,0.107,0.016,0.197,0.038,0.12,-0.223,0.242,0.125,-0.089,-0.004,0.001,0.079,0.138,-0.077,-0.011,0.009,0.128,-0.057,0.09,-0.12,-0.205,0.109,-0.152,-0.082,-0.313,0.19,0.065,-0.09,-0.068,0.073,0.065,-0.103,-0.069,-0.003,-0.077,0.002,-0.051,-0.032,0.082,0.036,-0.075,-0.056,-0.122,0.126,-0.023,-0.028,0.034,-0.075,-0.149,0.086,-0.068,-0.021,0.05,-0.013],"source":"src/helpers/classicBattle/skipHandler.js [skipCurrentPhase]","tags":["code","what","function","utility","setSkipHandler","setTimeout","fn"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/skipHandler.js","node":"skipCurrentPhase"},"patterns":[],"relations":{"imports":[],"calls":["setSkipHandler","setTimeout","fn"]}},"version":1},
{"id":"skipHandler.js-resetSkipState","text":"Reset the skip handler state and notify listeners that no handler is active.\n\n@returns {void}\n1. Set the internal handler reference to `null`.\n2. Clear any pending skip request.\n3. Dispatch `skip-handler-change` with `active: false`.\n\nexport function resetSkipState() {\n  skipHandler = null;\n  pendingSkip = false;\n  window.dispatchEvent(new CustomEvent(\"skip-handler-change\", { detail: { active: false } }));\n}","qaContext":"Why: Reset the skip handler state and notify listeners that no handler is active. How: @returns {void} 1.","embedding":[-0.04,-0.002,0.104,0.206,0.041,0.079,0.119,-0.145,0.162,-0.086,0.023,-0.029,-0.197,-0.053,-0.147,0.041,0.046,0.014,0.038,-0.181,-0.085,0.054,0.137,0.032,-0.055,-0.102,-0.039,-0.1,0.034,-0.095,-0.024,-0.12,-0.135,-0.155,0.096,-0.063,-0.109,0.049,0.098,-0.002,0.141,0.031,-0.165,-0.072,-0.054,0.008,-0.121,0.016,-0.029,0.003,0.04,0.021,-0.017,-0.007,0.211,-0.03,0.06,0.085,0.041,0.085,-0.036,-0.19,-0.048,0.002,0.128,0.185,0.051,-0.046,0.059,0.054,-0.014,0.038,0.094,0.078,-0.064,-0.223,0.003,0.017,-0.069,0.156,-0.097,-0.242,-0.102,0.033,0.061,0.119,-0.122,-0.068,-0.024,-0.034,-0.152,-0.1,-0.06,0.123,-0.161,0.202,0.008,0.073,-0.203,0.08,0.191,0.036,-0.046,0.121,0.021,-0.044,-0.094,-0.019,-0.201,0.151,-0.016,0.029,0.091,0.08,-0.226,0.175,0.17,0.061,0.029,-0.102,0.188,0.023,0.109,-0.206,0.094,0.03,0.161,0,-0.008,-0.118,-0.276,-0.122,-0.027,-0.018,0.115,-0.061,0.098,0.065,0.042,-0.021,0.05,-0.165,-0.017,-0.147,0.224,-0.015,0.036,0.015,0.056,-0.03,-0.195,0.094,0.095,0.001,-0.024,-0.109,-0.066,0.041,0.076,0.143,-0.022,0.027,-0.129,-0.121,-0.005,-0.035,-0.039,-0.195,-0.111,0.069,-0.254,-0.022,-0.157,-0.286,0.109,-0.046,0.116,-0.037,0.146,0.14,0.194,-0.087,0.025,-0.095,-0.013,-0.035,-0.025,-0.024,0.078,-0.13,-0.052,0.015,-0.051,0.125,-0.093,-0.092,-0.119,-0.182,0.02,-0.01,0.181,-0.072,0.174,-0.018,-0.075,-0.154,0.069,-0.196,0.274,-0.202,-0.082,0.145,0.153,-0.02,0.027,0.169,-0.079,0.067,-0.019,-0.029,0.06,0.076,0.078,0,0.18,0.041,-0.069,-0.015,-0.044,0.154,-0.021,0.175,-0.054,-0.133,-0.014,0.028,0.045,0.23,-0.165,0.264,0.017,-0.115,-0.099,0.088,0.213,-0.006,-0.088,0.128,-0.197,0.042,0.069,0.129,-0.067,0.043,0.043,-0.046,0.002,-0.133,0.091,-0.01,0.006,0.317,-0.164,0.086,0.168,0.021,-0.084,0.051,-0.082,0.134,-0.045,-0.099,-0.172,0.075,-0.17,-0.012,0.084,0.019,0.057,0.032,0.005,-0.204,-0.111,-0.015,-0.021,-0.171,0.146,-0.041,0.094,0.052,-0.07,0.031,0.22,0.067,-0.018,0.209,-0.052,-0.094,0.099,0.046,0.068,-0.195,0.149,0.119,0.192,0.107,0.107,-0.147,-0.071,0.269,-0.194,0.077,0.086,0.078,-0.005,0.12,0.107,-0.059,-0.133,0,-0.107,-0.027,0.097,-0.047,0.029,-0.031,-0.087,-0.017,-0.166,-0.249,0.026,0.115,0.179,0.013,0.068,-0.169,0.148,0.065,-0.093,0.064,0.052,0.121,0.053,-0.071,0.058,-0.052,0.2,-0.086,0.172,-0.137,-0.089,0.043,0.033,-0.059,-0.365,0.132,0.203,-0.152,-0.029,-0.034,0.098,-0.198,-0.016,-0.034,-0.239,0.039,-0.078,-0.147,0.113,0.04,-0.113,-0.047,-0.117,0.218,0.001,-0.052,0.023,-0.07,-0.068,0.058,0.084,-0.078,-0.121,0.096],"source":"src/helpers/classicBattle/skipHandler.js [resetSkipState]","tags":["code","what","function","utility","dispatchEvent","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/skipHandler.js","node":"resetSkipState"},"patterns":[],"relations":{"imports":[],"calls":["dispatchEvent"]}},"version":1},
{"id":"selectionHandler.js-simulateOpponentStat","text":"Determine the opponent's stat choice based on difficulty.\n\n@param {Record<string, number>} stats - Opponent stat values.\n@param {\"easy\"|\"medium\"|\"hard\"} [difficulty=\"easy\"] Difficulty setting.\n@returns {string} One of the values from `STATS`.\n1. Map the provided stats object into `{stat, value}` pairs.\n2. Pass the array to `chooseOpponentStat` with the provided difficulty.\n3. Return the chosen stat key.\n\nexport function simulateOpponentStat(stats, difficulty = \"easy\") {\n  const values = STATS.map((stat) => ({ stat, value: Number(stats?.[stat]) || 0 }));\n  return chooseOpponentStat(values, difficulty);\n}","qaContext":"Why: Determine the opponent's stat choice based on difficulty. How: @param {Record<string, number>} stats - Opponent stat values.","embedding":[0.151,0.165,-0.111,0.064,-0.126,0.149,0.198,0.178,-0.113,0.04,-0.064,-0.095,-0.032,0.13,0.22,0.027,-0.003,-0.08,0.036,-0.062,-0.038,-0.12,-0.01,-0.218,0.097,0.125,0.033,0.023,0.148,-0.063,-0.062,-0.047,0.02,-0.053,-0.227,-0.103,-0.229,-0.139,0.071,0.065,0.123,0.162,-0.11,-0.164,0.073,0.13,-0.147,0.074,-0.052,0.137,-0.121,0.058,0.066,-0.093,0.216,0.023,-0.125,-0.224,0.152,-0.094,-0.022,-0.312,0.156,-0.086,0.232,-0.067,-0.012,0.194,-0.051,0.226,0.036,0.107,0.141,-0.131,0.126,0.046,-0.391,-0.185,0.13,0.11,-0.113,-0.286,-0.279,0.194,0.081,0.128,0.017,0.053,0.113,-0.036,-0.164,0.122,0.089,0.248,-0.074,0.232,-0.063,-0.084,-0.054,0.009,0.016,-0.003,0.112,-0.08,-0.118,-0.139,0.047,-0.098,-0.029,0.123,-0.072,0.116,0.045,0.193,-0.205,0.042,0.001,0.018,-0.069,0.102,0.263,0.046,0.077,0.1,0.042,0.059,0.087,0,0.109,-0.194,-0.012,0.046,0.076,0.077,-0.142,-0.123,-0.086,0.049,-0.087,0.264,-0.044,0.026,0.118,-0.037,0.021,0.048,-0.114,-0.07,0.083,0.065,-0.072,-0.088,0.021,0.03,0.032,0.038,-0.147,-0.122,0.174,-0.061,-0.144,0.147,0.235,-0.049,0.122,0.085,-0.348,0.14,-0.012,-0.034,-0.045,0.163,-0.047,0.019,0.057,0.072,0.174,0.013,-0.184,0.028,0.146,-0.088,0.019,0.124,-0.021,0.094,-0.078,0.054,-0.118,0.122,0.116,-0.015,-0.12,0.257,-0.187,-0.102,0.134,-0.093,0.148,-0.016,-0.192,-0.012,0.053,0.098,-0.024,-0.057,-0.163,-0.314,-0.035,-0.071,-0.249,0.138,0.02,0.095,-0.119,-0.163,0.014,0.065,-0.139,0.109,-0.201,-0.084,-0.059,0,-0.236,0.04,0.198,0.257,0.228,-0.07,0.154,-0.067,0.208,0.053,-0.198,-0.065,-0.03,-0.161,0.171,0.108,-0.337,0.052,0.15,-0.061,-0.118,-0.035,0.027,0.032,-0.169,0.261,0.122,-0.203,0.066,-0.12,-0.058,-0.088,-0.118,0.012,0.048,-0.047,0.207,0.083,-0.033,0.063,-0.278,-0.076,-0.058,-0.03,-0.041,0.156,0.262,-0.114,0,-0.162,0.166,0.021,-0.179,0.125,-0.026,-0.193,-0.314,-0.147,0.158,0.133,-0.032,-0.082,0.046,0.134,0.106,-0.046,-0.116,-0.119,-0.009,0.117,0.001,0.019,0.261,-0.144,0.124,-0.061,-0.259,-0.018,0.219,0.058,0.043,-0.02,-0.01,-0.067,-0.104,0.108,0.205,0.069,0.02,0.104,0.031,0.15,0.034,-0.04,-0.132,0,-0.001,-0.196,-0.157,0.048,-0.032,0.141,-0.128,0.034,-0.032,0.001,0.128,0.065,0.114,-0.033,0.02,-0.082,0.025,0.249,-0.016,0.14,0.125,-0.022,-0.052,-0.028,0.1,-0.037,-0.019,-0.066,0.103,0.232,-0.018,-0.055,0.194,0.122,-0.095,-0.071,-0.162,-0.025,-0.022,0.062,-0.029,0.016,-0.121,0.114,0.004,-0.152,0,-0.07,0.224,-0.124,0.061,-0.219,-0.124,-0.152,-0.068,-0.012,-0.004,0.027,-0.134,-0.048,0.035,-0.09,-0.133,0.1],"source":"src/helpers/classicBattle/selectionHandler.js [simulateOpponentStat]","tags":["code","what","function","utility","../battleEngineFacade.js","../api/battleUI.js","./battleEvents.js","./eventDispatcher.js","./roundResolver.js","./cardStatUtils.js","map","Number","chooseOpponentStat"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/selectionHandler.js","node":"simulateOpponentStat"},"patterns":[],"relations":{"imports":["../battleEngineFacade.js","../api/battleUI.js","./battleEvents.js","./eventDispatcher.js","./roundResolver.js","./cardStatUtils.js"],"calls":["map","Number","chooseOpponentStat"]}},"version":1},
{"id":"selectionHandler.js-getPlayerAndOpponentValues","text":"Retrieve stat values for the player and opponent cards.\n\n@param {string} stat - Selected stat key.\n@param {number} [playerVal] - Precomputed player stat value.\n@param {number} [opponentVal] - Precomputed opponent stat value.\n@returns {{playerVal: number, opponentVal: number}}\n1. If `playerVal` is missing or NaN, read the value from `#player-card`.\n2. If `opponentVal` is missing or NaN, read the value from `#opponent-card`.\n3. Coerce both values to numbers and return them.\n\nexport function getPlayerAndOpponentValues(stat, playerVal, opponentVal) {\n  if (playerVal === undefined || Number.isNaN(playerVal)) {\n    playerVal = getCardStatValue(document.querySelector(\"#player-card\"), stat);\n  }\n  if (opponentVal === undefined || Number.isNaN(opponentVal)) {\n    opponentVal = getCardStatValue(document.querySelector(\"#opponent-card\"), stat);\n  }\n  return { playerVal: Number(playerVal), opponentVal: Number(opponentVal) };\n}","qaContext":"Why: Retrieve stat values for the player and opponent cards. How: @param {string} stat - Selected stat key.","embedding":[0.052,0.084,-0.137,0.026,0.014,0.239,0.166,0.147,0.094,-0.102,-0.057,-0.127,-0.056,0.024,0.18,0.021,-0.042,0.089,-0.008,-0.048,0.004,0.05,-0.037,-0.073,-0.058,0.085,-0.104,-0.154,-0.035,-0.013,-0.039,0.056,0.08,0.037,-0.139,-0.067,-0.155,-0.033,-0.043,-0.013,-0.019,0.024,-0.113,-0.041,0.082,-0.01,-0.195,0.085,0.026,0.092,-0.068,0.022,0.036,0.051,0.258,0.06,-0.107,-0.143,0.038,-0.018,-0.067,-0.219,0.062,-0.052,0.054,-0.037,0.013,-0.011,-0.096,0.216,0.098,0.116,0.148,-0.047,-0.077,0.106,-0.185,-0.083,0.162,0.06,-0.101,-0.224,-0.144,0.105,0.18,0.012,-0.01,0.079,0.049,0,-0.192,0.211,0.122,0.146,-0.011,0.21,-0.105,-0.057,-0.017,0.131,-0.008,0.053,-0.068,-0.091,-0.021,0,0.122,0.012,-0.025,0.144,0.026,0.046,0.008,0.068,-0.13,0.041,0.202,-0.03,-0.067,0.117,0.183,-0.005,0.084,0.046,0.026,-0.056,0.084,0,-0.003,-0.147,-0.005,0.048,-0.134,-0.012,0.007,-0.05,-0.024,0.006,-0.158,0.219,0.006,-0.006,-0.045,-0.011,-0.008,-0.086,0.08,-0.002,0.167,0.03,-0.028,0.082,0.051,0.005,-0.076,-0.007,-0.015,-0.013,0.131,-0.194,-0.048,-0.038,0.117,0.062,0.063,0.066,-0.203,0.035,-0.04,-0.077,-0.116,-0.097,-0.163,-0.332,0.072,-0.049,0.038,0.05,-0.138,0.022,0.065,-0.195,-0.071,-0.074,-0.005,0.179,-0.211,-0.041,-0.062,0.022,0.017,-0.054,-0.203,0.108,-0.095,-0.062,-0.026,-0.233,0.056,-0.087,0.029,-0.014,-0.039,0.079,-0.124,-0.022,-0.106,-0.155,-0.143,-0.091,-0.201,0.187,0.062,0.241,0.065,-0.09,0.033,0.237,0.062,-0.035,-0.142,-0.084,-0.035,0,-0.115,0.074,0.072,0.034,0.082,-0.039,0.105,0.128,0.1,-0.246,0.05,0.023,-0.016,-0.086,0.043,0.162,-0.216,-0.046,0.022,-0.03,0.119,-0.034,0.035,0.058,-0.213,0.204,0.218,-0.183,0.081,-0.071,0.034,-0.108,-0.055,0.105,-0.041,-0.079,0.057,0.119,-0.082,0.179,-0.09,-0.074,-0.085,-0.046,-0.143,0.075,0.184,0.181,0.128,-0.168,0.117,-0.034,-0.143,0.095,-0.163,-0.069,-0.113,-0.104,0.076,0.149,-0.007,-0.092,-0.037,-0.056,0.055,0.088,-0.031,0.063,-0.003,0.092,-0.056,0.065,0.124,-0.05,0.03,0.086,-0.169,0.031,0.139,-0.028,0.083,0.019,-0.104,-0.153,0.007,0.153,0.111,-0.118,0.068,-0.061,-0.006,0.125,-0.062,-0.148,-0.148,0,-0.057,0.015,-0.04,0.118,-0.081,0.008,0.008,-0.141,0.044,-0.02,0.181,0.061,0.079,-0.242,0.015,-0.08,0.025,0.074,-0.023,0.176,0.092,-0.108,-0.042,0.038,0.189,-0.025,-0.105,-0.066,0.127,0.084,0.029,0.053,0.154,-0.005,0.114,0.003,-0.036,0.029,0.055,0.099,0.036,-0.043,-0.18,0.058,-0.031,-0.171,0.021,0.017,0.125,-0.041,-0.023,-0.183,-0.086,0.035,-0.144,-0.083,0.056,0.04,-0.037,0.02,0.066,-0.015,-0.127,0.053],"source":"src/helpers/classicBattle/selectionHandler.js [getPlayerAndOpponentValues]","tags":["code","what","function","utility","../battleEngineFacade.js","../api/battleUI.js","./battleEvents.js","./eventDispatcher.js","./roundResolver.js","./cardStatUtils.js","isNaN","getCardStatValue","querySelector","Number"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/selectionHandler.js","node":"getPlayerAndOpponentValues"},"patterns":[],"relations":{"imports":["../battleEngineFacade.js","../api/battleUI.js","./battleEvents.js","./eventDispatcher.js","./roundResolver.js","./cardStatUtils.js"],"calls":["isNaN","getCardStatValue","querySelector","Number"]}},"version":1},
{"id":"selectionHandler.js-resolveRoundViaMachine","text":"Resolve the round via the battle state machine, falling back to direct\ndeterministic zero‑delay resolution on error.\n\n@param {ReturnType<typeof createBattleStore>} store - Battle state store.\n@param {string} stat - Chosen stat key.\n@param {number} playerVal - Player's stat value.\n@param {number} opponentVal - Opponent's stat value.\n@param {object} [opts] - Resolver options.\n@returns {Promise<ReturnType<typeof resolveRound>|undefined>}\n1. Schedule a fallback call to `resolveRoundDirect` after 600ms so the\n   round resolves with `delayMs: 0` and clears `playerChoice` when done.\n2. Await `dispatchBattleEvent(\"statSelected\")`.\n3. If dispatch fails, call `resolveRound` immediately with deterministic\n   options in Vitest environments.\n\nexport async function resolveRoundViaMachine(store, stat, playerVal, opponentVal, opts = {}) {\n  try {\n    setTimeout(() => {\n      if (store.playerChoice) {\n        resolveRoundDirect(store, stat, playerVal, opponentVal, {\n          ...opts,\n          delayMs: 0\n        }).catch(() => {});\n      }\n    }, 600);\n    await dispatchBattleEvent(\"statSelected\");\n    return undefined;\n  } catch {\n    const deterministicOpts =\n      typeof process !== \"undefined\" && process.env && process.env.VITEST\n        ? { ...opts, delayMs: 0 }\n        : opts;\n    return resolveRound(store, stat, playerVal, opponentVal, deterministicOpts);\n  }\n}","qaContext":"Why: Resolve the round via the battle state machine, falling back to direct deterministic zero‑delay resolution on error. How: export async function resolveRoundViaMachine(store, stat, playerVal, o...","embedding":[-0.104,0.082,-0.073,0.156,-0.097,0.083,-0.018,0.124,0.038,0.082,0.003,-0.157,-0.042,0.026,0.012,-0.034,0.066,-0.105,0.037,0.074,0.072,-0.006,0.063,-0.018,-0.086,-0.117,-0.088,-0.068,0.007,-0.064,-0.009,0.094,-0.081,0.064,-0.011,0.054,0.004,-0.045,-0.063,-0.108,0.125,0.144,-0.047,-0.037,0.093,-0.036,-0.015,0.012,-0.076,-0.004,-0.094,0.055,-0.014,0.001,0.136,0.109,0.072,0.043,-0.008,0.1,-0.02,-0.182,0.017,-0.125,0.07,0.061,0.159,0.015,-0.028,0.053,-0.045,0.106,0.029,-0.047,-0.042,0.072,-0.048,-0.065,0.077,-0.069,-0.001,-0.091,-0.109,0.056,0.063,-0.036,0.138,-0.113,0.099,-0.036,-0.135,-0.004,-0.063,0.093,0.086,0.176,0.077,-0.01,0.029,0.02,0.044,-0.041,0.029,0.033,0.005,-0.002,0.005,-0.044,-0.116,0.074,0.033,0.105,0.087,0.023,-0.048,0.137,0.004,-0.042,-0.034,0.008,0.114,0.055,0.046,-0.072,0.118,0.058,0.126,0,-0.027,-0.282,-0.104,0.059,0.029,0.039,0.183,0.052,-0.094,-0.044,-0.105,-0.032,0.015,-0.072,0.017,-0.059,0.06,0.029,-0.014,0.026,0.267,-0.083,-0.09,-0.069,0.005,0.015,-0.029,0.005,-0.042,-0.032,0.105,0.02,-0.062,0.13,0.11,-0.057,0.04,0.061,-0.165,-0.003,-0.078,0.056,-0.216,0.064,-0.135,-0.271,-0.025,-0.048,0.108,0.069,-0.111,0.112,-0.004,-0.158,0.026,0.01,0.072,-0.037,-0.108,0.012,-0.069,-0.089,-0.117,-0.04,0.008,0.061,-0.167,-0.098,0.003,-0.079,0.06,0.011,0.081,-0.019,0.065,-0.07,0.011,0.07,-0.074,-0.224,0.106,-0.028,-0.183,0.165,0.061,-0.005,-0.048,-0.084,-0.031,0.025,-0.056,-0.046,0.069,0.002,-0.094,0,0.057,-0.023,-0.084,0.142,0.144,0.044,0.046,0.03,-0.085,-0.166,-0.089,0.088,0.02,0.019,-0.05,0.079,0.053,-0.143,0.041,0.016,0.05,-0.035,-0.036,0.014,-0.045,0.077,0.131,0.046,0.014,-0.014,0.067,-0.035,-0.15,0.019,0.098,-0.055,0.059,-0.024,-0.067,0.117,0.102,-0.015,-0.124,-0.004,0.01,0.116,0.067,0.001,0.032,-0.064,0.063,-0.052,-0.065,0.067,-0.069,-0.032,-0.034,-0.09,0.081,0.138,0.079,-0.09,0.029,-0.095,0.064,0.088,-0.103,-0.025,0.141,0.115,0.012,0.078,-0.011,-0.131,0.094,-0.074,-0.106,-0.038,0.141,0.09,0.002,0.07,-0.023,-0.099,-0.034,0.096,0.044,0.216,0.016,0.047,0.011,0.003,-0.105,0.004,-0.032,0,0,0.055,-0.075,0.099,0.01,0.005,0.04,-0.141,0.086,-0.018,0.039,0.033,0.068,-0.053,0.059,-0.138,-0.061,0.043,-0.139,0.028,-0.044,-0.055,-0.09,-0.038,-0.001,0.037,0.132,-0.029,0.067,0.012,-0.076,0.121,0.039,0,-0.112,0.023,0.155,0.066,0.17,0.105,-0.005,0.058,-0.121,0.03,-0.038,-0.056,-0.095,0.008,0.105,-0.023,-0.088,-0.099,-0.153,0.143,0.038,0.04,0.053,-0.183,-0.007,0.039,0.047,-0.212,-0.129,0.07],"source":"src/helpers/classicBattle/selectionHandler.js [resolveRoundViaMachine]","tags":["code","how","function","utility","../battleEngineFacade.js","../api/battleUI.js","./battleEvents.js","./eventDispatcher.js","./roundResolver.js","./cardStatUtils.js","setTimeout","catch","resolveRoundDirect","dispatchBattleEvent","resolveRound","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/selectionHandler.js","node":"resolveRoundViaMachine"},"patterns":[],"relations":{"imports":["../battleEngineFacade.js","../api/battleUI.js","./battleEvents.js","./eventDispatcher.js","./roundResolver.js","./cardStatUtils.js"],"calls":["setTimeout","catch","resolveRoundDirect","dispatchBattleEvent","resolveRound"]}},"version":1},
{"id":"selectionHandler.js-resolveRoundDirect","text":"Resolve the round directly without the battle state machine.\n\n@param {ReturnType<typeof createBattleStore>} store - Battle state store.\n@param {string} stat - Chosen stat key.\n@param {number} playerVal - Player's stat value.\n@param {number} opponentVal - Opponent's stat value.\n@param {object} [opts] - Resolver options.\n@returns {Promise<ReturnType<typeof resolveRound>>}\n1. In Vitest, use a deterministic delay of 0ms.\n2. Call `resolveRound` and clear `store.playerChoice`.\n3. Return the result.\n\nexport async function resolveRoundDirect(store, stat, playerVal, opponentVal, opts = {}) {\n  const deterministicOpts =\n    typeof process !== \"undefined\" && process.env && process.env.VITEST\n      ? { ...opts, delayMs: 0 }\n      : opts;\n  const result = await resolveRound(store, stat, playerVal, opponentVal, deterministicOpts);\n  store.playerChoice = null;\n  return result;\n}","qaContext":"Why: Resolve the round directly without the battle state machine. How: export async function resolveRoundDirect(store, stat, playerVal, opponentVal, opts = {}) { const deterministicOpts = typeof pr...","embedding":[-0.134,0.149,-0.093,0.131,-0.134,0.105,-0.029,0.131,0.084,0.079,-0.049,-0.137,-0.061,0.005,0.04,-0.078,0.015,-0.058,0.114,-0.001,0.021,-0.013,0.038,-0.059,-0.075,-0.097,-0.106,-0.025,0.082,-0.065,0.033,0.145,-0.07,0.021,-0.023,0.029,-0.019,-0.03,-0.059,-0.108,0.169,0.159,0.005,-0.039,0.116,-0.013,-0.052,0.051,-0.058,0.021,-0.075,0.032,-0.062,-0.015,0.111,0.098,0.127,-0.001,-0.047,0.078,-0.054,-0.215,0.048,-0.162,0.042,0.059,0.16,0.023,-0.008,0.07,0.044,0.127,0.093,-0.046,-0.033,0.076,-0.157,-0.065,0.125,0.042,-0.001,-0.123,-0.068,0.015,0.043,-0.033,0.191,-0.109,0.131,0.013,-0.14,0.034,-0.085,0.033,0.026,0.162,0.038,-0.006,0.064,-0.007,0.038,-0.007,0.076,-0.022,-0.035,0.062,0.015,-0.033,-0.082,0.071,0.015,0.086,0.111,0.017,-0.078,0.132,0.044,-0.083,-0.042,-0.018,0.128,0.065,0.041,-0.04,0.083,0.085,0.104,0,-0.047,-0.247,-0.045,0.038,0.003,0.068,0.184,0.008,-0.109,-0.059,-0.12,-0.028,0.015,-0.119,-0.02,-0.092,0.048,-0.016,-0.037,0.055,0.266,-0.015,-0.056,-0.079,0.015,-0.043,-0.015,0.013,-0.05,-0.047,0.111,-0.004,-0.085,0.156,0.099,-0.03,0.012,0.053,-0.126,0.033,-0.047,0.064,-0.211,0.092,-0.172,-0.22,-0.051,-0.083,0.125,0.034,-0.13,0.148,-0.063,-0.2,0.022,-0.05,0.117,-0.048,-0.141,-0.003,-0.022,-0.107,-0.125,0.03,-0.053,0.063,-0.127,-0.162,-0.037,-0.079,0.142,0.011,0.066,-0.06,0.092,-0.06,0.038,0.089,-0.044,-0.234,0.123,-0.019,-0.216,0.19,0.08,-0.05,-0.092,-0.099,0.042,-0.057,-0.057,-0.036,0.064,0.012,-0.11,0,0.049,-0.015,-0.018,0.226,0.099,0.073,0.113,-0.027,-0.027,-0.057,-0.071,0.089,0.012,0.023,0.05,0.073,0.084,-0.13,0.066,-0.029,0.055,-0.079,-0.046,0.045,-0.038,0.015,0.082,-0.025,0.054,0.002,0.042,-0.06,-0.101,-0.012,0.068,-0.04,0.122,-0.001,-0.039,0.139,0.048,-0.054,-0.177,0.024,0.002,0.106,0.059,0,0.031,-0.123,0.02,0.008,-0.103,0.016,-0.091,-0.041,-0.103,-0.082,0.106,0.164,0.09,-0.12,0.042,-0.11,0.035,0.12,-0.103,0.065,0.101,0.08,0.036,0.121,0.066,-0.055,0.11,-0.08,-0.101,-0.027,0.192,0.093,0.006,0.091,-0.075,-0.127,-0.054,0.111,0.083,0.166,-0.009,0.069,0.043,0.023,-0.073,-0.046,-0.014,0,-0.046,-0.062,-0.034,0.131,-0.013,0.034,0.02,-0.061,0.123,0.021,0.051,-0.027,0.097,-0.103,0.046,-0.062,-0.026,0.022,-0.109,0.087,-0.04,-0.009,-0.073,-0.043,-0.02,0,0.099,-0.033,0.033,-0.016,-0.076,0.113,0.017,0.024,-0.122,-0.009,0.119,0.11,0.148,0.132,-0.07,0.098,-0.149,0.052,-0.065,-0.07,-0.098,-0.084,0.037,-0.051,-0.023,-0.063,-0.105,0.151,0,0.036,0.048,-0.155,-0.033,0.053,0.016,-0.224,-0.063,0.046],"source":"src/helpers/classicBattle/selectionHandler.js [resolveRoundDirect]","tags":["code","how","function","utility","../battleEngineFacade.js","../api/battleUI.js","./battleEvents.js","./eventDispatcher.js","./roundResolver.js","./cardStatUtils.js","resolveRound","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/selectionHandler.js","node":"resolveRoundDirect"},"patterns":[],"relations":{"imports":["../battleEngineFacade.js","../api/battleUI.js","./battleEvents.js","./eventDispatcher.js","./roundResolver.js","./cardStatUtils.js"],"calls":["resolveRound"]}},"version":1},
{"id":"selectionHandler.js-handleStatSelection","text":"Handles the player's stat selection.\n\n@param {ReturnType<typeof createBattleStore>} store - Battle state store.\n@param {string} stat - Chosen stat key.\n@param {{playerVal: number, opponentVal: number}} values - Precomputed stat values.\n1. Ignore if a selection was already made.\n2. Record the chosen stat.\n3. If values are missing, read them from the player and opponent cards.\n4. Coerce the stat values to numbers.\n5. Stop running timers and clear pending timeouts on the store.\n6. Emit a `statSelected` event with the provided values.\n7. Resolve the round either via the state machine or directly, letting the\n   resolver clear `playerChoice` when finished.\n\nexport async function handleStatSelection(store, stat, { playerVal, opponentVal, ...opts } = {}) {\n  // Ignore selections if a choice was already recorded.\n  if (store.selectionMade) {\n    return;\n  }\n\n  // Defensive guard: only accept stat selections while the orchestrator is\n  // in the stat selection / decision states. This prevents stale clicks\n  // (for example during cooldown) from setting `store.playerChoice` and\n  // confusing the state machine.\n  try {\n    const current = typeof getBattleState === \"function\" ? getBattleState() : null;\n    if (current && current !== \"waitingForPlayerAction\" && current !== \"roundDecision\") {\n      // UX: ignore silently but log for diagnostics\n      try {\n        console.warn(`Ignored stat selection while in state=${current}`);\n      } catch {}\n      return;\n    }\n  } catch {}\n  store.selectionMade = true;\n  store.playerChoice = stat;\n  const values = getPlayerAndOpponentValues(stat, playerVal, opponentVal);\n  playerVal = values.playerVal;\n  opponentVal = values.opponentVal;\n  stopTimer();\n  clearTimeout(store.statTimeoutId);\n  clearTimeout(store.autoSelectId);\n  emitBattleEvent(\"statSelected\", { store, stat, playerVal, opponentVal });\n  const hasMachine = typeof document !== \"undefined\" && !!document.body?.dataset.battleState;\n  const resolver = hasMachine ? resolveRoundViaMachine : resolveRoundDirect;\n  return resolver(store, stat, playerVal, opponentVal, opts);\n}","qaContext":"Why: Handles the player's stat selection. How: Resolve the round either via the state machine or directly, letting the resolver clear `playerChoice` when finished.","embedding":[-0.065,0.094,-0.092,0.151,-0.066,0.16,0.098,0.068,0.094,0.061,-0.105,-0.167,-0.039,-0.025,0.018,-0.012,0.022,-0.103,-0.046,-0.005,0.002,-0.026,0.076,-0.047,-0.052,-0.018,0,-0.126,-0.034,-0.072,-0.023,-0.02,-0.003,0,-0.112,-0.127,-0.069,-0.046,-0.054,-0.059,0.126,0.125,-0.123,-0.036,-0.006,-0.088,-0.198,-0.015,0.039,0.135,-0.045,0.031,0.031,0.046,0.152,0.092,0.092,0.022,-0.007,0.027,0.006,-0.213,-0.024,-0.077,0.091,0.049,0.047,0.023,0.022,0.104,-0.019,0.135,0.095,-0.063,-0.048,0,-0.156,-0.103,0.072,0.003,-0.055,-0.115,-0.155,-0.009,0.071,-0.019,0.123,0.016,0.086,-0.048,-0.188,0.135,0.016,0.053,-0.029,0.218,-0.015,0.058,0.034,0.007,0.039,-0.005,-0.013,0.075,-0.012,-0.205,0.01,-0.015,-0.108,0.056,0.053,0.105,0.023,0.107,-0.069,0.227,0.118,0.009,-0.034,0.056,0.199,0.021,-0.025,-0.039,0.138,-0.037,0.142,0,0.021,-0.244,-0.136,-0.012,0.048,0.046,0.057,0.019,-0.027,-0.022,-0.036,0.092,0.021,-0.059,0.039,-0.115,0.017,0.073,0.063,-0.054,0.211,-0.025,-0.018,0.055,0.026,0.07,-0.038,0.082,-0.052,-0.038,0.148,-0.021,-0.098,0.036,0.085,-0.041,-0.033,0.07,-0.037,-0.021,-0.035,-0.031,-0.201,0.101,-0.19,-0.232,-0.047,-0.088,0.046,0.065,-0.112,0.083,0.046,-0.194,0.022,0.002,0.024,-0.01,-0.094,0.016,-0.025,0.015,-0.058,-0.043,-0.101,0.131,-0.111,-0.073,0.005,-0.213,0.081,-0.033,0.151,-0.055,0.024,-0.006,-0.007,0.089,-0.156,-0.219,0.11,-0.151,-0.204,0.166,0.106,0.046,-0.037,-0.042,-0.062,0.119,-0.045,0.039,0.03,-0.029,-0.115,0,-0.017,0.01,-0.017,0.127,0.091,0.072,0.005,0.086,-0.004,-0.173,-0.009,0.098,-0.016,-0.001,-0.022,0.099,-0.024,-0.071,-0.008,0.031,0.04,-0.026,-0.013,0.023,-0.11,0.093,0.055,-0.048,0.047,-0.085,0.012,0.001,-0.129,-0.018,0.056,-0.195,0.117,0.112,-0.095,0.212,0.063,-0.071,-0.088,-0.013,-0.035,0.092,0.093,0.127,0.034,-0.017,-0.027,-0.067,-0.119,0.054,-0.102,-0.039,0.007,-0.13,0.087,0.118,0.015,-0.142,0.094,-0.049,0.128,0.08,-0.031,0.046,0.116,0.16,-0.053,0.023,0.142,-0.096,0.102,0.029,-0.114,-0.074,0.14,0.004,-0.019,0.081,0.003,-0.216,0.035,0.156,-0.057,0.059,0.037,0.023,-0.089,0.038,-0.02,-0.092,-0.083,0,-0.033,-0.018,0.036,0.072,0.086,-0.041,0.001,-0.085,0.079,-0.045,0.096,0.024,0.088,-0.098,-0.038,-0.106,0.065,0.03,-0.042,0.148,0.032,-0.065,0.002,0.043,0.094,0.054,0.005,-0.004,0.073,-0.014,-0.026,0.047,0.123,0.04,-0.038,-0.011,0.097,-0.034,0.101,0.123,0.038,0,-0.147,0.04,-0.075,-0.028,0.007,-0.003,0.157,0.056,-0.13,-0.17,-0.044,-0.021,0.056,-0.023,0.079,-0.095,0.042,0.102,0.04,-0.156,-0.139,0.066],"source":"src/helpers/classicBattle/selectionHandler.js [handleStatSelection]","tags":["code","what","function","utility","../battleEngineFacade.js","../api/battleUI.js","./battleEvents.js","./eventDispatcher.js","./roundResolver.js","./cardStatUtils.js","isNaN","getCardStatValue","querySelector","Number","stopTimer","clearTimeout","emitBattleEvent","setTimeout","finally","catch","resolveRound","dispatchBattleEvent","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/selectionHandler.js","node":"handleStatSelection"},"patterns":[],"relations":{"imports":["../battleEngineFacade.js","../api/battleUI.js","./battleEvents.js","./eventDispatcher.js","./roundResolver.js","./cardStatUtils.js"],"calls":["isNaN","getCardStatValue","querySelector","Number","stopTimer","clearTimeout","emitBattleEvent","setTimeout","finally","catch","resolveRound","dispatchBattleEvent"]}},"version":1},
{"id":"roundUI.js-applyRoundUI","text":"Apply UI updates for a newly started round.\n\n@param {ReturnType<typeof import('./roundManager.js').createBattleStore>} store - Battle state store.\n@param {number} roundNumber - Current round number to display.\n@param {number} [stallTimeoutMs=35000] - Delay before auto-select kicks in.\n1. Reset stat buttons and disable the Next Round button.\n2. Clear the round result display and sync the score.\n3. Update the round counter and show the selection prompt.\n4. Start the round timer and stall timeout.\n5. Update the debug panel.\n\nexport function applyRoundUI(store, roundNumber, stallTimeoutMs = 35000) {\n  console.log(\"INFO: applyRoundUI called for round\", roundNumber);\n  resetStatButtons();\n  disableNextRoundButton();\n  const roundResultEl = document.getElementById(\"round-result\");\n  if (roundResultEl) roundResultEl.textContent = \"\";\n  syncScoreDisplay();\n  scoreboard.updateRoundCounter(roundNumber);\n  showSelectionPrompt();\n  startTimer((stat, opts) => {\n    const playerCard = document.getElementById(\"player-card\");\n    const opponentCard = document.getElementById(\"opponent-card\");\n    const playerVal = getCardStatValue(playerCard, stat);\n    let opponentVal = getCardStatValue(opponentCard, stat);\n    try {\n      const opp = getOpponentJudoka();\n      const raw = opp && opp.stats ? Number(opp.stats[stat]) : NaN;\n      opponentVal = Number.isFinite(raw) ? raw : opponentVal;\n    } catch {}\n    return handleStatSelection(store, stat, { playerVal, opponentVal, ...opts });\n  });\n  store.stallTimeoutMs = stallTimeoutMs;\n  store.statTimeoutId = setTimeout(\n    () =>\n      handleStatSelectionTimeout(store, (s, opts) => {\n        const playerCard = document.getElementById(\"player-card\");\n        const opponentCard = document.getElementById(\"opponent-card\");\n        const playerVal = getCardStatValue(playerCard, s);\n        let opponentVal = getCardStatValue(opponentCard, s);\n        try {\n          const opp = getOpponentJudoka();\n          const raw = opp && opp.stats ? Number(opp.stats[s]) : NaN;\n          opponentVal = Number.isFinite(raw) ? raw : opponentVal;\n        } catch {}\n        return handleStatSelection(store, s, { playerVal, opponentVal, ...opts });\n      }),\n    store.stallTimeoutMs\n  );\n  updateDebugPanel();\n}","qaContext":"Why: Apply UI updates for a newly started round. How: Update the round counter and show the selection prompt.","embedding":[-0.058,0.039,-0.061,0.071,-0.104,0.135,0.035,0.134,0.126,-0.018,-0.048,-0.167,-0.109,-0.053,0.033,-0.077,-0.037,-0.025,-0.007,-0.01,0.021,-0.051,0.099,0,-0.021,0.037,-0.003,-0.096,-0.04,-0.105,-0.03,0.028,0.085,-0.058,-0.141,-0.129,-0.065,0.004,0.015,-0.024,-0.016,0.103,-0.004,-0.021,0.09,-0.062,-0.208,0.03,0.105,0.128,-0.039,0.064,0.044,-0.034,0.033,0.089,0.129,0.049,0.033,0.096,0.022,-0.12,0.055,-0.054,0.051,0.002,0.076,-0.043,-0.032,0.082,0.016,0.186,0.132,-0.073,-0.079,-0.111,-0.178,-0.042,0.107,0.041,-0.01,-0.2,-0.119,-0.028,0.116,-0.052,0.184,0.04,0.008,-0.109,-0.201,0.236,-0.038,0.085,-0.038,0.252,-0.055,0.019,-0.097,0.103,0.077,-0.006,-0.056,0.039,-0.023,-0.156,0.148,0.003,-0.08,0.101,0.009,0.132,0.023,0.069,-0.034,0.066,0.095,-0.028,0.038,-0.015,0.219,0.065,-0.111,-0.131,0.073,-0.009,0.188,0,-0.033,-0.227,-0.096,0.055,-0.004,0.044,0.077,0.005,-0.021,0.011,-0.082,0.002,-0.031,-0.121,0.004,-0.192,0.067,0.097,0.115,-0.118,0.195,-0.163,-0.081,0.028,0.045,0.222,-0.011,0.061,-0.106,-0.053,0.172,0.018,-0.089,0.035,0.07,-0.109,0.026,0.037,-0.016,-0.012,-0.103,-0.051,-0.112,0.04,-0.155,-0.104,-0.012,0.015,-0.036,0.053,-0.164,0.095,-0.091,-0.246,-0.021,0.038,-0.02,-0.031,-0.158,0.009,-0.023,0.039,-0.094,-0.035,-0.162,0.182,-0.067,-0.164,0.035,-0.116,-0.004,-0.044,0.153,-0.031,-0.05,-0.022,-0.023,0.051,-0.18,-0.23,0.173,-0.244,-0.248,0.166,0.188,0.087,0.055,-0.01,-0.056,0.183,-0.094,0.013,0.056,-0.031,-0.085,0,0.016,0.036,-0.07,0.08,0.172,0.05,-0.006,0.199,0.027,-0.15,-0.004,0.069,-0.045,-0.024,-0.05,0.198,0.064,-0.016,-0.018,0.02,0.028,0.054,-0.084,0.008,-0.089,0.09,0.1,0.003,0.067,-0.021,0.054,-0.027,-0.153,0.086,0.063,-0.15,0.137,-0.032,-0.131,0.22,0.123,-0.11,-0.074,0.033,0.002,0.08,0.129,0.131,-0.075,-0.033,-0.063,-0.104,-0.141,0.001,-0.016,-0.006,0.031,-0.152,0.096,0.133,0.001,-0.092,0.058,-0.069,0.208,0.115,-0.065,0.097,0.078,0.217,-0.123,0.069,0.229,-0.107,0.058,0.021,-0.12,-0.049,0.182,0.036,0.076,0.044,0.005,-0.226,-0.036,0.04,-0.046,0.108,0.014,-0.029,-0.132,0,0.03,-0.052,-0.088,0,-0.129,0.01,0.044,0.049,0.04,0.018,0.041,-0.073,0.02,-0.184,0.076,0.129,0.174,-0.026,-0.068,-0.099,-0.088,0.018,-0.021,0.098,-0.018,-0.094,0.003,-0.041,0.15,-0.041,0.014,0.071,0.088,0.034,-0.028,0.044,0.144,-0.01,-0.023,-0.044,0.019,-0.013,0.181,0.123,-0.004,-0.014,-0.139,0.005,-0.079,-0.048,-0.04,-0.038,0.183,-0.017,-0.154,-0.142,0.006,-0.008,0.132,-0.043,0.031,-0.105,-0.002,0.169,-0.046,-0.072,-0.08,0.072],"source":"src/helpers/classicBattle/roundUI.js [applyRoundUI]","tags":["code","how","function","utility","./uiHelpers.js","../battle/index.js","./uiService.js","./timerService.js","../setupScoreboard.js","./selectionHandler.js","./roundManager.js","./battleEvents.js","./cardStatUtils.js","./cardSelection.js","../showSnackbar.js","log","resetStatButtons","disableNextRoundButton","getElementById","syncScoreDisplay","updateRoundCounter","showSelectionPrompt","startTimer","getCardStatValue","getOpponentJudoka","Number","isFinite","handleStatSelection","setTimeout","handleStatSelectionTimeout","updateDebugPanel","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/roundUI.js","node":"applyRoundUI"},"patterns":[],"relations":{"imports":["./uiHelpers.js","../battle/index.js","./uiService.js","./timerService.js","../setupScoreboard.js","./selectionHandler.js","./roundManager.js","./battleEvents.js","./cardStatUtils.js","./cardSelection.js","../showSnackbar.js"],"calls":["log","resetStatButtons","disableNextRoundButton","getElementById","syncScoreDisplay","updateRoundCounter","showSelectionPrompt","startTimer","getCardStatValue","getOpponentJudoka","Number","isFinite","handleStatSelection","setTimeout","handleStatSelectionTimeout","updateDebugPanel"]}},"version":1},
{"id":"roundSelectModal.js-initRoundSelectModal","text":"Initialize round selection modal for Classic Battle.\n\n@param {Function} onStart - Callback to invoke after selecting rounds.\n@returns {Promise<void>} Resolves when modal is initialized.\n1. If the page URL includes `autostart=1`:\n   a. Set `pointsToWin` to the default value.\n   b. Invoke `onStart` and return early.\n2. If test mode is enabled:\n   a. Set `pointsToWin` to the default value.\n   b. Invoke `onStart` and return early.\n3. Attempt to fetch `battleRounds.json` using `fetchJson`.\n   a. On failure, log the error, fall back to default rounds, and note the load error.\n4. Create buttons for each option with `createButton` and assign tooltip ids.\n5. Assemble a modal via `createModal`, append an error note if needed, and attach to the document.\n6. Attempt to initialize tooltips for the modal; log errors but continue.\n7. Open the modal.\n8. When a button is clicked:\n   a. Call `setPointsToWin` with the round value.\n   b. Close and destroy the modal, then invoke the provided start callback.\n\nexport async function initRoundSelectModal(onStart) {\n  // Allow automated test harnesses or debugging to bypass the modal by\n  // supplying `?autostart=1` in the page URL. This is a deliberate, low-risk\n  // convenience that mirrors existing `isTestModeEnabled()` behaviour.\n  try {\n    if (typeof location !== \"undefined\") {\n      const params = new URLSearchParams(location.search);\n      if (params.get(\"autostart\") === \"1\") {\n        setPointsToWin(CLASSIC_BATTLE_POINTS_TO_WIN);\n        if (typeof onStart === \"function\") await onStart();\n        return;\n      }\n    }\n  } catch {}\n\n  if (isTestModeEnabled()) {\n    setPointsToWin(CLASSIC_BATTLE_POINTS_TO_WIN);\n    if (typeof onStart === \"function\") await onStart();\n    return;\n  }\n\n  let rounds;\n  let loadError = false;\n  try {\n    rounds = await fetchJson(`${DATA_DIR}battleRounds.json`);\n  } catch (err) {\n    console.error(\"Failed to load battle rounds:\", err);\n    loadError = true;\n    rounds = [\n      { id: 1, label: \"Quick\", value: 5 },\n      { id: 2, label: \"Medium\", value: 10 },\n      { id: 3, label: \"Long\", value: 15 }\n    ];\n  }\n\n  const title = document.createElement(\"h2\");\n  title.id = \"round-select-title\";\n  title.textContent = \"Select Match Length\";\n\n  const btnWrap = document.createElement(\"div\");\n  btnWrap.className = \"round-select-buttons\";\n\n  const frag = document.createDocumentFragment();\n  if (loadError) {\n    const note = document.createElement(\"p\");\n    note.id = \"round-select-error\";\n    note.textContent = \"Failed to load match options. Using defaults.\";\n    frag.append(note);\n  }\n  frag.append(title, btnWrap);\n\n  const modal = createModal(frag, { labelledBy: title });\n  let cleanupTooltips = () => {};\n  rounds.forEach((r) => {\n    const btn = createButton(r.label, { id: `round-select-${r.id}` });\n    btn.dataset.tooltipId = `ui.round${r.label}`;\n    btn.addEventListener(\"click\", () => {\n      setPointsToWin(r.value);\n      modal.close();\n      if (typeof onStart === \"function\") onStart();\n      cleanupTooltips();\n      modal.destroy();\n    });\n    btnWrap.appendChild(btn);\n  });\n\n  document.body.appendChild(modal.element);\n  try {\n    cleanupTooltips = await initTooltips(modal.element);\n  } catch (err) {\n    console.error(\"Failed to initialize tooltips:\", err);\n  }\n  modal.open();\n  emitBattleEvent(\"roundOptionsReady\");\n}","qaContext":"Why: Initialize round selection modal for Classic Battle. How: json` using `fetchJson`.","embedding":[-0.203,0.026,-0.056,0.133,0.02,0.07,0.042,0.093,0.029,-0.033,0.014,-0.038,0.006,-0.013,0.07,0.033,-0.028,-0.189,-0.011,0.04,0.086,-0.051,0.084,0.038,0.021,-0.032,-0.083,-0.05,-0.025,-0.083,-0.035,0.029,-0.162,-0.072,-0.008,-0.003,-0.034,-0.006,-0.013,-0.048,0.067,0.068,-0.114,-0.077,-0.003,-0.151,-0.11,-0.013,0.027,0.13,-0.046,-0.028,0.076,-0.129,0.11,0.01,-0.022,0.045,0.096,0.02,0.026,-0.158,-0.037,-0.033,0.122,-0.055,0.045,-0.119,0.012,-0.017,0.032,0.037,0.081,0.045,0.019,0.031,-0.097,-0.019,-0.075,-0.1,-0.051,-0.078,0.019,0.045,0.052,0.052,0.042,-0.054,0.106,0.012,-0.117,0.012,-0.113,0.12,0.08,0.119,-0.022,-0.077,0.011,0.083,0.064,-0.018,-0.056,0.076,0.128,-0.045,0.002,-0.066,-0.103,0.013,-0.049,0.047,0.167,-0.025,-0.038,0.031,0.088,-0.04,0.087,-0.006,0.284,-0.022,0.035,-0.092,0.082,0.034,0.069,0,0.177,-0.205,-0.121,0.115,-0.037,0.056,0.02,0.099,-0.118,-0.078,-0.068,0.017,-0.028,-0.116,0.078,-0.086,0.108,-0.008,0.011,-0.006,0.08,-0.062,-0.074,-0.043,0.054,0.145,0.027,0.146,-0.195,0.03,0.057,-0.04,-0.149,0.084,-0.014,0.027,-0.083,0.022,-0.15,-0.105,0.007,-0.058,-0.202,-0.022,-0.108,-0.126,-0.145,0.105,0.056,-0.014,-0.137,0.158,0,-0.159,0.03,0.1,-0.079,-0.056,-0.003,-0.009,0.022,-0.045,-0.085,-0.045,-0.021,0.058,-0.074,-0.069,0.017,-0.111,-0.022,-0.044,0.178,0.056,0.053,-0.08,0.022,0.004,0.023,-0.131,0.172,-0.101,-0.056,0.08,0.069,-0.067,0.089,-0.17,-0.115,0.045,0.001,0.03,-0.011,0.026,-0.109,0,0.071,-0.011,-0.065,0.135,0.093,0.051,0.028,0.011,-0.123,-0.037,0.011,0.052,0.008,-0.033,0.032,0.195,-0.053,-0.112,0.074,0.024,0.071,0.121,-0.069,-0.031,-0.064,0.011,-0.022,0.027,-0.108,-0.04,0.134,0.07,-0.137,0.034,0.141,-0.018,0.079,-0.022,-0.061,0.091,0.155,-0.077,-0.033,-0.014,0.087,-0.066,0.066,0.004,-0.055,0.002,-0.009,-0.111,0.015,0.027,-0.036,-0.052,0.06,-0.061,0.057,0.154,0.018,-0.13,0.055,0.071,0.07,-0.068,-0.064,0.074,0.105,0.156,-0.116,-0.012,0.222,-0.137,0.103,0.013,0.033,-0.148,0.067,-0.039,-0.027,0.055,0.058,-0.092,-0.057,0.104,0.001,0.231,-0.054,0.027,-0.004,-0.067,0.056,0.065,0.046,0,-0.171,0.08,-0.068,0.025,0.012,-0.049,-0.02,-0.059,-0.023,-0.117,-0.015,0.145,0.08,0.054,-0.067,-0.091,-0.037,0.044,-0.072,0.047,-0.009,0.02,0.018,-0.057,0.041,-0.032,-0.046,0.095,0.058,0.078,-0.074,0.077,-0.02,-0.004,-0.127,0.112,0.044,-0.029,0.062,0.126,0.141,0.007,-0.1,-0.064,-0.055,0.044,-0.053,0.036,0.055,-0.106,-0.131,-0.028,-0.024,-0.018,0.097,-0.003,0.083,-0.072,0.103,0.066,0.015,-0.134,-0.016,0.056],"source":"src/helpers/classicBattle/roundSelectModal.js [initRoundSelectModal]","tags":["code","what","function","utility","../dataUtils.js","../constants.js","../../components/Button.js","../../components/Modal.js","../battleEngineFacade.js","../tooltip.js","../testModeUtils.js","./battleEvents.js","get","setPointsToWin","onStart","isTestModeEnabled","fetchJson","error","createElement","createDocumentFragment","append","createModal","forEach","createButton","addEventListener","close","cleanupTooltips","destroy","appendChild","initTooltips","open","emitBattleEvent","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/roundSelectModal.js","node":"initRoundSelectModal"},"patterns":[],"relations":{"imports":["../dataUtils.js","../constants.js","../../components/Button.js","../../components/Modal.js","../battleEngineFacade.js","../tooltip.js","../testModeUtils.js","./battleEvents.js"],"calls":["get","setPointsToWin","onStart","isTestModeEnabled","fetchJson","error","createElement","createDocumentFragment","append","createModal","forEach","createButton","addEventListener","close","cleanupTooltips","destroy","appendChild","initTooltips","open","emitBattleEvent"]}},"version":1},
{"id":"roundResolver.js-evaluateRoundData","text":"Evaluate round data without side effects.\n\n@param {number} playerVal - Player's stat value.\n@param {number} opponentVal - Opponent's stat value.\n@returns {{message: string, matchEnded: boolean, playerScore: number, opponentScore: number, outcome: string, delta: number, playerVal: number, opponentVal: number}}\n1. Call `evaluateRoundApi` with the provided values.\n2. Return the API result augmented with the input values.\n\nexport function evaluateRoundData(playerVal, opponentVal) {\n  const base = evaluateRoundApi(playerVal, opponentVal);\n  return { ...base, playerVal, opponentVal };\n}","qaContext":"Why: Evaluate round data without side effects. How: @param {number} playerVal - Player's stat value.","embedding":[0.039,0.283,-0.198,0.04,-0.04,0.152,0.077,0.132,0.05,0.004,-0.09,-0.128,-0.132,0.159,0.218,0.046,-0.101,0.024,0.068,-0.099,0.065,0.021,-0.114,-0.015,0.056,0.008,-0.002,0.025,0.124,-0.148,0.033,0.129,0.018,0.064,-0.326,0.007,-0.169,-0.062,-0.008,0.117,0.203,0.183,-0.077,-0.152,0.048,-0.235,-0.205,0.084,-0.057,0.194,0.053,-0.022,-0.001,0.062,0.171,-0.001,-0.064,-0.136,0.067,-0.024,-0.016,-0.232,0.073,-0.126,0.009,-0.193,0.035,-0.037,-0.062,0.156,0.188,0.085,0.141,-0.136,0.005,0.043,-0.16,-0.076,0.094,0.151,-0.089,-0.251,-0.114,0.031,0.066,-0.018,0.056,0.01,0.018,0.153,-0.103,0.15,0.05,0.107,-0.002,0.159,-0.109,-0.243,-0.009,0.059,-0.139,0.139,-0.007,-0.096,-0.042,0.023,0.19,-0.083,-0.102,0.053,0.043,0.075,0.165,0.111,-0.133,-0.002,0.041,-0.052,-0.028,-0.042,0.198,-0.068,0.053,0.088,0.091,0.023,0.109,0,-0.012,-0.115,-0.09,-0.003,-0.061,-0.083,-0.047,-0.147,-0.186,-0.018,-0.226,0.288,0.067,-0.1,0.178,-0.032,0.088,0.103,-0.059,-0.011,0.111,-0.008,-0.157,0.017,0.098,0.008,-0.007,0.005,-0.14,-0.038,0.162,-0.004,0.084,0.19,0.195,0.046,0.078,0.17,-0.143,0.112,-0.072,0.05,-0.198,0.053,-0.24,-0.069,0.063,0.044,0.168,-0.062,-0.22,0.169,0.143,-0.055,0.009,-0.064,0.087,0.015,-0.113,0.04,0.003,0.165,0.025,-0.119,-0.32,0.036,-0.154,-0.218,0.062,-0.148,-0.016,0.083,-0.004,0.058,0.021,-0.104,-0.126,0.02,0.079,-0.342,0.204,-0.105,-0.066,0.148,0.184,0.017,-0.148,-0.178,-0.07,0.105,-0.218,-0.022,-0.178,-0.094,-0.098,0,-0.146,0.098,-0.073,0.16,0.013,0.068,0.181,0.093,0.092,0.043,-0.056,0.022,-0.036,-0.152,0.09,0.06,-0.15,-0.017,0.049,-0.252,-0.017,0.024,-0.058,0.007,-0.134,0.114,0.176,-0.179,0.127,0.066,-0.091,-0.143,0.138,-0.031,-0.123,-0.101,0.285,-0.044,0.014,0.076,-0.006,-0.023,-0.139,0.064,-0.007,-0.046,0.116,0.059,-0.02,-0.207,0.063,0.064,-0.096,0.22,-0.16,-0.166,-0.023,-0.128,0.132,0.188,-0.049,-0.125,0.136,0.011,0.049,0.091,-0.072,-0.053,0.048,0.134,0.044,0.116,0.125,0.039,-0.001,-0.009,-0.196,0.037,0.158,0.121,0.059,0.032,0.135,-0.028,0.03,0.035,0.184,0.107,-0.139,0.184,0.005,0.015,-0.073,-0.105,0.067,0,-0.202,-0.197,-0.028,0.234,-0.159,0.053,0.038,-0.13,0.115,-0.068,0.056,0.122,0.123,-0.141,0.129,0.1,-0.038,0.138,-0.109,0.236,-0.039,0.069,-0.205,-0.117,0.132,-0.094,-0.134,0.146,-0.036,-0.187,-0.07,0.077,0.025,0.082,-0.164,-0.011,0.047,0.089,0.149,0.266,-0.08,-0.019,-0.232,0.037,0.072,-0.049,-0.121,-0.096,-0.016,-0.079,0.112,-0.129,-0.17,-0.021,-0.029,-0.106,-0.085,-0.019,-0.119,0.092,0.028,-0.051,0.113,-0.067],"source":"src/helpers/classicBattle/roundResolver.js [evaluateRoundData]","tags":["code","what","function","utility","../api/battleUI.js","./eventDispatcher.js","./battleEvents.js","../battle/battleUI.js","evaluateRoundApi"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/roundResolver.js","node":"evaluateRoundData"},"patterns":[],"relations":{"imports":["../api/battleUI.js","./eventDispatcher.js","./battleEvents.js","../battle/battleUI.js"],"calls":["evaluateRoundApi"]}},"version":1},
{"id":"roundResolver.js-evaluateRound","text":"Evaluate a selected stat and return the outcome data.\nThis function only evaluates and returns outcome data; it does not emit any events.\nEvent emission is handled elsewhere (e.g., in handleStatSelection).\n\n@param {ReturnType<typeof createBattleStore>} store - Battle state store.\n@param {string} stat - Chosen stat key.\n@param {number} playerVal - Player's stat value.\n@param {number} opponentVal - Opponent's stat value.\n@returns {{message: string, matchEnded: boolean, playerScore: number, opponentScore: number, outcome: string, playerVal: number, opponentVal: number}}\n\nexport function evaluateRound(store, stat, playerVal, opponentVal) {\n  return evaluateRoundData(playerVal, opponentVal);\n}","qaContext":"Why: Evaluate a selected stat and return the outcome data. How: This function only evaluates and returns outcome data; it does not emit any events.","embedding":[0.048,0.198,-0.173,0.148,0.01,0.184,0.141,0.041,0.145,0.158,-0.031,-0.218,-0.109,0.143,0.124,0.11,0.039,-0.146,-0.032,-0.083,0.019,-0.064,0.017,-0.086,-0.001,-0.041,-0.022,0.03,0.016,-0.076,0.105,-0.086,-0.032,0.037,-0.045,0.021,0.002,-0.168,-0.05,0.01,0.206,0.101,-0.129,-0.064,0.057,-0.124,-0.07,-0.069,-0.052,0.126,0.052,0.092,0.072,0.027,0.238,0.14,0.001,-0.105,0.017,-0.134,-0.011,-0.271,-0.059,-0.064,-0.001,-0.088,-0.022,0.072,-0.07,-0.002,0.031,0.031,0.108,-0.09,0.012,0.077,-0.139,-0.054,0.105,-0.011,-0.012,-0.16,-0.188,0.082,0.14,0.089,0.001,-0.003,-0.013,0.194,-0.216,0.054,0.116,0.103,-0.11,0.063,-0.078,-0.11,0.133,0.031,-0.065,0.13,-0.061,0.027,-0.064,-0.155,-0.059,0.032,-0.178,0.114,0.043,0.123,0.039,0.092,-0.081,0.197,-0.014,0.023,-0.133,0.075,0.19,0.036,0.027,0.159,0.061,-0.037,0.113,0,0.045,-0.189,-0.181,0.013,-0.017,0.09,-0.008,-0.124,-0.054,0.017,-0.229,0.22,0.019,-0.046,0.179,0.024,-0.103,0.096,-0.045,-0.019,0.074,0.094,-0.062,0.006,0.016,0.002,0.023,0.114,-0.107,0.001,0.153,-0.069,0.036,0.088,0.135,0.018,-0.068,0.026,-0.188,0.048,-0.01,-0.028,-0.245,0.077,-0.246,-0.208,-0.065,-0.005,0.258,-0.013,-0.165,-0.01,0.193,-0.117,0.036,0.031,-0.004,0.026,-0.042,0.014,-0.135,0.109,0.038,-0.001,-0.058,0.108,-0.068,-0.171,0.026,-0.141,0.14,0.034,0.123,-0.013,0.161,-0.024,-0.092,0.089,-0.053,-0.218,0.058,-0.191,-0.161,0.15,0.125,0.121,-0.211,-0.098,-0.032,0.175,-0.068,-0.049,-0.044,-0.08,-0.129,0,-0.076,0.071,-0.036,0.022,-0.032,0.019,0.011,-0.027,-0.088,0.02,-0.076,0.037,0.015,-0.003,0.013,0.027,-0.119,-0.149,0.072,-0.105,-0.036,-0.033,-0.006,-0.044,-0.122,0.103,0.235,-0.173,0.117,-0.047,-0.045,0.046,-0.092,0.124,0.027,-0.141,0.256,-0.085,0.001,0.147,-0.1,0.042,-0.13,-0.002,-0.017,0.144,0.02,0.136,0.231,-0.115,-0.004,0.041,-0.106,0.136,-0.167,-0.155,0.052,-0.205,-0.015,0.174,-0.001,-0.181,0.073,0.082,0.009,0.012,0.034,0.014,0.062,0.043,0.067,-0.061,0.12,-0.186,0.066,0.095,-0.183,-0.022,0.111,0.107,-0.004,0.071,0.125,-0.203,0.111,0.089,0.025,0.064,-0.047,0.039,0.015,0.004,-0.061,-0.156,0.011,0,-0.133,-0.055,0.02,0.063,-0.086,0.021,0.013,-0.149,0.105,-0.093,-0.066,0.039,0.01,-0.118,0.093,-0.082,0.06,0.047,-0.04,0.134,0.044,-0.06,-0.08,-0.028,0.094,0.017,-0.082,0.017,0.093,-0.074,0.141,0.093,0.153,0.019,-0.169,-0.072,0.128,0.003,0.147,0.167,-0.038,-0.01,-0.176,0.144,-0.156,0.036,-0.039,-0.014,0.033,0.093,0.031,-0.248,-0.095,-0.103,-0.059,-0.003,0.069,-0.107,0.06,0.014,0.132,-0.118,-0.051,-0.036],"source":"src/helpers/classicBattle/roundResolver.js [evaluateRound]","tags":["code","what","function","utility","../api/battleUI.js","./eventDispatcher.js","./battleEvents.js","../battle/battleUI.js","evaluateRoundData","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/roundResolver.js","node":"evaluateRound"},"patterns":[],"relations":{"imports":["../api/battleUI.js","./eventDispatcher.js","./battleEvents.js","../battle/battleUI.js"],"calls":["evaluateRoundData"]}},"version":1},
{"id":"roundResolver.js-computeRoundResult","text":"Compute the round result and emit outcome events.\n\n@param {ReturnType<typeof createBattleStore>} store - Battle state store.\n@param {string} stat - Chosen stat key.\n@param {number} playerVal - Player's stat value.\n@param {number} opponentVal - Opponent's stat value.\n@returns {Promise<ReturnType<typeof evaluateRound>>}\n1. Call `evaluateRound` to obtain the round outcome.\n2. Dispatch an outcome event based on the result.\n3. Dispatch `matchPointReached` or `continue` depending on `matchEnded`.\n4. Emit `roundResolved` with round data and clear `store.playerChoice`.\n\nexport async function computeRoundResult(store, stat, playerVal, opponentVal) {\n  try {\n    console.log(\"DEBUG: computeRoundResult start\", { stat, playerVal, opponentVal });\n  } catch {}\n  // Coerce values to finite numbers to avoid NaN blocking outcome computation.\n  const pVal = Number.isFinite(Number(playerVal)) ? Number(playerVal) : 0;\n  const oVal = Number.isFinite(Number(opponentVal)) ? Number(opponentVal) : 0;\n  const result = evaluateRound(store, stat, pVal, oVal);\n  try {\n    console.log(\"DEBUG: evaluateRound result\", result);\n  } catch {}\n  const outcomeEvent =\n    result.outcome === \"winPlayer\"\n      ? \"outcome=winPlayer\"\n      : result.outcome === \"winOpponent\"\n        ? \"outcome=winOpponent\"\n        : \"outcome=draw\";\n  // Only dispatch outcome/continue when machine is in roundDecision. Late\n  // completions from an earlier resolve can occur in a different state.\n  try {\n    const state =\n      typeof document !== \"undefined\" && document.body && document.body.dataset\n        ? document.body.dataset.battleState || null\n        : null;\n    try {\n      console.log(\"DEBUG: dispatching outcomeEvent\", outcomeEvent);\n    } catch {}\n    await dispatchBattleEvent(outcomeEvent);\n    try {\n      console.log(\"DEBUG: dispatched outcomeEvent\", outcomeEvent);\n    } catch {}\n    if (result.matchEnded) {\n      await dispatchBattleEvent(\"matchPointReached\");\n    } else {\n      await dispatchBattleEvent(\"continue\");\n    }\n  } catch {}\n  resetStatButtons();\n  emitBattleEvent(\"roundResolved\", {\n    store,\n    stat,\n    playerVal,\n    opponentVal,\n    result\n  });\n  store.playerChoice = null;\n  return result;\n}","qaContext":"Why: Compute the round result and emit outcome events. How: @param {ReturnType<typeof createBattleStore>} store - Battle state store.","embedding":[-0.042,0.063,-0.024,0.129,-0.03,0.043,0.04,0.11,0.122,0.084,-0.047,-0.187,-0.123,0.004,0.04,-0.045,-0.004,-0.075,-0.086,-0.055,0.146,-0.028,0.014,-0.058,-0.048,-0.04,-0.064,-0.153,0.004,-0.078,0.048,-0.062,-0.095,0.032,-0.086,-0.014,-0.097,-0.083,-0.103,-0.104,0.102,0.161,-0.026,-0.064,0.122,-0.158,-0.194,-0.016,0.012,0.026,0.028,0.11,-0.019,0.142,0.164,0.032,0.092,0.038,0.035,-0.036,-0.048,-0.237,-0.031,-0.131,0.09,-0.03,0.072,-0.015,-0.019,0.142,-0.01,0.044,0.041,-0.043,-0.07,0.031,-0.041,-0.061,-0.023,0.026,-0.071,-0.15,-0.151,0.049,0.112,0.012,0.036,-0.01,0.075,-0.02,-0.224,0.157,-0.008,0.165,0.095,0.211,0.077,-0.009,0.084,0.037,0.038,0.035,-0.11,-0.021,0.064,-0.08,0.037,-0.066,-0.126,0.034,0.064,0.074,0.092,0.143,-0.004,0.082,0.061,0.022,-0.019,-0.006,0.159,0.078,0.064,-0.047,0.13,-0.148,0.164,0,-0.031,-0.236,-0.144,-0.017,0.085,0.091,0.123,0.046,-0.029,0.012,-0.176,0.046,-0.037,-0.199,0.099,-0.062,0.086,0.062,-0.009,0.065,0.182,-0.115,-0.1,0.008,0.083,-0.036,-0.087,0.038,-0.122,-0.032,0.12,0.025,-0.03,0.064,0.081,-0.11,0.043,0.085,-0.149,-0.027,-0.127,0.01,-0.22,0.071,-0.21,-0.272,-0.005,-0.058,0.102,0.012,-0.029,0.08,0.101,-0.212,0.119,-0.001,0.067,-0.012,-0.033,0.078,-0.037,-0.036,-0.086,-0.072,-0.098,0.084,-0.147,-0.183,0.014,-0.154,0.044,-0.053,0.158,-0.02,0.074,-0.039,-0.058,0.045,-0.13,-0.238,0.112,-0.091,-0.252,0.179,0.079,0.182,-0.069,-0.086,-0.113,0.096,-0.113,-0.039,0.079,-0.025,-0.098,0,-0.045,0.054,-0.091,0.117,0.086,0.092,0.065,-0.036,-0.008,-0.165,-0.008,0.055,0.019,0.031,-0.044,0.1,-0.003,-0.087,0.001,0.018,0.089,0.018,-0.041,0.012,-0.089,0.145,0.101,-0.009,0.004,-0.053,0.023,-0.081,-0.15,-0.014,0.109,-0.159,0.226,0.019,-0.125,0.067,0.123,-0.079,-0.071,0.099,0.012,-0.021,0.097,0.094,0.106,-0.007,0.105,-0.037,-0.098,0.144,-0.092,-0.06,0.069,-0.151,0.071,0.103,-0.076,-0.152,0.12,0.062,0.143,0.114,-0.146,0.005,0.214,0.187,-0.036,0.099,0.13,-0.076,0.1,0.061,-0.093,-0.135,0.223,0.175,-0.043,0.137,0.071,-0.115,-0.004,0.122,-0.04,0.089,-0.024,0.042,-0.069,-0.01,-0.045,-0.113,-0.052,0,-0.101,-0.071,0.005,0.075,0.001,0.062,-0.032,-0.184,0.057,-0.151,0.033,0.093,0.16,-0.07,0.005,-0.124,0.117,-0.006,-0.104,0.044,0.032,-0.037,-0.127,-0.017,0.038,0.047,0.093,0.164,-0.005,-0.07,-0.107,0.035,0.106,0.059,-0.039,-0.006,0.165,0.025,0.134,0.138,0.085,0.067,-0.025,0.061,-0.016,0.014,-0.014,0.034,0.161,0.065,-0.087,-0.183,-0.162,0.064,0.005,-0.102,0.007,-0.182,-0.015,0.129,0.119,-0.151,-0.097,0.031],"source":"src/helpers/classicBattle/roundResolver.js [computeRoundResult]","tags":["code","what","function","utility","../api/battleUI.js","./eventDispatcher.js","./battleEvents.js","../battle/battleUI.js","evaluateRound","dispatchBattleEvent","resetStatButtons","emitBattleEvent","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/roundResolver.js","node":"computeRoundResult"},"patterns":[],"relations":{"imports":["../api/battleUI.js","./eventDispatcher.js","./battleEvents.js","../battle/battleUI.js"],"calls":["evaluateRound","dispatchBattleEvent","resetStatButtons","emitBattleEvent"]}},"version":1},
{"id":"roundResolver.js-resolveRound","text":"Resolves the round after a stat has been selected.\n\n@param {ReturnType<typeof createBattleStore>} store - Battle state store.\n@param {string} stat - Chosen stat key.\n@param {number} playerVal - Player's stat value.\n@param {number} opponentVal - Opponent's stat value.\n@param {{delayMs?: number, sleep?: (ms: number) => Promise<void>}} [opts]\n- Optional overrides for testing.\n@returns {Promise<ReturnType<typeof evaluateRound>>}\n1. If no stat is provided, return immediately.\n2. Dispatch an \"evaluate\" event unless already in the \"roundDecision\" state.\n3. Wait for a randomized delay.\n4. Emit \"opponentReveal\".\n5. Evaluate the round via `computeRoundResult` which also emits outcome events.\n6. Return the evaluation result.\n\nexport async function resolveRound(\n  store,\n  stat,\n  playerVal,\n  opponentVal,\n  {\n    delayMs = 300 + Math.floor(Math.random() * 401),\n    sleep = (ms) => new Promise((r) => setTimeout(r, ms))\n  } = {}\n) {\n  if (!stat) return;\n  // Avoid re-entrant dispatch loops: when called from the state machine's\n  // roundDecision onEnter, the machine is already in \"roundDecision\" and will\n  // run this resolver. Dispatching an additional \"evaluate\" event here would\n  // attempt to re-enter the same state and invoke this function again, causing\n  // a deadlock. Only dispatch \"evaluate\" when not already in that state.\n  try {\n    const inRoundDecision =\n      typeof document !== \"undefined\" && document.body?.dataset.battleState === \"roundDecision\";\n    if (!inRoundDecision) {\n      await dispatchBattleEvent(\"evaluate\");\n    }\n  } catch {}\n  try {\n    console.log(\"DEBUG: resolveRound sleep\", { delayMs, stat });\n  } catch {}\n  // Clear any scheduled guard to avoid duplicate resolution.\n  try {\n    if (typeof window !== \"undefined\" && window.__roundDecisionGuard) {\n      clearTimeout(window.__roundDecisionGuard);\n      window.__roundDecisionGuard = null;\n    }\n    if (typeof window !== \"undefined\") window.__roundDebug = { resolving: true };\n  } catch {}\n  await sleep(delayMs);\n  try {\n    console.log(\"DEBUG: resolveRound before opponentReveal\", { stat });\n  } catch {}\n  emitBattleEvent(\"opponentReveal\");\n  const result = await computeRoundResult(store, stat, playerVal, opponentVal);\n  try {\n    if (typeof window !== \"undefined\" && window.__roundDebug) {\n      window.__roundDebug.resolvedAt = Date.now();\n    }\n  } catch {}\n  try {\n    console.log(\"DEBUG: resolveRound result\", result);\n  } catch {}\n  return result;\n}","qaContext":"Why: Resolves the round after a stat has been selected. How: Evaluate the round via `computeRoundResult` which also emits outcome events.","embedding":[-0.144,0.132,-0.051,0.153,-0.002,0.039,0.013,0.07,0.147,0.062,-0.052,-0.082,-0.11,-0.024,0.045,-0.048,-0.02,-0.067,-0.051,0.014,0.113,-0.039,0.067,-0.004,-0.099,-0.111,-0.062,-0.142,-0.005,-0.079,0.003,0.012,-0.126,-0.009,-0.037,0.062,-0.081,-0.053,-0.059,-0.067,0.132,0.145,-0.087,-0.05,0.072,-0.131,-0.15,0.003,-0.073,0.067,-0.075,0.066,-0.085,0.06,0.175,0.033,0.097,0.069,0.002,0.032,-0.021,-0.191,-0.002,-0.066,0.132,0.082,0.069,-0.054,0.007,0.109,0.053,0.082,0.051,-0.024,-0.031,0.022,-0.111,-0.054,0.011,0.023,-0.027,-0.089,-0.103,-0.021,0.088,-0.009,0.102,-0.043,0.101,-0.007,-0.112,0.068,-0.045,0.111,0.049,0.149,0.03,0.025,0.041,-0.023,0.068,-0.003,0.024,0.011,0.091,-0.055,0.021,-0.103,-0.115,-0.001,0.071,0.05,0.096,0.127,-0.048,0.131,0.073,0.003,0.027,0.026,0.207,0.049,0.113,-0.127,0.148,0.001,0.133,0,-0.033,-0.257,-0.185,-0.026,0.041,0.008,0.123,0.05,-0.057,-0.009,-0.102,0.009,0.006,-0.181,0.026,-0.061,0.134,0.085,-0.041,0.067,0.229,-0.049,-0.051,0.032,0.065,-0.024,-0.026,0.038,-0.095,-0.018,0.118,0.045,-0.046,0.098,0.055,-0.086,0.032,0.054,-0.135,-0.055,-0.153,0.017,-0.207,0.066,-0.125,-0.272,-0.118,-0.005,0.099,0.066,-0.038,0.111,0.069,-0.154,0.027,0.02,0.049,-0.036,-0.057,0.091,-0.016,-0.076,-0.135,-0.038,-0.061,0.032,-0.12,-0.137,-0.015,-0.143,0.06,-0.04,0.093,-0.01,0.049,-0.045,-0.015,0.081,-0.127,-0.215,0.191,-0.052,-0.158,0.172,0.032,0.078,-0.091,-0.07,-0.081,0.093,-0.046,-0.031,0.048,-0.001,-0.064,0,0.005,-0.057,-0.042,0.15,0.114,0.105,0.016,0.008,-0.087,-0.217,-0.051,0.105,-0.022,0.035,-0.018,0.089,0.033,-0.086,0.012,0.098,0.142,-0.024,-0.053,0.038,-0.079,0.125,0.011,0.007,0.013,-0.024,-0.023,-0.029,-0.098,-0.035,0.108,-0.134,0.17,-0.004,-0.085,0.123,0.175,-0.03,-0.047,0.014,0.02,0.022,0.056,0.015,0.019,-0.019,-0.012,-0.056,-0.027,0.088,-0.096,-0.058,0.018,-0.125,0.008,0.158,0.067,-0.116,0.096,-0.024,0.089,0.088,-0.13,-0.059,0.157,0.184,0.035,0.069,0.004,-0.061,0.032,-0.022,-0.09,-0.169,0.125,0.13,0.002,0.085,0.034,-0.133,-0.04,0.133,0.011,0.076,0.006,0.044,-0.081,-0.015,-0.131,-0.048,-0.082,0,-0.008,-0.012,0.008,0.097,0.028,-0.024,-0.018,-0.134,0.025,-0.082,0.105,0.051,0.108,-0.073,0.009,-0.137,0.032,-0.027,-0.114,0.009,0.014,-0.027,-0.024,-0.024,0.001,0.04,0.115,0.084,0.035,-0.051,-0.155,0.029,0.036,0.035,-0.083,0.006,0.143,0.018,0.178,0.106,0.043,0.041,-0.063,0.054,-0.017,-0.019,-0.055,0.002,0.103,0.013,-0.085,-0.142,-0.159,0.099,0.031,-0.016,0.114,-0.176,-0.031,0.089,0.06,-0.194,-0.023,0.042],"source":"src/helpers/classicBattle/roundResolver.js [resolveRound]","tags":["code","what","function","utility","../api/battleUI.js","./eventDispatcher.js","./battleEvents.js","../battle/battleUI.js","dispatchBattleEvent","sleep","emitBattleEvent","computeRoundResult","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/roundResolver.js","node":"resolveRound"},"patterns":[],"relations":{"imports":["../api/battleUI.js","./eventDispatcher.js","./battleEvents.js","../battle/battleUI.js"],"calls":["dispatchBattleEvent","sleep","emitBattleEvent","computeRoundResult"]}},"version":1},
{"id":"roundManager.js-createBattleStore","text":"Create a new battle state store.\n\n@returns {{quitModal: ReturnType<import(\"../../components/Modal.js\").createModal>|null, statTimeoutId: ReturnType<typeof setTimeout>|null, autoSelectId: ReturnType<typeof setTimeout>|null, compareRaf: number, selectionMade: boolean, stallTimeoutMs: number, playerChoice: string|null}}\n1. Initialize battle state values.\n2. Return the store.\n\nexport function createBattleStore() {\n  return {\n    quitModal: null,\n    statTimeoutId: null,\n    autoSelectId: null,\n    compareRaf: 0,\n    selectionMade: false,\n    stallTimeoutMs: 35000,\n    playerChoice: null\n  };\n}","qaContext":"Why: Create a new battle state store. How: @returns {{quitModal: ReturnType<import(\".","embedding":[-0.078,0.082,-0.062,0.069,-0.112,0.235,-0.013,0.068,0.059,-0.001,0.013,-0.093,-0.091,0.034,0.068,0.073,-0.014,-0.133,0,-0.006,0.133,-0.044,0.066,0.023,0.051,0.05,-0.004,0.035,0.034,-0.11,0.053,0.046,-0.03,-0.081,0.087,-0.036,-0.082,0.021,-0.028,-0.108,0.077,0.115,-0.089,-0.056,-0.081,-0.092,-0.07,-0.02,0.108,0.142,-0.12,0.082,0.158,-0.127,0.124,0.086,0.141,0.071,0.028,0.067,-0.003,-0.106,-0.063,-0.091,0.154,0,0.074,-0.048,-0.085,-0.041,-0.018,0.104,0.154,0.006,-0.061,-0.037,-0.078,-0.049,0.108,0.064,-0.008,-0.16,-0.096,-0.039,0.048,0.026,0.177,-0.024,0.026,-0.03,-0.246,0.092,0.073,0.103,-0.05,0.15,-0.012,-0.036,0.062,0.032,0.109,-0.01,-0.015,0.101,-0.014,-0.182,0.026,0.022,-0.138,0.086,0.028,0.214,0.086,0.084,-0.027,0.192,0.039,0.041,0.1,-0.079,0.221,0.031,-0.009,-0.117,0.032,0.029,0.154,0,0.031,-0.199,-0.141,0.15,-0.016,0.059,-0.022,-0.001,-0.051,-0.036,-0.148,0.053,-0.071,0.042,0.001,-0.176,-0.009,-0.041,0.083,-0.08,0.095,-0.015,0.001,0.015,0.01,0.022,0.007,0.065,-0.134,-0.009,0.096,-0.056,-0.093,0.047,0.16,-0.032,-0.059,0.068,-0.163,-0.054,-0.08,-0.076,-0.327,0.09,-0.144,-0.238,-0.03,-0.074,-0.012,0.035,-0.17,0.131,-0.008,-0.197,0.024,-0.085,0.03,-0.058,-0.002,-0.087,-0.031,0.102,0.022,-0.007,-0.115,0.129,-0.062,-0.097,-0.005,-0.146,0.056,-0.039,0.105,-0.056,0.005,-0.105,0.069,0.072,0.018,-0.196,0.154,-0.184,-0.129,0.17,0.107,-0.17,-0.043,-0.105,0.008,0.053,-0.116,-0.059,0.067,-0.029,0.06,0,0.083,-0.049,0.016,0.115,0.052,-0.018,0.003,0.188,-0.051,-0.025,-0.032,0.12,0.035,-0.064,-0.042,0.089,0.107,-0.114,0.144,-0.032,0.053,0.055,-0.096,0.025,-0.064,0.017,0.008,-0.103,0.028,-0.077,0.093,-0.035,-0.032,0.063,0.015,-0.006,0.097,-0.031,-0.062,0.119,-0.062,-0.022,-0.077,-0.029,-0.002,0.03,0.079,-0.053,0.054,0.006,-0.005,-0.058,-0.063,-0.11,-0.037,-0.147,-0.038,-0.15,0.093,0.162,-0.017,-0.151,0.019,-0.003,0.033,-0.014,-0.041,0.099,0.105,0.072,0,-0.006,0.238,-0.081,0.025,0.046,-0.131,0.034,0.166,-0.008,0.038,0.064,0.069,-0.224,-0.029,0.135,-0.1,0.159,0.109,0.017,0.039,0.014,0.05,-0.029,0.083,0,-0.052,-0.023,0.035,-0.027,-0.065,-0.086,0.03,-0.081,0.116,-0.082,0.101,0.092,0.029,-0.049,-0.136,-0.006,-0.082,0.081,0.021,0.119,-0.001,-0.097,0.095,0.011,0.013,-0.064,-0.072,-0.061,0.081,-0.002,-0.006,0.133,0.042,-0.096,-0.197,0.022,0.103,-0.025,0.116,0,-0.045,-0.058,-0.228,0.009,-0.08,0.054,-0.076,-0.009,-0.01,-0.039,-0.032,-0.097,-0.061,-0.014,0.094,0.024,0.055,0.041,0.132,-0.073,-0.059,-0.132,-0.061,-0.025],"source":"src/helpers/classicBattle/roundManager.js [createBattleStore]","tags":["code","what","function","utility","./cardSelection.js","../battleEngineFacade.js","../../utils/scheduler.js","./skipHandler.js","./battleEvents.js","factory","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/roundManager.js","node":"createBattleStore"},"patterns":["factory"],"relations":{"imports":["./cardSelection.js","../battleEngineFacade.js","../../utils/scheduler.js","./skipHandler.js","./battleEvents.js"],"calls":[]}},"version":1},
{"id":"roundManager.js-handleReplay","text":"Reset match state and start a new game.\n\n@param {ReturnType<typeof createBattleStore>} store - Battle state store.\n1. Reset engine scores and flags.\n2. Close any open modals and clear the scoreboard message.\n3. Call the start round function to begin a new match.\n\nexport async function handleReplay(store) {\n  resetEngineForTest();\n  window.dispatchEvent(new CustomEvent(\"game:reset-ui\", { detail: { store } }));\n  const startRoundFn = getStartRound(store);\n  return startRoundFn();\n}","qaContext":"Why: Reset match state and start a new game. How: @param {ReturnType<typeof createBattleStore>} store - Battle state store.","embedding":[-0.068,0.092,-0.085,0.077,-0.071,0.237,0.027,0.045,-0.051,0.012,-0.037,-0.088,-0.132,0.044,0.023,-0.036,-0.06,-0.031,0.068,-0.019,-0.017,-0.077,0,-0.017,-0.015,0.011,-0.085,0.032,-0.012,-0.099,0.184,0,-0.057,0.013,0.135,0.074,-0.102,-0.061,0.053,-0.078,0.179,0.048,-0.163,0.039,0.066,0.036,-0.108,0.039,0.115,0.099,0.094,-0.018,-0.023,-0.219,0.196,0.178,0.172,0.136,-0.018,0.047,0.033,-0.181,-0.032,-0.024,0.146,-0.016,0.034,-0.028,-0.055,-0.11,0.057,0.095,0.18,-0.018,-0.189,0.022,-0.253,-0.052,-0.019,0.208,-0.055,-0.227,-0.062,0.003,0.061,0.073,0.078,-0.1,0.2,0.095,-0.252,0.07,0.121,0.142,-0.117,0.145,-0.034,-0.014,0.155,0.074,0.047,0.166,0.096,0.078,-0.067,-0.005,-0.126,0.113,-0.218,-0.013,-0.023,0.1,0.188,0.119,-0.038,0.145,0.011,0.052,-0.041,-0.003,0.168,0.035,-0.065,-0.158,-0.065,0.196,0.141,0,0.036,-0.161,-0.2,0.097,0.043,0.034,-0.013,0.032,-0.173,0.015,-0.012,0.125,-0.116,-0.1,0.011,-0.126,0.004,0.04,-0.037,-0.095,0.064,0.071,-0.013,-0.086,-0.011,-0.013,0.012,0.001,-0.008,-0.06,0.108,-0.106,-0.053,0.111,-0.012,-0.061,0.03,0.004,-0.171,-0.096,-0.108,0.034,-0.273,0.016,-0.088,-0.163,-0.155,-0.049,0.118,0.019,-0.226,0.129,-0.026,-0.246,-0.079,-0.089,-0.087,-0.132,-0.097,-0.158,-0.006,0.052,-0.061,0.006,-0.042,0.132,-0.031,-0.125,-0.139,-0.154,0.079,0.017,0.15,-0.072,0.138,-0.001,0.026,0.062,-0.14,-0.338,0.249,-0.088,-0.168,0.221,0.111,0.026,-0.014,-0.003,-0.023,0.099,-0.097,-0.043,0.132,0.014,0.016,0,0.096,-0.081,-0.155,-0.008,0.018,0.055,0.097,0.135,-0.095,0.018,-0.071,0.123,0.096,0.041,-0.168,0.098,0.095,0.092,-0.026,0.036,0.147,-0.066,-0.175,0.05,-0.036,0.029,0.135,-0.087,-0.081,-0.014,0.201,-0.084,0.065,0.156,0.059,-0.071,0.088,-0.202,-0.045,0.139,-0.006,0.021,-0.191,0.02,0.05,0.064,-0.014,-0.046,0.072,-0.076,-0.154,-0.034,0.025,-0.317,-0.087,-0.022,0.044,-0.105,-0.067,0.039,0.094,-0.11,-0.018,0.067,0.035,-0.047,-0.048,0.147,0.058,0.047,-0.068,0.128,0.11,-0.095,0.042,-0.051,0.004,0.014,0.069,0.106,0.028,0.06,0.1,-0.232,0.108,0.162,-0.081,0.168,0.053,0.077,-0.167,0.118,0.192,-0.066,-0.083,0,-0.202,-0.164,0.047,0.175,0.017,0.026,0.017,0.024,0.022,-0.244,-0.047,0.145,-0.032,-0.076,-0.074,-0.067,-0.009,0.086,0.036,0.128,0.002,0.075,0.089,-0.02,-0.006,-0.006,0.081,0.032,0.095,0.043,0.091,0.055,0.156,-0.022,-0.17,0.033,0.155,0.075,0.118,0.031,0.028,0.014,-0.146,0.031,-0.189,0.024,-0.054,-0.022,0.098,-0.037,-0.103,-0.026,-0.197,0.019,0.071,-0.003,0.014,-0.092,0.002,0.034,0.031,-0.065,-0.034,0.044],"source":"src/helpers/classicBattle/roundManager.js [handleReplay]","tags":["code","what","function","utility","./cardSelection.js","../battleEngineFacade.js","../../utils/scheduler.js","./skipHandler.js","./battleEvents.js","resetEngineForTest","dispatchEvent","getStartRound","startRoundFn","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/roundManager.js","node":"handleReplay"},"patterns":[],"relations":{"imports":["./cardSelection.js","../battleEngineFacade.js","../../utils/scheduler.js","./skipHandler.js","./battleEvents.js"],"calls":["resetEngineForTest","dispatchEvent","getStartRound","startRoundFn"]}},"version":1},
{"id":"roundManager.js-startRound","text":"Start a new round by drawing cards and starting timers.\n\n@param {ReturnType<typeof createBattleStore>} store - Battle state store.\n1. Reset selection flags on the store and clear any previous player choice.\n2. Draw player and opponent cards.\n3. Compute the current round number via `battleEngine.getRoundsPlayed() + 1`.\n4. Dispatch a `roundStarted` event with the store and round number.\n5. Return the drawn cards and round number.\n\nexport async function startRound(store) {\n  store.selectionMade = false;\n  store.playerChoice = null;\n  const cards = await drawCards();\n  const roundNumber = battleEngine.getRoundsPlayed() + 1;\n  emitBattleEvent(\"roundStarted\", { store, roundNumber });\n  return { ...cards, roundNumber };\n}","qaContext":"Why: Start a new round by drawing cards and starting timers. How: Compute the current round number via `battleEngine.","embedding":[0.012,0.088,-0.173,0.109,-0.118,0.243,0.144,0.073,0.128,-0.003,-0.121,-0.217,-0.293,0.043,0.11,-0.081,-0.073,-0.094,0.118,-0.006,-0.062,-0.153,0.053,-0.009,0.064,-0.009,-0.021,-0.074,0.07,-0.112,0.12,0.134,-0.038,-0.062,-0.059,-0.134,-0.109,0.024,0.019,0.024,0.145,0.091,-0.147,-0.024,-0.049,-0.038,-0.246,0.161,0.044,0.215,0.112,0.005,-0.026,-0.145,0.165,0.016,0.204,-0.008,-0.013,0.01,0.011,-0.277,-0.041,-0.067,-0.087,-0.006,0.088,-0.007,0.063,-0.033,0.131,0.198,0.144,-0.06,-0.069,0.004,-0.145,0.044,0.088,0.038,-0.13,-0.146,-0.031,-0.021,0.098,-0.005,0.174,0.006,0.066,-0.039,-0.216,0.326,0.023,0.113,-0.063,0.157,0.006,-0.017,0.06,0.05,0.066,0.039,0.007,0.109,-0.033,-0.096,-0.031,0.018,-0.145,-0.04,-0.005,0.057,0.163,0.117,-0.121,0.23,0.007,0.003,-0.025,0.108,0.173,0.114,-0.006,-0.102,-0.068,0.054,0.189,0,-0.037,-0.284,-0.116,0.118,0.038,-0.003,0.061,0.024,-0.035,-0.074,-0.022,0.057,-0.026,-0.015,0.074,-0.168,-0.022,0.066,0.081,-0.068,0.056,-0.042,-0.025,-0.038,0.037,0.141,-0.033,-0.042,-0.034,0.011,0.225,-0.064,-0.108,0.106,0.05,0.045,0.02,0.102,-0.061,0.018,-0.064,-0.024,-0.214,-0.062,-0.31,-0.174,-0.054,-0.037,0.011,0.114,-0.146,0.046,0,-0.172,0.088,-0.108,-0.062,-0.069,-0.13,-0.051,0.076,0.123,-0.101,0.06,-0.185,0.106,-0.094,-0.251,-0.09,-0.175,0.157,-0.032,0.169,-0.107,0.014,0.016,0.053,0.15,-0.173,-0.168,0.146,-0.085,-0.18,0.031,0.04,0.056,0.025,-0.064,0.018,0.091,-0.075,-0.02,0.221,0.015,-0.078,0,-0.058,0.028,-0.036,0.11,0.098,0.112,0.045,0.077,0.001,-0.052,-0.067,0.231,-0.127,-0.005,0.031,-0.097,0.174,-0.025,0.021,-0.056,0.146,-0.1,-0.219,0.006,-0.041,0.109,0.135,-0.142,0.026,-0.13,0.074,-0.167,0.001,0.161,0.101,-0.143,0.187,0.088,-0.044,0.089,-0.056,-0.089,-0.116,-0.024,0.005,0.026,-0.014,0.147,0.082,-0.058,-0.148,-0.062,-0.072,-0.054,-0.18,0.032,0.079,-0.16,0.236,0.094,-0.034,-0.155,0.103,-0.046,0.054,0.046,-0.168,0.112,0.09,0.062,-0.111,0.24,0.136,-0.084,-0.046,0.032,0.006,-0.024,0.243,-0.079,-0.011,0.021,0.027,-0.187,-0.022,0.195,-0.004,0.007,0.101,-0.001,-0.101,0.02,0.144,-0.103,-0.049,0,-0.112,-0.144,0.026,0.174,0.091,-0.018,0.059,-0.03,0.112,-0.142,0.053,0.106,0.205,-0.199,-0.015,-0.058,0.01,-0.011,0.02,0.123,0.057,-0.031,0.126,-0.052,-0.004,-0.011,0.068,0.083,0.137,0.028,-0.029,0.179,0.149,0.113,-0.064,-0.128,-0.009,0.016,0.138,0.145,-0.031,-0.082,-0.179,-0.037,-0.135,-0.062,-0.104,-0.069,0.052,0.072,-0.122,-0.048,-0.036,0.029,0.029,0.007,0.051,-0.186,0.021,0.104,-0.085,-0.049,-0.12,0.104],"source":"src/helpers/classicBattle/roundManager.js [startRound]","tags":["code","what","function","utility","./cardSelection.js","../battleEngineFacade.js","../../utils/scheduler.js","./skipHandler.js","./battleEvents.js","drawCards","getRoundsPlayed","emitBattleEvent","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/roundManager.js","node":"startRound"},"patterns":[],"relations":{"imports":["./cardSelection.js","../battleEngineFacade.js","../../utils/scheduler.js","./skipHandler.js","./battleEvents.js"],"calls":["drawCards","getRoundsPlayed","emitBattleEvent"]}},"version":1},
{"id":"roundManager.js-_resetForTest","text":"Reset internal state for tests.\n\nClears timers, selection flags, and any previous player choice.\n\n@param {ReturnType<typeof createBattleStore>} store - Battle state store.\n\nexport function _resetForTest(store) {\n  resetSkipState();\n  resetSelection();\n  battleEngine._resetForTest();\n  stopScheduler();\n  if (typeof window !== \"undefined\") {\n    delete window.startRoundOverride;\n  }\n  if (store && typeof store === \"object\") {\n    try {\n      clearTimeout(store.statTimeoutId);\n      clearTimeout(store.autoSelectId);\n    } catch {}\n    store.statTimeoutId = null;\n    store.autoSelectId = null;\n    store.selectionMade = false;\n    // Reset any prior player stat selection\n    store.playerChoice = null;\n    try {\n      cancelFrame(store.compareRaf);\n    } catch {}\n    store.compareRaf = 0;\n    try {\n      window.dispatchEvent(new CustomEvent(\"game:reset-ui\", { detail: { store } }));\n    } catch {}\n  } else {\n    // Best-effort notify UI without a concrete store instance\n    try {\n      window.dispatchEvent(new CustomEvent(\"game:reset-ui\", { detail: { store: null } }));\n    } catch {}\n  }\n}","qaContext":"Why: Reset internal state for tests. How: Clears timers, selection flags, and any previous player choice.","embedding":[-0.085,0.067,-0.004,0.122,-0.021,0.156,0.152,-0.021,0.051,0.054,0,-0.168,-0.117,0.059,-0.076,-0.046,0.028,-0.004,-0.022,-0.012,-0.031,-0.05,0.034,0.077,-0.084,-0.067,0.008,-0.048,-0.08,-0.05,0.046,-0.015,-0.085,-0.101,0.057,-0.046,-0.136,-0.04,0.048,-0.046,0.041,0.037,-0.182,0.016,-0.014,0.048,-0.129,0.026,0.011,0.096,0.092,0.062,0.043,-0.121,0.146,0.156,0.192,0.145,-0.074,0.158,0.043,-0.173,-0.054,-0.046,0.116,0.12,0.065,-0.018,-0.038,-0.05,0.032,0.127,0.166,-0.046,-0.039,0.008,-0.165,-0.084,0.009,0.114,-0.012,-0.157,-0.1,-0.12,0.129,0.045,0.151,-0.021,0.153,0.033,-0.134,0.094,0.047,0.108,0.03,0.098,0.028,0.087,0.037,0.038,0.133,-0.007,0.024,0.109,-0.06,-0.103,-0.087,0.083,-0.168,0.071,-0.066,0.064,0.071,0.124,-0.057,0.232,0.061,0.13,-0.061,-0.008,0.149,0.051,0.013,-0.141,0.027,0.182,0.211,0,-0.048,-0.206,-0.25,0.07,0.042,0.043,0.006,0.106,-0.008,-0.025,0.002,0.017,-0.051,-0.058,0.053,0.004,-0.027,0.036,0.063,-0.12,0.21,0.035,-0.088,-0.097,-0.062,0.036,-0.061,-0.011,-0.068,-0.034,0.02,-0.01,-0.058,0.116,-0.015,0.011,-0.057,0.012,-0.09,-0.116,-0.038,0.022,-0.183,0.081,-0.043,-0.334,-0.105,-0.089,0.003,-0.004,-0.075,0.099,-0.014,-0.226,-0.063,-0.014,0.006,-0.043,-0.141,-0.03,0.037,0.009,-0.038,0.016,-0.062,0.174,-0.024,-0.083,-0.028,-0.204,0.061,-0.014,0.146,-0.082,-0.014,-0.079,0.109,0.048,-0.095,-0.245,0.267,-0.167,-0.118,0.147,0.059,-0.032,0.025,0.062,-0.053,0.126,-0.054,0.038,0.083,0.015,0.031,0,0.11,-0.049,-0.076,0.011,0.018,0.023,0.012,0.177,-0.099,-0.182,-0.042,0.11,0.106,0.123,-0.15,0.07,0.072,-0.056,-0.142,0.107,0.112,-0.08,-0.071,-0.069,-0.127,0.016,0.008,-0.034,0.035,-0.024,0.217,-0.027,-0.032,0.043,0.181,-0.107,0.071,-0.039,-0.159,0.198,0.069,0.046,-0.145,-0.013,-0.014,0.199,0.007,0.004,0.07,-0.003,-0.18,-0.112,-0.01,-0.11,-0.104,-0.011,0.036,-0.217,0.04,0.039,0.05,-0.068,-0.031,0.048,0.024,-0.009,-0.025,0.154,0.103,0.028,-0.018,0.127,0.022,-0.182,0.059,0.044,-0.043,0.013,0.054,-0.049,0.035,0.012,0.038,-0.263,-0.038,0.11,-0.129,0.116,0.034,0.015,-0.065,0.034,0.039,-0.047,-0.073,0,-0.055,-0.039,0.103,0.086,0.025,-0.149,-0.03,-0.002,0.011,-0.191,-0.027,0.098,-0.009,-0.098,-0.078,-0.148,-0.094,0.008,0.034,0.159,-0.064,-0.027,0.095,-0.051,0.031,0.075,0.049,0.018,0.164,0.06,0.075,0.039,0.155,0.032,-0.101,0.036,0.08,-0.018,0.037,0.044,0.078,-0.04,-0.159,0.007,-0.118,-0.058,-0.074,-0.084,0.138,0.029,-0.212,-0.035,-0.087,0.054,0.1,0.007,0.078,-0.083,-0.038,0.053,0.056,-0.03,-0.161,0.052],"source":"src/helpers/classicBattle/roundManager.js [_resetForTest]","tags":["code","what","function","utility","./cardSelection.js","../battleEngineFacade.js","../../utils/scheduler.js","./skipHandler.js","./battleEvents.js","resetSkipState","resetSelection","_resetForTest","stopScheduler","clearTimeout","cancelFrame","dispatchEvent","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/roundManager.js","node":"_resetForTest"},"patterns":[],"relations":{"imports":["./cardSelection.js","../battleEngineFacade.js","../../utils/scheduler.js","./skipHandler.js","./battleEvents.js"],"calls":["resetSkipState","resetSelection","_resetForTest","stopScheduler","clearTimeout","cancelFrame","dispatchEvent"]}},"version":1},
{"id":"quitModal.js-quitMatch","text":"Trigger the Classic Battle quit confirmation modal.\n\n@param {ReturnType<typeof createBattleStore>} store - Battle state store.\n@param {HTMLElement} [trigger] - Element that initiated the quit action.\n@returns {Promise<HTMLButtonElement>} Resolves with the confirm button.\n1. Create the modal if needed.\n2. Determine the element that opened the modal.\n3. Open the modal focusing the triggering element when available.\n4. Resolve a promise with the confirm button once inserted.\n\nexport function quitMatch(store, trigger) {\n  let resolveBtn;\n  quitConfirmButtonPromise = new Promise((resolve) => {\n    resolveBtn = resolve;\n  });\n  window.quitConfirmButtonPromise = quitConfirmButtonPromise;\n  if (!store.quitModal) {\n    store.quitModal = createQuitConfirmation(store, () => {\n      const result = battleEngine.quitMatch();\n      showResult(result.message);\n    });\n  }\n  const fallback = document.getElementById(\"quit-match-button\");\n  store.quitModal.open(trigger ?? fallback ?? undefined);\n  const check = () => {\n    const btn = document.getElementById(\"confirm-quit-button\");\n    if (btn) resolveBtn(btn);\n    else requestAnimationFrame(check);\n  };\n  check();\n  return quitConfirmButtonPromise;\n}","qaContext":"Why: Trigger the Classic Battle quit confirmation modal. How: Open the modal focusing the triggering element when available.","embedding":[-0.061,0.016,-0.001,0.057,-0.001,0.076,0.102,0.044,0.08,-0.04,0.036,-0.164,-0.063,0.03,0.038,0.086,-0.041,-0.105,-0.059,0.048,0.125,-0.083,0.106,0.053,-0.01,-0.043,0.003,-0.069,0.014,-0.074,0.131,0.02,-0.114,-0.106,0.008,-0.059,-0.077,-0.041,0.033,-0.1,-0.092,0.09,-0.087,0.069,0.052,-0.03,0.027,0.075,-0.002,0.155,0.013,-0.033,0.01,-0.075,-0.036,0.048,0.103,0.077,0.017,0.072,0.029,-0.061,-0.069,-0.053,0.012,0.092,0.08,-0.113,-0.022,-0.142,-0.028,-0.023,0.094,0.056,-0.085,-0.039,0.001,0.069,-0.059,0.052,0.064,-0.004,0.014,-0.126,0.012,0.03,0.082,-0.002,0.058,-0.079,-0.077,0.118,-0.082,0.095,-0.013,0.132,-0.091,-0.018,0.062,0.123,0.151,-0.066,-0.108,-0.038,0.042,-0.093,-0.042,0.001,-0.071,-0.012,-0.081,0.075,0.046,0.072,0.061,0.162,0.088,0.079,0.163,-0.192,0.11,-0.043,-0.01,-0.141,0.071,0.014,0.103,0,0.119,-0.127,-0.119,0.174,-0.019,0.085,0.107,0.036,-0.115,-0.068,-0.051,-0.019,-0.04,-0.131,0.022,-0.049,0.021,-0.034,-0.012,-0.075,0.081,0.053,0.049,0.172,-0.001,0.041,0.027,0.09,-0.117,-0.043,0.01,-0.051,-0.048,-0.01,0.079,-0.028,-0.095,-0.028,-0.14,-0.144,-0.006,-0.058,-0.186,0.07,0.005,-0.329,-0.051,-0.027,0.092,-0.088,-0.124,0.01,0.05,-0.166,0.038,0.025,-0.055,0.053,0.014,-0.11,-0.088,-0.155,-0.032,0.017,-0.154,0.073,-0.145,-0.082,-0.089,-0.075,-0.003,-0.116,0.181,-0.091,0.093,-0.035,-0.108,0.039,0.108,-0.068,0.217,0.024,-0.162,0.163,0.063,-0.032,0.033,-0.133,-0.019,0.209,-0.115,0.072,0.049,0.064,0.088,0,0.116,0.062,-0.15,0.077,-0.029,0.147,0.128,0.13,-0.121,-0.145,0.09,0.063,0.159,0.126,-0.137,0.133,0.165,-0.052,-0.031,0.092,0.129,-0.01,-0.068,-0.051,0.005,-0.017,-0.059,0.057,-0.031,-0.049,0.098,0.057,0.017,0.123,0.115,-0.145,0.075,-0.1,-0.108,0.045,0.017,-0.042,0.033,-0.013,0.006,-0.02,0.085,-0.055,-0.007,0.032,-0.046,-0.029,-0.097,-0.095,0.006,-0.079,-0.058,-0.157,0.037,0.053,-0.019,-0.184,0.136,0.035,0.112,-0.074,-0.015,0.172,0.228,0.174,-0.002,0.033,0.152,-0.153,0.048,0.002,-0.001,-0.197,0.04,0.022,0.135,-0.005,0.11,-0.194,-0.047,0.043,-0.115,0.164,0.024,0.046,-0.075,-0.058,0.111,-0.117,0.099,0,-0.151,-0.002,0.072,-0.058,-0.01,-0.04,-0.003,-0.061,-0.077,-0.183,0.023,0.067,-0.005,-0.066,-0.109,-0.027,0.021,-0.065,0.042,0.089,0.074,-0.071,0.004,0.03,0.001,-0.012,-0.006,0.097,-0.013,0.065,-0.019,-0.039,0.043,-0.063,-0.179,0.104,0.151,0.008,0.197,-0.031,0.105,0.064,-0.156,0.032,-0.079,0.093,0.035,-0.06,-0.013,0.053,-0.063,-0.16,-0.066,0.094,-0.019,-0.063,-0.005,0.007,0.055,-0.006,0.057,-0.116,-0.032,-0.135],"source":"src/helpers/classicBattle/quitModal.js [quitMatch]","tags":["code","how","function","utility","../../components/Modal.js","../../components/Button.js","../battleEngineFacade.js","../battle/index.js","../navUtils.js","./eventBus.js","createQuitConfirmation","quitMatch","showResult","getElementById","open","resolveBtn","requestAnimationFrame","check","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/quitModal.js","node":"quitMatch"},"patterns":[],"relations":{"imports":["../../components/Modal.js","../../components/Button.js","../battleEngineFacade.js","../battle/index.js","../navUtils.js","./eventBus.js"],"calls":["createQuitConfirmation","quitMatch","showResult","getElementById","open","resolveBtn","requestAnimationFrame","check"]}},"version":1},
{"id":"quitButton.js-initQuitButton","text":"Attach the Classic Battle Quit button listener.\n\n@param {ReturnType<import('./roundManager.js').createBattleStore>} store - Battle state store.\n@param {{quitMatch?: typeof import('./quitModal.js').quitMatch}} [deps]\n@returns {void}\n1. Locate `#quit-match-button` and exit if missing.\n2. Add a click handler that obtains `quitMatch` from deps or via dynamic import.\n3. Invoke `quitMatch` with the provided store and button.\n\nexport function initQuitButton(store, { quitMatch: injectedQuitMatch } = {}) {\n  const quitBtn = document.getElementById(\"quit-match-button\");\n  if (!quitBtn) return;\n  quitBtn.addEventListener(\"click\", async () => {\n    const quitMatch = injectedQuitMatch ?? (await import(\"./quitModal.js\")).quitMatch;\n    quitMatch(store, quitBtn);\n  });\n}","qaContext":"Why: Attach the Classic Battle Quit button listener. How: Add a click handler that obtains `quitMatch` from deps or via dynamic import.","embedding":[-0.051,0.04,0.012,0.003,-0.016,0.084,0.077,-0.009,-0.025,0.06,-0.056,-0.143,-0.105,0.041,0.082,0.069,-0.037,0.007,0.061,0.009,0.012,0.011,0.077,0.032,-0.119,-0.052,0.003,-0.083,-0.078,-0.07,0.175,0.042,-0.122,-0.083,0.069,-0.004,-0.107,-0.041,0.098,-0.11,-0.028,0.13,-0.089,0.018,0.069,0.011,-0.199,0.096,0.06,0.146,0.062,-0.02,0.052,-0.079,0.046,0.036,0.217,0.075,-0.025,0.136,0.093,-0.138,-0.081,-0.06,0.016,0.15,0.159,-0.056,-0.012,-0.045,-0.064,0.025,0.001,0.055,-0.033,-0.085,-0.05,0.026,-0.002,0.041,0.021,-0.132,-0.031,0.012,0.059,0.005,0.07,-0.065,0.135,-0.007,-0.216,0.204,0.002,0.023,-0.019,0.11,-0.044,0.093,-0.004,0.052,0.113,-0.121,-0.109,-0.079,0.106,-0.095,-0.047,-0.134,-0.03,0.005,-0.008,0.134,0.07,0.004,0.045,0.131,0.203,-0.006,0.127,-0.061,0.181,-0.023,-0.076,-0.034,0.035,0.134,0.098,0,-0.013,-0.207,-0.12,0.126,-0.041,0.058,0.106,0.062,-0.074,-0.036,-0.132,-0.002,-0.04,-0.077,0.04,-0.081,0.065,-0.08,-0.012,-0.116,0.096,0.025,-0.039,0.178,0.011,0.17,-0.009,0.027,-0.001,-0.003,0.065,-0.07,-0.06,0.102,0.12,-0.148,-0.093,0.059,-0.082,-0.174,-0.129,-0.024,-0.206,0.043,-0.119,-0.216,0.046,-0.147,0.073,-0.075,-0.125,0.035,0.043,-0.097,0.015,-0.032,-0.071,-0.088,-0.042,-0.058,-0.014,0.021,-0.009,0.152,-0.174,0.037,-0.081,-0.13,-0.118,-0.118,0.105,-0.06,0.099,-0.172,0.089,-0.079,-0.035,0.136,0.07,-0.034,0.208,-0.087,-0.221,0.062,0.159,-0.035,0.005,-0.209,0.068,0.079,-0.064,-0.034,-0.035,0.032,0.1,0,0.083,0.096,-0.006,0.079,-0.115,0.122,0.003,0.126,-0.018,-0.035,0.038,0.077,0.018,0.078,-0.092,0.142,0.045,-0.035,-0.012,-0.027,0.13,-0.066,-0.021,-0.004,-0.069,-0.098,0.064,-0.028,-0.02,-0.006,0.109,0.084,0.006,0.131,0.02,-0.079,0.021,0.028,-0.128,0.091,-0.051,-0.046,0.045,0.012,-0.003,0.001,-0.033,0.045,0.002,-0.019,-0.052,-0.06,-0.142,-0.134,-0.137,-0.058,-0.106,-0.072,-0.065,0.019,0.073,-0.262,0.068,0.02,0.024,-0.016,0,0.245,0.122,0.153,0.03,0.039,0.143,-0.133,0.008,0.079,-0.088,-0.14,0.136,0.012,0.072,0.042,0.097,-0.167,-0.086,0,-0.181,0.111,-0.028,0.044,-0.03,0.023,0.104,-0.106,-0.007,0,-0.075,0.027,0.084,-0.065,-0.08,-0.029,0.035,0.109,0.06,0.019,0.062,0.166,-0.02,0.045,-0.173,0.029,0.043,0.05,0.025,0.186,-0.008,-0.097,0.007,0.048,-0.009,-0.003,0.018,0.024,0.07,0.005,0.059,0.015,-0.062,-0.07,-0.212,0.108,0.045,0.017,0.04,0.002,-0.086,0.008,-0.21,0.05,-0.121,0.022,0.03,-0.021,0.034,0.121,0.062,-0.083,-0.086,0.075,-0.01,-0.059,0.016,0.006,0.071,0.058,0.025,-0.086,-0.035,-0.002],"source":"src/helpers/classicBattle/quitButton.js [initQuitButton]","tags":["code","what","function","utility","getElementById","addEventListener","quitMatch","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/quitButton.js","node":"initQuitButton"},"patterns":[],"relations":{"imports":[],"calls":["getElementById","addEventListener","quitMatch"]}},"version":1},
{"id":"orchestratorHandlers.js-isStateTransition","text":"export function isStateTransition(from, to) {\n  try {\n    if (typeof document === \"undefined\") return false;\n    const current = document.body?.dataset.battleState;\n    const prev = document.body?.dataset.prevBattleState;\n    if (from === null || from === undefined) {\n      return current === to;\n    }\n    return prev === from && current === to;\n  } catch {\n    return false;\n  }\n}","qaContext":"Why: export function isStateTransition(from, to) { try { if (typeof document === \"undefined\") return false; const current = document. How: body?","embedding":[-0.059,0.077,0.043,0.092,-0.013,0.049,0.035,0.008,0.018,-0.023,0.018,-0.077,-0.026,-0.04,-0.026,0.049,-0.038,-0.087,0.048,0.082,0.058,0.024,-0.032,0.095,0.099,0.017,-0.042,-0.11,0.062,-0.008,0.016,0.007,-0.173,-0.019,0.008,0.106,-0.055,-0.086,-0.097,0.007,-0.055,0.051,-0.067,-0.045,0.131,0.083,-0.077,-0.008,0.06,0.029,-0.074,-0.041,0.015,-0.041,0.147,0.004,-0.01,0.102,0.017,-0.012,0.021,-0.107,0.078,-0.087,0.114,-0.001,-0.075,0.123,-0.042,0.11,-0.033,0.123,0.148,-0.008,0.077,-0.011,-0.042,0.004,0.203,0.04,-0.103,-0.12,-0.13,-0.032,0.129,-0.002,-0.047,0.058,-0.063,0.048,-0.268,-0.004,0.08,0.174,-0.117,0.062,-0.011,0.017,0.118,0.02,-0.061,0.025,-0.03,-0.003,-0.109,-0.138,0.058,-0.102,-0.049,0.003,0.092,0.096,-0.007,0.011,-0.107,-0.036,-0.062,-0.107,0.066,-0.01,0.161,-0.028,0.147,0.009,0.024,-0.142,0.161,0,0.03,-0.202,-0.077,0.138,-0.092,-0.023,-0.008,-0.133,-0.121,0.059,-0.104,0.207,-0.021,0.096,-0.03,-0.087,0.105,-0.083,0.044,-0.049,0.071,0.014,-0.045,-0.02,0.022,-0.029,-0.216,0.033,-0.222,0.014,-0.068,-0.013,0.016,0.083,0.005,-0.027,-0.097,0.005,-0.114,0.042,0.159,-0.06,0.03,0.019,0.026,-0.085,0.074,-0.044,0.07,0.034,-0.095,0.114,0.087,-0.108,0.066,-0.069,-0.102,0.002,-0.047,-0.014,-0.069,0.135,0.059,0.059,-0.212,0.027,-0.089,-0.084,-0.128,-0.132,0.029,-0.148,-0.037,0.05,0.088,-0.089,-0.089,-0.043,-0.106,-0.15,0.016,0.008,-0.109,0.167,0.061,0.036,-0.005,-0.143,0.072,0.161,-0.072,-0.128,0.016,-0.115,0.097,0,0.166,0.081,0.029,-0.056,-0.09,0.102,0.109,0.108,0,0.016,0.031,-0.009,-0.014,-0.059,-0.081,0.193,-0.044,-0.058,-0.06,-0.105,0.081,-0.051,-0.056,0.007,-0.097,0.045,0.067,0.079,-0.039,-0.039,-0.069,-0.047,-0.042,-0.041,-0.022,-0.109,0.13,0.044,-0.026,0.039,0.077,0.001,-0.071,0.089,-0.099,0.059,0.008,0.055,0.119,-0.024,0.039,-0.071,0.069,-0.068,-0.107,-0.121,-0.023,-0.091,0.072,0.15,0.023,-0.197,0.027,-0.035,-0.002,0.004,-0.13,0.185,0.103,0.088,0.065,0.007,0.034,-0.101,0.016,-0.031,-0.057,-0.078,0.167,-0.031,0.148,-0.006,0.081,-0.125,0.052,0.104,-0.102,0.063,-0.109,-0.017,-0.035,-0.039,-0.014,0.025,-0.074,0,-0.122,-0.014,0.075,-0.095,-0.129,0.043,0.035,-0.039,0.001,-0.093,0.106,0.095,0.152,-0.114,-0.068,0.012,0.028,0.082,-0.071,0.063,0.024,-0.049,-0.001,0.022,0.196,0.002,-0.073,0.085,0.12,-0.04,-0.007,0.109,0.041,-0.009,-0.111,0.075,0.195,0.032,-0.013,0.001,-0.018,0.031,-0.122,0.028,-0.187,-0.039,0.002,-0.009,0.095,-0.105,-0.023,0.01,-0.091,0.101,0.024,-0.012,0.017,0.088,-0.101,0.092,0.035,0,0.015,0.048],"source":"src/helpers/classicBattle/orchestratorHandlers.js [isStateTransition]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"isStateTransition"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-waitingForMatchStartEnter","text":"export async function waitingForMatchStartEnter(machine) {\n  if (isStateTransition(\"waitingForMatchStart\", \"waitingForMatchStart\")) return;\n  const { doResetGame } = machine.context;\n  if (typeof doResetGame === \"function\") doResetGame();\n  emitBattleEvent(\"scoreboardClearMessage\");\n  emitBattleEvent(\"debugPanelUpdate\");\n  // Use a microtask / setTimeout wrapper when invoking startClicked so that\n  // caller code (for example, `?autostart=1`) doesn't attempt to dispatch on\n  // the `machine` before `initClassicBattleOrchestrator` has finished\n  // assigning it. This prevents a startup race where `machine` is null.\n  await initRoundSelectModal(() => {\n    // schedule the dispatch on the next tick; initRoundSelectModal awaits the\n    // provided callback, so return a resolved Promise to keep behavior simple.\n    try {\n      setTimeout(() => {\n        try {\n          machine?.dispatch(\"startClicked\");\n        } catch {}\n      }, 0);\n    } catch {}\n    return Promise.resolve();\n  });\n}","qaContext":"Why: export async function waitingForMatchStartEnter(machine) { if (isStateTransition(\"waitingForMatchStart\", \"waitingForMatchStart\")) return; const { doResetGame } = machine. How: context; if (typ...","embedding":[-0.104,0.005,-0.093,0.106,0.036,0.08,-0.073,0.068,0.033,-0.016,-0.071,-0.161,-0.187,0.047,-0.007,0.007,0.12,-0.178,0.046,-0.029,0.045,-0.028,0.121,0.031,-0.043,-0.147,-0.055,-0.128,0.02,-0.047,0.038,-0.018,0.012,-0.006,0.052,0.103,-0.038,-0.041,-0.077,-0.074,0.15,-0.014,-0.123,-0.012,0.013,-0.039,0.011,-0.119,-0.048,0.083,0.01,0.053,-0.007,-0.015,0.119,0.081,0.167,0.187,0.059,0.027,-0.011,-0.184,-0.092,-0.037,0.077,0.053,0.048,-0.068,0.004,-0.007,-0.01,0.006,0.057,0.115,-0.083,0.032,0.048,0.046,0.012,-0.044,-0.001,-0.084,-0.047,0.007,0.03,0.076,0.056,-0.033,0.025,0.028,-0.102,0.029,-0.067,0.052,0.051,0.074,-0.045,0.022,0.027,-0.049,0,0.044,-0.034,0.027,-0.031,-0.135,-0.029,-0.033,-0.116,-0.036,0.101,0.01,0.046,0.137,0.007,0.097,0.051,0.012,0.075,0.008,0.173,0.026,0.085,-0.13,0.078,0.019,0.115,0,-0.011,-0.178,-0.083,-0.013,0.005,-0.024,0.107,0.044,0.041,-0.025,0.037,-0.024,0.05,-0.067,0.008,-0.08,0.074,-0.094,-0.083,0.042,0.098,-0.013,-0.009,-0.048,-0.002,-0.047,-0.072,0.005,-0.015,0.036,-0.004,0.025,-0.16,0.022,-0.037,-0.063,-0.028,-0.041,-0.13,-0.098,-0.102,-0.009,-0.205,0.061,-0.106,-0.207,-0.046,-0.078,0.142,0.044,-0.073,0.072,0.122,-0.219,0.1,0.025,0.015,-0.113,-0.044,-0.06,-0.007,-0.1,-0.077,-0.008,-0.005,0.087,-0.072,-0.126,-0.126,-0.113,0.076,-0.067,0.07,0.008,0.044,0.134,-0.072,0.034,-0.139,-0.124,0.155,-0.074,-0.1,0.017,0.049,0.109,-0.069,-0.085,0.004,0.105,0.004,-0.041,0.001,0.152,-0.061,0,0.07,0.007,-0.153,0.046,0.09,0.127,-0.023,0.069,-0.148,-0.029,-0.079,0.131,-0.066,0.003,-0.051,0.01,0.109,0.035,0.087,0.028,0.189,0.079,-0.063,0.067,-0.011,0.082,-0.017,0.011,-0.004,-0.083,0.013,0.013,0.014,-0.033,0.072,0.029,-0.005,-0.006,-0.087,0.103,0.104,-0.074,-0.039,-0.05,0.031,-0.029,-0.037,-0.007,0.035,0.094,0.02,-0.009,0.058,-0.013,-0.013,-0.048,0.036,-0.079,0.042,0.023,0.025,-0.135,0.046,-0.047,0.055,0.034,-0.002,0.071,0.212,0.156,0.024,-0.074,0.041,-0.06,-0.085,0.07,-0.045,-0.191,0.131,0.01,-0.029,0.075,0.028,-0.015,0.053,0.021,0.012,0.085,0.063,0.072,0.034,-0.003,0.032,0.067,-0.007,0,0.033,0.006,0.019,0.081,0.057,-0.087,0.062,-0.152,0.012,-0.001,-0.058,-0.004,0.211,-0.008,0.007,0.007,0.082,-0.015,-0.042,0.04,0.04,-0.062,-0.055,-0.059,-0.087,0.015,0.07,0.082,0.007,-0.026,-0.111,0.11,0.012,0.015,-0.241,0.034,0.152,-0.074,0.112,0.037,0.036,0.038,-0.026,0.039,-0.113,0.021,-0.132,0.044,-0.003,0.052,-0.088,-0.098,-0.137,0.042,0.067,-0.05,0.054,-0.076,0.115,0.132,0.02,-0.094,-0.022,-0.023],"source":"src/helpers/classicBattle/orchestratorHandlers.js [waitingForMatchStartEnter]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js","isStateTransition","doResetGame","emitBattleEvent","initRoundSelectModal","setTimeout","dispatch","resolve","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"waitingForMatchStartEnter"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":["isStateTransition","doResetGame","emitBattleEvent","initRoundSelectModal","setTimeout","dispatch","resolve"]}},"version":1},
{"id":"orchestratorHandlers.js-waitingForMatchStartExit","text":"export async function waitingForMatchStartExit() {}","embedding":[-0.286,0.117,-0.445,0.237,0.118,0.115,-0.244,0.124,0.424,-0.237,-0.018,-0.288,-0.501,-0.385,-0.021,-0.283,-0.303,-0.287,0.031,-0.263,0.153,0.139,0.223,0.042,-0.032,-0.345,-0.301,-0.457,0.252,-0.131,-0.216,-0.115,-0.131,-0.185,0.333,0.346,0.178,-0.13,0.093,-0.143,0.23,0.156,-0.243,-0.208,0.133,-0.123,0.012,-0.286,0.102,0.337,-0.062,0.266,-0.453,-0.083,0.373,0.122,0.281,0.071,-0.115,0.206,0,-0.329,-0.18,-0.071,0.148,0.176,-0.218,-0.108,-0.032,0.036,-0.237,-0.055,-0.058,0.282,-0.059,-0.113,0.023,0.057,0.069,0.025,0.27,-0.07,-0.042,0.075,0.256,0.37,0.081,0.049,0.106,0.02,-0.39,0.06,-0.184,0.251,-0.367,0.271,0.038,0.375,0.078,-0.135,-0.129,0.062,0.293,0.055,0.039,-0.437,0.074,-0.025,-0.023,0.034,-0.019,0.087,-0.046,0.146,-0.027,0.293,0.157,-0.258,0.095,0.112,0.662,0.258,0.246,-0.136,0.242,-0.305,0.282,0,-0.093,-0.285,-0.051,-0.002,-0.183,0.171,0.206,-0.39,-0.058,0.08,-0.247,-0.289,-0.27,-0.149,-0.059,-0.372,0.419,-0.068,0.04,0.232,0.294,-0.121,-0.017,0.002,0.163,-0.242,-0.261,-0.004,-0.241,0.107,-0.033,0.06,-0.115,-0.052,-0.011,-0.159,-0.019,-0.331,-0.431,-0.025,-0.326,0.038,-0.383,0.039,-0.236,-0.318,-0.133,0.003,0.491,-0.012,-0.21,0.488,0.091,-0.338,0.271,0.074,0.093,-0.095,-0.038,0.047,-0.035,-0.124,-0.202,-0.171,0.069,-0.228,-0.162,-0.321,-0.31,-0.131,0.303,-0.196,-0.051,0.009,0.418,0.175,-0.347,0.22,-0.088,-0.39,0.178,-0.124,-0.472,0.096,0.233,0.209,0.109,-0.025,0.242,0.21,-0.461,-0.089,-0.095,-0.136,-0.416,0,0.313,-0.317,-0.159,-0.002,0.038,0.229,0.148,0.281,-0.253,0.519,0.055,-0.053,-0.121,-0.105,0,0.268,0.553,-0.137,0.487,-0.024,0.236,0.069,-0.064,0.448,-0.237,0.103,0.052,0.049,-0.098,0.062,-0.249,0.214,0.109,-0.065,-0.017,-0.05,-0.054,0.18,-0.068,0.073,0.224,0.01,-0.031,-0.138,0.059,-0.026,0.094,0.003,-0.083,0.028,0.385,0.04,-0.038,0.06,0.053,0.103,-0.328,-0.316,0.137,0.056,-0.136,-0.359,0.493,-0.568,0.3,-0.131,-0.103,0.1,0.396,0.497,0.204,0.022,-0.167,0.251,-0.209,-0.243,-0.192,-0.237,0.594,0.359,0.019,0.272,0.263,0.111,0.212,0.07,0.367,0.41,0.012,0.043,0.113,-0.001,-0.125,0.256,0.158,0,-0.234,-0.027,0.002,-0.221,-0.149,-0.154,-0.018,-0.413,0.112,0.055,-0.082,-0.022,0.562,-0.061,-0.116,0.002,0.233,0.26,-0.042,-0.218,0.05,0.073,-0.254,-0.183,-0.052,0.021,0.238,-0.105,0.153,-0.218,-0.465,0.179,-0.129,-0.067,-0.405,-0.206,0.392,-0.187,0.41,0.447,0.047,0.002,0.008,0.177,-0.074,-0.027,-0.267,-0.07,0.032,0.065,0.036,-0.392,-0.132,0.17,0.001,-0.102,-0.08,-0.233,0.004,0.244,0.057,-0.122,0.458,0.028],"source":"src/helpers/classicBattle/orchestratorHandlers.js [waitingForMatchStartExit]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"waitingForMatchStartExit"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-matchStartEnter","text":"export async function matchStartEnter(machine) {\n  await machine.dispatch(\"ready\", { initial: true });\n}","qaContext":"Why: export async function matchStartEnter(machine) { await machine. How: export async function matchStartEnter(machine) { await machine.","embedding":[-0.204,-0.068,-0.198,0.296,0.029,0.088,-0.247,0.042,0.008,-0.019,-0.062,-0.08,-0.307,-0.037,0.042,0.052,0.082,-0.291,0.038,-0.146,-0.139,-0.005,0.088,-0.083,0.021,-0.199,-0.248,-0.378,0.066,-0.019,0.002,-0.024,-0.026,0.154,-0.042,0.13,0.03,-0.094,0.239,-0.056,0.313,-0.059,-0.222,-0.183,0.24,-0.032,0.015,0.121,0.171,0.078,-0.134,0.024,-0.241,-0.151,0.327,0.375,0.303,0.038,0.078,0.044,0.019,-0.358,-0.15,0.007,0.27,-0.112,-0.178,-0.039,-0.076,0.022,-0.167,0.103,0.173,0.258,-0.167,0.016,0.079,-0.059,0.073,0.139,-0.069,-0.154,0.034,0.05,0.077,0.38,-0.043,-0.064,-0.016,-0.119,-0.26,-0.072,-0.197,0.146,-0.251,0.199,-0.007,0.263,0.141,-0.12,-0.064,-0.01,0.054,0.075,-0.116,-0.104,0.014,-0.108,-0.143,-0.069,0.068,-0.041,-0.048,0.069,-0.086,-0.036,0.114,-0.065,0.156,0.239,0.414,0.106,0.161,-0.172,0.04,-0.038,0.158,0,0.063,-0.273,-0.094,0.062,0.063,-0.113,0.079,-0.123,-0.249,0.101,-0.077,0.161,-0.193,-0.152,-0.114,-0.205,0.286,-0.166,-0.135,0.17,-0.011,-0.065,-0.218,-0.075,-0.022,-0.21,-0.166,-0.054,-0.005,0.015,0.112,0.019,-0.032,0.122,-0.112,-0.069,-0.014,0.012,-0.427,-0.198,-0.197,0.048,-0.312,-0.046,-0.445,-0.245,-0.183,-0.104,0.376,-0.108,-0.072,0.226,-0.088,-0.315,0.131,0.058,-0.017,-0.044,0.124,0.058,-0.175,-0.18,-0.199,-0.045,0.151,0.02,-0.033,-0.22,-0.206,-0.023,0.159,-0.025,-0.041,-0.116,0.473,0.198,-0.182,0.204,-0.227,-0.345,0.062,-0.001,-0.307,0.1,0.107,0.205,-0.091,-0.041,0.248,0.083,-0.011,-0.107,0.024,0.003,-0.156,0,0.407,-0.094,-0.114,0.144,0.1,0.154,0.084,-0.021,-0.313,0.253,0.06,0.007,0.01,-0.013,-0.164,0,0.144,0.036,0.117,-0.051,0.284,-0.05,-0.018,0.129,-0.23,0.09,0.085,0.081,-0.184,-0.051,-0.027,0.032,0.098,-0.047,-0.014,0.188,-0.069,0.147,0.056,0.11,0.132,-0.015,-0.311,0.044,-0.006,-0.224,0.17,0.018,0.051,0.109,0.261,0.073,0.036,-0.194,0.017,0.026,0.053,-0.243,0.159,0.115,0.025,-0.263,0.234,-0.097,0.032,-0.187,-0.051,0.41,0.422,0.262,-0.001,0.131,0.05,0.126,-0.037,-0.259,-0.081,-0.278,0.348,0.544,-0.056,0.183,0.085,0.031,0.35,0.101,0.222,0.242,-0.022,0.033,0.04,-0.065,0.014,-0.036,-0.17,0,-0.402,-0.099,-0.092,0.071,-0.018,0.13,-0.028,-0.426,0.032,-0.172,-0.15,0.141,0.198,0.05,0.006,-0.044,0.237,0.093,0.008,0.064,-0.032,0.135,0.013,-0.056,0.169,0.113,0.099,0.009,0.065,0.197,-0.203,0.177,-0.029,-0.224,-0.176,-0.001,0.289,-0.146,0.152,0.057,0.223,0.148,-0.013,0.063,-0.14,-0.003,-0.153,-0.294,0.049,-0.209,0.198,-0.298,-0.095,0.132,0.012,-0.144,-0.019,-0.125,0.046,0.218,0.11,-0.083,0.311,0.04],"source":"src/helpers/classicBattle/orchestratorHandlers.js [matchStartEnter]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js","dispatch"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"matchStartEnter"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":["dispatch"]}},"version":1},
{"id":"orchestratorHandlers.js-matchStartExit","text":"export async function matchStartExit() {}","embedding":[-0.426,0.131,-0.262,0.195,0.362,0.044,-0.111,0.106,0.278,-0.139,-0.185,-0.195,-0.261,-0.265,-0.029,-0.081,-0.185,-0.222,-0.116,-0.295,-0.149,-0.053,0.027,0.052,0.008,-0.174,-0.122,-0.458,0.1,-0.11,0.031,0.035,-0.308,-0.033,0.159,0.34,0.027,-0.326,0.257,-0.285,0.41,0.173,-0.214,-0.338,0.328,-0.173,-0.138,-0.026,-0.02,0.206,-0.077,0.185,-0.446,-0.456,0.472,0.489,0.241,0.015,0.081,0.204,0.203,-0.523,-0.236,-0.038,0.314,-0.266,-0.289,-0.078,0.057,0.274,-0.325,-0.048,0.163,0.237,0.018,0.168,-0.279,-0.085,0.035,-0.121,0.026,-0.255,0.013,0.191,0.216,0.442,-0.072,-0.067,0.24,0.081,-0.445,0.217,-0.246,0.137,-0.199,0.334,0.037,0.402,0.419,-0.013,-0.245,0.135,0.12,0.125,0.043,-0.293,0.005,-0.212,0.038,0.045,-0.088,0.052,0.311,0.068,0.064,0.195,0.432,-0.157,0.144,0.393,0.568,0.005,0.394,-0.14,0.105,0.002,0.251,0,0.069,-0.257,-0.162,-0.201,0.004,0.107,0.091,-0.372,-0.348,0.023,-0.17,-0.028,-0.261,-0.058,-0.104,-0.222,0.435,-0.149,-0.125,0.233,0.208,-0.19,-0.271,0.037,0.025,-0.304,-0.126,0.248,-0.181,0.017,0.126,0.035,-0.054,0.153,0.046,0.025,-0.002,-0.128,-0.578,-0.023,-0.331,0.047,-0.397,-0.111,-0.326,-0.267,-0.222,0.038,0.639,-0.289,-0.127,0.354,-0.006,-0.592,0.024,0.042,-0.041,-0.081,0.037,0.043,-0.084,-0.215,-0.228,-0.103,0.203,-0.096,0.085,-0.231,-0.26,-0.198,0.431,-0.053,-0.113,-0.136,0.588,-0.008,-0.021,0.49,-0.192,-0.55,-0.004,-0.079,-0.381,0.029,-0.052,0.072,0.013,-0.072,0.135,0.012,-0.133,-0.152,-0.036,-0.131,-0.301,0,0.471,-0.079,0.058,-0.01,0.042,0.141,0.159,0.003,-0.184,0.377,0.245,-0.127,-0.103,-0.116,-0.24,0.137,0.405,0.047,0.249,-0.12,0.349,-0.014,0.041,0.404,-0.251,0.035,0.312,0.055,-0.415,-0.067,0.031,0.295,0.073,0.091,-0.013,0.074,-0.05,0.213,-0.117,-0.13,0.192,0.258,-0.365,-0.004,0.118,-0.19,0.218,0.028,-0.058,-0.038,0.472,0.034,0.126,-0.084,-0.089,0.096,0.073,-0.193,0.17,0.145,0.066,-0.39,0.396,-0.138,0.136,-0.194,-0.133,0.513,0.374,0.317,0.077,0.009,-0.173,0.365,-0.194,-0.366,-0.202,-0.249,0.402,0.664,-0.175,0.168,0.291,0.12,0.278,0.033,0.038,0.547,0.06,-0.055,-0.042,-0.285,-0.289,-0.2,-0.019,0,-0.519,-0.242,-0.247,0.044,-0.151,-0.042,-0.109,-0.453,0.275,-0.099,-0.192,0.049,0.292,-0.053,-0.089,-0.107,0.334,0.354,-0.062,0.003,-0.216,0.269,-0.048,-0.13,0.231,0.088,0.139,-0.005,0.272,0.062,-0.309,0.125,0.031,-0.237,-0.392,-0.012,0.477,-0.205,0.088,0.367,0.144,0.023,0.029,0,-0.183,-0.12,-0.098,-0.298,0.247,-0.171,0.405,-0.396,-0.161,0.038,-0.068,-0.322,-0.193,-0.047,0.116,0.174,0.241,-0.091,0.648,-0.062],"source":"src/helpers/classicBattle/orchestratorHandlers.js [matchStartExit]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"matchStartExit"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-cooldownEnter","text":"export async function cooldownEnter(machine, payload) {\n  if (payload?.initial) {\n    let duration = 3;\n    try {\n      const val = await getDefaultTimer(\"matchStartTimer\");\n      if (typeof val === \"number\") duration = val;\n    } catch {}\n    const onFinished = () => {\n      try {\n        offBattleEvent(\"countdownFinished\", onFinished);\n      } catch {}\n      try {\n        if (fallbackTimer) clearTimeout(fallbackTimer);\n      } catch {}\n      try {\n        machine.dispatch(\"ready\");\n      } catch {}\n    };\n    onBattleEvent(\"countdownFinished\", onFinished);\n\n    // Emit countdown start for UI timers\n    emitBattleEvent(\"countdownStart\", { duration });\n\n    // Fallback: if no countdownFinished event arrives (headless/test environments),\n    // advance after duration+1 seconds to avoid stalling the state machine.\n    let fallbackTimer = null;\n    try {\n      fallbackTimer = setTimeout(\n        () => {\n          try {\n            offBattleEvent(\"countdownFinished\", onFinished);\n          } catch {}\n          try {\n            machine.dispatch(\"ready\");\n          } catch {}\n        },\n        (duration + 1) * 1000 + 200\n      );\n    } catch {}\n  }\n  // For inter-round cooldowns in test mode, auto-advance to the next round to\n  // avoid relying on external UI timers/handlers which can be racy under CI.\n  try {\n    if (isTestModeEnabled && isTestModeEnabled()) {\n      setTimeout(() => {\n        try {\n          if (machine.getState && machine.getState() === \"cooldown\") {\n            machine.dispatch(\"ready\");\n          }\n        } catch {}\n      }, 0);\n    }\n  } catch {}\n}","qaContext":"Why: export async function cooldownEnter(machine, payload) { if (payload? How: initial) { let duration = 3; try { const val = await getDefaultTimer(\"matchStartTimer\"); if (typeof val === \"number\") ...","embedding":[-0.16,0.103,-0.015,0.112,-0.024,0.012,-0.02,0.053,0.052,-0.029,0.031,-0.141,-0.057,-0.026,0.039,-0.128,0.067,-0.033,-0.047,-0.073,0.068,-0.05,-0.001,0.065,-0.089,-0.1,-0.094,-0.189,0.054,0.05,-0.019,-0.049,-0.138,0.008,-0.009,-0.011,0.001,-0.014,-0.024,-0.059,0.058,-0.005,-0.088,-0.057,0.059,-0.054,-0.097,-0.062,-0.073,0.064,0.015,0.115,-0.015,0.066,0.227,0.141,0.133,-0.013,-0.02,0.114,0.013,-0.179,-0.115,-0.058,0.112,0.045,-0.021,0.022,0.091,0.049,0.073,0.013,0.091,0.051,-0.138,0.034,-0.006,-0.04,-0.029,-0.045,-0.009,-0.088,-0.047,0.03,-0.019,0.076,0.13,0.029,0.051,-0.005,-0.093,0.062,-0.058,0.108,0,0.123,-0.004,0.084,0.003,0.031,0.04,-0.032,-0.081,0.084,0.001,-0.068,0.02,-0.127,-0.033,0.056,0.059,0.035,0.112,0.076,-0.028,0.038,0.028,0.085,0.027,0.034,0.217,0.122,0.066,-0.124,0.109,-0.008,0.123,0,-0.027,-0.197,-0.109,0.001,0.099,-0.019,0.056,0.054,0.009,0.026,0.048,-0.086,-0.068,-0.122,0.022,-0.159,0.158,-0.01,0.05,0.036,0.205,-0.198,-0.111,-0.015,0.023,0.02,-0.095,0.035,-0.06,0.03,0.101,-0.011,-0.085,0.064,0.024,-0.148,-0.027,0.063,-0.151,-0.139,-0.164,-0.019,-0.231,0.047,-0.115,-0.246,0.01,-0.12,0.104,0.013,0.055,0.069,0.006,-0.206,0.045,0.057,0.022,-0.037,-0.059,0.113,-0.093,-0.064,-0.1,-0.111,-0.021,0.163,-0.087,-0.113,-0.076,-0.087,0.02,-0.021,0.033,-0.015,0.026,0.026,0.073,0.065,-0.149,-0.235,0.123,-0.099,-0.11,0.162,0.127,0.007,-0.061,-0.055,-0.014,0.114,-0.145,-0.056,0.119,-0.023,-0.144,0,0.123,-0.054,-0.143,0.027,0.06,0.059,-0.036,0.088,-0.127,-0.056,0.007,0.089,0.011,0.004,-0.109,0.017,0.117,-0.053,0.021,0.104,0.131,0.033,-0.129,-0.044,-0.036,0.142,0.005,0.1,0.014,-0.057,0.021,-0.066,-0.052,-0.021,0.041,-0.047,0.053,0.103,-0.09,0.122,0.198,0.022,-0.047,-0.028,-0.062,0.037,-0.015,0.053,0,0.063,0.023,-0.165,-0.035,0.141,-0.043,-0.053,0.166,-0.177,0.059,0.043,0.003,-0.2,0.1,0.013,0.174,0.027,-0.076,0.061,0.153,0.131,0.071,0.102,-0.021,-0.104,0.021,0.023,-0.117,-0.183,0.094,0.049,-0.091,0.085,-0.005,0.004,0.034,0.127,-0.044,0.151,0.079,0.029,-0.101,-0.001,0.05,0.068,-0.033,0,-0.106,-0.017,0.043,0.019,0.074,-0.014,-0.078,-0.193,0.064,-0.157,0.036,0.03,0.111,0.012,0.03,-0.133,0.039,0.041,-0.058,-0.017,-0.071,0.005,-0.015,-0.027,-0.043,0.081,0.149,0.096,0.046,0.004,-0.175,0.107,-0.016,-0.052,-0.097,0.08,0.083,-0.054,0.179,0.089,0.08,0.016,-0.119,0.034,0.022,-0.073,-0.055,-0.057,0.069,0.052,-0.091,-0.147,-0.038,0.108,0.041,-0.074,0.044,-0.208,-0.011,0.207,0.044,-0.088,-0.045,0.012],"source":"src/helpers/classicBattle/orchestratorHandlers.js [cooldownEnter]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js","getDefaultTimer","offBattleEvent","clearTimeout","dispatch","onBattleEvent","emitBattleEvent","setTimeout","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"cooldownEnter"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":["getDefaultTimer","offBattleEvent","clearTimeout","dispatch","onBattleEvent","emitBattleEvent","setTimeout"]}},"version":1},
{"id":"orchestratorHandlers.js-cooldownExit","text":"export async function cooldownExit() {}","embedding":[-0.472,0.195,-0.402,0.481,0.249,-0.232,-0.08,0.009,0.381,-0.095,0.112,0.129,-0.382,-0.344,0.142,0.101,-0.154,0.029,-0.467,-0.373,-0.101,-0.279,-0.056,0.065,0.32,-0.417,-0.195,-0.318,-0.074,0.308,-0.056,-0.001,-0.412,-0.397,0.216,0.627,-0.07,-0.181,0.25,-0.172,0.195,0.137,-0.197,-0.423,0.182,0.064,-0.087,-0.151,0.005,0.062,0.035,0.603,-0.471,-0.164,0.149,0.328,0.194,-0.22,-0.087,0.434,-0.093,-0.227,-0.44,0.088,0.384,-0.034,-0.377,-0.081,-0.18,-0.048,-0.15,-0.071,0.153,0.101,0.123,-0.092,-0.154,0.139,-0.018,-0.023,0.526,-0.189,-0.216,-0.007,-0.224,0.31,0.41,-0.053,-0.069,0.175,-0.39,0.146,-0.061,0.184,-0.365,0.211,-0.009,0.342,-0.256,-0.101,-0.303,0.102,0.105,0.018,-0.109,-0.483,0.146,-0.355,0.229,-0.176,-0.395,0.193,-0.201,0.15,0.015,0.06,0.109,0.014,0.241,0.22,0.793,0.414,0.197,0.186,0.237,-0.15,0.195,0,0.302,-0.397,-0.189,0.114,0.411,0.07,0.035,-0.418,-0.338,0.166,0.208,-0.116,-0.207,0.267,-0.058,-0.345,0.351,-0.193,0.083,0.256,0.189,0.049,-0.139,0.153,-0.073,-0.053,-0.075,0.162,-0.201,0.085,0.04,-0.291,-0.284,0.099,-0.158,0.011,-0.394,-0.081,-0.503,-0.047,0.07,0.034,-0.507,0.161,-0.307,-0.217,0.028,-0.09,0.488,-0.247,-0.2,0.257,0.15,-0.306,0.347,-0.199,-0.013,0.023,0.151,-0.072,-0.134,0.025,-0.284,-0.142,0.037,0.055,-0.232,-0.065,-0.424,-0.1,0.112,0.243,0.188,-0.261,0.482,0.447,-0.31,0.212,-0.264,-0.673,-0.082,-0.134,-0.415,0.026,0.367,-0.072,-0.324,-0.038,0.513,0.155,-0.37,-0.362,0.066,-0.224,-0.161,0,0.267,-0.157,-0.259,0.131,-0.243,0.269,0.036,0.19,-0.298,0.34,-0.021,0.163,-0.097,-0.354,0.229,0.222,0.403,-0.048,0.4,0.056,-0.081,0.181,0.241,0.406,-0.195,-0.021,0.217,0.168,0.119,-0.191,-0.351,0.413,-0.353,0.268,-0.199,-0.041,-0.158,0.182,-0.078,0.015,0.346,-0.003,-0.3,0.203,0.088,-0.012,-0.293,-0.083,0.323,0.05,0.38,-0.297,-0.068,0.037,0.205,-0.088,0.24,-0.199,0.362,0.005,0.011,-0.51,0.408,-0.258,-0.07,-0.039,-0.201,0.474,0.17,0.472,0.289,0.106,-0.019,-0.023,-0.129,-0.227,-0.161,-0.421,0.421,0.629,0.068,0.356,0.02,-0.244,0.335,-0.337,-0.153,0.673,0.007,-0.097,0.132,-0.309,0.168,0.253,-0.067,0,-0.461,-0.051,0.108,-0.127,-0.049,-0.017,-0.113,-0.227,0.279,-0.401,0.002,-0.131,0.578,0.137,-0.164,0.031,0.134,0.462,0.345,-0.2,-0.147,0.034,0.018,0.067,0.069,0.276,0.24,-0.175,0.253,-0.262,-0.435,0.267,0.251,-0.199,-0.224,-0.203,0.563,-0.055,0.506,0.173,-0.014,-0.072,-0.292,0.016,-0.212,-0.384,-0.146,-0.135,0.064,0.225,0.287,-0.263,-0.126,0.283,-0.005,-0.347,-0.405,-0.296,-0.198,0.166,-0.094,-0.034,0.151,0.017],"source":"src/helpers/classicBattle/orchestratorHandlers.js [cooldownExit]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"cooldownExit"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-roundStartEnter","text":"export async function roundStartEnter(machine) {\n  const { startRoundWrapper, doStartRound, store } = machine.context;\n  // In Playwright test mode, set a short fallback to avoid UI stalls\n  let fallback = null;\n  try {\n    if (isTestModeEnabled && isTestModeEnabled()) {\n      fallback = setTimeout(() => {\n        try {\n          const state = machine.getState ? machine.getState() : null;\n          if (state === \"roundStart\") machine.dispatch(\"cardsRevealed\");\n        } catch {}\n      }, 50);\n    }\n  } catch {}\n  try {\n    if (typeof startRoundWrapper === \"function\") await startRoundWrapper();\n    else if (typeof doStartRound === \"function\") await doStartRound(store);\n  } catch {\n    try {\n      if (fallback) clearTimeout(fallback);\n    } catch {}\n    try {\n      emitBattleEvent(\"scoreboardShowMessage\", \"Round start error. Recovering…\");\n      emitBattleEvent(\"debugPanelUpdate\");\n      await machine.dispatch(\"interrupt\", { reason: \"roundStartError\" });\n    } catch {}\n    return;\n  }\n  try {\n    if (fallback) clearTimeout(fallback);\n  } catch {}\n  try {\n    const state = machine.getState ? machine.getState() : null;\n    if (state === \"roundStart\") await machine.dispatch(\"cardsRevealed\");\n  } catch {}\n}","qaContext":"Why: dispatch(\"interrupt\", { reason: \"roundStartError\" }); } catch {} return; } try { if (fallback) clearTimeout(fallback); } catch {} try { const state = machine. How: dispatch(\"cardsRevealed\"); }...","embedding":[-0.079,0.093,-0.125,0.142,0.002,0.075,0.018,0.098,-0.056,-0.036,-0.037,-0.17,-0.092,-0.055,0.022,-0.101,0.091,-0.088,0.033,0.037,0.023,-0.011,0.046,0.032,-0.068,-0.072,-0.106,-0.186,-0.008,-0.083,0.028,0.008,-0.095,0.054,0.034,-0.013,-0.022,-0.014,-0.066,-0.045,0.069,0.109,-0.152,0.009,0.06,-0.154,-0.106,-0.015,-0.012,0.128,-0.016,0.09,-0.009,0.025,0.145,0.105,0.216,0.088,-0.013,0.136,0.098,-0.182,-0.057,-0.014,0.076,-0.029,0.064,-0.017,0.009,-0.041,0.013,0.099,0.081,0.048,-0.1,0.017,-0.02,-0.085,0.029,-0.014,-0.097,-0.065,-0.054,-0.03,0.059,0.078,0.096,-0.047,0.039,-0.059,-0.084,0.087,-0.036,0.119,0.084,0.138,-0.012,0.004,-0.025,0.06,0.015,0.046,0.002,0.02,0.018,-0.147,0.068,-0.124,-0.104,0.012,0.004,0.195,0.112,0.084,-0.025,0.069,0.006,-0.014,0.021,0.062,0.176,0.087,0.098,-0.11,0.045,-0.022,0.158,0,-0.018,-0.203,-0.115,0.106,0.078,-0.051,0.141,-0.006,-0.024,-0.073,-0.019,-0.051,-0.033,-0.094,-0.014,-0.147,0.139,-0.001,0.099,0.006,0.126,-0.165,-0.07,-0.082,0.019,0.004,-0.045,-0.012,-0.025,0.028,0.121,-0.045,-0.103,0.079,0.054,-0.111,0.031,0.044,-0.174,-0.079,-0.166,-0.003,-0.17,0.041,-0.127,-0.267,-0.011,-0.114,0.054,0.033,-0.043,0.096,0.051,-0.182,0.061,-0.013,0.007,-0.084,-0.004,0.033,-0.041,-0.078,-0.152,-0.01,-0.067,0.105,-0.13,-0.203,-0.066,-0.131,0.012,-0.09,0.08,0.017,-0.012,0.044,-0.068,0.089,-0.158,-0.279,0.122,-0.085,-0.24,0.149,0.033,0.066,-0.04,-0.112,-0.012,0.147,-0.081,-0.02,0.105,-0.027,0.034,0,0.023,-0.038,-0.169,-0.028,0.079,0.004,0.047,0.081,-0.087,-0.078,-0.128,0.105,-0.019,0.08,-0.107,0.037,0.143,-0.055,0.057,0.037,0.112,0.07,-0.071,-0.016,-0.085,0.124,-0.06,0.016,-0.035,-0.08,0.099,-0.057,-0.075,0.045,0.096,-0.05,0.068,0.053,-0.167,0.096,0.18,0.004,-0.113,-0.03,0.059,0.022,0.033,-0.004,0.033,0.076,-0.016,-0.102,-0.039,0.016,-0.052,-0.014,0.141,-0.147,0.032,0.025,0.013,-0.116,0.063,-0.066,0.149,-0.006,-0.081,0.049,0.21,0.224,-0.05,0.137,0.069,-0.021,0.035,0.036,-0.005,-0.18,0.123,0.081,-0.064,0.05,0.016,-0.044,0.023,0.087,0.01,0.069,0.018,-0.028,-0.039,-0.041,0.019,0.025,-0.058,0,-0.115,-0.023,-0.026,0.082,0.028,-0.086,-0.009,-0.214,0.107,-0.157,-0.021,0.082,0.133,-0.05,0.057,-0.16,0.046,0.026,-0.067,0.059,0.032,-0.031,-0.034,0.086,0.028,0.036,0.207,0.091,0.059,0.051,-0.084,0.141,0.04,0.031,-0.128,0.076,0.143,0.013,0.166,0.115,0.055,-0.003,-0.019,0.012,0,-0.011,-0.102,-0.035,0.191,-0.003,-0.154,-0.143,-0.023,0.122,0.029,-0.037,0.039,-0.133,0.059,0.105,-0.011,-0.069,-0.017,0.036],"source":"src/helpers/classicBattle/orchestratorHandlers.js [roundStartEnter]","tags":["code","why","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js","startRoundWrapper","doStartRound","emitBattleEvent","dispatch","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"roundStartEnter"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":["startRoundWrapper","doStartRound","emitBattleEvent","dispatch"]}},"version":1},
{"id":"orchestratorHandlers.js-roundStartExit","text":"export async function roundStartExit() {}","embedding":[-0.222,0.309,-0.568,0.461,0.261,-0.153,0.005,0.285,0.252,-0.183,-0.137,-0.215,-0.339,-0.515,-0.042,-0.37,-0.427,-0.223,0.085,-0.232,-0.027,0.118,0.13,0.2,0.278,-0.139,-0.179,-0.29,0.258,-0.356,-0.151,0.289,-0.356,-0.215,0.342,0.343,0.082,-0.057,0.154,-0.315,0.44,0.353,-0.194,-0.321,0.19,-0.159,-0.158,0.036,-0.038,0.395,0.076,0.1,-0.461,-0.18,0.267,-0.107,0.352,-0.017,-0.051,0.111,-0.22,-0.394,-0.209,0.052,0.275,-0.084,-0.08,0.001,-0.068,0.106,-0.076,0.026,-0.064,0.302,0.074,0.007,-0.195,0.046,0.128,0.141,0.056,-0.127,0.099,-0.153,0.177,0.176,0.11,0.054,0.148,0.215,-0.481,0.532,-0.309,0.18,-0.261,0.276,0.03,0.223,0.086,-0.064,-0.149,0.04,0.132,0.049,0.061,-0.243,0.31,-0.379,0.048,0.017,-0.211,0.317,0.302,-0.181,0.166,0.151,0.018,-0.15,0.252,-0.039,0.577,0.098,0.294,-0.074,0.186,-0.032,0.312,0,-0.086,-0.297,-0.072,0.12,-0.002,0.187,0.234,-0.35,-0.174,-0.283,-0.246,-0.174,-0.159,0.049,0.074,-0.459,0.735,0.039,0.109,0.131,0.089,-0.357,-0.187,0.088,0.106,0.031,-0.103,0.067,-0.367,0.155,0.026,0.222,-0.062,0.167,-0.018,-0.143,-0.043,-0.061,-0.494,0.053,-0.208,0.132,-0.401,0.024,-0.605,-0.094,-0.219,0.145,0.364,-0.207,-0.276,0.367,0.155,-0.289,0.21,0.096,0.095,-0.322,0.011,-0.002,0.192,0.121,-0.182,-0.01,0.115,-0.09,-0.179,-0.126,-0.25,-0.152,0.15,-0.011,0.126,-0.021,0.462,0.09,0.076,0.287,-0.011,-0.686,0.315,-0.124,-0.298,-0.207,0.061,-0.008,0.095,-0.046,0.272,0.114,-0.377,-0.445,0.092,-0.138,-0.509,0,0.26,-0.013,-0.193,0.269,-0.009,0.355,0.119,-0.049,-0.069,0.253,0.064,-0.121,-0.415,-0.171,0.149,0.04,0.596,-0.164,0.227,-0.253,0.142,-0.17,-0.115,0.404,-0.114,-0.028,0.044,0.049,-0.185,0.051,-0.093,0.336,0.198,-0.005,0.068,-0.115,0.272,0.166,-0.085,-0.07,0.361,0,-0.287,-0.117,0.215,-0.26,0.203,0.108,-0.039,-0.074,0.372,-0.034,0.001,0.115,-0.104,0.129,0.048,-0.268,0.376,-0.06,-0.159,-0.447,0.373,-0.534,0.006,-0.161,-0.233,0.247,0.164,0.488,0.06,0.205,0.12,0.366,-0.381,-0.229,-0.083,-0.423,0.423,0.313,-0.012,0.213,0.29,-0.004,0.049,-0.089,0.185,0.383,-0.01,-0.151,-0.018,-0.322,-0.16,0.263,0.184,0,-0.444,-0.149,-0.173,0.091,0.094,0.007,0.062,-0.42,0.346,-0.158,-0.041,-0.027,0.595,-0.367,-0.154,0.008,0.155,0.351,-0.051,-0.273,-0.123,0.083,-0.109,-0.236,0.118,-0.021,0.131,0.154,0.268,-0.277,-0.489,0.313,0.003,0.107,-0.376,-0.16,0.609,0.031,0.27,0.472,-0.229,-0.129,-0.06,-0.011,-0.356,0.042,-0.343,-0.009,0.018,-0.027,0.378,-0.127,-0.022,0.304,-0.086,-0.045,-0.123,-0.303,-0.026,0.035,-0.142,-0.138,0.507,0.088],"source":"src/helpers/classicBattle/orchestratorHandlers.js [roundStartExit]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"roundStartExit"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-waitingForPlayerActionEnter","text":"export async function waitingForPlayerActionEnter(machine) {\n  emitBattleEvent(\"statButtons:enable\");\n  const store = machine?.context?.store;\n  if (store?.playerChoice) {\n    await machine.dispatch(\"statSelected\");\n  }\n}","qaContext":"Why: export async function waitingForPlayerActionEnter(machine) { emitBattleEvent(\"statButtons:enable\"); const store = machine? How: context?","embedding":[-0.01,0.003,-0.277,0.124,-0.101,0.397,0.025,0.09,0.005,0.123,0.101,-0.209,-0.199,-0.017,0.091,-0.009,0.09,-0.197,0.1,-0.141,-0.086,-0.087,0.165,0.031,-0.016,-0.149,-0.108,-0.101,0.022,-0.083,0.06,-0.153,0.181,-0.031,0.053,-0.076,-0.065,-0.208,-0.002,-0.106,0.112,-0.01,-0.23,-0.178,-0.051,-0.026,-0.057,-0.049,0.037,0.182,0.04,0.024,-0.047,-0.139,0.254,0.189,0.303,0.142,0.065,0.094,0.011,-0.293,-0.066,0.019,0.144,0.14,-0.03,0.025,-0.072,-0.006,-0.04,0.071,0.078,0.062,-0.032,-0.154,-0.082,-0.105,0.022,0.004,-0.033,-0.114,-0.158,0.015,0.107,0.157,0.077,0.027,-0.175,0.003,-0.23,0.053,-0.11,0.052,-0.094,0.137,-0.119,0.028,0.038,-0.118,-0.015,0.094,0.019,0.099,-0.043,-0.186,0.106,-0.047,-0.186,-0.028,0.063,0.153,-0.064,0.039,-0.114,0.091,0.114,0.025,0.045,-0.107,0.43,0.05,0.155,-0.05,0.077,-0.011,0.203,0,-0.045,-0.4,-0.176,-0.039,0.059,0.055,0.189,0.008,-0.076,-0.018,-0.039,0.084,-0.074,-0.066,0.069,-0.144,0.162,-0.052,0.061,0.014,0.249,-0.091,-0.016,0.189,-0.008,-0.045,-0.078,0.007,0.06,0.025,0.168,-0.055,-0.191,0.002,-0.02,-0.07,-0.067,-0.024,-0.135,-0.088,-0.117,-0.071,-0.252,0.052,-0.462,-0.15,-0.114,-0.225,0.215,0.07,-0.178,0.107,0.145,-0.246,0.147,-0.059,-0.039,-0.035,-0.052,-0.022,-0.019,-0.021,0.04,-0.064,-0.083,0.175,-0.105,-0.232,0.015,-0.101,0.152,-0.024,0.06,-0.103,0.059,0.138,-0.211,0.084,-0.163,-0.191,0.14,-0.219,-0.218,0.14,0.243,0.114,-0.208,-0.112,0.124,0.122,0.048,-0.051,0.003,0.023,-0.145,0,0.092,0.093,-0.155,-0.011,-0.027,0.189,-0.166,0.145,-0.198,-0.005,-0.075,0.201,-0.137,0.002,0.056,0.141,0.022,-0.04,0.097,0.022,-0.058,-0.006,0,0.005,-0.123,0.038,0.108,-0.041,0.044,-0.164,0.007,0.166,-0.113,0.076,-0.027,-0.103,0.148,-0.011,-0.239,0.148,0.107,0.118,-0.085,-0.05,0.028,0.206,0.048,0.057,0.113,0.132,-0.008,0.003,0.01,-0.103,-0.087,-0.016,-0.049,-0.212,0.107,-0.02,0.093,-0.291,0.046,-0.123,0.036,0.062,0.011,0.204,0.214,0.21,0.139,0.039,0.095,-0.086,-0.128,0.05,-0.125,-0.101,0.146,0.125,0.056,0.082,0.111,-0.206,0.089,0.04,0.05,0.041,0.018,0.038,-0.076,0.131,0.005,0.037,0.036,0,-0.155,-0.016,0.044,-0.047,0.104,0.069,0.04,-0.282,0.118,-0.06,-0.056,-0.079,0.235,-0.109,-0.105,-0.016,0.046,0.194,-0.01,0.212,0.146,0.033,0.123,0.06,-0.058,0.025,0.028,-0.065,0.205,0.026,-0.012,0.102,0.165,-0.096,-0.094,-0.013,0.281,-0.013,0.163,0.037,-0.019,-0.094,-0.14,0.161,-0.167,-0.008,-0.133,-0.001,0.075,0.143,-0.063,-0.141,-0.148,0.165,0.011,-0.001,0.063,-0.068,0.024,0.062,0.083,-0.116,-0.022,0.082],"source":"src/helpers/classicBattle/orchestratorHandlers.js [waitingForPlayerActionEnter]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js","emitBattleEvent","dispatch","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"waitingForPlayerActionEnter"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":["emitBattleEvent","dispatch"]}},"version":1},
{"id":"orchestratorHandlers.js-waitingForPlayerActionExit","text":"export async function waitingForPlayerActionExit() {\n  emitBattleEvent(\"statButtons:disable\");\n}","embedding":[-0.151,0.015,-0.42,0.09,0.106,0.393,-0.039,-0.042,0.148,0.046,0,-0.222,-0.33,-0.054,-0.107,-0.102,0.056,-0.227,0.153,-0.148,-0.115,-0.081,0.302,0.153,-0.002,-0.351,-0.142,-0.121,-0.045,-0.135,0.216,-0.179,0.141,-0.158,0.13,-0.079,-0.15,-0.237,0.048,-0.049,-0.019,-0.078,-0.307,-0.329,-0.016,-0.048,-0.009,-0.194,0.142,0.185,0.214,0.251,-0.291,-0.301,0.431,0.109,0.311,0.215,0.059,0.238,0.006,-0.234,-0.206,0.083,0.133,0.306,0.019,0.049,-0.008,0.189,-0.041,0.069,0.069,0.127,0.115,-0.192,-0.176,-0.028,-0.094,0.018,0.044,-0.15,-0.163,0.166,0.057,0.183,0.164,0.085,-0.244,-0.004,-0.444,0.126,-0.04,0.253,-0.147,0.12,-0.276,0.125,-0.122,-0.186,-0.022,0.04,-0.061,0.167,-0.012,-0.286,0.19,-0.13,-0.257,-0.104,0.093,0.131,-0.14,0.163,-0.195,0.175,0.221,0.117,0.097,-0.123,0.729,0.108,0.145,-0.108,0.098,-0.121,0.33,0,-0.042,-0.533,-0.214,-0.07,-0.014,0.191,0.216,0.022,0.027,0.084,0.154,-0.031,-0.085,-0.203,-0.023,-0.201,0.25,-0.061,-0.036,-0.021,0.461,-0.108,-0.034,0.315,-0.115,-0.015,-0.092,-0.058,0.041,0.122,0.032,-0.019,-0.282,0.013,-0.022,-0.322,-0.296,-0.18,-0.115,-0.037,-0.374,-0.079,-0.46,-0.013,-0.474,-0.112,-0.061,-0.185,0.219,-0.063,-0.237,0.266,0.313,-0.236,0.145,-0.073,-0.012,-0.07,-0.242,-0.035,-0.013,-0.063,-0.033,-0.111,-0.201,0.252,-0.155,-0.296,-0.099,-0.29,0.131,-0.124,0.146,-0.272,0.215,0.173,-0.13,0.254,-0.127,0.004,0.073,-0.126,-0.235,-0.067,0.473,-0.004,-0.324,-0.212,0.108,0.164,0.045,-0.045,-0.028,-0.045,-0.146,0,0.151,0.219,-0.234,-0.086,0.001,0.305,-0.212,0.326,-0.107,0.061,-0.026,0.186,-0.419,-0.059,-0.03,0.139,0.131,0.009,-0.002,0.087,-0.09,0.196,0.151,-0.105,-0.099,0.008,0.122,0.03,0.226,-0.206,0.037,0.438,-0.18,0.009,-0.014,-0.044,0.187,0.059,-0.317,0.186,0.132,0.174,0.147,-0.135,0.08,0.258,-0.037,0.093,0.053,0.283,-0.019,0.066,-0.067,-0.138,0.018,-0.2,-0.053,-0.15,0.085,0.021,0.33,-0.347,0.059,-0.179,0.079,0.153,0.109,0.356,0.405,0.339,0.297,-0.122,0.004,-0.121,-0.146,0.232,-0.182,-0.263,0.096,0.012,0.081,0.013,0.15,-0.274,0.14,0.093,-0.055,0.06,0.013,0.242,-0.028,0.058,0.171,0.249,0.097,0,-0.253,-0.018,0.083,-0.158,0.012,-0.024,-0.007,-0.19,0.135,-0.106,0.023,-0.108,0.451,-0.189,-0.256,-0.026,0.048,0.242,-0.036,0.085,0.134,-0.045,-0.058,-0.053,-0.186,-0.004,0.03,-0.114,0.289,-0.127,-0.011,0.131,0.02,-0.104,-0.265,-0.048,0.456,-0.098,0.129,0.207,-0.028,-0.06,-0.097,0.227,-0.285,-0.029,-0.145,0.073,0.031,0.269,-0.078,-0.095,-0.198,0.185,-0.022,0.094,0.17,-0.111,0.05,0.216,0.056,-0.17,0.033,0.161],"source":"src/helpers/classicBattle/orchestratorHandlers.js [waitingForPlayerActionExit]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js","emitBattleEvent"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"waitingForPlayerActionExit"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":["emitBattleEvent"]}},"version":1},
{"id":"orchestratorHandlers.js-scheduleRoundDecisionGuard","text":"export function scheduleRoundDecisionGuard(store, machine) {\n  try {\n    return setTimeout(() => {\n      computeAndDispatchOutcome(store, machine);\n    }, 1200);\n  } catch {\n    return null;\n  }\n}","embedding":[-0.142,0.358,-0.036,-0.014,-0.085,0.003,-0.007,-0.029,-0.006,0.058,-0.012,-0.225,-0.015,-0.083,-0.125,-0.095,0.039,-0.04,-0.011,-0.287,0.077,-0.017,0.032,0.133,-0.111,-0.257,-0.053,-0.119,-0.006,0.005,-0.154,-0.096,-0.27,-0.014,0.195,0.276,-0.052,0,0.06,-0.176,0.188,0.101,-0.148,0.008,0.073,-0.013,-0.051,-0.066,-0.105,0.056,0.051,0.09,0.143,-0.074,0.175,0.175,0.122,0.13,0.244,0.201,0.046,-0.445,-0.064,-0.093,0.124,-0.101,0.077,-0.086,-0.083,0.143,-0.116,0.066,0.05,0.047,-0.071,0.096,-0.15,-0.004,0.212,-0.099,-0.158,-0.152,-0.041,0.048,0,0.03,0.214,0.217,0.251,0.023,-0.098,0.133,-0.208,-0.143,-0.158,-0.088,-0.093,0.053,-0.036,0.105,0.004,0.004,0.006,0.025,0.106,-0.155,0.106,0.013,-0.103,-0.051,0.165,0.275,0.143,-0.024,-0.005,0.232,0.06,-0.122,0.041,-0.008,0.161,0.116,0.192,-0.189,-0.079,0.099,0.404,0,-0.049,-0.186,-0.267,-0.189,0.197,-0.168,0.028,0.092,-0.02,-0.128,-0.136,-0.248,-0.031,-0.009,-0.029,0.009,0.487,0.026,0.238,0.038,0.317,-0.312,0.003,-0.043,0.015,-0.031,-0.056,-0.156,0.13,0.103,0.261,0.103,-0.084,0.045,0.067,-0.103,0.04,0.138,-0.013,-0.177,-0.131,-0.033,-0.083,0.07,0.057,-0.211,0.063,-0.18,0.246,0.016,-0.124,0.137,0.145,-0.356,-0.057,-0.265,0.151,-0.216,0.036,0.109,-0.071,0.072,-0.158,0.029,-0.081,-0.003,-0.153,-0.118,-0.188,-0.004,0.021,-0.068,0.269,0.174,-0.036,0.059,0.04,0.022,-0.227,-0.309,0.302,-0.011,-0.092,-0.119,-0.061,-0.082,-0.008,0.175,0.148,0.208,-0.222,-0.148,0.085,0.026,-0.045,0,0.177,0.044,0.092,0.087,-0.088,-0.005,-0.055,0.159,-0.071,0.071,-0.082,0.16,0.122,0.035,-0.168,0.003,0.014,-0.113,-0.079,-0.028,0.16,-0.06,-0.066,0.113,0.031,0.191,-0.03,0.119,-0.14,-0.085,-0.207,-0.133,-0.066,0.031,0.009,-0.183,-0.109,0.214,-0.129,0.34,0.152,-0.037,-0.366,0.015,-0.009,0.128,0.041,-0.031,0.038,-0.061,-0.144,0.065,0.148,-0.008,0.016,0.086,0.131,-0.177,0.006,0.158,0.006,-0.309,0.262,0.122,0.025,0.057,0,0.292,0.209,0.191,0.026,-0.014,0.11,-0.208,-0.242,0.093,-0.131,-0.223,0.041,0.324,0.154,0.023,0.045,-0.177,0.133,-0.041,0.039,0.006,0.019,-0.081,-0.149,-0.125,-0.208,-0.03,0.003,0,0.064,-0.013,0.198,-0.063,0.119,-0.238,0.045,-0.109,0.014,-0.026,0.044,-0.095,0.034,-0.006,0.085,-0.188,0.002,0.089,-0.115,-0.027,-0.114,-0.152,0.114,-0.1,-0.092,-0.029,0.136,0.213,0.069,0.115,-0.154,0.029,0.027,0.024,-0.236,0.084,0.035,0.019,0.242,0.118,-0.019,-0.119,-0.085,0.065,-0.033,0.055,-0.148,0.085,0.037,0.1,-0.05,-0.118,-0.139,0.136,-0.038,-0.189,0.01,-0.398,-0.172,0.061,-0.062,-0.055,0.055,-0.16],"source":"src/helpers/classicBattle/orchestratorHandlers.js [scheduleRoundDecisionGuard]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js","setTimeout","computeAndDispatchOutcome","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"scheduleRoundDecisionGuard"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":["setTimeout","computeAndDispatchOutcome"]}},"version":1},
{"id":"orchestratorHandlers.js-roundDecisionEnter","text":"export async function roundDecisionEnter(machine) {\n  const { store } = machine.context;\n\n  const resolveImmediate = async () => {\n    const stat = store.playerChoice;\n    const pCard = document.getElementById(\"player-card\");\n    const oCard = document.getElementById(\"opponent-card\");\n    const playerVal = getStatValue(pCard, stat);\n    let opponentVal = 0;\n    try {\n      const opp = getOpponentJudoka();\n      const raw = opp && opp.stats ? Number(opp.stats[stat]) : NaN;\n      opponentVal = Number.isFinite(raw) ? raw : getStatValue(oCard, stat);\n    } catch {\n      opponentVal = getStatValue(oCard, stat);\n    }\n    try {\n      console.log(\"DEBUG: roundDecision.resolveImmediate\", { stat, playerVal, opponentVal });\n    } catch {}\n    await resolveRound(store, stat, playerVal, opponentVal);\n  };\n\n  try {\n    if (typeof window !== \"undefined\") {\n      window.__roundDecisionEnter = Date.now();\n    }\n  } catch {}\n  emitBattleEvent(\"debugPanelUpdate\");\n\n  if (store.playerChoice) {\n    try {\n      // Clear any scheduled guard to avoid a race where the guard fires\n      // while resolveImmediate is running.\n      try {\n        if (typeof window !== \"undefined\" && window.__roundDecisionGuard) {\n          clearTimeout(window.__roundDecisionGuard);\n          window.__roundDecisionGuard = null;\n        }\n      } catch {}\n      await resolveImmediate();\n    } catch {\n      try {\n        emitBattleEvent(\"scoreboardShowMessage\", \"Round error. Recovering…\");\n        emitBattleEvent(\"debugPanelUpdate\");\n        await machine.dispatch(\"interrupt\", { reason: \"roundResolutionError\" });\n      } catch {}\n    }\n    return;\n  }\n\n  let waited = 0;\n  const maxWait = 1500;\n  while (!store.playerChoice && waited < maxWait) {\n    await new Promise((r) => setTimeout(r, 50));\n    waited += 50;\n  }\n  try {\n    if (typeof window !== \"undefined\") {\n      const guardId = scheduleRoundDecisionGuard(store, machine);\n      window.__roundDecisionGuard = guardId;\n    }\n  } catch {}\n  if (!store.playerChoice) {\n    try {\n      emitBattleEvent(\"scoreboardShowMessage\", \"No selection detected. Interrupting round.\");\n    } catch {}\n    emitBattleEvent(\"debugPanelUpdate\");\n    await machine.dispatch(\"interrupt\", { reason: \"noSelection\" });\n    return;\n  }\n  try {\n    await resolveImmediate();\n  } catch {\n    try {\n      emitBattleEvent(\"scoreboardShowMessage\", \"Round error. Recovering…\");\n      emitBattleEvent(\"debugPanelUpdate\");\n      await machine.dispatch(\"interrupt\", { reason: \"roundResolutionError\" });\n    } catch {}\n  }\n}","qaContext":"Why: dispatch(\"interrupt\", { reason: \"roundResolutionError\" }); } catch {} } return; } let waited = 0; const maxWait = 1500; while (! How: __roundDecisionGuard = null; } } catch {} await resolveImm...","embedding":[-0.049,0.162,-0.107,0.092,0.03,0.033,0.013,0.17,0.081,-0.011,-0.058,-0.21,-0.173,-0.055,0.004,-0.097,-0.01,-0.034,-0.085,-0.023,0.012,-0.02,0.058,-0.036,-0.083,-0.027,-0.03,-0.143,0.014,-0.091,0.071,-0.011,-0.049,0.001,-0.055,-0.024,-0.112,-0.118,-0.068,-0.112,0.066,0.194,-0.156,-0.021,0.057,-0.147,-0.214,0.013,0.056,0.084,-0.104,0.062,-0.04,0.018,0.115,0.064,0.083,0.025,0.035,0.081,0.062,-0.214,-0.005,-0.044,0.098,0.014,0.065,-0.018,0.017,0.115,-0.019,0.094,0.059,-0.028,-0.099,-0.002,-0.133,-0.079,0.011,0.029,-0.028,-0.138,-0.099,-0.01,0.153,0.056,0.089,0.021,0.062,-0.068,-0.202,0.2,-0.069,0.117,0.065,0.195,0.007,0.023,-0.047,0.068,-0.012,0.059,-0.035,0.082,0.052,-0.124,0.083,-0.025,-0.107,0.017,0.053,0.147,0.074,0.061,0.007,0.094,0.088,-0.02,-0.008,0.036,0.236,0.045,0.011,-0.043,0.133,-0.05,0.209,0,0.042,-0.223,-0.117,0.01,0.137,0.031,0.095,0.072,-0.03,-0.009,-0.015,-0.03,-0.019,-0.212,0.05,-0.088,0.075,0.056,0.035,0.036,0.209,-0.189,-0.053,0.06,0.055,0.059,-0.064,0,-0.022,-0.011,0.153,-0.02,-0.084,0.105,0.061,-0.115,-0.039,0.057,-0.122,-0.029,-0.141,-0.008,-0.165,0.019,-0.14,-0.243,-0.086,-0.023,0.052,0.06,-0.084,0.138,0.033,-0.183,0.052,0.014,0.049,0.028,-0.1,0.047,0.038,-0.005,-0.116,-0.073,-0.075,0.087,-0.196,-0.132,-0.02,-0.131,0.019,-0.072,0.126,0.031,-0.034,0.009,-0.056,0.097,-0.16,-0.278,0.133,-0.068,-0.17,0.088,0.077,0.108,-0.028,-0.038,-0.047,0.193,-0.087,0.029,0.062,-0.052,-0.092,0,-0.03,0.001,-0.115,0.053,0.085,0.108,-0.007,0.082,-0.013,-0.1,-0.022,0.113,-0.07,0.054,0.036,0.067,0.053,-0.076,-0.032,0.061,0.085,0.029,0.061,0.027,-0.07,0.168,0.056,-0.016,-0.022,-0.117,0.044,0.023,-0.154,0.018,0.133,-0.182,0.113,0.016,-0.125,0.135,0.15,-0.068,-0.136,-0.006,0.02,-0.028,0.118,0.026,0.063,-0.033,0.067,-0.11,-0.044,0.056,-0.05,0.007,0.096,-0.16,0.085,0.061,0.052,-0.154,0.029,-0.083,0.131,0.119,-0.108,0.053,0.175,0.198,-0.069,0.132,0.034,-0.052,0.044,0.099,-0.072,-0.193,0.158,0.08,-0.051,0.084,0.042,-0.144,0.031,0.026,-0.079,0.03,-0.029,-0.002,-0.115,0.009,-0.074,-0.029,-0.019,0,-0.159,-0.029,-0.011,0.062,0.086,-0.071,0.006,-0.255,0.027,-0.125,0.051,0.062,0.144,-0.052,0.014,-0.173,0.031,0.035,-0.08,0.057,0.008,-0.032,0.006,0.04,0.067,-0.004,0.101,0.11,0.082,-0.012,-0.143,0.046,0.131,0.028,-0.051,-0.006,0.149,-0.016,0.098,0.072,0.065,0.075,-0.057,0.031,-0.025,-0.023,-0.013,0.009,0.185,0.042,-0.152,-0.15,-0.083,0.062,-0.063,-0.115,0.053,-0.158,-0.051,0.098,0.07,-0.098,-0.024,0.085],"source":"src/helpers/classicBattle/orchestratorHandlers.js [roundDecisionEnter]","tags":["code","why","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js","getElementById","getStatValue","getOpponentJudoka","Number","isFinite","resolveRound","now","emitBattleEvent","resolveImmediate","dispatch","setTimeout","isStateTransition","scheduleNextRound","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"roundDecisionEnter"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":["getElementById","getStatValue","getOpponentJudoka","Number","isFinite","resolveRound","now","emitBattleEvent","resolveImmediate","dispatch","setTimeout","isStateTransition","scheduleNextRound"]}},"version":1},
{"id":"orchestratorHandlers.js-roundDecisionExit","text":"export async function roundDecisionExit() {\n  // Clear any scheduled decision guard to prevent late outcome dispatch.\n  try {\n    if (typeof window !== \"undefined\" && window.__roundDecisionGuard) {\n      clearTimeout(window.__roundDecisionGuard);\n      window.__roundDecisionGuard = null;\n    }\n  } catch {}\n}","qaContext":"Why: export async function roundDecisionExit() { // Clear any scheduled decision guard to prevent late outcome dispatch. How: try { if (typeof window !","embedding":[-0.095,0.301,-0.098,0.229,0.124,-0.071,0.049,0.072,0.186,-0.077,-0.138,-0.151,-0.319,0.043,-0.122,-0.144,-0.174,-0.066,-0.138,-0.12,0.018,-0.052,0.114,0.167,-0.029,-0.221,-0.065,-0.232,0.064,-0.076,-0.062,-0.025,-0.099,-0.174,0.005,0.093,-0.051,-0.046,0.18,-0.082,0.166,0.098,-0.163,-0.049,-0.103,-0.115,-0.176,-0.047,-0.136,0.135,-0.025,0.121,-0.161,-0.19,0.117,0.057,0.124,0.088,0.048,0.236,-0.059,-0.344,-0.143,-0.025,0.029,0.076,-0.077,-0.192,0.081,0.033,0.025,0.037,0.113,0.099,-0.021,-0.174,-0.131,-0.051,-0.068,0.188,-0.148,-0.164,-0.055,0.063,0.279,0.154,0.166,0.033,0.052,0.078,-0.194,0.117,-0.188,0.146,0.044,0.072,0.007,0.009,-0.207,0.092,-0.091,-0.05,-0.041,0.088,0.079,0.002,0.067,-0.147,-0.069,-0.064,0.043,0.078,0.124,0.092,0,0.126,0.034,-0.097,0.019,-0.025,0.327,0.09,0.104,-0.203,0.18,0.084,0.374,0,-0.205,-0.257,-0.244,0.029,0.125,0.038,0.075,-0.023,-0.086,-0.086,0.054,-0.094,-0.054,-0.251,0.101,-0.154,0.356,0.125,0.086,0.001,0.237,-0.155,-0.19,0.042,0.093,-0.141,-0.118,-0.102,0.002,0.089,-0.016,0.213,-0.017,0.129,0.016,0.001,-0.077,0.098,-0.048,-0.044,-0.229,-0.001,-0.302,0.062,-0.109,-0.135,0.038,0.044,0.025,-0.009,-0.028,0.202,0.089,-0.166,0.111,-0.088,0.153,-0.08,-0.069,0.04,0.092,0.053,-0.23,-0.078,-0.084,-0.105,-0.22,-0.177,-0.128,-0.152,0.004,0.032,0.13,0.113,0.032,-0.008,0.123,0.227,0.043,-0.299,0.264,-0.04,-0.092,-0.107,0.173,0.007,-0.089,0.073,-0.013,0.171,-0.136,-0.094,0.161,0.078,-0.062,0,0.034,0.01,-0.064,0.204,-0.047,0.234,-0.1,0.038,0.012,-0.01,0.025,0.249,-0.067,0.032,-0.055,-0.004,0.126,-0.09,-0.095,0.029,0.378,-0.076,-0.192,0.116,-0.029,0.159,0.022,0.078,-0.006,0.001,-0.152,-0.108,-0.013,-0.167,0.193,-0.211,0.055,0.09,-0.164,0.138,0.134,-0.063,-0.203,0.008,0.06,0.036,0.092,0.126,-0.072,-0.035,-0.02,-0.047,0.052,0.074,-0.022,0.052,0.126,-0.178,0.2,0.192,-0.001,-0.107,0.243,-0.111,0.004,-0.014,-0.152,0.293,0.216,0.263,0.095,0.143,-0.021,-0.011,-0.118,-0.069,0.024,-0.193,0.219,0.345,0.154,0.176,0.168,-0.15,-0.001,0.081,0.024,0.15,0.032,0.09,-0.056,-0.103,-0.044,0.048,-0.041,0,-0.22,0.017,0.013,-0.083,0.032,-0.154,-0.091,-0.185,0.031,-0.282,0.134,0.056,0.188,-0.03,-0.002,-0.165,0.01,0.12,-0.008,0.014,-0.036,-0.107,0.037,-0.091,-0.063,-0.048,-0.081,0.285,0.029,-0.019,-0.235,0.174,0.059,0.141,-0.198,-0.009,0.22,-0.1,0.091,0.062,0.128,-0.112,-0.034,0.038,-0.168,0.022,-0.052,-0.105,0.017,0.008,0.048,-0.012,-0.09,0.287,-0.036,-0.045,0.062,-0.295,-0.289,0.05,-0.089,-0.083,0.02,0.105],"source":"src/helpers/classicBattle/orchestratorHandlers.js [roundDecisionExit]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"roundDecisionExit"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-roundOverEnter","text":"export async function roundOverEnter(machine) {\n  const store = machine?.context?.store;\n  if (store) {\n    store.playerChoice = null;\n    store.selectionMade = false;\n  }\n}","qaContext":"Why: export async function roundOverEnter(machine) { const store = machine? How: context?","embedding":[-0.07,0.111,-0.081,0.138,0.066,0.077,-0.051,0.118,0.143,0.056,0.027,-0.211,-0.328,-0.332,0.207,0.042,-0.161,-0.203,0.035,-0.152,-0.112,-0.29,0.097,0.022,-0.041,-0.071,0.049,-0.091,0.013,-0.172,-0.057,0.114,-0.122,-0.067,0.011,0.168,0.026,-0.09,0.038,-0.181,0.324,0.385,-0.129,-0.157,0.009,-0.006,-0.267,0.102,0.032,0.259,-0.022,-0.018,-0.099,-0.083,0.012,0.229,0.305,0.051,0.004,0.071,0.127,-0.412,-0.064,-0.032,0.132,-0.017,-0.05,-0.051,-0.15,-0.002,0.007,0.109,0.022,0.102,0.148,-0.246,-0.186,-0.151,0.022,0.322,-0.122,-0.096,-0.139,-0.181,0.136,-0.047,0.083,-0.103,-0.004,0.059,-0.343,0.071,0.049,0.008,-0.111,0.227,-0.027,0.066,0.049,-0.098,-0.106,0.033,0.399,0.152,-0.038,-0.173,0.052,-0.127,-0.072,0.019,-0.115,0.36,0.136,0.087,-0.237,0.144,0.177,-0.176,0.03,-0.031,0.384,0.115,0.198,0.046,-0.047,-0.02,0.281,0,-0.185,-0.425,-0.111,-0.069,0.109,-0.1,0.162,-0.076,-0.228,-0.088,-0.047,0,-0.042,-0.054,0.103,-0.173,0.219,0.038,0.219,0.008,0.013,-0.124,-0.117,0.011,0.111,-0.039,-0.222,0.002,-0.047,0.011,0.2,-0.006,-0.059,0.162,0.002,0.114,-0.09,0.04,-0.227,-0.017,-0.032,-0.061,-0.137,0.005,-0.32,-0.12,-0.081,-0.05,0.082,0.002,-0.187,0.202,-0.144,-0.186,0.083,-0.07,0.077,-0.165,0.012,0.134,0.158,0.112,-0.027,0.101,-0.052,0.039,-0.008,-0.292,0.068,-0.153,0.062,-0.046,0.052,0.09,0.106,0.032,-0.235,0.071,0.04,-0.422,0.154,-0.143,-0.376,0.135,0.018,0.078,-0.072,-0.135,0.198,0.145,-0.141,-0.066,0.157,-0.024,-0.148,0,0.123,-0.158,-0.034,0.26,-0.096,0.208,0.01,0.081,-0.201,0.024,0.046,0.123,-0.07,0.05,0.12,0.3,0.323,-0.145,0.087,-0.181,0.089,-0.152,-0.03,0.121,-0.157,-0.053,0.062,-0.043,0.102,-0.137,-0.138,0.187,0.178,0.02,0.027,-0.101,0.099,0.108,-0.146,0.081,0.107,0.025,-0.42,0.003,-0.093,-0.052,0.043,0.244,0.172,-0.042,-0.126,-0.001,0.103,-0.229,-0.123,0.188,0.128,-0.268,0.343,-0.054,-0.037,-0.315,0.223,-0.22,0.188,-0.004,-0.084,0.402,0.142,0.184,-0.071,0.292,0.322,-0.061,-0.116,-0.029,0.006,-0.167,0.43,0.147,0.06,0.069,0.141,-0.108,-0.066,-0.12,0.078,0.2,-0.114,0.022,-0.006,-0.119,-0.176,-0.083,-0.012,0,-0.305,-0.207,0.062,-0.011,0.093,-0.004,0.121,-0.198,0.101,-0.113,-0.112,0.176,0.23,-0.065,0.02,-0.023,0.039,0.261,-0.034,0.199,-0.034,0.069,0.029,0.029,0.142,-0.05,-0.098,0.085,0.275,-0.016,-0.28,0.282,0.122,0.05,-0.122,-0.13,0.338,0.039,0.083,0.073,0.006,-0.025,-0.252,-0.046,-0.103,0.053,-0.042,-0.073,0.171,0.102,-0.061,-0.171,0.047,0.161,-0.001,-0.158,-0.108,-0.071,-0.071,-0.044,-0.05,-0.071,0.088,0.135],"source":"src/helpers/classicBattle/orchestratorHandlers.js [roundOverEnter]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"roundOverEnter"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-roundOverExit","text":"export async function roundOverExit() {}","embedding":[-0.463,0.197,-0.315,0.405,0.323,-0.197,-0.144,0.085,0.359,-0.224,-0.009,-0.118,-0.71,-0.749,0.236,-0.17,-0.517,-0.241,-0.357,-0.204,-0.108,-0.165,0.028,0.143,0.187,-0.414,-0.081,-0.307,0.019,-0.19,0.071,0.436,-0.587,-0.281,0.08,0.445,0.059,0.066,0.376,-0.315,0.418,0.517,0.118,-0.37,0.177,-0.147,-0.316,0.006,0.088,0.335,0.343,0.474,-0.548,-0.108,-0.017,0.19,0.218,-0.179,-0.111,0.269,-0.045,-0.477,-0.12,0.104,-0.023,-0.25,-0.042,-0.222,-0.084,0.088,-0.277,0.119,-0.041,0.129,0.365,-0.26,-0.439,-0.002,-0.257,0.399,0.027,-0.136,-0.048,-0.051,0.265,-0.03,0.19,-0.025,0.017,0.189,-0.475,0.349,-0.325,0.225,-0.319,0.21,0.062,0.286,-0.056,-0.018,-0.214,0.06,0.29,0.018,-0.063,-0.192,0.216,-0.436,0.223,-0.102,-0.171,0.237,0.188,0.077,-0.042,0.081,0.077,-0.307,0.307,-0.192,0.631,0.329,0.446,0.1,0.151,0.095,0.507,0,-0.328,-0.419,-0.162,-0.119,0.12,0.252,0.193,-0.455,-0.299,-0.227,-0.129,-0.101,-0.094,-0.274,-0.16,-0.279,0.648,0.076,0.283,0.064,0,-0.273,-0.178,0.222,0.213,-0.098,-0.191,-0.06,-0.326,0.182,0.07,0.322,-0.05,0.347,-0.097,-0.065,-0.084,-0.141,-0.351,0.15,-0.26,0.143,-0.374,-0.24,-0.415,-0.112,-0.156,0.296,0.319,-0.221,-0.531,0.461,0.059,-0.34,0.254,-0.148,0.122,-0.258,0.18,0.132,0.103,0.224,-0.167,-0.083,0.002,-0.102,-0.059,-0.132,-0.131,0.011,0.206,0.15,-0.194,0.121,0.443,0.229,-0.154,0.141,0.279,-0.453,0.199,0.161,-0.408,-0.135,0.254,0.051,-0.187,-0.258,0.257,0.191,-0.43,-0.276,0.153,-0.409,-0.276,0,0.194,-0.008,-0.277,0.39,0.066,0.276,-0.05,0.007,-0.006,0.384,-0.137,0.114,-0.438,-0.15,0.114,0.139,0.817,0.055,0.281,-0.271,0.258,-0.206,0.312,0.42,-0.237,-0.114,0.172,0.176,0.067,-0.137,-0.355,0.128,0.319,0.046,0.201,-0.025,0.184,0.153,0.045,0.061,0.288,-0.123,-0.561,-0.055,0.067,-0.351,-0.072,0.432,-0.044,-0.077,0.151,0.156,0.101,0.131,-0.046,0.118,0.352,-0.183,0.431,-0.086,-0.195,-0.386,0.65,-0.623,0.164,-0.01,-0.134,0.381,0.154,0.715,-0.013,0.078,0.204,0.164,-0.256,-0.102,0.112,-0.37,0.81,0.528,-0.033,0.054,0.232,-0.175,0.079,-0.384,0.183,0.635,0.051,0.074,0.052,-0.48,-0.314,0.111,0.017,0,-0.329,-0.253,0.039,0.055,0.058,0.101,-0.042,-0.245,0.067,-0.511,0.02,0.148,0.684,-0.076,-0.151,-0.077,0.118,0.255,-0.145,-0.127,-0.306,0.053,-0.217,-0.233,-0.117,0.096,-0.158,0.103,0.122,-0.503,-0.517,0.368,-0.121,0.231,-0.373,-0.299,0.61,0.002,0.412,0.218,-0.09,-0.125,0.07,0.019,-0.083,-0.102,-0.142,-0.166,0.047,0.066,0.193,-0.219,0.094,0.441,-0.031,-0.127,-0.195,-0.355,-0.201,0.083,-0.259,-0.113,0.366,0.173],"source":"src/helpers/classicBattle/orchestratorHandlers.js [roundOverExit]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"roundOverExit"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-matchDecisionEnter","text":"export async function matchDecisionEnter() {}","embedding":[-0.235,0.429,-0.231,0.132,0.182,-0.163,0.042,0.049,0.328,-0.02,0.01,-0.507,-0.28,-0.214,-0.076,-0.274,-0.234,0.011,-0.36,-0.405,0.06,0.28,0.048,0.212,0.128,-0.328,-0.185,-0.358,0.103,-0.155,0.013,0.011,-0.14,0.025,0.158,0.173,-0.157,-0.321,0.424,-0.336,0.182,0.107,-0.119,-0.212,0.295,-0.022,-0.168,0.178,-0.016,0.279,-0.038,0.454,-0.462,-0.378,0.394,0.375,0.245,-0.12,0.035,0.002,0.002,-0.525,-0.209,-0.073,0.177,-0.399,-0.13,-0.323,0.003,0.302,-0.246,-0.007,0.19,0.223,-0.002,0.046,-0.527,0.114,-0.006,0.281,-0.11,-0.279,0.075,0.172,0.299,0.23,-0.02,0.122,0.107,0.111,-0.334,0.066,-0.089,0.015,-0.06,0.149,0.204,0.418,0.298,0.19,-0.391,0.203,-0.154,-0.039,-0.121,-0.053,0.099,-0.259,0.202,-0.106,-0.096,0.129,-0.029,0.01,0.073,0.064,0.439,-0.362,0.291,0.265,0.416,0.004,0.054,0.244,0.075,0.211,0.317,0,-0.143,-0.238,-0.064,-0.378,-0.154,0.279,-0.074,-0.34,-0.18,-0.058,-0.262,-0.018,-0.036,-0.276,-0.13,-0.151,0.363,0.022,-0.225,0.204,0.162,-0.183,-0.221,0.186,0.189,-0.366,-0.404,0.005,-0.126,0.033,-0.03,-0.046,0.045,0.135,0.164,0.208,0.141,-0.064,-0.509,0.014,-0.348,0.15,-0.311,0.018,-0.236,-0.348,-0.142,0.178,0.571,-0.132,-0.114,0.542,0.215,-0.635,0.176,-0.218,0.153,0.047,0.051,0.168,-0.115,-0.064,-0.142,0.113,-0.07,-0.044,0.01,-0.039,-0.154,0.009,0.131,0.005,-0.187,-0.05,0.46,0.008,-0.134,0.158,-0.052,-0.613,-0.13,0.266,-0.364,-0.134,0.077,0.048,0,-0.121,0.253,-0.008,-0.07,-0.138,0.012,-0.112,0.13,0,0.233,0.04,0.103,0.117,-0.197,0.002,0.11,0.062,-0.159,0.28,0.036,0.007,-0.315,-0.113,-0.01,0.102,0.187,0.116,0.083,-0.059,0.401,0.069,0.219,0.078,-0.247,0.118,0.368,0.096,-0.158,-0.236,-0.364,0.154,-0.069,0.004,-0.069,-0.299,-0.066,0.198,0.012,0.11,0.024,0.134,-0.388,0.297,0.132,-0.295,0.008,0.342,0.246,-0.356,0.417,0.117,-0.066,0.006,-0.033,0.23,-0.192,-0.089,0.1,0.191,-0.124,-0.184,0.55,-0.047,0.175,-0.171,0.079,0.392,0.109,0.635,0.232,-0.102,-0.121,0.296,-0.246,-0.275,-0.082,-0.124,0.31,0.775,0.02,0.199,0.411,0.185,0.117,-0.165,-0.024,0.281,-0.078,0.078,-0.018,-0.172,-0.366,-0.104,-0.074,0,-0.568,-0.266,-0.375,-0.01,-0.233,0.239,-0.246,-0.562,0.334,-0.148,0.097,-0.028,0.113,-0.264,0.059,-0.228,0.452,0.181,-0.189,-0.054,-0.243,0.295,0.013,-0.128,0.125,0.037,-0.083,0.624,0.331,-0.059,-0.154,0.082,0.206,-0.123,-0.221,-0.184,0.493,0.02,0.331,0.302,0.049,-0.177,-0.001,0.104,-0.119,-0.169,-0.09,-0.218,0.213,-0.007,0.211,-0.328,-0.231,0.338,-0.108,-0.412,-0.194,-0.15,-0.191,0.158,0.234,0.003,0.43,-0.02],"source":"src/helpers/classicBattle/orchestratorHandlers.js [matchDecisionEnter]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"matchDecisionEnter"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-matchDecisionExit","text":"export async function matchDecisionExit() {}","embedding":[-0.372,0.453,-0.271,0.215,0.224,-0.236,-0.05,-0.054,0.344,-0.222,0.007,-0.361,-0.351,-0.224,-0.142,-0.281,-0.211,0.065,-0.493,-0.326,0.02,0.207,0.08,0.151,0.242,-0.368,-0.225,-0.446,-0.005,-0.15,0.17,-0.114,-0.231,-0.092,0.214,0.255,-0.167,-0.379,0.492,-0.334,0.241,0.091,-0.194,-0.155,0.318,-0.019,-0.174,0.094,-0.086,0.17,-0.003,0.614,-0.557,-0.427,0.24,0.287,0.181,-0.051,-0.097,0.18,0.045,-0.502,-0.256,-0.057,0.114,-0.369,-0.132,-0.328,0.082,0.212,-0.306,-0.015,0.149,0.273,0.005,0.08,-0.496,0.159,-0.075,0.204,-0.098,-0.304,0.153,0.139,0.222,0.338,0.041,0.14,0.017,0.126,-0.368,0.098,-0.282,0.119,-0.091,0.197,0.142,0.556,0.103,0.108,-0.441,0.108,-0.122,-0.083,-0.131,-0.14,0.092,-0.178,0.213,-0.11,-0.084,-0.037,-0.2,0.13,0.186,-0.076,0.459,-0.24,0.223,0.248,0.484,0.005,0.177,0.196,0.09,0.202,0.311,0,-0.096,-0.154,-0.153,-0.336,-0.065,0.348,-0.053,-0.374,-0.268,0.004,-0.27,0.054,-0.057,-0.299,-0.212,-0.134,0.437,-0.021,-0.002,0.254,0.265,0.026,-0.126,0.199,0.096,-0.485,-0.412,0.011,-0.108,0.059,-0.051,-0.064,0.012,0.059,0.185,0.1,0.133,-0.118,-0.537,-0.041,-0.319,0.163,-0.479,-0.013,-0.271,-0.268,-0.18,0.136,0.54,-0.175,-0.145,0.481,0.182,-0.532,0.257,-0.349,0.234,-0.046,0.143,0.204,-0.102,-0.036,-0.173,-0.05,0.058,-0.237,-0.017,0.023,-0.182,-0.074,0.136,0.071,-0.028,-0.141,0.531,-0.005,-0.131,0.282,0.028,-0.57,-0.074,0.255,-0.29,-0.17,-0.007,0.117,-0.139,0.072,0.356,0.032,0.009,-0.155,-0.019,-0.326,0.101,0,0.263,0,0.058,0.144,-0.143,0.025,0.144,0.086,-0.004,0.347,0.15,-0.032,-0.184,-0.15,-0.121,0.014,0.251,-0.019,0.173,-0.031,0.354,0.222,0.279,0.344,-0.216,0.11,0.212,0.085,-0.15,-0.233,-0.312,0.111,-0.121,-0.089,-0.099,-0.338,-0.081,0.418,0.025,0.09,0.021,0.087,-0.473,0.19,0.235,-0.229,0.021,0.254,0.184,-0.307,0.556,0.126,-0.091,0.013,-0.058,0.038,-0.085,-0.047,0.248,0.255,-0.025,-0.169,0.572,-0.095,0.01,-0.119,0.04,0.472,0.298,0.637,0.147,-0.121,-0.128,0.397,-0.078,-0.294,-0.121,-0.206,0.449,0.864,0.006,0.269,0.329,0.074,0.222,-0.12,0.041,0.302,-0.072,-0.01,0.082,-0.215,-0.379,-0.052,-0.041,0,-0.469,-0.164,-0.252,-0.058,-0.216,0.158,-0.183,-0.414,0.422,-0.244,0.154,-0.075,0.175,-0.171,0.013,-0.255,0.545,0.233,-0.073,-0.151,-0.244,0.185,-0.024,-0.074,0.159,-0.025,-0.058,0.404,0.195,-0.065,-0.18,0.028,0.3,-0.085,-0.197,-0.207,0.484,0.042,0.26,0.381,-0.015,-0.152,0.072,0.145,-0.173,-0.239,0.041,-0.305,0.146,0.044,0.352,-0.258,-0.322,0.331,-0.181,-0.441,-0.257,-0.276,-0.33,0.116,0.168,-0.095,0.441,0.046],"source":"src/helpers/classicBattle/orchestratorHandlers.js [matchDecisionExit]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"matchDecisionExit"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-matchOverEnter","text":"export async function matchOverEnter() {}","embedding":[-0.402,0.016,-0.132,0.269,0.12,0.034,-0.126,0.084,0.268,-0.116,-0.075,-0.255,-0.447,-0.633,0.375,0.019,-0.43,-0.237,-0.174,-0.279,-0.062,-0.264,-0.039,0.061,-0.175,-0.326,-0.216,-0.173,0.028,-0.167,0.114,0.311,-0.291,0.074,-0.131,0.378,-0.101,-0.123,0.213,-0.387,0.22,0.431,0.109,-0.468,0.206,-0.174,-0.137,0.148,0.2,0.416,-0.01,0.207,-0.327,-0.222,0.492,0.654,0.22,-0.179,0.042,0.042,0.173,-0.441,-0.24,0.018,0.103,-0.358,-0.271,0.074,-0.077,0.32,-0.433,-0.151,0.235,0.184,0.316,0.065,-0.522,-0.095,0.005,0.168,0.105,-0.203,-0.215,0.118,0.385,0.341,-0.065,-0.126,0.289,0.036,-0.305,0.011,0.058,-0.016,-0.212,0.265,-0.032,0.364,0.419,0.127,-0.277,0.288,0.287,0.263,-0.119,0.034,0.05,-0.239,0.259,-0.025,-0.139,0.187,0.185,-0.035,-0.198,0.214,0.304,-0.383,0.312,0.243,0.551,0.16,0.277,0.043,0.023,0.025,0.149,0,-0.166,-0.427,-0.199,-0.316,0.104,-0.009,-0.039,-0.318,-0.542,-0.095,-0.383,0.058,-0.193,-0.144,-0.302,-0.124,0.361,0.033,-0.051,0.205,0,-0.387,-0.375,0.089,0.244,-0.058,-0.234,0.086,-0.059,0.048,0.094,0.053,-0.033,0.314,0.004,0.094,-0.063,-0.164,-0.562,0.117,-0.289,0.043,-0.329,-0.227,-0.266,-0.496,-0.208,0.21,0.637,0.054,-0.237,0.38,-0.12,-0.587,-0.001,0.056,-0.165,0.109,0.17,0.335,-0.183,-0.103,-0.095,0.073,0.114,0.19,-0.093,-0.026,-0.07,-0.058,0.3,0.067,-0.332,0.082,0.448,0.064,-0.33,0.155,0.052,-0.351,-0.177,0.044,-0.497,0.071,0.066,0.071,-0.027,-0.597,0.164,0.112,-0.345,-0.205,-0.064,-0.239,0.001,0,0.355,-0.188,0.028,-0.016,-0.148,0.207,0.264,-0.03,-0.29,0.408,0.025,0.118,-0.139,-0.219,-0.028,0.256,0.544,0.065,0.203,-0.235,0.323,-0.157,0.3,0.107,-0.209,-0.079,0.509,0.07,-0.154,-0.157,-0.33,0.201,0.264,0.283,0.11,0.042,-0.12,0.114,0.109,-0.245,0.223,0.313,-0.47,0.158,0.147,-0.177,-0.106,0.437,0.27,-0.24,0.313,0.04,0.021,-0.126,-0.057,0.269,0.384,-0.139,0.134,-0.027,-0.079,-0.478,0.45,-0.174,0.496,-0.12,-0.112,0.226,0.145,0.508,0.105,0.011,-0.014,0.131,-0.175,-0.138,0.009,-0.266,0.314,0.722,-0.108,-0.014,0.473,0.055,0.168,-0.066,-0.103,0.587,-0.028,0.185,-0.174,-0.184,-0.456,-0.314,0.035,0,-0.524,-0.209,-0.234,-0.046,-0.19,0.245,-0.18,-0.635,0.109,-0.147,-0.173,0.156,0.263,-0.095,-0.074,-0.207,0.194,0.283,-0.307,0.077,-0.375,0.266,-0.138,0.056,0.043,0.048,-0.132,0.149,0.31,-0.236,-0.24,0.235,0.03,-0.176,-0.181,-0.15,0.47,-0.05,0.255,0.358,0.136,0.029,-0.011,-0.045,0.143,-0.014,-0.151,-0.317,0.256,-0.043,0.388,-0.346,-0.078,0.205,-0.073,-0.231,-0.21,-0.083,0.124,0.109,0.133,-0.036,0.452,-0.104],"source":"src/helpers/classicBattle/orchestratorHandlers.js [matchOverEnter]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"matchOverEnter"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-matchOverExit","text":"export async function matchOverExit() {}","embedding":[-0.539,0.059,-0.048,0.322,0.253,0.035,-0.067,-0.067,0.263,-0.326,-0.045,-0.133,-0.488,-0.622,0.302,0.084,-0.31,-0.111,-0.475,-0.232,-0.071,-0.167,-0.111,0.003,0.004,-0.321,-0.275,-0.408,-0.049,-0.005,0.248,0.169,-0.408,0.01,0.077,0.405,-0.175,-0.209,0.369,-0.342,0.232,0.284,-0.02,-0.354,0.274,-0.128,-0.138,0.094,0.162,0.23,0.075,0.442,-0.565,-0.199,0.403,0.577,0.146,-0.129,-0.094,0.16,0.18,-0.441,-0.269,-0.012,0.101,-0.406,-0.279,-0.026,0.039,0.262,-0.522,-0.042,0.184,0.271,0.237,0.154,-0.555,-0.148,-0.112,0.115,0.045,-0.287,-0.087,0.156,0.37,0.377,-0.088,-0.168,0.057,0.096,-0.434,-0.027,-0.144,0.135,-0.206,0.265,0.078,0.495,0.312,0.068,-0.294,0.227,0.196,0.106,-0.209,-0.241,-0.029,-0.227,0.172,-0.179,-0.121,-0.019,0.038,0.109,-0.066,0.055,0.403,-0.174,0.176,0.321,0.566,0.126,0.359,0.034,0.093,0.12,0.252,0,-0.145,-0.453,-0.175,-0.296,0.024,0.153,-0.046,-0.47,-0.446,-0.041,-0.273,0.079,-0.203,-0.155,-0.412,-0.078,0.374,-0.003,0.164,0.215,0.007,-0.123,-0.261,0.108,0.07,-0.264,-0.238,-0.035,-0.045,0.086,0.059,0.051,-0.103,0.236,0.011,0.118,-0.015,-0.279,-0.608,0.007,-0.322,0.109,-0.325,-0.173,-0.187,-0.338,-0.205,0.192,0.518,-0.145,-0.313,0.348,-0.005,-0.545,-0.028,-0.042,-0.039,0.021,0.219,0.27,-0.161,-0.012,-0.16,-0.02,0.213,-0.076,0.05,0.031,-0.097,-0.065,0.334,0.11,-0.212,-0.088,0.509,0.153,-0.289,0.268,0.139,-0.457,-0.187,0.152,-0.464,-0.049,0.162,0.262,-0.235,-0.485,0.372,0.085,-0.179,-0.255,-0.176,-0.474,0.086,0,0.473,-0.099,-0.062,0.019,-0.008,0.119,0.158,-0.038,-0.078,0.424,0.067,-0.013,-0.056,-0.23,-0.137,0.167,0.47,0.052,0.306,-0.262,0.328,-0.062,0.307,0.426,-0.142,-0.08,0.319,0.063,-0.193,-0.127,-0.224,0.158,0.204,0.207,0.109,0.098,-0.118,0.301,0.092,-0.097,0.136,0.169,-0.521,0.107,0.213,-0.229,-0.112,0.364,0.162,-0.162,0.437,0.067,-0.081,-0.198,-0.026,0.064,0.279,0.006,0.134,0.123,0.033,-0.285,0.515,-0.251,0.269,-0.208,-0.045,0.324,0.343,0.445,0.007,-0.085,0.034,0.218,-0.071,-0.195,-0.005,-0.198,0.524,0.856,-0.286,0.081,0.259,0.058,0.222,-0.163,-0.028,0.713,0.075,-0.084,-0.009,-0.222,-0.398,-0.175,-0.131,0,-0.422,-0.197,-0.117,-0.037,-0.059,0.166,-0.095,-0.371,0.134,-0.292,-0.035,0.078,0.346,-0.034,-0.149,-0.233,0.329,0.175,-0.231,-0.014,-0.353,0.138,-0.113,0.092,0.185,0.076,-0.117,-0.168,0.235,-0.058,-0.139,0.123,0.002,-0.21,-0.13,-0.088,0.499,-0.091,0.21,0.449,0.126,-0.1,0.119,0.081,0.097,-0.182,-0.028,-0.468,0.19,-0.011,0.455,-0.358,-0.092,0.203,-0.087,-0.306,-0.17,-0.038,-0.024,0.188,0.002,-0.174,0.498,0.002],"source":"src/helpers/classicBattle/orchestratorHandlers.js [matchOverExit]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"matchOverExit"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-interruptRoundEnter","text":"export async function interruptRoundEnter(machine, payload) {\n  emitBattleEvent(\"scoreboardClearMessage\");\n  emitBattleEvent(\"debugPanelUpdate\");\n  // Ensure store selection is cleared when an interrupt occurs so leftover\n  // `playerChoice` doesn't persist and block future rounds.\n  try {\n    const store = machine?.context?.store;\n    if (store) {\n      store.playerChoice = null;\n      store.selectionMade = false;\n    }\n    if (typeof window !== \"undefined\" && window.__roundDecisionGuard) {\n      clearTimeout(window.__roundDecisionGuard);\n      window.__roundDecisionGuard = null;\n    }\n  } catch {}\n  // Expose the last interrupt reason for diagnostics and tests\n  try {\n    if (typeof window !== \"undefined\") {\n      window.__classicBattleLastInterruptReason = payload?.reason || \"\";\n    }\n  } catch {}\n  if (payload?.reason) {\n    emitBattleEvent(\"scoreboardShowMessage\", `Round interrupted: ${payload.reason}`);\n  }\n  if (payload?.adminTest) {\n    await machine.dispatch(\"roundModification\", payload);\n  } else {\n    await machine.dispatch(\"cooldown\");\n  }\n}","qaContext":"Why: __roundDecisionGuard = null; } } catch {} // Expose the last interrupt reason for diagnostics and tests try { if (typeof window ! How: reason) { emitBattleEvent(\"scoreboardShowMessage\", `Round...","embedding":[-0.016,0.133,-0.101,0.119,0.134,0.029,0.094,0.038,0.039,0.036,0.018,-0.145,-0.182,-0.031,-0.031,-0.078,0.035,-0.121,-0.059,-0.065,-0.032,-0.023,0.038,0.101,-0.054,-0.067,0.03,-0.085,0.031,-0.053,0.098,-0.029,-0.026,-0.001,0.039,-0.016,-0.053,-0.049,0.02,-0.136,0.107,0.057,-0.22,-0.027,-0.029,-0.13,-0.132,-0.035,-0.017,0.137,0.006,0.055,-0.022,-0.031,0.1,0.08,0.15,0.048,-0.056,0.045,-0.088,-0.212,-0.101,-0.08,0.058,0.126,0.069,0.026,0.087,0.075,-0.009,0.069,0.041,-0.029,-0.022,0.048,-0.111,-0.048,-0.033,0.034,-0.012,-0.175,-0.004,-0.094,0.112,0.054,0.116,-0.013,0.031,0.11,-0.144,0.073,0.003,0.1,0.05,0.131,-0.008,-0.008,0.046,0.021,-0.04,0.041,-0.04,0.059,-0.01,-0.126,0.011,-0.043,-0.111,-0.062,0.01,0.156,0.109,0.038,-0.038,0.124,0.095,0.017,-0.018,-0.02,0.269,0.098,0.095,-0.035,0.133,0.004,0.188,0,-0.019,-0.211,-0.257,0.079,0.028,0.055,0.078,0.094,0.022,-0.089,0.003,0.014,0.026,-0.133,0.087,-0.066,0.063,0.042,0.065,0.093,0.12,-0.111,-0.099,0.063,0.021,0.038,-0.061,0.024,-0.017,0.042,0.067,0.024,-0.055,0.098,0.043,-0.055,-0.065,-0.008,-0.056,-0.096,-0.062,-0.037,-0.196,0.086,-0.166,-0.293,-0.127,-0.047,0.077,0.017,-0.039,0.113,0.052,-0.197,-0.003,-0.061,0.026,-0.088,-0.049,0.002,0.039,0.029,-0.055,0.022,-0.031,0.083,-0.157,-0.1,-0.025,-0.137,-0.022,-0.04,0.123,0.022,-0.033,0.043,-0.068,0.134,-0.08,-0.242,0.175,-0.103,-0.098,0.003,0.087,0.046,-0.094,-0.084,-0.053,0.085,-0.076,0.004,0.075,0.055,-0.025,0,0.131,-0.003,-0.158,0.071,-0.031,0.134,-0.032,0.072,-0.116,-0.119,-0.031,0.12,-0.051,0.099,-0.038,0.027,0.056,-0.058,-0.015,0.026,0.063,-0.03,0.025,-0.026,-0.069,0.041,-0.018,-0.05,0.026,-0.039,-0.018,0.088,-0.024,0.007,0.083,-0.108,0.067,-0.007,-0.11,0.166,0.149,0.036,-0.175,-0.022,0.008,0.094,0.05,0.073,0.042,0.006,0.018,-0.048,0.025,0.008,-0.068,0.004,0.087,-0.201,0.069,0.052,0.085,-0.115,0.071,-0.094,0.05,0.007,-0.019,0.143,0.14,0.114,0.049,0.046,-0.016,-0.063,-0.053,0.13,-0.01,-0.174,0.134,0.055,-0.111,0.048,0.007,-0.113,-0.012,0.002,-0.095,0.118,-0.003,-0.037,-0.047,0.014,-0.039,-0.042,0.038,0,-0.105,-0.003,-0.064,0.074,0.065,-0.082,0.002,-0.145,0.061,-0.143,0.021,-0.01,0.078,-0.099,-0.047,-0.094,-0.008,0.07,-0.064,0.066,-0.011,-0.051,0.044,-0.013,-0.026,0.036,0.082,0.06,0.086,-0.04,-0.104,0.066,0.121,0.001,-0.103,0.076,0.144,-0.099,0.123,0.148,0.045,-0.033,-0.116,0.052,-0.064,-0.003,-0.007,0.024,0.057,0.139,-0.08,-0.1,-0.017,0.105,-0.024,-0.03,0.032,-0.11,-0.004,0.057,0.086,-0.09,-0.102,0.02],"source":"src/helpers/classicBattle/orchestratorHandlers.js [interruptRoundEnter]","tags":["code","why","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js","emitBattleEvent","dispatch","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"interruptRoundEnter"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":["emitBattleEvent","dispatch"]}},"version":1},
{"id":"orchestratorHandlers.js-interruptRoundExit","text":"export async function interruptRoundExit() {}","embedding":[-0.142,0.16,-0.333,0.51,0.429,-0.159,-0.091,0.232,0.033,-0.12,0.041,-0.057,-0.582,-0.406,-0.198,-0.002,-0.117,-0.247,-0.145,-0.141,-0.045,0.427,0.195,0.097,0.076,-0.419,-0.228,-0.27,0.305,-0.102,0.067,0.125,-0.181,-0.169,0.086,0.312,-0.087,-0.005,0.309,-0.338,0.228,0.217,-0.273,-0.405,0.288,-0.253,-0.072,-0.256,0.173,0.387,-0.156,0.6,-0.342,-0.371,0.386,0.128,0.291,-0.033,-0.017,0.209,-0.106,-0.42,-0.287,-0.017,0.099,0.364,0.025,-0.065,0.035,-0.092,-0.313,-0.119,-0.058,-0.056,0.182,-0.06,-0.174,-0.001,-0.179,0.158,0.3,-0.336,0.16,-0.006,0.436,0.332,-0.026,0.034,0.123,0.357,-0.323,0.101,-0.049,0.11,-0.117,0.148,0.084,0.048,-0.051,-0.118,-0.362,0.051,-0.109,-0.072,-0.097,-0.103,-0.003,-0.237,-0.061,-0.184,-0.046,0.273,-0.071,-0.199,0.154,0.187,0.113,-0.391,0.227,0.097,0.749,0.164,0.331,0.183,0.095,-0.233,0.334,0,-0.182,-0.138,-0.354,-0.098,0.051,0.185,0.074,-0.372,0.058,-0.221,-0.114,-0.102,0.057,-0.026,0.22,-0.312,0.47,-0.159,-0.003,0.179,0.191,-0.368,-0.266,0.21,0.125,-0.043,-0.139,0.193,0.019,0.133,-0.063,0.116,-0.021,0.337,-0.032,-0.086,-0.184,-0.086,-0.269,0.056,-0.307,0.125,-0.476,0.006,-0.112,-0.569,-0.279,0.147,0.539,-0.056,-0.188,0.323,0.264,-0.382,0.144,0.037,0.188,0.012,0.037,0.2,-0.096,-0.164,-0.013,-0.085,-0.105,-0.017,-0.465,0.051,-0.312,0.1,0.005,-0.057,0.118,-0.054,0.271,0.402,-0.64,0.314,-0.038,-0.448,0.26,-0.047,-0.261,-0.088,0.256,-0.045,-0.254,0.028,0.302,0.206,-0.307,-0.022,-0.019,-0.135,-0.198,0,0.42,-0.053,-0.184,0.056,-0.251,0.249,0.157,-0.023,-0.247,0.204,0.021,0.046,-0.168,0.082,0.059,0.011,0.485,0.17,0.286,-0.077,0.149,-0.245,0.387,0.065,-0.269,0.108,0,0.036,0.006,0.021,-0.258,0.269,0.291,0.164,0.2,0.258,-0.15,0.004,-0.17,-0.133,0.349,0.048,-0.221,0.004,-0.024,-0.177,-0.029,0.05,-0.174,-0.327,0.386,0.188,0.291,-0.004,-0.011,0.067,0.338,-0.5,0.331,-0.08,-0.027,-0.249,0.338,-0.378,0.223,-0.281,-0.134,0.146,0.124,0.371,0.233,0.114,-0.092,0.13,-0.424,-0.044,-0.095,-0.388,0.487,0.396,-0.036,0.071,0.287,0.11,-0.226,-0.326,-0.095,0.375,0.048,-0.292,-0.122,-0.083,-0.208,0.104,0.241,0,-0.422,-0.094,-0.08,-0.108,0.164,-0.133,-0.213,-0.357,-0.026,-0.077,0.072,0.015,0.577,-0.021,-0.031,-0.187,0.276,0.421,0.061,-0.008,-0.122,-0.028,-0.073,-0.309,-0.033,0.067,0.075,-0.048,0.31,-0.268,-0.438,0.047,0.051,0.099,-0.726,-0.064,0.438,-0.359,0.138,0.118,0.04,-0.118,-0.078,0.153,-0.005,-0.094,-0.034,-0.115,0.102,0.178,-0.032,-0.286,-0.045,0.322,-0.09,-0.129,-0.334,-0.267,-0.112,0.116,0.182,0.067,0.162,0.025],"source":"src/helpers/classicBattle/orchestratorHandlers.js [interruptRoundExit]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"interruptRoundExit"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-interruptMatchEnter","text":"export async function interruptMatchEnter(machine, payload) {\n  emitBattleEvent(\"scoreboardClearMessage\");\n  emitBattleEvent(\"debugPanelUpdate\");\n  if (payload?.reason) {\n    emitBattleEvent(\"scoreboardShowMessage\", `Match interrupted: ${payload.reason}`);\n  }\n  await machine.dispatch(\"matchOver\", payload);\n}","qaContext":"Why: reason) { emitBattleEvent(\"scoreboardShowMessage\", `Match interrupted: ${payload. How: export async function interruptMatchEnter(machine, payload) { emitBattleEvent(\"scoreboardClearMessage\"); ...","embedding":[-0.031,0.02,-0.111,0.151,0.156,0.046,0.037,0.052,0.033,0.017,-0.029,-0.186,-0.277,-0.071,0.006,-0.106,0.1,-0.222,-0.018,-0.161,0.014,0.106,-0.033,0.038,0.005,-0.099,-0.064,-0.056,0.064,-0.071,0.148,-0.068,-0.01,0.071,0.085,0.084,-0.069,-0.015,0.1,-0.178,0.151,-0.05,-0.174,-0.109,0.03,-0.115,-0.092,-0.039,0.053,0.101,0.015,0.042,-0.102,-0.007,0.216,0.138,0.195,0.097,-0.042,-0.066,-0.137,-0.124,-0.116,0,0.14,0.101,0.03,0.011,0.06,0.073,-0.034,-0.058,0.06,-0.041,-0.017,0.136,-0.083,-0.012,-0.051,0.05,-0.058,-0.251,0.012,0.065,0.169,0.166,0.009,0.023,0.041,0.069,-0.166,-0.04,0.078,0.151,-0.135,0.151,-0.032,0.06,0.133,0.02,-0.144,0.139,-0.161,-0.042,-0.018,-0.031,-0.022,-0.101,-0.051,-0.112,0.04,0.076,0.048,-0.024,0.044,0.093,0.154,-0.022,0.073,-0.044,0.305,0.099,0.063,-0.031,0.066,-0.059,0.101,0,-0.066,-0.193,-0.189,-0.051,0.083,0.032,0.034,-0.027,-0.027,-0.06,-0.031,0.09,0.046,-0.162,-0.015,-0.112,0.13,-0.022,0.01,0.165,0.012,-0.165,-0.071,0.171,0.098,0,-0.062,-0.046,0.047,0.048,0.09,0.023,-0.063,0.18,0.035,-0.225,-0.082,0.001,-0.176,-0.06,-0.109,-0.012,-0.295,-0.043,-0.171,-0.261,-0.145,-0.038,0.287,-0.05,0.027,0.155,0.164,-0.266,0.072,-0.028,0.047,-0.049,0.06,0.017,-0.065,-0.063,0.024,-0.002,0.05,0.058,-0.205,-0.114,-0.122,-0.062,-0.014,-0.006,0.1,-0.023,0.013,0.144,-0.177,0.117,-0.119,-0.182,0.012,-0.112,-0.138,-0.098,0.153,0.151,-0.214,-0.148,0.039,0.047,-0.107,0.016,-0.094,0.012,-0.033,0,0.173,0.059,-0.257,0.039,0.015,0.099,-0.016,-0.032,-0.143,0.126,-0.026,0.015,-0.126,0.048,-0.088,0.021,0.155,0.023,0.032,-0.031,0.1,0.013,0.147,-0.089,-0.044,0.044,0.03,-0.034,0.002,-0.041,-0.058,0.109,0.071,0.049,0.067,0.096,0.069,-0.042,-0.079,0.097,0.153,0.08,-0.212,0.047,0.001,0.006,-0.06,0.037,0.055,0.034,0.123,0.015,0.074,0.027,-0.048,-0.005,0.153,-0.128,-0.002,0.022,0.067,-0.119,0.183,-0.154,0.148,-0.03,-0.025,0.079,0.154,0.188,0.128,0.034,-0.09,0.132,-0.096,0.08,-0.005,-0.133,0.132,0.184,-0.127,0.032,0.075,0.057,0.046,0.035,-0.017,0.218,0.03,-0.07,-0.03,0.103,0.038,-0.004,0.03,0,-0.184,-0.093,-0.143,0.048,0.012,0.034,-0.06,-0.249,0.052,-0.104,0.002,-0.083,0.188,-0.002,-0.054,-0.146,0.121,0.162,-0.093,-0.07,0.048,-0.019,-0.057,-0.03,-0.023,0.025,0.01,-0.026,-0.03,-0.108,-0.144,0.099,0.11,-0.149,-0.081,0.082,0.188,-0.207,0.105,0.138,0.054,0.07,-0.053,0.053,0.07,0.006,-0.015,-0.068,-0.014,0.094,0.018,-0.193,-0.084,0.125,-0.07,-0.042,-0.014,-0.126,0.021,0.07,0.188,-0.071,-0.016,-0.062],"source":"src/helpers/classicBattle/orchestratorHandlers.js [interruptMatchEnter]","tags":["code","why","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js","emitBattleEvent","dispatch"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"interruptMatchEnter"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":["emitBattleEvent","dispatch"]}},"version":1},
{"id":"orchestratorHandlers.js-interruptMatchExit","text":"export async function interruptMatchExit() {}","embedding":[-0.149,0.156,-0.279,0.407,0.441,-0.172,0.05,0.234,0.022,-0.026,-0.031,-0.094,-0.562,-0.503,-0.179,-0.054,-0.025,-0.267,-0.143,-0.129,-0.075,0.409,0.293,0.148,0.017,-0.35,-0.255,-0.344,0.237,-0.108,0.017,0.082,-0.212,-0.113,0.237,0.331,-0.091,0.009,0.265,-0.377,0.103,0.309,-0.332,-0.323,0.285,-0.234,-0.023,-0.233,0.269,0.403,-0.15,0.705,-0.293,-0.388,0.441,0.108,0.215,-0.042,-0.135,0.272,-0.117,-0.398,-0.264,-0.037,0.124,0.42,-0.048,-0.049,0.121,0.029,-0.401,-0.108,-0.024,0.06,0.192,-0.02,-0.246,-0.094,-0.099,0.066,0.253,-0.325,0.091,-0.021,0.406,0.461,-0.018,0.033,0.27,0.166,-0.353,0.073,0.002,0.174,-0.083,0.123,0.078,0.323,-0.004,-0.097,-0.279,0.036,-0.048,-0.074,-0.023,-0.027,-0.018,-0.164,-0.047,-0.167,0.069,0.29,0.027,-0.17,0.144,0.223,0.173,-0.396,0.342,0.155,0.821,0.086,0.318,0.049,0.195,-0.231,0.273,0,-0.124,-0.061,-0.248,-0.102,0.065,0.201,0.084,-0.454,0.062,-0.125,-0.101,-0.138,-0.009,-0.098,0.111,-0.265,0.449,-0.128,0.038,0.232,0.171,-0.386,-0.304,0.203,-0.059,0.032,-0.134,0.251,0.018,0.138,-0.09,0.133,0.012,0.33,0.002,-0.123,-0.138,0.018,-0.289,0.02,-0.407,0.185,-0.453,-0.038,-0.072,-0.607,-0.246,0.195,0.556,-0.138,-0.06,0.251,0.312,-0.395,0.05,0.039,0.34,-0.049,0.017,0.343,-0.071,-0.15,-0.054,-0.084,-0.075,-0.024,-0.494,-0.045,-0.308,0.181,-0.058,-0.064,0.02,-0.042,0.265,0.281,-0.499,0.337,-0.156,-0.399,0.287,-0.106,-0.355,-0.048,-0.001,-0.08,-0.202,0.024,0.177,0.123,-0.356,-0.069,0.064,-0.209,-0.327,0,0.436,-0.128,-0.167,0.139,-0.266,0.161,0.241,0.082,-0.224,0.07,0.065,-0.064,-0.169,0.142,0.031,0.08,0.507,0.086,0.209,-0.009,0.323,-0.163,0.512,0.256,-0.264,0.05,0.039,-0.027,0.098,-0.063,-0.22,0.259,0.273,0.104,0.183,0.085,0.005,0.092,-0.193,-0.17,0.427,0.144,-0.238,0.086,-0.007,-0.125,-0.119,0.03,-0.342,-0.304,0.364,0.022,0.179,0.012,-0.07,0.198,0.226,-0.511,0.241,0.024,-0.084,-0.404,0.324,-0.438,0.285,-0.098,-0.146,0.12,0.174,0.455,0.304,0.152,-0.314,0.119,-0.397,-0.043,-0.126,-0.388,0.489,0.488,-0.154,0.036,0.299,0.164,-0.146,-0.282,-0.214,0.38,0.024,-0.305,-0.269,-0.124,-0.249,0.046,0.05,0,-0.398,-0.094,-0.106,-0.188,0.06,-0.206,-0.29,-0.406,0.082,-0.128,0.078,0.048,0.517,-0.058,-0.063,-0.21,0.248,0.548,-0.032,-0.094,-0.058,0.041,-0.056,-0.192,-0.011,0.032,0.104,-0.088,0.305,-0.283,-0.483,0.012,0.062,-0.064,-0.598,-0.048,0.496,-0.32,0.173,0.143,-0.044,0.033,-0.104,0.147,0.078,-0.129,-0.05,-0.16,0.114,0.091,0.066,-0.215,-0.142,0.293,-0.303,-0.176,-0.354,-0.256,-0.069,0.115,0.304,0.058,0.24,-0.018],"source":"src/helpers/classicBattle/orchestratorHandlers.js [interruptMatchExit]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"interruptMatchExit"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestratorHandlers.js-roundModificationEnter","text":"export async function roundModificationEnter(machine, payload) {\n  emitBattleEvent(\"scoreboardClearMessage\");\n  emitBattleEvent(\"debugPanelUpdate\");\n  if (payload?.modification) {\n    emitBattleEvent(\"scoreboardShowMessage\", `Round modified: ${payload.modification}`);\n  }\n  if (payload?.resumeRound) {\n    await machine.dispatch(\"roundStart\");\n  } else {\n    await machine.dispatch(\"cooldown\");\n  }\n}","qaContext":"Why: export async function roundModificationEnter(machine, payload) { emitBattleEvent(\"scoreboardClearMessage\"); emitBattleEvent(\"debugPanelUpdate\"); if (payload? How: modification) { emitBattleEve...","embedding":[-0.016,0.108,-0.198,0.184,0.063,0.026,-0.026,0.128,0.061,0.001,-0.011,-0.11,-0.229,-0.088,0.031,-0.108,-0.008,-0.077,0.018,-0.142,-0.002,0.034,0.038,0.092,0.106,-0.062,-0.071,-0.036,0.061,-0.126,0.086,0.029,-0.038,-0.045,0.065,0.131,0.012,-0.007,0.122,-0.1,0.152,-0.018,-0.114,-0.09,0.028,-0.064,-0.166,-0.049,-0.017,0.133,0.082,-0.046,-0.139,0.013,0.091,0.063,0.193,0.071,0.008,-0.043,-0.075,-0.155,-0.074,0.003,0.103,-0.03,-0.018,-0.107,0.013,-0.029,0.103,0.027,0.03,-0.004,-0.029,-0.032,-0.043,0.055,-0.011,0.108,-0.039,-0.119,-0.007,-0.043,0.019,0.046,0.111,-0.021,-0.028,0.077,-0.174,0.162,-0.044,0.119,-0.208,0.127,-0.052,0.023,-0.01,0.061,-0.056,0.119,-0.105,0.007,0.024,-0.083,0.12,-0.179,-0.055,-0.082,-0.02,0.106,0.081,0.029,-0.043,0.015,-0.004,-0.004,-0.001,-0.068,0.322,0.116,0.122,-0.059,0.083,-0.028,0.13,0,-0.005,-0.171,-0.099,0.093,0.176,-0.059,0.099,-0.045,-0.033,-0.084,0.065,0.028,-0.04,-0.093,0.054,-0.214,0.188,0.034,-0.011,0.122,0.029,-0.103,-0.048,0.114,0.077,0.053,-0.016,0.036,-0.111,0.076,0.08,0.035,-0.088,0.083,-0.048,-0.138,-0.037,-0.019,-0.188,-0.021,-0.029,-0.025,-0.272,0.009,-0.303,-0.102,0.04,-0.031,0.154,-0.069,-0.069,0.117,0.127,-0.158,0.151,-0.051,-0.026,-0.145,0.004,-0.064,0.001,0.037,-0.074,-0.031,-0.013,0.043,-0.089,-0.165,-0.083,-0.089,-0.011,0.025,0.093,0.003,0.033,0.08,-0.033,0.118,-0.072,-0.298,0.105,-0.039,-0.153,-0.065,0.2,0.068,-0.099,-0.048,0.04,0.017,-0.156,-0.082,0.061,0.032,-0.072,0,0.067,0.081,-0.274,0.126,0.006,0.17,-0.049,0.001,-0.119,0.076,-0.095,0.044,-0.191,-0.029,0.029,0.02,0.178,-0.096,0.024,-0.033,0.083,0.028,-0.038,-0.024,0.003,0.046,-0.062,0.007,0.026,-0.007,-0.079,0.047,-0.042,0.05,-0.014,-0.058,0.1,-0.037,-0.045,0.135,0.173,-0.012,-0.158,0.023,0.07,-0.059,0,0.044,0.054,0.065,0.082,-0.055,-0.031,0.107,-0.004,-0.007,0.13,-0.158,0.093,-0.012,-0.008,-0.153,0.175,-0.119,0.008,-0.013,-0.08,0.143,0.084,0.234,0.066,0.079,0.11,0.032,-0.063,-0.004,0.024,-0.097,0.177,0.189,-0.026,0.067,0.04,-0.037,0.087,0.012,-0.001,0.203,0.014,0.071,-0.031,0.003,0.153,0.11,0.037,0,-0.264,-0.049,-0.128,0.111,0.043,0.007,-0.023,-0.229,0.106,-0.217,-0.031,-0.034,0.264,-0.036,-0.051,-0.025,0.047,0.165,-0.036,-0.055,0.029,0.008,-0.006,-0.051,0.005,0.023,0.075,0.056,-0.034,-0.057,-0.185,0.19,0.078,-0.042,-0.125,-0.024,0.286,-0.054,0.212,0.195,0.013,0.021,-0.134,-0.003,-0.076,0.003,-0.062,-0.002,-0.041,0.019,0.046,-0.132,-0.038,0.167,-0.002,0.01,0.045,-0.13,-0.038,0.08,-0.011,-0.121,0.048,-0.034],"source":"src/helpers/classicBattle/orchestratorHandlers.js [roundModificationEnter]","tags":["code","how","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js","emitBattleEvent","dispatch"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"roundModificationEnter"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":["emitBattleEvent","dispatch"]}},"version":1},
{"id":"orchestratorHandlers.js-roundModificationExit","text":"export async function roundModificationExit() {}","embedding":[-0.295,0.308,-0.553,0.32,0.396,-0.396,-0.03,0.182,0.34,-0.172,0.075,-0.231,-0.514,-0.368,0.016,-0.412,-0.432,0.087,-0.322,-0.209,0.05,0.065,0.238,0.089,0.31,-0.274,-0.088,-0.465,0.035,-0.212,0.051,0.438,-0.145,-0.235,0.332,0.431,0.041,0.008,0.482,-0.287,0.36,0.414,0.022,-0.253,0.09,-0.267,-0.336,-0.05,-0.094,0.253,0.214,0.324,-0.525,-0.162,0.003,0.013,0.253,0.025,0.031,0.321,0.006,-0.493,-0.148,0.025,0.038,-0.21,0.041,-0.455,-0.077,-0.19,-0.061,0.301,-0.176,0.162,0.242,-0.361,-0.395,0.093,-0.076,0.35,-0.004,-0.136,0.1,-0.055,0.176,0.021,0.112,0.111,-0.107,0.051,-0.426,0.399,-0.451,0.258,-0.412,0.191,0.008,0.26,-0.061,0,-0.108,0.138,-0.032,-0.187,-0.078,-0.029,0.264,-0.268,0.09,0.037,-0.137,0.249,0.31,0.149,0.04,-0.108,0.049,-0.289,0.293,0.149,0.608,0.229,0.429,0.039,0.351,0.021,0.469,0,-0.272,-0.214,0.056,0.2,0.059,0.122,0.296,-0.363,-0.057,-0.289,-0.201,0.058,-0.202,-0.192,-0.04,-0.421,0.725,0.113,0.018,0.12,0.194,-0.022,-0.112,0.255,0.278,-0.128,-0.136,0.002,-0.101,0.247,-0.006,0.345,-0.064,0.329,-0.059,0.169,-0.057,-0.031,-0.478,0.139,-0.165,0.133,-0.459,-0.166,-0.532,0.053,0.143,0.093,0.167,-0.063,-0.436,0.407,0.125,-0.222,0.289,-0.314,0.229,-0.389,0.169,0.07,0.043,0.332,-0.157,-0.087,-0.127,-0.306,-0.151,-0.229,-0.251,0.064,0.027,0.249,-0.022,-0.008,0.346,-0.008,-0.036,0.24,0.004,-0.603,0.267,0.165,-0.248,-0.369,0.355,0.039,-0.052,0.032,0.25,-0.051,-0.245,-0.245,0.048,-0.319,-0.262,0,0.247,0.082,-0.387,0.295,0.045,0.393,-0.054,0.104,0.056,0.098,-0.293,0.075,-0.15,-0.001,0.083,0.099,0.598,-0.154,0.17,-0.21,0.074,-0.19,0.157,0.289,-0.221,0.042,-0.124,0.096,0.132,0.046,-0.34,0.042,-0.092,-0.074,-0.014,-0.279,0.07,0.165,-0.006,0.146,0.027,-0.283,-0.446,0.023,0.025,-0.346,0.261,0.055,-0.12,-0.079,0.374,0.172,-0.101,0.115,0,0.272,-0.047,-0.238,0.325,-0.015,-0.224,-0.183,0.306,-0.605,-0.12,-0.026,-0.169,0.435,0.056,0.727,0.2,0.218,0.159,0.315,-0.188,-0.129,-0.107,-0.311,0.728,0.695,0.034,0.321,0.228,-0.072,0.089,-0.346,0.213,0.434,-0.122,0.121,0.022,-0.364,0.094,0.215,0.142,0,-0.628,-0.15,-0.23,0.072,0.127,-0.135,0.03,-0.102,0.227,-0.36,0.123,0.011,0.508,-0.017,-0.019,0.039,0.314,0.295,-0.094,-0.128,-0.159,-0.045,-0.128,-0.207,-0.007,-0.014,-0.038,0.109,-0.035,-0.418,-0.459,0.172,-0.095,0.16,-0.489,-0.203,0.592,-0.012,0.407,0.282,-0.149,-0.185,-0.104,0.062,-0.238,-0.168,-0.139,-0.183,-0.163,-0.141,0.236,-0.239,-0.126,0.528,0.079,-0.075,-0.161,-0.274,-0.154,0.135,-0.332,0.029,0.37,0.102],"source":"src/helpers/classicBattle/orchestratorHandlers.js [roundModificationExit]","tags":["code","what","function","utility","./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestratorHandlers.js","node":"roundModificationExit"},"patterns":[],"relations":{"imports":["./roundSelectModal.js","../timerUtils.js","./cardSelection.js","../battle/index.js","./timerService.js","./battleEvents.js","./roundResolver.js"],"calls":[]}},"version":1},
{"id":"orchestrator.js-onStateTransition","text":"Wait for the battle state machine to enter a specific state.\n\n@param {string} targetState - State name to await.\n@param {number} [timeoutMs=10000] - Reject after this many ms.\n@returns {Promise<boolean>} Resolves when the state is entered.\n1. Return a new Promise that resolves when the target state is entered or rejects on timeout/error.\n2. Inside the Promise constructor (resolve, reject):\n   a. Wrap the logic in a `try...catch` block to handle synchronous errors during setup.\n   b. Check if `machine` exists and its current state (`machine.getState()`) is already `targetState`. If so, immediately resolve the Promise with `true` and return.\n   c. Create an `entry` object with the `resolve` function of the current Promise.\n   d. If `timeoutMs` is not `Infinity`:\n      i. Set a `setTimeout` for `timeoutMs`.\n      ii. In the timeout callback, call `removeWaiter` to clean up the entry and reject the Promise with a \"timeout\" error.\n      iii. Store the timer ID on the `entry` object.\n   e. Retrieve the array of waiters for `targetState` from `stateWaiters` (or create an empty array if none exists).\n   f. Push the `entry` object into this array.\n   g. Store the updated array back in `stateWaiters` for `targetState`.\n   h. If any synchronous error occurs during this setup, catch it and reject the Promise with an \"error\" message.\n\nexport function onStateTransition(targetState, timeoutMs = 10000) {\n  return new Promise((resolve, reject) => {\n    try {\n      if (machine?.getState() === targetState) return resolve(true);\n      const entry = { resolve };\n      if (timeoutMs !== Infinity) {\n        entry.timer = setTimeout(() => {\n          removeWaiter(targetState, entry);\n          reject(new Error(\"onStateTransition timeout\"));\n        }, timeoutMs);\n      }\n      const arr = stateWaiters.get(targetState) || [];\n      arr.push(entry);\n      stateWaiters.set(targetState, arr);\n    } catch {\n      reject(new Error(\"onStateTransition error\"));\n    }\n  });\n}","qaContext":"Why: Wait for the battle state machine to enter a specific state. How: @param {string} targetState - State name to await.","embedding":[-0.12,0.095,-0.027,0.124,-0.069,0.003,-0.071,0.067,0.079,-0.05,-0.065,-0.058,0.043,-0.07,-0.019,0.01,-0.069,-0.08,0.062,-0.029,0.138,0.004,0.005,0.043,-0.11,-0.055,-0.02,-0.138,-0.067,-0.037,-0.059,0.004,-0.122,0.039,-0.065,0.054,-0.068,0.072,-0.019,-0.114,0.106,0.127,-0.034,-0.095,0.14,-0.081,-0.091,-0.025,-0.008,0.131,-0.157,0.067,-0.032,0.102,0.133,0.016,0.084,0.109,-0.008,-0.069,0.058,-0.177,0.016,-0.071,0.137,0.033,0.058,0.086,0.045,0.117,0.049,0.107,-0.012,-0.017,-0.099,-0.005,0.017,0.021,0.046,0.078,-0.055,-0.112,-0.172,-0.051,-0.076,-0.02,0.092,0.017,0.095,-0.124,-0.072,-0.024,-0.017,0.084,0.063,0.07,0.07,0.065,0.01,-0.046,0.061,-0.105,-0.039,-0.007,-0.041,-0.025,0.012,-0.174,-0.057,0.006,0.047,0.112,0.12,0.062,-0.003,0.075,0.114,-0.036,0.091,0.045,0.119,0.026,0.091,-0.137,0.076,-0.024,0.026,0,0.002,-0.142,-0.132,-0.027,0.09,0.045,0.125,-0.009,-0.042,-0.05,-0.093,-0.067,0.023,-0.071,-0.007,-0.143,0.242,-0.027,0.058,0.086,0.153,-0.085,-0.077,-0.004,0.02,-0.042,-0.016,0.091,-0.124,-0.027,0.134,0.075,-0.16,0.073,0.153,-0.19,-0.011,0.086,-0.101,-0.179,-0.08,-0.002,-0.147,0.162,0.032,-0.233,-0.03,-0.1,0.117,0.079,-0.008,0.072,-0.022,-0.194,0.029,0.003,0.024,0.023,-0.055,0.069,-0.058,-0.153,-0.071,0.011,-0.031,0.147,-0.128,-0.081,0.009,-0.048,0.042,-0.017,0.17,0.046,-0.009,-0.099,0.056,0.04,-0.14,-0.203,0.057,-0.033,-0.265,0.18,0.031,0.047,-0.009,-0.073,-0.033,0.111,-0.089,-0.022,0.09,-0.032,-0.081,0,0.165,-0.049,0.077,0.019,0.068,0.001,0.079,0.168,-0.078,-0.141,-0.04,0.023,0.077,0.043,-0.104,0.112,0.168,-0.096,0.023,-0.022,0.115,-0.028,-0.035,0.009,-0.1,0.153,-0.017,0.045,-0.014,-0.128,-0.031,-0.101,-0.092,0.048,0.064,-0.129,0.109,0.045,-0.099,0.008,0.191,-0.038,-0.074,-0.018,-0.014,-0.015,0.065,0.052,-0.118,-0.006,-0.013,-0.129,-0.044,0.068,0.084,-0.105,0.054,-0.117,0.076,0.101,-0.066,-0.157,0.099,0.055,0.103,0.118,-0.111,-0.003,0.162,0.189,0.004,0.096,0.041,0.01,0.038,-0.038,-0.168,-0.234,0.106,0.073,-0.097,0.049,-0.053,0.013,0.017,0.078,0.038,0.036,0.01,0.025,-0.074,-0.006,-0.009,-0.053,-0.08,0,0.018,0.012,0.033,0.014,0.034,-0.053,-0.062,-0.172,0.025,-0.074,0.068,0.063,0.116,0.019,0.06,-0.092,0.064,-0.062,-0.073,0.006,-0.015,-0.036,-0.025,0.075,0.078,0.044,0.143,0.021,-0.005,0.007,-0.136,0.01,0.061,0.062,-0.05,-0.032,0.088,-0.005,0.165,0.119,0.035,0.072,-0.097,0.023,-0.03,-0.078,-0.083,-0.042,0.038,-0.093,-0.1,-0.055,-0.101,0.048,0.042,-0.046,0.06,-0.155,0.077,0.092,0.1,-0.057,-0.041,-0.005],"source":"src/helpers/classicBattle/orchestrator.js [onStateTransition]","tags":["code","what","function","utility","./stateMachine.js","./orchestratorHandlers.js","./roundManager.js","./battleEvents.js","./eventDispatcher.js","getState","resolve","setTimeout","removeWaiter","reject","get","push","set","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestrator.js","node":"onStateTransition"},"patterns":[],"relations":{"imports":["./stateMachine.js","./orchestratorHandlers.js","./roundManager.js","./battleEvents.js","./eventDispatcher.js"],"calls":["getState","resolve","setTimeout","removeWaiter","reject","get","push","set"]}},"version":1},
{"id":"orchestrator.js-getBattleStateMachine","text":"Retrieve the current battle state machine instance.\n\n@returns {import('./stateMachine.js').BattleStateMachine|null} Current instance.\n\nexport function getBattleStateMachine() {\n  return machine;\n}","qaContext":"Why: Retrieve the current battle state machine instance. How: @returns {import('.","embedding":[-0.245,0.189,-0.105,0.001,0.083,0.251,-0.019,0.07,-0.126,-0.063,-0.079,-0.116,0.002,-0.025,0.082,-0.038,0.116,-0.22,0.407,0.027,0.13,0.098,0.115,0.109,0.15,0.101,0.009,0.053,-0.274,-0.191,0.007,-0.08,-0.24,-0.005,0.209,0.156,-0.056,0.013,0.221,-0.1,0.157,0.208,0.035,-0.08,0.271,0.071,-0.101,-0.078,0.271,0.085,-0.109,-0.128,0.118,0.043,0.151,0.132,0.297,0.189,-0.022,0.219,-0.117,-0.297,-0.037,-0.068,0.149,-0.233,-0.072,0.252,-0.141,-0.156,0.094,0.19,0.221,-0.088,-0.211,-0.185,-0.036,0.128,0.297,0.18,-0.178,-0.154,-0.233,0.091,0.055,0.084,0.057,-0.024,0.111,0.1,-0.426,-0.314,-0.097,0.146,-0.184,0.193,-0.103,0.127,0.037,0.057,0.135,0.057,0.065,-0.045,-0.026,0.107,-0.084,-0.181,-0.087,-0.076,0.071,0.386,-0.088,0.148,0.029,-0.045,0.052,-0.146,-0.063,0.196,0.208,-0.127,0.249,-0.069,0.028,0.165,0.179,0,0.001,-0.307,-0.017,0.146,-0.046,0.142,0.157,-0.046,-0.154,-0.044,-0.315,0.404,-0.016,-0.027,-0.258,-0.036,-0.07,-0.032,0.056,0.02,0.078,0.121,-0.055,-0.054,0.125,0.017,0.006,0.191,-0.239,0.089,0.214,-0.033,-0.15,-0.044,0.163,-0.15,-0.071,-0.045,-0.331,-0.046,0.081,0.023,-0.295,0.096,-0.339,-0.307,-0.085,-0.265,0.261,0.064,-0.251,-0.026,0.197,-0.278,0.076,-0.091,0.12,-0.093,0.061,-0.285,0.043,0.169,0.068,0.104,-0.119,0.246,-0.256,-0.032,-0.138,-0.099,0.132,-0.083,0.021,-0.176,0.367,-0.005,-0.076,0.056,-0.079,-0.273,-0.028,-0.387,-0.385,0.321,0.146,0.21,-0.163,-0.148,0.388,0.226,-0.212,-0.288,-0.151,0.027,-0.15,0,0.17,0.11,0.055,-0.05,-0.006,-0.043,0.172,0.205,-0.382,0.09,-0.086,0.245,0.021,-0.004,0.029,0.324,-0.039,-0.103,0.045,-0.293,-0.058,0.034,0.088,0.035,0.016,0.081,0.067,-0.042,0.068,-0.144,0.038,-0.09,-0.191,0.345,-0.076,0.111,0.272,-0.193,0.115,0.067,0.036,-0.007,-0.201,-0.043,-0.071,0.101,-0.148,0.092,0.225,0.104,-0.179,-0.092,-0.053,-0.038,-0.129,-0.382,-0.191,-0.003,-0.206,0.157,0.013,-0.306,-0.371,-0.005,-0.339,-0.093,-0.053,0.347,0.127,0.135,0.128,-0.081,0.253,0.009,0.021,0.324,-0.096,-0.07,0.063,0.012,0.201,-0.004,-0.095,-0.342,0.165,0.072,0.02,0.071,-0.059,-0.127,0.089,0.012,-0.045,-0.158,-0.118,0,-0.11,-0.021,0.342,-0.049,-0.107,0.044,0.116,-0.061,0.211,0.087,0.102,0.069,0.242,-0.112,-0.122,0.141,0.129,0.337,0.024,0.117,0.014,-0.119,0.189,0.068,-0.045,0.109,-0.085,-0.131,-0.035,-0.162,0.071,0.371,-0.028,-0.032,-0.264,0.07,0.121,0.018,0.252,0.155,-0.272,0.102,-0.205,0.093,-0.234,0.086,-0.221,-0.164,-0.098,-0.167,0.058,-0.157,-0.148,0.152,-0.117,0.226,0.132,-0.19,-0.04,-0.034,-0.044,-0.146,0.035,0.021],"source":"src/helpers/classicBattle/orchestrator.js [getBattleStateMachine]","tags":["code","what","function","utility","./stateMachine.js","./orchestratorHandlers.js","./roundManager.js","./battleEvents.js","./eventDispatcher.js","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestrator.js","node":"getBattleStateMachine"},"patterns":[],"relations":{"imports":["./stateMachine.js","./orchestratorHandlers.js","./roundManager.js","./battleEvents.js","./eventDispatcher.js"],"calls":[]}},"version":1},
{"id":"orchestrator.js-updateDebugState","text":"Mirror transition state to globals and debug elements.\n\n@param {string|null} from - Previous state name.\n@param {string} to - New state name.\n@param {string|null} event - Event that triggered the transition.\n@returns {void}\n1. Return early when not in a browser environment.\n2. Update window globals for current, previous, and last event.\n3. Update body data attributes and dispatch a `battle:state` event.\n4. Record the transition in a capped log and expose it on `window`.\n5. Ensure `#machine-state` and `#battle-state-badge` reflect the new state.\n\nexport function updateDebugState(from, to, event) {\n  if (typeof window === \"undefined\" || typeof document === \"undefined\") return;\n  try {\n    window.__classicBattleState = to;\n    if (from) window.__classicBattlePrevState = from;\n    if (event) window.__classicBattleLastEvent = event;\n    document.body.dataset.battleState = to;\n    document.body.dataset.prevBattleState = from || \"\";\n    document.dispatchEvent(new CustomEvent(\"battle:state\", { detail: { from, to } }));\n    const entry = { from: from || null, to, event: event || null, ts: Date.now() };\n    const log = Array.isArray(window.__classicBattleStateLog) ? window.__classicBattleStateLog : [];\n    log.push(entry);\n    while (log.length > 20) log.shift();\n    window.__classicBattleStateLog = log;\n    let el = document.getElementById(\"machine-state\");\n    if (!el) {\n      el = document.createElement(\"div\");\n      el.id = \"machine-state\";\n      el.style.display = \"none\";\n      document.body.appendChild(el);\n    }\n    el.textContent = to;\n    if (from) el.dataset.prev = from;\n    if (event) el.dataset.event = event;\n    el.dataset.ts = String(entry.ts);\n    const badge = document.getElementById(\"battle-state-badge\");\n    if (badge) badge.textContent = `State: ${to}`;\n  } catch {}\n}","qaContext":"Why: Mirror transition state to globals and debug elements. How: @param {string|null} from - Previous state name.","embedding":[-0.053,-0.004,0.155,0.084,-0.007,0.022,0.001,0.021,0.022,-0.036,-0.059,-0.091,-0.024,-0.124,0.005,0.059,-0.086,-0.061,-0.037,0.019,0.136,-0.115,0.015,-0.007,0.011,0.141,-0.013,-0.134,-0.061,-0.057,-0.033,-0.133,-0.143,0.002,-0.103,-0.071,-0.104,-0.042,0.031,-0.021,0.027,0.038,-0.024,-0.036,0.062,-0.073,-0.127,-0.035,0.059,0.12,-0.016,-0.041,0.049,0.006,0.02,0.135,0.122,0.075,0.074,-0.047,0.027,-0.065,0.056,-0.076,0.106,-0.061,-0.008,0.087,-0.033,0.052,-0.069,0.048,0.126,-0.073,-0.139,-0.138,-0.062,0.014,-0.041,-0.023,-0.012,-0.118,-0.11,0.077,0.142,0.006,-0.052,-0.066,-0.06,-0.052,-0.16,0.037,0.023,0.166,0.015,0.242,-0.033,0.071,0.115,0.123,0.045,0.068,-0.055,0.131,0.024,-0.166,0.009,-0.009,-0.184,-0.009,0.104,0.115,-0.043,0.042,-0.013,-0.02,0.049,0.022,-0.005,0.082,0.268,-0.061,-0.079,-0.115,0.097,-0.074,0.237,0,0.118,-0.235,-0.165,0.088,0.033,0.154,0.076,-0.035,-0.092,-0.057,-0.103,0.148,0.045,-0.179,0.03,-0.117,-0.039,0.045,0.117,-0.002,0.147,-0.076,-0.076,-0.039,0.02,0.094,-0.056,0.06,-0.206,-0.023,0.054,0.037,-0.064,0.029,0.051,-0.083,0.03,-0.033,-0.075,-0.108,0.061,-0.149,-0.094,-0.052,-0.116,-0.14,-0.027,0.036,-0.01,-0.022,-0.01,0.055,-0.096,-0.299,-0.033,0.038,-0.044,0.047,-0.035,0.044,-0.08,0.08,0.013,0.002,-0.038,0.146,0.001,-0.055,0.005,-0.219,-0.005,-0.107,0.154,-0.054,0.129,0.08,-0.102,-0.004,-0.216,-0.143,0.089,-0.127,-0.205,0.142,0.208,0.073,-0.04,-0.083,-0.189,0.159,-0.067,0.012,0.112,-0.059,-0.032,0,0.135,0.025,0.001,0.057,0.15,0.073,0.089,0.191,-0.118,-0.068,0.038,0.066,-0.014,0.043,-0.132,0.266,0.02,-0.019,-0.029,-0.001,0.147,0.159,-0.047,0.058,-0.049,0.003,0.105,0.04,-0.022,-0.095,0.01,0.021,-0.113,0.099,0.025,-0.04,0.134,-0.038,-0.072,0.171,0.067,-0.112,-0.027,-0.029,0.013,0.099,-0.08,0.177,-0.075,0.088,0.043,-0.112,-0.115,0.022,0.01,-0.033,0.026,-0.139,-0.094,0.104,-0.032,-0.19,0.098,0.002,0.125,-0.025,-0.112,0.039,0.102,0.097,-0.035,-0.002,0.098,-0.067,0.103,0.012,0.077,-0.181,0.094,0,-0.085,0.081,0.025,-0.128,0.052,0.108,-0.153,0.093,-0.006,-0.055,-0.218,-0.09,0.018,-0.158,-0.093,0,-0.144,0.047,0.069,0.096,0.016,0.054,-0.017,-0.123,-0.001,-0.213,0.123,0.16,0.168,-0.047,-0.097,-0.089,0.066,-0.059,-0.035,0.025,0.068,-0.069,0.022,0.127,0.168,-0.002,-0.023,0.059,0.062,-0.043,-0.041,0.026,0.121,0.011,-0.092,-0.02,0.143,-0.035,0.112,0.142,0.165,-0.004,-0.088,0.017,-0.097,-0.036,-0.053,-0.065,0.193,-0.001,-0.061,-0.206,-0.007,-0.048,0.045,-0.016,0.121,-0.003,0.015,0.179,0.112,-0.047,-0.095,0.024],"source":"src/helpers/classicBattle/orchestrator.js [updateDebugState]","tags":["code","what","function","utility","./stateMachine.js","./orchestratorHandlers.js","./roundManager.js","./battleEvents.js","./eventDispatcher.js","dispatchEvent","now","isArray","push","shift","getElementById","createElement","appendChild","String","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestrator.js","node":"updateDebugState"},"patterns":[],"relations":{"imports":["./stateMachine.js","./orchestratorHandlers.js","./roundManager.js","./battleEvents.js","./eventDispatcher.js"],"calls":["dispatchEvent","now","isArray","push","shift","getElementById","createElement","appendChild","String"]}},"version":1},
{"id":"orchestrator.js-updateTimerDebug","text":"Expose timer state for debugging when an engine exists.\n\n@param {import(\"./stateMachine.js\").BattleStateMachine|null} machineRef - Current battle machine.\n@returns {void}\n1. Return early when not in a browser or when no engine is present.\n2. Read timer state from the machine's engine.\n3. Mirror the timer state on `window.__classicBattleTimerState`.\n4. Ensure a hidden `#machine-timer` element exists and reflects the state.\n\nexport function updateTimerDebug(machineRef) {\n  if (typeof window === \"undefined\" || !machineRef?.context?.engine) return;\n  try {\n    const timerState = machineRef.context.engine.getTimerState();\n    window.__classicBattleTimerState = timerState;\n    if (typeof document !== \"undefined\") {\n      let timerEl = document.getElementById(\"machine-timer\");\n      if (!timerEl) {\n        timerEl = document.createElement(\"div\");\n        timerEl.id = \"machine-timer\";\n        timerEl.style.display = \"none\";\n        document.body.appendChild(timerEl);\n      }\n      timerEl.textContent = JSON.stringify(timerState);\n      timerEl.dataset.remaining = timerState.remaining;\n      timerEl.dataset.paused = timerState.paused;\n    }\n  } catch {}\n}","qaContext":"Why: Expose timer state for debugging when an engine exists. How: @param {import(\".","embedding":[-0.124,0.1,0.015,0.052,0.012,0.041,-0.007,0.01,0.016,-0.097,-0.015,-0.166,-0.011,-0.056,-0.027,-0.023,0.03,-0.084,0.128,-0.031,0.121,-0.041,0.015,0.071,-0.027,0.045,-0.012,-0.019,-0.013,0.002,-0.011,-0.06,-0.181,-0.015,0.092,0.045,-0.028,-0.008,-0.002,-0.062,0.028,0.049,-0.065,-0.023,0.141,-0.007,-0.068,-0.027,-0.026,0.063,-0.055,-0.059,0.065,-0.12,0.092,0.087,0.131,0.153,-0.064,0.029,-0.022,-0.138,0.008,-0.073,0.037,0.086,-0.024,0.089,0.011,-0.004,-0.024,0.094,0.049,-0.052,-0.156,-0.099,-0.085,0.002,0.055,0.03,-0.061,-0.17,-0.083,0.032,0.087,-0.013,0.155,0.041,0.066,-0.006,-0.219,-0.039,-0.068,0.12,0.031,0.155,-0.007,0.144,0.052,0.045,0.025,-0.047,-0.071,0.067,0.012,-0.002,0.039,0.07,0.018,0,0.081,0.124,0.053,0.015,0.082,0.022,0.122,-0.035,0.035,0.022,0.24,0.004,-0.007,-0.15,0.149,0.09,0.188,0,0.007,-0.222,-0.106,0.091,0.047,0.095,0.125,0.024,0.025,-0.047,-0.058,0.083,0.004,-0.124,-0.062,-0.062,0.082,-0.019,0.144,-0.06,0.111,-0.116,-0.049,-0.049,0,-0.018,-0.051,0.025,-0.076,0.008,0.13,-0.019,-0.14,0.12,0.032,-0.136,0.008,0.035,-0.078,-0.017,-0.011,-0.055,-0.167,-0.032,-0.108,-0.266,-0.065,-0.093,0.053,0.03,-0.005,0.144,0.009,-0.221,-0.011,0.098,0.006,-0.004,-0.111,-0.001,-0.007,0.055,-0.003,-0.003,-0.043,0.078,-0.055,0.001,-0.096,-0.071,0.023,-0.098,0.147,-0.056,0.05,-0.017,0.036,0.101,-0.166,-0.121,0.189,-0.181,-0.157,0.132,0.095,0.031,-0.038,-0.083,0.03,0.129,-0.049,-0.071,-0.008,-0.003,-0.109,0,0.162,-0.033,0.016,0.054,0.059,0.026,0.016,0.143,-0.083,-0.002,0.032,0.119,-0.015,-0.009,-0.154,0.124,0.027,-0.044,-0.01,-0.012,0.114,0.052,-0.015,-0.055,-0.019,0.054,-0.012,-0.013,0.005,-0.068,0.046,0.013,-0.014,-0.05,0.112,-0.042,0.094,-0.062,-0.086,0.157,0.117,-0.087,-0.138,-0.062,-0.031,0.173,-0.052,-0.005,-0.011,0.088,0.015,-0.096,0.012,-0.02,-0.083,-0.114,0,-0.136,-0.027,0.18,0.051,-0.241,-0.064,0.009,-0.014,0.008,-0.112,0.143,0.142,0.037,-0.005,0.029,0.01,-0.037,-0.047,0.094,-0.043,-0.094,0.059,-0.01,0.059,0.021,-0.032,-0.194,0.037,0.059,-0.139,0.092,0.037,-0.056,-0.055,-0.029,-0.096,-0.006,-0.019,0,-0.05,0.012,0.123,-0.022,-0.051,0.025,0.016,-0.154,0.065,-0.089,0.134,0.008,0.107,-0.024,-0.067,-0.057,0.006,-0.054,-0.003,0.013,-0.017,-0.054,0.074,0.013,0.041,-0.019,0.008,-0.005,0.033,-0.022,-0.147,0.148,-0.007,0.017,-0.098,0.039,-0.005,-0.006,0.044,0.116,-0.034,0.028,-0.144,0.023,-0.023,-0.041,-0.02,-0.092,-0.016,-0.029,-0.034,-0.053,0.016,0.075,-0.048,0.078,0.118,-0.069,-0.069,0.074,0.031,-0.027,-0.022,-0.009],"source":"src/helpers/classicBattle/orchestrator.js [updateTimerDebug]","tags":["code","what","function","utility","./stateMachine.js","./orchestratorHandlers.js","./roundManager.js","./battleEvents.js","./eventDispatcher.js","getTimerState","getElementById","createElement","appendChild","stringify","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestrator.js","node":"updateTimerDebug"},"patterns":[],"relations":{"imports":["./stateMachine.js","./orchestratorHandlers.js","./roundManager.js","./battleEvents.js","./eventDispatcher.js"],"calls":["getTimerState","getElementById","createElement","appendChild","stringify"]}},"version":1},
{"id":"orchestrator.js-initClassicBattleOrchestrator","text":"Initialize the classic battle orchestrator. This function sets up the battle state machine,\ndefines its transition behavior, and exposes debugging utilities.\n\n@param {object} store - Shared battle store.\n@param {Function} startRoundWrapper - Optional wrapper for starting a round.\n@param {object} [opts] - Optional overrides.\n@param {Function} [opts.resetGame] - Custom reset handler.\n@param {Function} [opts.startRound] - Custom round start handler.\n@returns {Promise<void>} Resolves when setup completes.\n1. Destructure `resetGame` and `startRound` from `opts`, falling back to local implementations if not provided.\n2. Create a `context` object containing the `store`, resolved `doResetGame`, `doStartRound`, and `startRoundWrapper`.\n3. Define the `onEnter` object mapping state names to their respective handler functions.\n4. Define the `onTransition` function executed on every state change:\n   a. Call `updateDebugState(from, to, event)`.\n   b. Call `updateTimerDebug(machine)`.\n   c. Emit a `\"debugPanelUpdate\"` battle event.\n   d. Resolve any waiters queued for the new `to` state.\n5. Create the battle state machine via `BattleStateMachine.create` and store it with `setMachine`.\n6. Expose a getter for the machine, wire visibility listeners, and handle timer drift and injected errors.\n7. Expose `onStateTransition` and `getBattleStateSnapshot` on `window` for debugging.\n8. Return the initialized machine.\n\nexport async function initClassicBattleOrchestrator(store, startRoundWrapper, opts = {}) {\n  const { resetGame: resetGameOpt, startRound: startRoundOpt } = opts;\n  const doResetGame = typeof resetGameOpt === \"function\" ? resetGameOpt : resetGameLocal;\n  const doStartRound = typeof startRoundOpt === \"function\" ? startRoundOpt : startRoundLocal;\n  const context = { store, doResetGame, doStartRound, startRoundWrapper };\n  const onEnter = {\n    waitingForMatchStart: waitingForMatchStartEnter,\n    matchStart: matchStartEnter,\n    cooldown: cooldownEnter,\n    roundStart: roundStartEnter,\n    waitingForPlayerAction: waitingForPlayerActionEnter,\n    roundDecision: roundDecisionEnter,\n    roundOver: roundOverEnter,\n    matchDecision: matchDecisionEnter,\n    matchOver: matchOverEnter,\n    interruptRound: interruptRoundEnter,\n    interruptMatch: interruptMatchEnter,\n    roundModification: roundModificationEnter\n  };\n\n  const onTransition = async ({ from, to, event }) => {\n    updateDebugState(from, to, event);\n    updateTimerDebug(machine);\n    emitBattleEvent(\"debugPanelUpdate\");\n    const waiters = stateWaiters.get(to);\n    if (waiters) {\n      stateWaiters.delete(to);\n      for (const w of waiters) {\n        try {\n          if (w.timer) clearTimeout(w.timer);\n          w.resolve(true);\n        } catch {}\n      }\n    }\n  };\n\n  machine = await BattleStateMachine.create(onEnter, context, onTransition);\n  setMachine(machine);\n\n  // Expose a safe getter for the running machine to avoid import cycles\n  // in hot-path modules (e.g., selection handling).\n  try {\n    if (typeof window !== \"undefined\") {\n      window.__getClassicBattleMachine = () => machine;\n    }\n  } catch {}\n\n  if (typeof document !== \"undefined\") {\n    document.addEventListener(\"visibilitychange\", () => {\n      if (machine?.context?.engine) {\n        if (document.hidden) {\n          machine.context.engine.handleTabInactive();\n        } else {\n          machine.context.engine.handleTabActive();\n        }\n      }\n    });\n  }\n\n  if (machine?.context?.engine) {\n    machine.context.engine.onTimerDrift = (driftAmount) => {\n      emitBattleEvent(\n        \"scoreboardShowMessage\",\n        `Timer drift detected: ${driftAmount}s. Timer reset.`\n      );\n      emitBattleEvent(\"debugPanelUpdate\");\n      machine.context.engine.handleTimerDrift(driftAmount);\n    };\n  }\n\n  if (typeof window !== \"undefined\" && machine?.context?.engine) {\n    window.injectClassicBattleError = (errorMsg) => {\n      machine.context.engine.injectError(errorMsg);\n      emitBattleEvent(\"scoreboardShowMessage\", `Injected error: ${errorMsg}`);\n      emitBattleEvent(\"debugPanelUpdate\");\n      machine.dispatch(\"interruptMatch\", { reason: errorMsg });\n    };\n  }\n\n  try {\n    if (typeof window !== \"undefined\") {\n      window.onStateTransition = onStateTransition;\n      window.getBattleStateSnapshot = () => {\n        try {\n          return {\n            state: window.__classicBattleState || null,\n            prev: window.__classicBattlePrevState || null,\n            event: window.__classicBattleLastEvent || null,\n            log: Array.isArray(window.__classicBattleStateLog)\n              ? window.__classicBattleStateLog.slice()\n              : []\n          };\n        } catch {\n          return { state: null, prev: null, event: null, log: [] };\n        }\n      };\n    }\n  } catch {}\n  return machine;\n}","qaContext":"Why: dispatch(\"interruptMatch\", { reason: errorMsg }); }; } try { if (typeof window ! How: Create the battle state machine via `BattleStateMachine.","embedding":[-0.16,0.013,-0.019,0.075,-0.097,-0.013,-0.042,0.097,-0.028,0.025,-0.008,-0.107,-0.051,-0.059,0.05,0.006,0.059,-0.056,0.076,0.022,0.053,-0.022,-0.023,-0.023,-0.025,-0.043,-0.057,0.013,-0.074,-0.108,0.019,0.068,-0.178,0.001,0.053,0.109,0.013,-0.031,-0.126,-0.044,0.099,0.156,-0.109,0.007,0.027,-0.071,-0.124,-0.029,0.009,0.054,0.043,0.028,0.059,-0.048,0.153,0.108,0.143,0.166,0.005,0.075,-0.072,-0.072,-0.025,-0.004,0.055,0.09,0.157,-0.048,0.039,-0.029,-0.04,0.076,0.062,-0.118,-0.095,0.018,-0.023,0.018,-0.07,-0.084,-0.015,-0.046,-0.065,-0.018,0.02,0.001,0.013,-0.059,0.22,0.064,-0.135,0.037,-0.044,0.034,0.085,0.105,0.049,0.017,0.073,0.044,0.014,-0.022,0.105,0.084,0.069,0.025,-0.025,-0.081,-0.132,-0.024,-0.014,0.076,0.105,0.031,0.056,0.169,0.03,-0.024,-0.019,0.072,0.203,-0.06,0.033,-0.055,0.048,0.031,0.061,0,0.057,-0.287,-0.101,0.094,0.105,0.046,0.114,0.062,-0.128,0.042,-0.083,0.14,-0.075,-0.095,0.088,-0.104,0.006,0.05,-0.048,0.005,0.125,-0.05,-0.126,-0.129,0.051,0.174,-0.001,0.072,-0.053,-0.006,-0.011,-0.02,-0.074,0.084,-0.003,-0.089,-0.053,0.04,-0.145,-0.083,-0.075,0.002,-0.209,-0.014,-0.101,-0.238,-0.144,-0.009,0.124,-0.038,-0.048,0.119,-0.031,-0.181,-0.051,-0.071,-0.021,-0.038,-0.062,0.063,0.004,0.055,-0.091,0.06,0.023,0.146,-0.087,-0.096,-0.01,-0.1,-0.048,0.006,0.134,-0.009,0.157,0.005,-0.009,-0.004,-0.186,-0.184,0.184,-0.056,-0.157,0.134,0.025,-0.02,0.002,-0.091,-0.122,0.047,-0.058,-0.081,0.171,0.026,-0.07,0,0.034,-0.04,-0.027,0.071,0.046,0.027,0.05,0.13,-0.112,-0.092,-0.081,0.101,-0.046,0.003,-0.056,0.147,0.026,-0.045,0.045,0.043,0.114,0.056,-0.081,-0.041,-0.022,0.03,0.082,0.052,0.021,-0.042,0.103,-0.015,-0.106,0.037,0.09,-0.02,0.047,-0.054,-0.064,0.02,0.163,-0.032,-0.076,0.036,0.049,0.071,-0.065,-0.048,-0.023,-0.098,-0.066,-0.05,0.021,-0.062,-0.07,0.004,0.114,-0.096,-0.038,0.074,0.101,-0.142,0.007,-0.004,0.013,0.049,-0.098,0.033,0.034,0.073,-0.063,0.035,0.042,-0.024,0.035,0.055,-0.057,-0.176,0.089,0.082,-0.11,-0.011,-0.002,-0.127,-0.023,0.036,-0.013,0.201,0.076,0,-0.078,-0.02,0.002,0.026,-0.083,0,-0.051,-0.007,0.01,0.096,0.019,0.021,0.073,-0.066,-0.067,-0.084,0.029,0.157,0.044,-0.053,-0.008,0.002,0.011,-0.005,-0.072,0.056,0.004,-0.021,-0.007,-0.006,-0.015,-0.008,0.093,0.09,0.056,0.025,-0.008,0.057,0.031,0.117,-0.143,0.058,0.04,0.051,0.173,0.096,-0.015,-0.009,-0.106,-0.003,-0.064,-0.014,-0.106,-0.02,0.071,-0.029,-0.164,-0.029,-0.151,0.055,0.113,0.007,0.031,-0.135,0.021,0.089,-0.074,-0.069,-0.01,0.035],"source":"src/helpers/classicBattle/orchestrator.js [initClassicBattleOrchestrator]","tags":["code","why","function","utility","./stateMachine.js","./orchestratorHandlers.js","./roundManager.js","./battleEvents.js","./eventDispatcher.js","dispatchEvent","now","isArray","push","shift","getElementById","createElement","appendChild","String","getTimerState","stringify","emitBattleEvent","get","delete","clearTimeout","resolve","create","setMachine","addEventListener","handleTabInactive","handleTabActive","handleTimerDrift","injectError","dispatch","slice","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestrator.js","node":"initClassicBattleOrchestrator"},"patterns":[],"relations":{"imports":["./stateMachine.js","./orchestratorHandlers.js","./roundManager.js","./battleEvents.js","./eventDispatcher.js"],"calls":["dispatchEvent","now","isArray","push","shift","getElementById","createElement","appendChild","String","getTimerState","stringify","emitBattleEvent","get","delete","clearTimeout","resolve","create","setMachine","addEventListener","handleTabInactive","handleTabActive","handleTimerDrift","injectError","dispatch","slice"]}},"version":1},
{"id":"orchestrator.js-dispatchBattleEvent","text":"Dispatch an event to the currently running battle machine.\nThis small proxy is exported for backwards compatibility: some modules\nimport `dispatchBattleEvent` from this orchestrator file. Keep it\nminimal and safe — if the machine isn't ready the call is a no-op.\n\n@param {string} eventName\n@param {any} payload\n1. Check if the `machine` instance is null. If so, exit the function immediately as there's no machine to dispatch to.\n2. Attempt to dispatch the `eventName` with the `payload` to the `machine`.\n3. If an error occurs during dispatch:\n   a. Catch the error to prevent cascading failures (higher-level code can still observe via emitted events).\n   b. Attempt to emit a \"debugPanelUpdate\" battle event to inform UI debug panels of the failure.\n4. Return the result of the dispatch operation (if successful).\n\nexport async function dispatchBattleEvent(eventName, payload) {\n  if (!machine) return;\n  try {\n    return await machine.dispatch(eventName, payload);\n  } catch {\n    // swallow to avoid cascading startup failures; higher-level code\n    // can still observe via emitted events or thrown errors if needed.\n    try {\n      // emit a debug event so UI debug panels can show the failure\n      emitBattleEvent(\"debugPanelUpdate\");\n    } catch {}\n  }\n}","qaContext":"Why: Dispatch an event to the currently running battle machine. How: Catch the error to prevent cascading failures (higher-level code can still observe via emitted events).","embedding":[-0.123,0.073,-0.01,0.181,-0.052,-0.034,-0.068,0.041,-0.001,-0.004,-0.038,-0.137,-0.049,0.003,0.004,0.019,0.209,-0.06,-0.041,0.026,0.005,-0.068,-0.089,0.056,-0.016,-0.07,-0.102,-0.087,-0.004,-0.017,0.035,-0.06,-0.189,0.006,0.088,0.103,0.051,-0.039,0.034,-0.075,0.057,0.028,-0.111,0.008,0.032,-0.091,-0.01,-0.022,-0.088,-0.04,0.023,0.051,0.063,0.06,0.178,-0.008,0.09,0.031,0.006,0.095,-0.132,-0.077,-0.111,0.04,0.036,-0.008,0.127,0.002,0.045,0.052,-0.045,-0.014,-0.043,0.031,-0.038,0.045,0.024,-0.074,-0.053,-0.065,0.078,0.034,-0.043,0.028,0.137,0.117,0.004,-0.017,0.082,0.082,-0.145,-0.024,0.074,0.22,0.095,0.109,0.088,0.014,0.007,0.053,0.019,0.022,-0.097,0.006,0.082,0.009,-0.042,-0.143,-0.047,-0.026,0.091,0.001,-0.011,-0.07,-0.049,0.082,0.046,0.025,0,-0.016,0.097,-0.039,0.114,-0.043,0.157,-0.031,0.115,0,0.055,-0.186,-0.093,0.111,0.109,0.05,0.104,-0.007,0.059,0.059,-0.006,0.042,0.007,-0.169,0.109,-0.023,0.026,-0.012,-0.027,0.074,0.049,-0.126,-0.155,-0.049,0.077,0.075,-0.011,-0.026,-0.071,0.088,-0.023,-0.06,-0.02,0.05,-0.028,-0.122,-0.059,-0.094,-0.205,-0.119,-0.162,-0.005,-0.264,-0.011,-0.081,-0.275,-0.029,-0.105,0.126,-0.118,0.022,0.114,0.189,-0.095,0.083,0.009,0.062,-0.109,0.056,0.027,-0.046,-0.087,-0.14,0.059,0.037,0.041,-0.107,-0.111,-0.094,-0.099,0.015,-0.086,-0.032,-0.11,0.133,0.086,0.036,0.11,-0.021,-0.184,0.104,-0.119,-0.042,0.158,0.054,0.14,-0.089,-0.061,-0.062,0.083,-0.012,-0.066,0.029,0.012,-0.041,0,0.042,0.037,-0.118,-0.006,-0.092,-0.007,0.017,-0.03,-0.14,-0.06,-0.161,0.096,-0.059,0.059,-0.108,0.048,-0.011,-0.07,-0.016,0.034,0.102,0.098,-0.016,0.012,-0.054,0.049,0.053,-0.024,0.036,-0.013,0.073,0.002,-0.018,-0.014,0.092,0.078,0.076,0.061,-0.038,-0.006,0.05,0.084,-0.026,0.063,0.062,0.004,-0.045,0.034,0.085,0.102,-0.043,-0.035,-0.005,0.152,-0.085,-0.022,0.054,-0.088,-0.035,0.047,-0.022,-0.121,0.077,0.044,-0.053,0.011,-0.132,0.106,0.235,0.084,0.117,0.016,-0.118,-0.084,-0.023,0.073,-0.019,-0.169,0.093,0.155,-0.017,0.095,0.052,-0.038,0.019,0.044,0.093,0.16,0.07,-0.04,-0.057,0.022,-0.043,0.062,0.013,0,-0.027,0.081,0.041,-0.044,-0.06,-0.028,-0.055,-0.236,-0.007,-0.058,0.054,0.009,-0.001,-0.001,-0.033,0.006,0.069,0.002,-0.123,-0.031,-0.01,-0.019,-0.028,0.016,-0.095,0.01,0.031,0.029,0.027,-0.079,-0.106,0.139,0.015,-0.001,-0.17,0.14,0.07,-0.103,0.114,-0.016,0.012,-0.007,0.073,0.084,-0.077,0.083,-0.097,-0.127,0.049,0.045,-0.017,-0.116,-0.13,0.148,-0.024,-0.014,-0.015,-0.1,0.084,0.036,0.096,-0.042,0.036,-0.027],"source":"src/helpers/classicBattle/orchestrator.js [dispatchBattleEvent]","tags":["code","how","function","utility","./stateMachine.js","./orchestratorHandlers.js","./roundManager.js","./battleEvents.js","./eventDispatcher.js","dispatch","emitBattleEvent","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/orchestrator.js","node":"dispatchBattleEvent"},"patterns":[],"relations":{"imports":["./stateMachine.js","./orchestratorHandlers.js","./roundManager.js","./battleEvents.js","./eventDispatcher.js"],"calls":["dispatch","emitBattleEvent"]}},"version":1},
{"id":"opponentController.js-getOpponentCardData","text":"Retrieve and prepare opponent judoka for rendering.\n\n@returns {Promise<object|null>} Judoka data with render dependencies.\n1. Fetch the stored opponent judoka via `getOpponentJudoka`.\n2. Obtain gokyo lookup, loading it if necessary.\n3. Load settings to read the `enableCardInspector` flag.\n4. Clear the stored judoka to avoid leaking state.\n5. Return judoka enriched with lookup and inspector flag.\n\nexport async function getOpponentCardData() {\n  const judoka = getOpponentJudoka();\n  if (!judoka) return null;\n  let lookup = getGokyoLookup();\n  if (!lookup) {\n    lookup = await getOrLoadGokyoLookup();\n    if (!lookup) return null;\n  }\n  try {\n    await loadSettings();\n  } catch {}\n  const enableInspector = isEnabled(\"enableCardInspector\");\n  clearOpponentJudoka();\n  return { ...judoka, lookup, enableInspector };\n}","qaContext":"Why: Retrieve and prepare opponent judoka for rendering. How: Fetch the stored opponent judoka via `getOpponentJudoka`.","embedding":[-0.124,0.213,-0.149,0.109,-0.102,0.141,-0.022,0.042,0.019,-0.148,0.008,-0.069,-0.198,0.046,0.031,0.068,0.117,-0.097,-0.062,0.059,0.118,-0.161,0.018,-0.069,0.019,0.011,-0.013,-0.142,0.037,-0.004,0.031,0.063,-0.127,-0.051,-0.023,0.127,-0.108,0.037,0.019,0.02,-0.01,0.162,-0.164,-0.016,0.165,0.011,0.017,0.036,0.022,-0.064,-0.203,0.003,-0.006,0.072,0.149,0.053,0.024,-0.028,-0.091,0.12,-0.091,-0.091,0.129,0.018,0.018,-0.042,-0.03,0.092,-0.023,0.051,-0.015,0.056,0.186,-0.079,-0.12,-0.075,-0.098,-0.025,0.143,-0.066,0.066,-0.12,-0.004,0.07,0.042,0.222,0.035,-0.049,0.054,0.019,0.074,-0.015,0.114,0.027,-0.023,0.062,-0.041,-0.006,-0.064,0.029,-0.016,-0.082,0.14,0.01,-0.061,-0.051,0.106,0.003,0.053,0.094,-0.008,0.178,-0.066,-0.008,-0.12,0.08,-0.027,-0.11,-0.057,0.047,0.231,-0.079,0.068,0.067,0.089,-0.015,0.024,0,0.099,-0.093,-0.014,0.029,-0.082,-0.09,0.073,-0.24,-0.186,0.133,-0.103,0.11,-0.131,0.043,-0.027,0.059,-0.096,0.098,0.057,0.118,0.195,-0.019,-0.107,-0.108,0.016,0.101,-0.05,0.025,-0.137,-0.007,0.147,-0.054,-0.163,0.118,-0.01,-0.125,0.01,-0.035,-0.217,-0.06,0.093,0.008,-0.131,0.11,0.005,-0.156,-0.023,-0.034,0.164,0.013,-0.133,0.097,0.069,-0.06,-0.013,0.037,0.069,0.042,0.144,-0.073,-0.099,-0.084,-0.099,0.033,-0.083,0.031,-0.084,-0.23,-0.032,-0.119,-0.057,-0.107,0.134,-0.029,0.018,-0.083,-0.225,-0.044,-0.123,-0.053,0.094,-0.056,-0.147,0.216,0.041,0.207,0.007,-0.094,-0.014,0.283,-0.019,0.01,-0.021,-0.133,0.04,0,0.188,-0.138,-0.004,0.01,0.141,-0.005,0.066,0.165,-0.004,-0.112,0.015,0.052,-0.002,-0.031,0.012,0.259,0.049,0.059,0.025,-0.138,0.036,-0.052,0.037,0.049,-0.219,0.194,0.123,-0.028,-0.053,-0.053,-0.051,-0.15,-0.219,0.119,0.052,-0.035,-0.111,0.026,-0.146,0.143,0.047,-0.031,-0.164,0.172,-0.031,-0.191,-0.149,0.098,0.211,-0.042,0.033,-0.114,-0.063,-0.014,0.027,-0.028,0.074,-0.177,0.024,0.183,0.032,-0.178,-0.057,-0.074,0.04,0.077,-0.062,0.125,0.221,0.113,-0.021,-0.085,0.099,-0.005,0.222,0.08,-0.139,-0.009,0.244,0.15,-0.022,0.074,-0.047,-0.024,0.219,0.049,0.022,0.078,0.013,-0.033,0.052,-0.035,0.001,0.019,-0.047,0,-0.198,-0.107,0.092,-0.095,-0.01,-0.124,0.034,-0.128,-0.066,-0.172,0.065,0.158,0.028,0.049,0.097,-0.111,-0.006,-0.02,-0.149,-0.078,-0.057,-0.092,-0.032,0.021,0.049,0.004,0.035,0.068,0.086,0.13,-0.064,0.103,0.027,-0.005,-0.063,0.116,0.017,-0.087,0.153,0.087,0.032,-0.058,-0.011,0.012,-0.01,0.017,-0.01,-0.202,0.094,-0.054,-0.051,-0.196,-0.225,0.131,-0.056,-0.18,0.07,-0.047,0.141,0.083,0.016,-0.139,0.022,-0.007],"source":"src/helpers/classicBattle/opponentController.js [getOpponentCardData]","tags":["code","what","function","utility","./cardSelection.js","../settingsStorage.js","../featureFlags.js","getOpponentJudoka","getGokyoLookup","getOrLoadGokyoLookup","loadSettings","isEnabled","clearOpponentJudoka","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/opponentController.js","node":"getOpponentCardData"},"patterns":[],"relations":{"imports":["./cardSelection.js","../settingsStorage.js","../featureFlags.js"],"calls":["getOpponentJudoka","getGokyoLookup","getOrLoadGokyoLookup","loadSettings","isEnabled","clearOpponentJudoka"]}},"version":1},
{"id":"interruptHandlers.js-initInterruptHandlers","text":"Register global interrupt handlers for Classic Battle.\n\n@param {{statTimeoutId: ReturnType<typeof setTimeout>|null, autoSelectId: ReturnType<typeof setTimeout>|null, compareRaf: number}} store\n- Battle state store used to clear pending timers.\n1. Define `cleanup` to cancel timers, reset skip state, clear the scoreboard timer,\n   and stop the shared scheduler.\n2. Attach navigation handlers for `pagehide` and `beforeunload` that:\n   a. Call `cleanup`.\n   b. Interrupt the match with reason \"navigation\".\n   c. Show a concise scoreboard message.\n   d. Dispatch `\"interrupt\"` with the reason.\n3. Attach error handlers for `error` and `unhandledrejection` that:\n   a. Extract an error message.\n   b. Call `cleanup`.\n   c. Interrupt the match with reason \"error\".\n   d. Surface an error dialog with the message.\n   e. Dispatch `\"interrupt\"` with the reason.\n\nexport function initInterruptHandlers(store) {\n  /**\n   * Cancel timers and scheduler callbacks to prevent UI drift.\n   *\n   * @pseudocode\n   * 1. Clear `statTimeoutId` and `autoSelectId` from the store and reset them.\n   * 2. Cancel any scheduled frame via `compareRaf` and reset it.\n   * 3. Reset skip handler state.\n   * 4. Clear the scoreboard timer and stop the shared scheduler.\n   *\n   * @returns {void}\n   */\n  function cleanup() {\n    try {\n      clearTimeout(store.statTimeoutId);\n      clearTimeout(store.autoSelectId);\n      store.statTimeoutId = null;\n      store.autoSelectId = null;\n    } catch {}\n    try {\n      cancelFrame(store.compareRaf);\n      store.compareRaf = 0;\n    } catch {}\n    try {\n      resetSkipState();\n    } catch {}\n    try {\n      clearTimer();\n    } catch {}\n    try {\n      stopScheduler();\n    } catch {}\n  }\n\n  /**\n   * Handle navigation away from the page.\n   *\n   * @pseudocode\n   * 1. Invoke `cleanup` to cancel timers and the scheduler.\n   * 2. Call `battleEngine.interruptMatch(\"navigation\")`.\n   * 3. Show \"Match interrupted: navigation\" on the scoreboard.\n   * 4. Dispatch `dispatchBattleEvent(\"interrupt\", { reason: \"navigation\" })`.\n   */\n  function handleNavigation() {\n    cleanup();\n    try {\n      battleEngine.interruptMatch(\"navigation\");\n    } catch {}\n    try {\n      showMessage(\"Match interrupted: navigation\");\n    } catch {}\n    try {\n      dispatchBattleEvent(\"interrupt\", { reason: \"navigation\" });\n    } catch {}\n  }\n\n  /**\n   * Handle uncaught errors and promise rejections.\n   *\n   * @pseudocode\n   * 1. Derive an error message from the event.\n   * 2. Invoke `cleanup` to cancel timers and the scheduler.\n   * 3. Call `battleEngine.interruptMatch(\"error\")`.\n   * 4. Show an error dialog with the message.\n   * 5. Dispatch `dispatchBattleEvent(\"interrupt\", { reason: message })`.\n   *\n   * @param {ErrorEvent|PromiseRejectionEvent} e - Error or rejection event.\n   */\n  function handleError(e) {\n    const msg = e?.reason?.message || e?.reason || e?.message || \"Unknown error\";\n    cleanup();\n    try {\n      battleEngine.interruptMatch(\"error\");\n    } catch {}\n    showErrorDialog(msg);\n    try {\n      dispatchBattleEvent(\"interrupt\", { reason: msg });\n    } catch {}\n  }\n\n  window.addEventListener(\"pagehide\", handleNavigation);\n  window.addEventListener(\"beforeunload\", handleNavigation);\n  window.addEventListener(\"error\", handleError);\n  window.addEventListener(\"unhandledrejection\", handleError);\n}","qaContext":"Why: Interrupt the match with reason \"navigation\". How: Show a concise scoreboard message.","embedding":[-0.104,0.059,-0.011,0.104,-0.033,0.061,0.081,-0.002,0.015,0.053,-0.05,-0.118,-0.011,0.001,-0.139,-0.039,0.001,-0.041,-0.05,0.054,0.036,0.068,0.043,0.156,-0.148,-0.083,-0.05,-0.107,-0.048,-0.021,0.062,-0.035,-0.072,-0.013,0.045,-0.009,-0.09,0.021,-0.039,-0.119,0,0.1,-0.085,0.012,0.015,-0.057,-0.16,-0.054,0.038,0.078,-0.049,0.031,-0.003,-0.114,0.143,0.179,0.062,0.081,0.017,0.107,-0.03,-0.097,-0.035,-0.041,0.065,0.186,0.056,-0.034,-0.002,0.002,-0.081,0.097,0.063,0.01,-0.013,0.045,-0.156,-0.121,-0.076,-0.093,-0.081,-0.158,-0.074,-0.015,0.194,-0.029,0.171,-0.048,0.223,0.012,-0.049,0.033,0.063,0.064,-0.019,0.123,-0.048,0.065,0.004,0.068,0.043,0.012,-0.031,0.066,-0.02,-0.014,0.066,-0.006,-0.173,0.013,-0.024,0.119,0.038,0.015,-0.023,0.173,0.136,0.001,0.122,0.071,0.189,0.037,-0.054,-0.1,0.101,0.02,0.148,0,-0.034,-0.185,-0.244,0.019,0.06,0.072,0.02,0.068,-0.024,0.016,-0.109,0.041,-0.001,-0.068,0.089,-0.066,0.103,0.059,-0.04,-0.066,0.225,-0.147,-0.127,-0.002,0.116,0.124,-0.029,0.052,0.037,-0.006,0.032,-0.024,-0.138,0.16,0.013,-0.102,-0.008,0.061,-0.027,-0.053,-0.181,-0.023,-0.234,0.02,0.002,-0.321,-0.094,0.012,0.061,0.03,0.026,0.124,-0.012,-0.23,-0.092,0.002,-0.008,-0.055,-0.014,0.08,-0.011,-0.002,-0.094,-0.042,-0.015,0.137,-0.061,0.021,-0.091,-0.247,-0.015,-0.048,0.214,0.004,-0.001,-0.046,-0.021,0.006,-0.165,-0.173,0.218,-0.148,-0.13,0.095,0.083,-0.071,0.039,-0.021,-0.087,0.138,-0.109,-0.025,0.062,0.018,-0.037,0,0.143,-0.062,-0.058,0.033,0.05,0.005,0.038,0.096,-0.093,-0.119,-0.074,0.078,0.044,0.053,-0.095,0.115,0.125,0.016,-0.163,0.096,0.108,0.077,-0.033,-0.117,-0.09,0.044,0.04,0.123,0.04,0.046,0.051,0.018,-0.014,-0.027,0.14,-0.079,0.019,-0.052,-0.116,0.139,0.239,0.001,-0.078,0.01,0.031,0.172,-0.031,0.01,-0.118,-0.008,-0.098,-0.117,0.032,-0.008,-0.061,0.013,0.143,-0.193,-0.024,0.037,0.108,-0.051,0.005,0.004,0.192,0.022,-0.097,0.019,0.087,0.139,-0.068,0.016,0.002,-0.126,0.017,0.098,-0.009,-0.079,0.069,0.005,0.03,0.028,0.128,-0.161,-0.107,0.102,-0.155,0.157,0.034,-0.004,-0.082,-0.067,0.053,0.043,-0.094,0,0.006,0.031,0.096,0.009,0.001,-0.113,-0.012,0.017,-0.042,-0.096,0.089,0.045,-0.007,0.003,-0.046,-0.126,-0.065,-0.019,-0.07,0.025,-0.014,-0.061,0.029,-0.007,0.05,0.009,0.039,0.036,0.059,-0.045,-0.01,0.031,0.031,0,-0.155,0.088,0.094,-0.084,0.055,0.076,0.056,0.005,-0.106,-0.008,0.058,-0.014,-0.062,-0.073,0.127,0.002,-0.205,-0.063,-0.034,0.114,0.057,-0.003,0.065,-0.188,0.02,0.086,0.008,-0.019,-0.138,0.012],"source":"src/helpers/classicBattle/interruptHandlers.js [initInterruptHandlers]","tags":["code","why","function","utility","../battleEngineFacade.js","./orchestrator.js","../setupScoreboard.js","../../utils/scheduler.js","./skipHandler.js","../../components/Modal.js","../../components/Button.js","clearTimeout","cancelFrame","resetSkipState","clearTimer","stopScheduler","cleanup","interruptMatch","showMessage","dispatchBattleEvent","showErrorDialog","addEventListener","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/interruptHandlers.js","node":"initInterruptHandlers"},"patterns":[],"relations":{"imports":["../battleEngineFacade.js","./orchestrator.js","../setupScoreboard.js","../../utils/scheduler.js","./skipHandler.js","../../components/Modal.js","../../components/Button.js"],"calls":["clearTimeout","cancelFrame","resetSkipState","clearTimer","stopScheduler","cleanup","interruptMatch","showMessage","dispatchBattleEvent","showErrorDialog","addEventListener"]}},"version":1},
{"id":"eventDispatcher.js-setMachine","text":"Set the state machine instance for the dispatcher.\n@param {import('./stateMachine.js').BattleStateMachine} m\n\nexport function setMachine(m) {\n  machine = m;\n}","qaContext":"Why: Set the state machine instance for the dispatcher. How: @param {import('.","embedding":[-0.233,-0.055,-0.019,0.147,-0.115,0.244,-0.173,0.189,-0.193,-0.045,-0.073,-0.04,0.092,0.129,-0.074,0.218,0.095,-0.268,0.21,0.095,0.217,0.013,0.139,0.079,0.041,0.02,0.059,-0.005,-0.193,0.017,0.001,-0.113,-0.082,-0.008,0.022,0.264,-0.034,-0.062,0.215,-0.024,0.121,0.141,-0.003,-0.165,0.008,0.125,0.063,0.079,0.173,0.046,-0.162,-0.043,0.124,0.026,0.141,-0.008,0.233,0.232,0.085,0.024,-0.223,-0.131,0.132,0.01,0.172,-0.103,-0.166,0.208,-0.196,-0.122,0.063,0.051,0.272,-0.021,-0.184,-0.24,0.068,-0.007,0.295,0.146,-0.043,-0.168,-0.237,0.067,0.1,0.074,-0.021,-0.161,0.087,0.13,-0.314,-0.348,-0.03,0.191,-0.075,0.048,-0.053,0.203,-0.139,-0.004,0.109,-0.049,0.056,0.192,-0.051,0.113,-0.072,-0.17,-0.122,-0.035,0.168,0.412,-0.054,0.081,0.071,0.034,0.081,-0.077,-0.118,0.01,-0.005,-0.215,0.098,-0.075,0.17,0.042,0.123,0,-0.083,-0.246,-0.153,0.105,0.023,0.034,0.2,-0.136,-0.046,-0.01,-0.199,0.193,0.046,0.112,-0.137,-0.228,0.068,-0.073,0.19,-0.053,0.15,-0.018,-0.129,-0.171,0.022,0.069,0.071,-0.042,0.079,0.014,0.242,0.161,-0.037,0.088,0.001,-0.239,-0.049,0.022,-0.315,-0.142,0.024,0.115,-0.274,0.163,-0.167,-0.134,-0.066,-0.204,0.196,-0.096,-0.158,-0.064,0.154,-0.297,0.147,-0.063,0.047,-0.239,0.23,-0.265,-0.071,-0.002,0.095,0.134,0.114,0.03,-0.29,0.011,-0.137,0.022,0.069,0.038,-0.061,0.114,0.205,-0.032,0.011,0.155,-0.233,-0.291,0.09,-0.255,-0.297,0.201,0.322,0.088,-0.222,0.025,0.274,0.203,-0.066,-0.269,0.008,0.05,-0.274,0,0.113,0.131,-0.01,0.18,-0.188,-0.008,0.122,0.211,-0.281,0.105,-0.214,0.159,0.148,-0.075,-0.139,0.223,-0.132,0.035,-0.048,-0.254,0.082,-0.042,-0.12,0.137,-0.054,0.129,0.012,0.088,0.073,0.211,-0.111,-0.071,-0.111,0.07,-0.06,0.167,0.144,-0.021,-0.02,0.136,0.069,-0.042,-0.353,0.114,-0.134,0.052,-0.12,-0.058,0.132,-0.022,-0.149,-0.063,0.003,-0.051,0.003,-0.202,0.009,-0.068,0.001,0.035,-0.067,-0.21,-0.104,-0.179,-0.238,-0.098,-0.209,0.254,0.253,0.07,-0.032,-0.022,0.267,-0.029,0.04,-0.049,-0.065,-0.047,0.193,0.333,0.166,0.081,0.046,-0.147,0.093,0.136,0.203,0.333,-0.027,-0.145,0.061,-0.038,0.157,-0.099,-0.125,0,-0.072,-0.009,0.241,-0.026,-0.283,-0.002,-0.015,-0.234,-0.036,-0.127,0.054,0.319,0.041,0.09,-0.091,-0.058,0.003,0.374,0.027,0.068,0.058,-0.122,0.167,0.27,0.155,0.053,-0.017,-0.171,-0.066,-0.015,-0.13,0.28,0.021,-0.113,-0.328,0.066,0.016,-0.025,0.191,-0.116,-0.187,-0.031,-0.164,0.039,-0.135,0.108,-0.323,-0.133,-0.013,-0.043,0.118,-0.048,-0.083,0.167,0.122,0.085,-0.048,-0.242,-0.095,-0.213,-0.063,-0.073,-0.004,-0.155],"source":"src/helpers/classicBattle/eventDispatcher.js [setMachine]","tags":["code","what","function","utility","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/eventDispatcher.js","node":"setMachine"},"patterns":[],"relations":{"imports":[],"calls":[]}},"version":1},
{"id":"eventDispatcher.js-dispatchBattleEvent","text":"Dispatch an event to the state machine.\n@param {string} eventName\n@param {any} payload\n\nexport async function dispatchBattleEvent(eventName, payload) {\n  if (!machine) return;\n  try {\n    console.log(\"DEBUG: eventDispatcher dispatch\", { eventName, payload });\n  } catch {}\n  await machine.dispatch(eventName, payload);\n  try {\n    console.log(\"DEBUG: eventDispatcher dispatched\", { eventName });\n  } catch {}\n}","qaContext":"Why: Dispatch an event to the state machine. How: @param {string} eventName @param {any} payload export async function dispatchBattleEvent(eventName, payload) { if (!","embedding":[-0.138,0.025,0.016,0.222,-0.015,-0.048,-0.088,-0.006,0.027,0.061,-0.051,-0.224,-0.091,-0.004,-0.007,0.013,0.093,-0.145,0.021,-0.089,0.061,-0.037,-0.175,0.023,-0.1,-0.006,-0.039,-0.1,-0.018,0.001,-0.004,-0.248,-0.18,-0.013,0.224,0.103,-0.006,-0.045,0.191,-0.121,0.203,0.026,-0.048,-0.114,0.034,-0.14,-0.062,0.054,-0.051,0.057,0.012,0.13,0.044,0.062,0.157,0.111,0.147,0.095,-0.062,-0.029,-0.098,-0.198,-0.077,0.054,0.09,0.022,0.031,0.004,-0.01,-0.068,-0.031,-0.014,0.023,0.029,-0.078,-0.06,0.067,-0.004,-0.021,0.059,0.032,-0.05,0.026,0.094,0.039,0.183,-0.132,-0.08,0.021,0.044,-0.305,-0.22,0.056,0.093,-0.078,0.16,0.011,0.05,-0.042,-0.009,-0.008,0.012,-0.127,0.045,0.063,-0.013,-0.125,-0.228,-0.062,0.06,0.132,0.153,0.036,0.017,-0.001,-0.038,0.061,-0.02,-0.048,-0.083,0.148,-0.056,0.13,-0.026,0.106,-0.041,0.145,0,0.061,-0.174,-0.085,-0.009,0.12,0.08,0.154,-0.073,0.073,-0.015,-0.08,-0.008,0.061,-0.13,0.049,-0.1,0.084,0.008,0.021,0.164,0.022,-0.005,-0.052,-0.04,0.013,-0.004,-0.055,-0.008,-0.036,0.083,0.037,0.015,0.026,0.03,0.054,-0.157,-0.04,-0.048,-0.277,-0.154,-0.096,-0.072,-0.264,0.026,-0.279,-0.234,0.009,-0.315,0.177,-0.13,0.062,0.049,0.228,-0.201,0.186,-0.078,0.107,-0.161,0.166,0.085,-0.072,-0.125,-0.086,-0.011,0.088,-0.009,-0.058,-0.119,-0.004,0.029,0.084,0.007,0.068,-0.097,0.186,0.192,-0.004,0.156,-0.101,-0.109,0.037,-0.221,-0.171,0.137,0.148,0.17,-0.228,0.022,0.139,0.093,-0.064,-0.114,-0.085,-0.026,-0.06,0,0.088,0.062,-0.141,0.054,-0.131,-0.013,0.016,0,-0.167,0.052,-0.21,0.118,0.006,0.171,-0.042,0.17,0.047,-0.087,0.047,-0.049,0.095,-0.007,-0.11,0.085,-0.044,0.043,0.031,-0.04,-0.039,-0.054,0.027,0.02,0.021,0.16,-0.062,0.018,0.096,0.047,-0.03,0.018,0.012,-0.041,-0.112,0.092,0.037,-0.02,-0.112,0.053,0.112,0.189,-0.03,-0.042,-0.037,0.106,-0.067,-0.068,-0.008,-0.055,0.01,0.04,-0.089,-0.128,0.091,0.018,-0.032,-0.052,0,0.028,0.177,0.111,0.158,0.085,-0.05,0.015,0.113,0.036,-0.103,-0.172,0.156,0.213,-0.034,0.029,0.012,0.037,0.144,0.175,0.133,0.144,0.022,-0.083,-0.004,0.022,-0.016,0.031,-0.025,0,-0.074,0.044,-0.044,-0.025,-0.071,0.078,-0.051,-0.303,0.031,-0.11,-0.025,-0.017,0.092,0.041,0.044,-0.055,0.194,0.122,-0.067,-0.086,0.133,-0.014,-0.005,0.029,-0.045,0.038,0.045,-0.033,-0.01,-0.074,-0.138,0.167,-0.03,-0.066,-0.103,0.077,0.223,-0.089,0.268,0.024,0.016,0.113,-0.006,0.134,-0.164,0.15,-0.107,-0.09,0.033,0.043,-0.021,-0.149,-0.1,0.245,-0.075,-0.063,-0.036,-0.217,0.019,0.083,0.188,-0.026,0.028,-0.066],"source":"src/helpers/classicBattle/eventDispatcher.js [dispatchBattleEvent]","tags":["code","what","function","utility","dispatch","logging","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/eventDispatcher.js","node":"dispatchBattleEvent"},"patterns":[],"relations":{"imports":[],"calls":["dispatch"]}},"version":1},
{"id":"eventBus.js-setBattleDispatcher","text":"Register the event dispatcher used for battle state transitions.\n\n@param {(eventName: string, payload?: any) => Promise<void>|void} fn\n1. If `fn` is a function, store it in `dispatcher`.\n2. `dispatchBattleEvent` will later invoke this stored dispatcher.\n\nexport function setBattleDispatcher(fn) {\n  if (typeof fn === \"function\") dispatcher = fn;\n}","qaContext":"Why: Register the event dispatcher used for battle state transitions. How: @param {(eventName: string, payload?","embedding":[-0.173,0.046,-0.008,0.111,-0.12,0.124,0.014,0.065,0.032,0.015,-0.069,-0.117,-0.111,0.042,0.002,0.049,-0.003,-0.083,0.083,-0.024,0.101,-0.038,-0.04,0.052,-0.056,-0.022,-0.068,-0.08,0.031,-0.046,0.089,-0.025,-0.146,-0.008,0.073,0.106,-0.077,-0.031,0.122,-0.073,0.054,-0.016,-0.096,-0.114,0.029,-0.003,0.091,0.037,-0.052,0.117,0.033,0.032,0.026,-0.033,0.182,0.084,0.135,0.019,0.036,0.047,-0.212,-0.12,0.016,-0.028,0.078,0.03,0.061,0.011,0.008,-0.043,-0.019,0.004,0.09,-0.061,-0.064,-0.03,0.025,0.063,-0.01,0.002,0.064,-0.047,-0.023,-0.006,0.014,0.102,-0.048,-0.115,0.056,0.141,-0.159,-0.068,0.039,0.114,-0.156,0.022,-0.03,-0.032,0.126,0.062,-0.025,-0.01,0.074,-0.002,-0.004,-0.003,0,-0.102,-0.057,0.012,0.068,0.089,0.017,-0.019,-0.034,0.074,0,-0.081,0.061,-0.043,0.125,-0.003,-0.008,-0.011,0.006,-0.026,0.155,0,0.053,-0.201,-0.175,0.015,-0.052,0.09,0.162,-0.143,-0.069,-0.043,-0.089,0.071,-0.017,-0.079,0.022,-0.13,0.062,-0.042,0.054,-0.01,0.116,0.012,-0.069,-0.076,0.025,0.086,0.003,-0.045,-0.023,0.013,0.126,0.004,-0.028,0.017,0.076,-0.112,-0.097,-0.009,-0.163,-0.043,0.003,0.02,-0.227,0.053,-0.125,-0.25,-0.041,0.001,0.106,-0.028,0.065,0.042,0.127,-0.142,0.171,-0.053,-0.025,-0.055,0.056,-0.008,-0.035,-0.093,-0.05,0.006,-0.005,0.095,-0.128,-0.068,-0.066,-0.017,0.048,-0.028,0.088,-0.011,0.128,0.057,-0.078,0.05,-0.077,-0.116,0.098,-0.074,-0.096,0.194,0.098,-0.051,-0.109,-0.1,-0.037,0.061,-0.095,-0.091,0.073,0.105,0.023,0,0.117,0.073,-0.085,0.124,-0.095,0.038,0.078,0.043,-0.166,0.009,-0.178,0.061,0.018,0.011,-0.122,0.105,0.02,-0.065,0.051,0.02,0.048,-0.028,-0.115,0.032,0.003,0.011,0.148,-0.013,0.045,0.038,-0.106,-0.102,-0.056,0.028,0.003,0.002,0.087,0.031,-0.058,-0.001,0.059,0.02,-0.038,0.06,-0.016,0.131,-0.103,0.009,0.043,0.028,-0.004,-0.013,-0.009,-0.053,-0.048,-0.089,0.009,-0.109,-0.055,0.065,0.042,-0.134,0.096,-0.001,0.031,-0.042,-0.124,-0.042,0.093,0.076,0.198,-0.093,0.087,-0.038,0.073,-0.051,-0.007,-0.144,0.169,0.193,0.104,0.035,0.071,-0.089,0.024,0.224,-0.039,0.169,0.05,-0.009,0.044,-0.042,0.082,-0.062,-0.036,0,-0.03,0.023,0.071,-0.001,-0.074,0.054,0.004,-0.113,-0.014,-0.127,0.092,0.102,0.155,-0.038,0.008,-0.016,0.161,0.046,-0.066,0.016,-0.112,-0.017,-0.015,0.013,-0.026,0.015,0.021,0.041,0.067,-0.055,0.016,0.111,0.051,-0.058,-0.186,0.2,0.063,-0.032,0.184,0.066,-0.08,-0.017,-0.048,-0.007,-0.219,0.085,-0.086,-0.073,-0.031,0.04,0.016,-0.152,-0.149,0.121,0.023,0.041,0.079,-0.161,0.018,-0.016,0.075,-0.112,-0.065,-0.01],"source":"src/helpers/classicBattle/eventBus.js [setBattleDispatcher]","tags":["code","what","function","utility","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/eventBus.js","node":"setBattleDispatcher"},"patterns":[],"relations":{"imports":[],"calls":[]}},"version":1},
{"id":"eventBus.js-setBattleStateGetter","text":"Register a getter that returns the current battle state name.\n\n@param {() => string|null} fn\n1. If `fn` is a function, store it in `stateGetter`.\n2. `getBattleState` will later use this stored getter.\n\nexport function setBattleStateGetter(fn) {\n  if (typeof fn === \"function\") stateGetter = fn;\n}","qaContext":"Why: Register a getter that returns the current battle state name. How: @param {() => string|null} fn 1.","embedding":[-0.174,0.149,-0.095,0.061,-0.131,0.179,0.104,0.075,-0.017,-0.02,-0.135,-0.204,-0.077,-0.028,0.064,0.021,-0.02,-0.066,0.184,-0.026,0.09,0.048,-0.036,0.077,-0.023,-0.048,-0.013,0.002,-0.085,-0.114,0.157,0.057,-0.156,0.06,0.087,0.065,-0.236,0.014,0.102,-0.095,-0.023,-0.007,-0.016,-0.094,0.052,0.009,0.061,0.039,0.058,0.076,0.057,-0.007,0.041,-0.129,0.316,0.092,0.113,0.059,-0.087,0.22,-0.179,-0.184,0.044,-0.048,0.083,-0.022,0.08,0.085,-0.078,-0.077,0.03,0.13,0.2,-0.15,-0.094,0.018,-0.101,0.082,0.089,0.113,-0.033,-0.012,-0.098,0.028,0.099,0.092,-0.031,-0.075,0.133,0.09,-0.34,-0.164,0.067,0.052,-0.136,0.128,-0.054,0.002,0.041,0.064,-0.034,0.038,0.156,0.007,0.041,0.001,0.01,-0.086,0.033,0.005,0.03,0.236,0.023,0.069,-0.085,0.007,0.068,-0.152,0.106,-0.013,0.243,-0.09,-0.036,-0.007,-0.063,0.068,0.125,0,-0.002,-0.21,-0.058,0.11,-0.114,0.017,0.151,-0.101,-0.068,-0.051,-0.104,0.188,0.021,-0.045,-0.147,-0.1,0.009,-0.049,-0.007,-0.095,0.111,0.107,-0.026,-0.067,0.095,-0.07,0.004,0.047,-0.184,-0.016,0.223,-0.184,0.004,0.08,0.201,-0.091,-0.083,0.024,-0.199,0.018,0.097,-0.054,-0.179,0.142,-0.105,-0.221,-0.122,-0.091,0.089,-0.001,-0.112,0.082,0.046,-0.153,0.056,-0.03,-0.063,-0.002,-0.096,-0.125,-0.12,-0.032,-0.069,0.065,-0.09,0.114,-0.021,-0.064,-0.07,-0.084,0.145,-0.136,0.126,-0.109,0.216,0.041,-0.076,0.035,-0.094,-0.188,0.118,-0.156,-0.208,0.321,0.111,-0.047,-0.046,-0.235,0.039,0.05,-0.125,-0.125,-0.068,0.016,0.067,0,0.157,0.012,0.047,0.002,-0.057,-0.058,0.114,0.038,-0.19,-0.057,-0.137,0.091,-0.064,-0.024,0.089,0.178,-0.061,-0.121,0.008,0,-0.079,0.028,-0.084,-0.061,0.061,-0.009,0.139,-0.053,0.041,-0.017,-0.097,-0.074,-0.142,0.143,-0.074,-0.052,0.235,-0.049,0.023,0.136,-0.018,0.053,-0.042,-0.029,-0.072,0.101,-0.089,0.112,0.195,0.03,-0.046,-0.077,-0.102,-0.129,-0.131,-0.185,-0.145,-0.072,-0.084,0.117,0.018,-0.194,-0.027,0.051,-0.121,-0.113,-0.095,0.096,0.143,0.092,0.165,-0.103,0.123,0.023,0.05,0.136,-0.043,-0.059,0.077,0.143,0.152,0.041,-0.028,-0.193,0.065,0.216,-0.035,0.15,-0.003,-0.055,0.085,0.034,-0.016,-0.026,-0.22,0,0.016,-0.056,0.06,-0.045,-0.104,0.063,0.018,-0.11,0.072,-0.059,0.11,0.11,0.13,-0.169,-0.063,-0.079,0.129,0.165,-0.075,0.167,-0.078,-0.017,-0.059,0.032,0.007,-0.018,-0.05,-0.032,0.044,0.101,0.171,0.259,0.015,0.025,-0.152,0.128,0.14,-0.006,0.157,0.24,-0.077,0.091,-0.042,0.036,-0.194,0.094,0.05,-0.124,0.136,-0.122,-0.012,-0.025,-0.148,0.127,-0.058,0.126,0.107,-0.036,0.034,0.072,-0.161,-0.102,0.04,0.086],"source":"src/helpers/classicBattle/eventBus.js [setBattleStateGetter]","tags":["code","what","function","utility","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/eventBus.js","node":"setBattleStateGetter"},"patterns":[],"relations":{"imports":[],"calls":[]}},"version":1},
{"id":"eventBus.js-dispatchBattleEvent","text":"Dispatch a battle event through the registered dispatcher.\n\n@param {string} eventName\n@param {any} [payload]\n1. Invoke the stored `dispatcher` with `eventName` and `payload`.\n2. If the dispatcher throws, swallow the error.\n\nexport async function dispatchBattleEvent(eventName, payload) {\n  try {\n    await dispatcher(eventName, payload);\n  } catch {\n    // Swallow dispatcher errors to keep battle flow\n  }\n}","qaContext":"Why: Dispatch a battle event through the registered dispatcher. How: @param {string} eventName @param {any} [payload] 1.","embedding":[-0.138,0.087,-0.054,0.279,-0.086,0.048,0.004,0.088,0.036,-0.065,-0.128,-0.287,-0.099,0.096,-0.049,-0.02,0.091,0.009,0.033,-0.033,-0.061,0.073,-0.061,0.151,-0.042,-0.083,-0.167,-0.153,0.034,-0.002,0.173,-0.181,-0.183,0.065,0.178,0.175,-0.075,-0.009,0.154,-0.147,0.122,-0.031,-0.16,-0.014,-0.07,-0.143,0.001,0.056,-0.003,0.074,-0.04,-0.027,0.063,-0.028,0.258,0.01,0.122,-0.001,0.098,0.086,-0.107,-0.156,-0.022,0.058,-0.011,0.028,0.056,0.036,-0.063,-0.074,0.049,-0.018,-0.02,0.071,-0.101,0.064,0.06,-0.099,-0.065,0.081,0.04,0.024,0.029,0.006,0.15,0.157,-0.027,-0.022,0.101,0.064,-0.234,-0.15,0.158,0.264,0.081,0.099,0.025,0.007,-0.003,-0.022,-0.001,0.002,-0.195,0.076,0.096,0.026,-0.093,-0.287,-0.103,-0.017,0.078,0.064,-0.005,-0.034,-0.054,-0.069,-0.045,-0.033,-0.054,0,0.065,-0.085,0.137,-0.07,0.175,-0.128,0.192,0,-0.103,-0.196,-0.163,0.09,0.039,0.039,0.147,-0.074,0.092,-0.002,-0.04,0.004,-0.041,-0.184,0.104,-0.086,0.039,0.033,-0.041,0.132,0.046,-0.119,-0.139,-0.042,0.012,-0.002,-0.063,-0.105,0.081,0.064,0.048,-0.085,0.067,0.106,0.039,-0.193,-0.011,0.06,-0.313,-0.05,-0.157,-0.018,-0.402,0.13,-0.243,-0.291,-0.045,-0.136,0.174,-0.119,0.022,0.022,0.141,-0.058,0.227,-0.1,-0.007,-0.184,0.065,-0.061,-0.107,-0.13,-0.157,-0.039,0.087,-0.067,-0.122,-0.138,-0.232,-0.067,0.034,-0.137,0.028,-0.095,0.098,-0.023,0.082,0.173,-0.042,-0.121,0.106,-0.23,-0.02,0.252,0.037,0.151,-0.145,-0.042,0.01,0.134,-0.051,-0.09,-0.055,-0.051,-0.022,0,0.097,0.089,-0.12,0.054,-0.093,0.049,0.035,0.011,-0.304,-0.045,-0.229,0.121,-0.057,0.133,-0.122,0.083,-0.003,-0.104,-0.054,-0.017,0.17,-0.08,-0.112,0.004,-0.032,0.104,0.079,0.006,0.049,0.059,0.075,0.062,0.037,0.056,0.082,0.075,0.117,0.099,-0.108,-0.058,0.007,0.079,-0.087,0.068,0.04,-0.04,-0.036,-0.031,0.11,0.175,0.017,-0.027,-0.108,0.09,-0.031,-0.026,0.054,-0.207,0.033,-0.059,-0.055,-0.14,0.128,0.014,-0.085,-0.05,-0.127,0.075,0.259,0.231,0.157,0.075,-0.053,-0.054,0.086,0.029,-0.08,-0.074,0.199,0.232,0.096,0.228,0.2,0.069,0.048,0.207,0.148,0.198,-0.007,-0.063,0.056,0.013,0.126,-0.027,0.06,0,-0.154,0.017,0.029,-0.155,-0.073,0.001,-0.099,-0.291,0.011,-0.089,-0.011,0.077,0.115,-0.002,-0.021,-0.047,0.185,0.113,-0.089,-0.05,-0.002,0.072,0.026,-0.041,-0.003,0.091,0.012,0.033,-0.002,-0.095,-0.037,0.164,-0.027,-0.098,-0.133,0.193,0.28,-0.183,0.08,-0.047,-0.039,0.062,0.155,0.047,-0.141,0.181,-0.205,-0.15,0.06,0.056,0.077,-0.077,-0.248,0.346,-0.092,-0.055,-0.022,-0.179,-0.019,-0.003,0.1,-0.036,0.01,0.01],"source":"src/helpers/classicBattle/eventBus.js [dispatchBattleEvent]","tags":["code","how","function","utility","dispatcher","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/eventBus.js","node":"dispatchBattleEvent"},"patterns":[],"relations":{"imports":[],"calls":["dispatcher"]}},"version":1},
{"id":"eventBus.js-getBattleState","text":"Get the current battle state (string) if available.\n\n@returns {string|null}\n1. Invoke the stored `stateGetter`.\n2. If invocation throws, swallow the error and return `null`.\n\nexport function getBattleState() {\n  try {\n    return stateGetter();\n  } catch {\n    // Swallow getter errors; state is unknown\n    return null;\n  }\n}","qaContext":"Why: Get the current battle state (string) if available. How: @returns {string|null} 1.","embedding":[-0.104,0.252,-0.084,0.069,0.002,0.154,0.034,-0.004,-0.07,0.004,-0.088,-0.323,-0.01,0.001,0.029,0.001,0.003,-0.048,0.211,-0.025,0.047,0.121,-0.056,0.086,0.013,0.046,-0.02,-0.149,-0.154,-0.132,0.06,-0.025,-0.21,-0.046,0.239,0.066,-0.098,0.03,0.061,-0.131,0.038,0.086,-0.026,-0.02,0.075,-0.068,-0.112,0.053,0.071,-0.012,-0.018,-0.084,0.182,-0.028,0.275,0.104,0.116,0.051,-0.084,0.257,-0.055,-0.336,-0.016,-0.106,0.125,-0.086,0.165,0.105,-0.143,-0.149,-0.001,-0.012,0.071,-0.022,-0.107,-0.024,-0.008,-0.061,0.188,0.212,-0.197,-0.131,-0.108,0.049,0.147,0.133,-0.002,0.049,0.16,0.107,-0.315,-0.132,-0.043,0.143,-0.013,0.193,-0.149,-0.07,0.087,0.065,0.082,0.005,0.113,-0.075,0.034,-0.05,0.032,-0.15,-0.004,0.029,0.038,0.167,0.093,0.076,-0.031,0.007,0.083,-0.126,0.016,-0.011,0.173,-0.092,0.139,-0.058,0.043,0.008,0.176,0,-0.007,-0.228,-0.044,0.154,-0.19,0.112,0.097,-0.113,0.063,-0.164,-0.018,0.169,-0.047,-0.074,-0.083,-0.054,0.055,-0.043,-0.01,0.009,0.111,0.112,-0.101,-0.097,0.117,-0.052,0.005,0.042,-0.208,0.016,0.271,-0.165,-0.019,0.112,0.192,-0.118,-0.06,0.116,-0.227,-0.056,-0.038,-0.085,-0.211,0.156,-0.186,-0.36,-0.087,-0.219,0.162,-0.002,-0.087,0.112,0.061,-0.104,0.079,-0.009,0.033,-0.064,-0.096,-0.188,-0.042,0.03,-0.029,-0.046,-0.038,0.169,-0.125,-0.159,-0.187,-0.211,0.087,-0.255,0.221,-0.142,0.145,-0.075,0.049,0.117,0.05,-0.281,0.121,-0.303,-0.194,0.421,0.074,0.101,-0.083,-0.179,0.067,0.235,-0.171,-0.188,-0.095,0.04,0.077,0,0.213,0.038,0.076,-0.003,0.025,-0.028,0.173,0.129,-0.265,-0.167,-0.197,0.189,-0.1,0.138,-0.026,0.219,0.035,-0.165,0.056,0.001,0.031,-0.049,0.051,0.015,-0.073,0.095,0.132,-0.162,-0.052,-0.093,0.109,-0.055,-0.102,0.286,-0.011,-0.06,0.166,-0.047,-0.068,0.134,-0.043,0.038,-0.036,-0.066,-0.052,0.034,0.02,0.114,0.09,0.078,-0.019,-0.032,0.004,0.033,-0.103,-0.219,-0.093,-0.091,-0.105,0.105,-0.182,-0.211,-0.099,0.061,-0.19,0.033,-0.047,0.21,0.225,0.164,0.151,-0.05,0.147,-0.077,0.185,0.232,-0.17,-0.136,0.177,-0.007,0.058,0.066,-0.061,-0.172,0.202,0.16,-0.077,0.02,0.036,-0.035,-0.024,0.013,-0.079,-0.079,-0.039,0,-0.011,-0.066,0.16,-0.115,-0.038,-0.04,0.015,-0.271,0.124,-0.015,0.062,0.083,0.123,-0.182,-0.034,-0.078,0.126,0.149,-0.085,0.156,-0.041,-0.011,0.027,0.072,0.001,0.104,-0.044,0.034,0.034,0.018,0.173,0.3,0.003,-0.014,-0.214,0.206,0.178,-0.035,0.181,0.197,-0.065,0.133,-0.016,0.047,-0.276,0.085,-0.075,-0.101,0.09,-0.171,-0.069,-0.055,-0.271,0.259,-0.156,0.114,0.106,-0.097,0.042,0.135,0,-0.165,-0.053,0.067],"source":"src/helpers/classicBattle/eventBus.js [getBattleState]","tags":["code","what","function","utility","stateGetter","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/eventBus.js","node":"getBattleState"},"patterns":[],"relations":{"imports":[],"calls":["stateGetter"]}},"version":1},
{"id":"controller.js-ClassicBattleController","text":"Controller for Classic Battle mode.\n1. Create a battle store via `createBattleStore`.\n2. Initialize feature flags and re‑emit changes.\n3. Start the battle orchestrator.\n4. Expose `startRound` which waits for the opponent card via an injected callback.\n\nexport class ClassicBattleController extends EventTarget {\n  /**\n   * @param {{waitForOpponentCard?: () => Promise<void>}} [deps]\n   */\n  constructor({ waitForOpponentCard } = {}) {\n    super();\n    this.store = createBattleStore();\n    this.waitForOpponentCard = waitForOpponentCard;\n    this.timerControls = { startCoolDown, pauseTimer, resumeTimer };\n  }\n\n  /** @returns {import(\"./roundManager.js\").BattleStore} */\n  get battleStore() {\n    return this.store;\n  }\n\n  /**\n   * Initialize feature flags and orchestrator.\n   * @returns {Promise<void>}\n   */\n  async init() {\n    await initFeatureFlags();\n    this.#emitFeatureFlags();\n    featureFlagsEmitter.addEventListener(\"change\", () => this.#emitFeatureFlags());\n    await initClassicBattleOrchestrator(this.store, () => this.startRound());\n  }\n\n  #emitFeatureFlags() {\n    this.dispatchEvent(new CustomEvent(\"featureFlagsChange\", { detail: { isEnabled } }));\n  }\n\n  /**\n   * Begin a round and wait for opponent card rendering.\n   * @returns {Promise<void>}\n   */\n  async startRound() {\n    try {\n      await startRound(this.store);\n      if (typeof this.waitForOpponentCard === \"function\") {\n        await this.waitForOpponentCard();\n      }\n      this.dispatchEvent(new Event(\"roundStart\"));\n    } catch (error) {\n      this.dispatchEvent(new CustomEvent(\"roundStartError\", { detail: error }));\n      throw error;\n    }\n  }\n\n  /**\n   * Proxy feature flag checks to the underlying service.\n   * @param {string} flag\n   * @returns {boolean}\n   */\n  isEnabled(flag) {\n    return isEnabled(flag);\n  }\n}","qaContext":"Why: Controller for Classic Battle mode. How: Create a battle store via `createBattleStore`.","embedding":[-0.042,0.124,-0.045,0.135,-0.035,0.184,-0.034,0.108,0.045,-0.044,0.045,-0.226,-0.24,-0.056,0.094,-0.054,0.062,-0.056,-0.016,0.071,0.008,-0.065,0.043,0.018,-0.061,0,-0.025,-0.172,-0.04,-0.107,0.103,0.055,-0.152,-0.057,-0.051,-0.061,-0.102,-0.05,-0.119,-0.094,0.095,0.111,-0.144,-0.026,0.039,-0.154,-0.089,0.073,0.048,0.072,0.031,0.022,-0.021,0.013,0.084,0.107,0.146,0.128,0.063,0.034,0.012,-0.165,-0.011,-0.071,-0.018,-0.034,0.117,-0.079,0.06,0.012,0.048,0.104,0.072,-0.066,-0.055,-0.001,-0.128,0.027,0.019,-0.113,0.047,-0.064,-0.056,-0.09,0.073,0.103,0.085,-0.003,-0.025,-0.167,-0.16,0.136,-0.08,0.065,0.009,0.138,-0.099,-0.036,-0.01,0.048,0.079,-0.004,-0.107,0.155,0.107,-0.114,0.051,-0.097,-0.154,0.074,0.059,0.096,0.062,0.04,0.019,0.15,0.09,0.012,-0.004,0.079,0.215,-0.03,0.073,-0.153,0.08,-0.07,0.137,0,0.058,-0.205,-0.171,0.159,0.062,0.039,0.165,0.042,0.044,-0.012,-0.046,0.004,-0.042,-0.071,0.044,-0.159,0.036,0.019,0.067,-0.041,0.097,-0.14,-0.139,-0.003,0.074,0.127,-0.04,0.071,-0.083,-0.023,0.227,-0.023,-0.051,0.138,0.005,-0.125,-0.031,-0.006,-0.127,-0.101,-0.102,-0.043,-0.256,-0.006,-0.147,-0.203,0.001,-0.016,0.114,-0.057,-0.094,0.119,-0.039,-0.178,0.081,0.074,-0.085,0.028,-0.074,-0.063,-0.082,-0.042,-0.145,0.037,-0.121,0.155,-0.139,-0.269,-0.116,-0.159,-0.001,-0.096,0.209,-0.056,0.072,0.068,-0.056,0.131,-0.174,-0.2,0.121,-0.098,-0.163,0.214,0.104,0.044,0.008,-0.073,-0.025,0.21,-0.1,0.062,0.145,-0.017,0.017,0,0.069,0.002,-0.045,-0.014,0.122,0.07,-0.068,0.113,-0.124,-0.08,-0.094,0.089,-0.043,-0.019,-0.106,0.124,0.1,-0.028,0.068,0.085,0.095,0.095,0.017,-0.015,-0.112,0.095,0.125,0.015,0.021,-0.088,0.002,-0.04,-0.118,0.062,0.165,-0.097,0.009,0.075,-0.155,0.075,0.098,-0.084,-0.032,-0.027,0.028,-0.18,0.088,0.02,0.012,0.028,-0.095,-0.168,-0.09,0.046,-0.021,0.063,0.231,-0.243,0.075,0.134,0.062,-0.198,0.115,-0.045,0.167,0.074,-0.065,0.08,0.234,0.242,-0.077,0.051,0.101,-0.071,0.069,0.062,-0.03,-0.193,0.183,-0.042,-0.054,-0.006,0.021,-0.204,0.022,0.086,-0.073,0.051,0.01,-0.064,-0.103,-0.017,0.082,-0.051,-0.009,0,-0.134,0.003,0.031,0.011,0.009,-0.146,0.01,-0.207,-0.058,-0.106,0.004,0.141,0.215,0,0.037,-0.161,0.052,-0.042,-0.108,0.067,-0.047,0.024,0.093,-0.105,0.038,0.085,0.169,0.094,0.093,0.107,-0.044,0.09,0.045,0.095,-0.166,-0.036,0.195,-0.034,0.181,0.144,0.125,-0.041,-0.036,0.002,-0.068,0.051,-0.061,-0.032,0.147,0.087,-0.213,-0.135,-0.082,-0.012,0.053,-0.01,0.08,-0.15,0.091,0.031,0.02,-0.149,-0.032,0.034],"source":"src/helpers/classicBattle/controller.js [ClassicBattleController]","tags":["code","what","class","utility","./roundManager.js","./orchestrator.js","../featureFlags.js","../battleEngineFacade.js","createBattleStore","initFeatureFlags","addEventListener","initClassicBattleOrchestrator","startRound","dispatchEvent","waitForOpponentCard","isEnabled","state-management"],"metadata":{"construct":"class","role":"utility","graph":{"module":"src/helpers/classicBattle/controller.js","node":"ClassicBattleController"},"patterns":[],"relations":{"imports":["./roundManager.js","./orchestrator.js","../featureFlags.js","../battleEngineFacade.js"],"calls":["createBattleStore","initFeatureFlags","addEventListener","initClassicBattleOrchestrator","startRound","dispatchEvent","waitForOpponentCard","isEnabled"]}},"version":1},
{"id":"cardStatUtils.js-getCardStatValue","text":"Retrieve a stat value from a battle card element.\n\n@param {HTMLElement} container - Card element containing stat list items.\n@param {string} stat - Stat key to look up.\n@returns {number} Parsed stat value or `0` when missing.\n1. Delegate to `getStatValue` with the provided `container` and `stat`.\n\nexport function getCardStatValue(container, stat) {\n  return getStatValue(container, stat);\n}","qaContext":"Why: Retrieve a stat value from a battle card element. How: @param {HTMLElement} container - Card element containing stat list items.","embedding":[-0.037,0.328,-0.269,0.224,0.045,0.214,0.171,0.141,0.079,-0.096,0.008,-0.218,-0.11,-0.074,0.146,-0.054,0.089,0.006,0.042,0.033,-0.037,0.142,0.001,0.034,-0.009,0.103,-0.093,-0.124,0.076,-0.033,0.074,-0.005,-0.04,-0.01,0.101,0.028,-0.03,-0.134,-0.062,-0.004,0.001,0.103,-0.105,-0.029,0.108,-0.05,-0.135,0.023,-0.034,0.068,-0.089,0.006,0.117,-0.061,0.14,0.159,-0.032,-0.265,0.029,0.104,-0.015,-0.195,0.069,0.014,0.051,-0.12,-0.033,0.035,-0.211,-0.06,0.152,0.04,0.201,-0.105,0.068,0.064,-0.188,-0.227,0.179,0.085,-0.186,-0.163,-0.164,0.114,0.149,0.22,0.068,0.235,-0.044,-0.127,-0.15,0.116,-0.036,0.24,-0.019,0.189,-0.087,-0.034,-0.074,0.063,0.001,0.194,-0.121,-0.068,-0.012,-0.084,0.123,-0.048,-0.058,0.04,-0.019,0.112,-0.179,0.122,-0.095,-0.109,0.033,-0.151,-0.014,0.118,0.307,-0.055,0.034,0.176,0.039,0.085,0.09,0,0.006,-0.176,0.066,0.051,-0.058,-0.009,0.028,-0.132,0.063,0.125,-0.151,0.298,-0.105,-0.119,-0.043,-0.026,-0.135,-0.001,0.124,-0.101,0.075,-0.144,-0.018,0,0.058,0.12,-0.067,0.035,-0.148,0.045,0.293,-0.182,0.007,0.088,0.101,-0.041,0.054,0.056,-0.322,0.166,-0.13,-0.011,-0.09,-0.125,-0.165,-0.37,0.075,-0.001,0.172,0.011,-0.2,0.072,0.077,-0.2,-0.117,-0.17,-0.072,0.144,-0.058,-0.117,-0.144,0.074,0.037,-0.097,-0.135,0.2,-0.078,-0.011,-0.158,-0.01,0.188,-0.034,-0.064,-0.002,0.072,0.065,-0.009,-0.068,-0.147,-0.17,-0.049,-0.095,-0.148,0.282,0.246,0.103,0.027,-0.137,0.098,0.099,0.037,-0.099,-0.236,-0.163,-0.134,0,-0.189,0.153,0.062,-0.066,-0.003,-0.078,0.059,0.074,0.242,-0.09,-0.032,0.114,-0.209,-0.149,0.105,0.213,-0.207,-0.131,0.112,-0.087,0.015,-0.159,0.204,0.018,-0.22,0.182,0.214,-0.232,0.136,-0.105,0.177,-0.092,-0.001,0.271,-0.098,-0.125,0.133,0.174,0.102,0.155,-0.099,-0.049,-0.011,0.007,-0.153,-0.026,0.103,0.031,0.236,-0.103,0.132,-0.085,-0.062,0.086,-0.199,-0.095,-0.181,-0.089,-0.085,0.073,0.081,0.016,-0.137,0.055,-0.062,-0.004,-0.1,-0.158,-0.114,0.17,0.077,0.129,0.095,-0.075,-0.131,0.015,-0.125,0.027,0.155,0.034,0.124,0.054,-0.033,-0.408,0.139,-0.03,0.122,0.062,0.108,-0.117,-0.009,0.124,-0.062,-0.053,-0.159,0,-0.109,-0.055,-0.006,0.026,-0.134,0.149,0.022,-0.222,0.001,-0.017,0.181,-0.006,-0.01,-0.212,-0.066,-0.038,0.076,0.126,0.063,0.112,0.028,-0.087,0.164,-0.036,0.091,0.098,-0.078,-0.143,0.261,0.035,0.166,0.076,0.166,0.01,0.031,0.077,0.023,0.021,0.073,0.111,-0.051,-0.051,-0.136,0.033,-0.081,-0.107,-0.13,0.006,0.164,-0.062,0.179,-0.297,-0.149,0.134,-0.102,0.013,0.151,-0.049,0.029,-0.074,-0.004,-0.036,-0.049,0.21],"source":"src/helpers/classicBattle/cardStatUtils.js [getCardStatValue]","tags":["code","what","function","utility","../battle/index.js","getStatValue"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/cardStatUtils.js","node":"getCardStatValue"},"patterns":[],"relations":{"imports":["../battle/index.js"],"calls":["getStatValue"]}},"version":1},
{"id":"cardSelection.js-drawCards","text":"export async function drawCards() {\n  // Always attempt to load both datasets so retries re-fetch both.\n  const allJudoka = await ensureJudokaData();\n  const available = allJudoka.filter((j) => !j.isHidden);\n\n  const lookup = await ensureGokyoLookup();\n  // If lookup failed completely, bail out; judoka may be empty but we can still proceed.\n  if (!lookup) return { playerJudoka: null, opponentJudoka: null };\n\n  const playerContainer = document.getElementById(\"player-card\");\n  const opponentContainer = document.getElementById(\"opponent-card\");\n\n  try {\n    await loadSettings();\n  } catch {}\n  const enableInspector = isEnabled(\"enableCardInspector\");\n\n  let playerJudoka = null;\n  await generateRandomCard(\n    available,\n    null,\n    playerContainer,\n    false,\n    (j) => {\n      playerJudoka = j;\n    },\n    { enableInspector }\n  );\n\n  // Pick an opponent safely; fall back to the built-in judoka when selection fails\n  let compJudoka;\n  try {\n    compJudoka = pickOpponent(available, playerJudoka);\n  } catch {\n    try {\n      compJudoka = await getFallbackJudoka();\n      qaInfo(\"Using fallback judoka for opponent\");\n    } catch {\n      compJudoka = null;\n    }\n  }\n  // Keep the selected opponent even if it is a minimal object.\n  // Only fall back when opponent selection failed entirely.\n  if (!compJudoka) {\n    try {\n      compJudoka = await getFallbackJudoka();\n      qaInfo(\"Using fallback judoka for opponent\");\n    } catch {\n      compJudoka = null;\n    }\n  }\n  opponentJudoka = compJudoka;\n\n  // Choose a placeholder based on a stable ID (1) or the opponent.\n  // Do not validate here to allow minimal objects during tests.\n  let placeholder = allJudoka.find((j) => j.id === 1) || compJudoka;\n  if (!placeholder) {\n    try {\n      placeholder = await getFallbackJudoka();\n      qaInfo(\"Using fallback judoka for opponent placeholder\");\n    } catch {\n      placeholder = null;\n    }\n  }\n  await renderOpponentPlaceholder(opponentContainer, placeholder, enableInspector);\n\n  return { playerJudoka, opponentJudoka };\n}","qaContext":"Why: export async function drawCards() { // Always attempt to load both datasets so retries re-fetch both. How: getElementById(\"opponent-card\"); try { await loadSettings(); } catch {} const enableI...","embedding":[-0.087,0.158,-0.048,0.076,-0.102,0.175,0.085,0.09,0.024,-0.086,-0.003,-0.113,-0.038,0.012,0.058,0.07,0.071,0.094,-0.049,0.064,0.036,-0.193,0.07,-0.13,-0.099,0.032,-0.064,-0.115,-0.015,-0.11,-0.014,0.093,-0.118,-0.025,-0.049,0.009,-0.211,0.021,0.001,-0.027,-0.107,0.203,-0.145,-0.018,0.087,0.015,-0.147,0.136,0.067,-0.027,-0.099,0.006,0.035,0.147,0.165,-0.01,0.05,-0.033,-0.023,0.066,0.101,-0.079,0.043,0.019,0.101,-0.073,-0.007,0.047,-0.076,0.157,0.023,0.097,0.089,0.092,-0.011,0.049,-0.06,-0.08,0.102,-0.011,-0.073,-0.139,-0.123,-0.033,0.054,0.033,-0.007,-0.033,0.118,-0.069,-0.061,0.105,0.115,0.087,0.097,0.057,0.06,0.058,-0.081,0.037,-0.017,-0.049,0.121,0.066,0.047,-0.126,0.088,-0.2,0.053,-0.041,-0.059,0.105,0.031,0.076,-0.214,0.12,0.085,-0.009,-0.049,0.071,0.125,-0.05,0.084,-0.058,0.093,-0.026,0.042,0,0.1,-0.207,-0.124,-0.022,-0.01,-0.095,0.075,-0.064,-0.162,-0.014,-0.012,-0.092,-0.024,-0.015,0.043,-0.055,-0.02,0.016,0.023,0.063,0.122,-0.043,-0.112,-0.09,-0.038,0.066,-0.036,0.03,-0.061,0.005,0.042,-0.106,-0.109,0.06,0.013,0.015,-0.068,0.015,-0.137,-0.086,-0.054,-0.009,-0.016,-0.054,0.033,-0.284,-0.03,-0.001,-0.005,0.051,-0.021,0.067,0.018,-0.1,-0.002,0.058,0.011,0.11,-0.133,0.115,-0.065,-0.059,-0.165,0.062,-0.035,0.135,-0.121,-0.279,0.029,-0.207,-0.049,-0.13,0.083,0.014,-0.036,-0.056,-0.035,0.027,-0.107,-0.214,0.01,-0.05,-0.165,0.103,0.002,0.138,0.104,-0.201,-0.065,0.167,-0.019,0.043,-0.021,-0.127,0.169,0,0.048,-0.02,0.042,0.058,0.081,0.041,0.113,-0.027,-0.088,-0.163,-0.07,0.065,0.044,-0.006,-0.052,0.179,-0.006,0.016,0.01,0.04,0.105,0.051,0.064,0.016,-0.119,0.145,0.027,-0.002,0.037,-0.112,-0.02,-0.137,-0.159,0.019,0.113,-0.153,-0.062,0.11,-0.086,0.16,0.064,0.008,-0.072,0.119,-0.016,-0.108,0.01,0.071,0.087,-0.038,-0.049,-0.107,-0.124,0.012,-0.03,0.018,0.148,-0.074,0.074,0.143,-0.023,-0.109,0.033,-0.006,0.228,0.1,-0.085,0.166,0.153,0.08,-0.065,0.095,0.045,-0.095,0.164,0.079,-0.118,-0.067,0.204,0.004,-0.103,0.049,-0.07,-0.016,0.068,0.114,-0.06,-0.049,-0.01,-0.004,-0.018,0.021,0.092,-0.068,-0.076,0,-0.115,-0.075,0.031,-0.002,0.06,-0.124,-0.012,-0.221,-0.056,-0.114,0.046,0.22,0.13,0.01,0.067,-0.152,0.003,0.043,-0.176,0.157,0.029,-0.07,-0.101,0.147,0.057,0.031,0.096,0.012,0.135,0.077,-0.021,0.055,0.062,0.035,-0.032,0.104,0.042,-0.03,0.013,0.151,0.09,-0.078,-0.059,-0.002,-0.026,-0.009,-0.074,-0.176,0.089,0.008,-0.182,-0.181,-0.058,0.012,-0.006,-0.095,0.091,-0.016,0.028,0.083,0.049,-0.004,0.05,0.102],"source":"src/helpers/classicBattle/cardSelection.js [drawCards]","tags":["code","what","function","utility","../randomCard.js","../cardUtils.js","../settingsStorage.js","../featureFlags.js","../dataUtils.js","../utils.js","../constants.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../../components/JudokaCard.js","../judokaUtils.js","../lazyPortrait.js","ensureJudokaData","filter","ensureGokyoLookup","getElementById","loadSettings","isEnabled","generateRandomCard","pickOpponent","getFallbackJudoka","qaInfo","find","renderOpponentPlaceholder"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/cardSelection.js","node":"drawCards"},"patterns":[],"relations":{"imports":["../randomCard.js","../cardUtils.js","../settingsStorage.js","../featureFlags.js","../dataUtils.js","../utils.js","../constants.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../../components/JudokaCard.js","../judokaUtils.js","../lazyPortrait.js"],"calls":["ensureJudokaData","filter","ensureGokyoLookup","getElementById","loadSettings","isEnabled","generateRandomCard","pickOpponent","getFallbackJudoka","qaInfo","find","renderOpponentPlaceholder"]}},"version":1},
{"id":"cardSelection.js-getOpponentJudoka","text":"export function getOpponentJudoka() {\n  return opponentJudoka;\n}","embedding":[0.081,0.355,-0.212,-0.097,0.012,0.206,0.233,0.282,0.188,-0.193,0.266,-0.15,-0.484,0.009,0.351,-0.027,-0.17,-0.003,-0.074,0.009,0.04,-0.283,-0.053,-0.301,-0.027,-0.091,-0.079,-0.208,0.071,-0.273,0.062,-0.049,-0.178,-0.064,-0.259,0.329,-0.444,0.012,0.368,-0.114,-0.01,0.269,-0.217,-0.287,0.179,0.263,-0.147,0.099,0.137,0.039,-0.414,-0.062,0.197,0.105,0.39,-0.137,0.16,-0.001,0.199,0.29,-0.249,-0.433,0.021,-0.042,-0.012,-0.378,-0.187,-0.069,-0.626,0.327,-0.052,-0.003,0.356,-0.013,0.085,0.056,-0.586,-0.006,0.444,0.226,0.387,-0.055,-0.489,0.247,0.249,0.326,0.078,0.149,0.156,0.173,-0.259,0.155,0.34,0.13,-0.506,0.333,-0.224,0.018,-0.082,0.109,-0.063,-0.198,0.149,-0.327,-0.268,-0.01,0.039,-0.176,0.345,0.13,-0.209,0.176,-0.202,-0.203,-0.27,0.182,0.193,-0.32,-0.06,-0.16,0.673,-0.177,0.248,0.322,0.088,-0.139,0.246,0,-0.036,-0.242,-0.142,0.073,-0.16,-0.161,-0.015,-0.424,-0.218,-0.02,-0.437,0.158,-0.262,0.125,-0.047,0.254,-0.066,-0.008,-0.06,0.163,0.475,0.09,-0.121,0.182,0.117,0.098,-0.05,-0.245,-0.162,-0.07,0.331,-0.154,-0.041,0.372,0.044,-0.106,-0.056,-0.14,-0.567,0.045,0.008,-0.145,-0.223,0.19,0.07,-0.176,-0.027,0.14,0.303,0.116,-0.436,0.166,0.447,-0.054,0.094,0.137,-0.03,0.312,0.045,-0.329,0.047,0.236,0.256,-0.019,-0.361,-0.075,-0.237,-0.29,0.023,-0.349,0.26,-0.243,0.043,-0.054,0.083,-0.162,-0.402,0.023,0.046,-0.343,-0.055,-0.138,-0.207,0.067,0.192,0.261,-0.039,-0.274,0.2,0.414,-0.263,0.029,-0.242,0.023,-0.096,0,0.241,-0.03,0.047,-0.045,0.113,0.164,-0.028,0.248,-0.162,0.203,-0.281,0.038,0.275,-0.075,0.238,0.411,0.024,0.265,0.075,-0.402,-0.111,-0.064,0.093,0.149,-0.078,0.267,0.574,0.049,-0.006,-0.081,-0.385,0.269,-0.275,0.23,0.172,0.017,0.031,0.039,0.014,0.288,-0.28,-0.213,-0.036,0.162,-0.272,-0.177,-0.002,0.137,0.366,-0.133,0.273,0.068,-0.193,-0.197,0.15,0.093,0.065,-0.297,-0.087,0.097,-0.034,-0.39,-0.074,-0.046,0.07,0.389,-0.013,0.404,0.122,0.322,0.024,-0.063,-0.039,0.163,0.108,0.218,-0.186,-0.024,0.449,0.26,0.107,0.136,0.104,-0.203,0.115,-0.197,-0.048,0.153,-0.138,-0.031,0.121,0.045,0.156,0.071,-0.012,0,-0.285,-0.154,0.178,-0.274,-0.147,-0.146,-0.008,-0.489,-0.12,-0.167,0.174,0.039,0.39,0.012,0.384,-0.191,0.185,0.401,-0.26,0.001,-0.145,-0.255,0.034,0.082,0.06,-0.092,-0.213,-0.06,0.1,0.053,-0.171,0.316,-0.1,-0.217,-0.311,0.389,0.016,-0.287,0.186,0.294,-0.002,-0.206,-0.133,0.057,-0.306,0.044,-0.217,-0.417,0.349,-0.026,0.053,-0.164,-0.363,0.023,-0.124,-0.169,0.014,-0.033,0.088,-0.057,-0.039,0.286,0.27,0.1],"source":"src/helpers/classicBattle/cardSelection.js [getOpponentJudoka]","tags":["code","what","function","utility","../randomCard.js","../cardUtils.js","../settingsStorage.js","../featureFlags.js","../dataUtils.js","../utils.js","../constants.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../../components/JudokaCard.js","../judokaUtils.js","../lazyPortrait.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/cardSelection.js","node":"getOpponentJudoka"},"patterns":[],"relations":{"imports":["../randomCard.js","../cardUtils.js","../settingsStorage.js","../featureFlags.js","../dataUtils.js","../utils.js","../constants.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../../components/JudokaCard.js","../judokaUtils.js","../lazyPortrait.js"],"calls":[]}},"version":1},
{"id":"cardSelection.js-clearOpponentJudoka","text":"export function clearOpponentJudoka() {\n  opponentJudoka = null;\n}","embedding":[0.174,0.314,-0.151,0.026,0.037,0.181,0.24,-0.029,0.194,-0.117,0.165,-0.177,-0.387,-0.154,0.007,0.165,-0.291,-0.123,-0.083,-0.238,0.094,-0.267,0.037,-0.232,-0.067,0.03,0.134,-0.361,0.109,-0.3,-0.066,0.011,0.031,-0.278,-0.033,0.337,-0.421,0.077,0.391,0.028,0.166,0.151,-0.377,-0.255,0.026,0.245,-0.299,0.052,0.164,-0.052,-0.154,-0.13,0.161,0.116,0.234,-0.285,0.138,-0.009,0.044,0.335,-0.214,-0.419,0.04,-0.071,0.309,-0.138,-0.215,-0.148,-0.502,0.339,0.003,0.128,0.337,0.089,-0.132,0.044,-0.482,-0.004,0.312,0.488,0.334,-0.364,-0.459,0.001,0.22,0.319,0.026,-0.109,0.137,0.283,-0.155,0.377,0.246,0.226,-0.436,0.255,-0.062,0.181,-0.208,0.258,-0.106,-0.201,0.066,-0.14,-0.372,0.145,0.021,-0.094,0.143,0.115,-0.231,-0.037,-0.214,0.029,-0.34,0.414,0.313,-0.11,-0.053,-0.148,0.635,-0.137,0.066,0.076,0.138,-0.114,0.175,0,-0.035,-0.238,-0.462,0.125,0.02,-0.1,-0.051,-0.235,-0.236,0.031,-0.165,-0.065,-0.268,0.076,-0.056,0.035,0.06,0.085,-0.246,-0.017,0.464,0.218,-0.282,0.069,0.001,0.091,-0.174,-0.218,-0.012,-0.012,0.144,0.019,0.045,0.457,-0.037,0.098,-0.055,-0.155,-0.401,0.068,0.014,-0.037,-0.411,0.018,0.073,-0.478,-0.057,0.244,0.195,0.211,-0.263,0.242,0.327,-0.198,-0.087,0.165,0.023,-0.049,-0.243,-0.483,0.21,0.202,-0.028,-0.069,-0.242,0.086,-0.207,-0.257,0.017,-0.783,0.19,-0.15,0.053,0.046,0.123,-0.141,-0.284,0.045,-0.019,-0.316,0.275,-0.189,-0.219,-0.013,0.071,0.042,-0.05,-0.003,0.106,0.404,-0.382,0.07,-0.259,0.073,-0.101,0,0.228,0.063,0.024,0.247,0.014,0.214,0.29,0.237,-0.149,0.093,-0.035,0.096,0.023,-0.02,0.146,0.497,0.101,0.282,-0.263,-0.324,0.013,-0.01,0.142,0.185,-0.107,0.055,0.408,0.114,0.155,0.163,-0.181,0.311,-0.136,-0.043,0.135,0.001,0.107,-0.067,0.052,0.139,-0.044,-0.176,-0.205,0.152,-0.168,-0.191,0.024,0.137,0.381,-0.21,0.038,0.009,-0.093,-0.192,0.156,0.113,-0.022,-0.198,0.095,-0.002,0.024,-0.071,-0.074,-0.095,0.181,0.292,-0.019,0.59,0.198,0.066,-0.023,0.047,-0.123,0.014,0.046,0.136,-0.14,-0.056,0.32,0.131,0.185,0.106,0.02,-0.275,0.136,0.007,-0.221,-0.002,-0.166,0.25,0.05,-0.03,0.269,-0.038,-0.371,0,-0.095,-0.145,0.121,-0.3,-0.139,-0.401,0.037,-0.222,-0.013,-0.299,0.037,0.17,0.154,-0.073,0.362,-0.152,-0.145,0.354,-0.149,0.116,-0.143,-0.225,-0.257,-0.033,0.205,-0.106,-0.013,0.005,0.224,0.04,0.026,0.44,0.124,-0.22,-0.278,0.361,0.242,-0.155,-0.165,0.322,-0.064,-0.037,-0.206,-0.092,-0.238,-0.044,-0.264,-0.353,0.167,0.076,-0.052,0.05,-0.462,0.109,-0.101,-0.223,0.302,0.139,-0.051,-0.053,0.073,0.274,0.302,0.088],"source":"src/helpers/classicBattle/cardSelection.js [clearOpponentJudoka]","tags":["code","what","function","utility","../randomCard.js","../cardUtils.js","../settingsStorage.js","../featureFlags.js","../dataUtils.js","../utils.js","../constants.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../../components/JudokaCard.js","../judokaUtils.js","../lazyPortrait.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/cardSelection.js","node":"clearOpponentJudoka"},"patterns":[],"relations":{"imports":["../randomCard.js","../cardUtils.js","../settingsStorage.js","../featureFlags.js","../dataUtils.js","../utils.js","../constants.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../../components/JudokaCard.js","../judokaUtils.js","../lazyPortrait.js"],"calls":[]}},"version":1},
{"id":"cardSelection.js-getGokyoLookup","text":"export function getGokyoLookup() {\n  return gokyoLookup;\n}","embedding":[-0.077,0.146,-0.092,-0.23,0.084,0.116,-0.206,0.223,0.057,-0.299,-0.041,0.043,-0.542,-0.124,0.049,0.002,-0.297,-0.116,0.052,-0.077,0.184,0.082,-0.113,-0.19,-0.134,-0.294,0.12,0.039,0.245,-0.036,-0.143,-0.011,-0.154,-0.161,0.168,0.432,-0.149,0.043,0.059,-0.14,-0.075,0.168,0.13,-0.469,0.227,0.108,0.007,0.247,0.19,-0.115,-0.213,0.179,-0.137,-0.216,0.322,0.255,-0.253,-0.2,0.163,0.337,-0.114,-0.266,0.202,0.119,0.204,-0.219,-0.399,0.095,-0.354,0.123,-0.204,0.136,0.223,-0.012,-0.122,-0.318,-0.49,0.01,0.235,0.118,0.198,0.154,-0.174,0.2,0.174,0.202,-0.219,0.19,-0.006,0.171,-0.275,-0.31,0.086,0.069,-0.344,0.333,0.023,0.057,-0.21,0.096,-0.371,0.137,0.384,-0.244,0.042,0.027,-0.083,-0.045,0.258,0.05,-0.223,0.357,-0.106,-0.307,-0.306,-0.081,-0.028,-0.297,-0.003,-0.045,0.532,-0.029,-0.08,0.294,0.092,0.183,0.422,0,-0.023,-0.103,0.112,-0.038,-0.029,-0.258,0.103,-0.226,-0.396,0.462,-0.275,0.222,-0.115,0.025,-0.057,0.264,0.132,0.166,0.071,0.262,0.383,-0.09,-0.008,0.135,0.289,0.224,-0.097,-0.001,-0.154,-0.101,0.365,-0.124,-0.204,0.114,0.035,-0.196,0.073,-0.21,-0.316,-0.08,0.176,0.025,-0.604,0.392,0.288,0.024,0.157,-0.134,0.481,0.001,-0.288,-0.066,0.057,-0.127,0.143,-0.165,-0.051,0.133,0.113,-0.121,-0.149,-0.048,0.06,-0.102,-0.061,-0.232,0.033,-0.083,-0.169,-0.26,0.415,-0.2,0.194,-0.008,0.146,0.039,-0.413,-0.206,0.115,-0.217,0.133,-0.168,-0.498,0.088,0.242,0.303,-0.011,-0.192,0.245,0.356,-0.121,0.02,-0.165,0.042,-0.33,0,0.025,-0.189,-0.227,-0.067,-0.178,0.152,0.202,0.134,0.018,0.03,0.07,0.026,0.162,-0.241,0.351,0.628,0.127,0.29,0.052,-0.327,-0.194,-0.124,-0.219,0.15,-0.165,0.39,0.288,0.172,-0.324,0.1,-0.183,0.219,-0.525,0.394,0.04,0.081,-0.002,0.087,0.023,0.118,0.089,0.032,-0.37,0.158,-0.12,-0.083,-0.103,0.166,0.363,-0.17,0.419,0.004,-0.336,-0.222,-0.134,0.288,-0.022,-0.037,-0.062,0.167,-0.101,-0.422,-0.238,0.308,0.015,0.14,-0.06,0.382,0.138,0.248,-0.022,-0.035,0.188,-0.001,-0.039,0.259,0.12,-0.025,0.133,0.428,0.265,0.341,0.321,-0.134,-0.022,-0.187,0.238,0.293,0.01,0.047,0.118,-0.053,-0.235,-0.181,-0.225,0,-0.346,-0.046,0.22,-0.561,-0.067,-0.161,0.081,-0.13,-0.119,-0.09,-0.065,0.084,0.009,0.124,0.202,-0.137,0.163,0.239,-0.139,-0.233,-0.237,-0.084,0.122,0.077,0.193,-0.292,-0.228,-0.159,0.36,0.099,-0.131,0.338,-0.072,-0.129,0.051,0.004,0.148,-0.163,0.15,-0.132,-0.129,-0.143,-0.155,-0.148,-0.321,0.084,0.059,-0.357,0.456,-0.156,-0.021,-0.207,-0.343,0.016,-0.039,-0.37,-0.462,-0.069,0.025,-0.047,-0.416,0.214,0.098,0.144],"source":"src/helpers/classicBattle/cardSelection.js [getGokyoLookup]","tags":["code","what","function","utility","../randomCard.js","../cardUtils.js","../settingsStorage.js","../featureFlags.js","../dataUtils.js","../utils.js","../constants.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../../components/JudokaCard.js","../judokaUtils.js","../lazyPortrait.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/cardSelection.js","node":"getGokyoLookup"},"patterns":[],"relations":{"imports":["../randomCard.js","../cardUtils.js","../settingsStorage.js","../featureFlags.js","../dataUtils.js","../utils.js","../constants.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../../components/JudokaCard.js","../judokaUtils.js","../lazyPortrait.js"],"calls":[]}},"version":1},
{"id":"cardSelection.js-getOrLoadGokyoLookup","text":"Ensure the gokyo lookup is available, loading it if missing.\nPrimarily used by tests or code paths that render the opponent card directly.\n@returns {Promise<ReturnType<typeof createGokyoLookup>>} Lookup (empty on failure).\n\nexport async function getOrLoadGokyoLookup() {\n  return await ensureGokyoLookup();\n}","qaContext":"Why: Ensure the gokyo lookup is available, loading it if missing. How: Primarily used by tests or code paths that render the opponent card directly.","embedding":[-0.125,0.129,-0.17,-0.015,0.076,0.076,-0.176,0.026,0.107,-0.15,0.003,0.014,-0.37,0.078,-0.042,-0.041,0.028,-0.127,0.06,0.016,0.045,-0.105,0.087,0.004,-0.043,-0.209,-0.029,-0.087,0.187,-0.002,0.052,0.081,-0.116,-0.013,-0.072,0.132,-0.166,-0.057,-0.015,-0.022,0.128,0.105,-0.054,-0.042,0.093,-0.035,0.143,0.084,0.115,-0.061,-0.175,-0.018,-0.124,-0.053,0.033,0.166,-0.089,-0.084,-0.021,0.07,-0.014,-0.116,0.102,0.053,0.05,0.103,-0.05,0.059,-0.116,0.115,0.132,0.042,0.059,-0.051,-0.036,-0.012,-0.15,-0.035,0.183,-0.016,-0.016,-0.193,-0.042,0.109,0.018,0.271,-0.033,0.022,0.053,-0.166,-0.019,-0.084,0.005,0.059,-0.072,0.135,0.047,-0.081,-0.102,0.028,-0.145,-0.056,0.302,-0.009,0.051,0.171,0.069,-0.036,-0.013,-0.042,-0.056,0.188,0.026,-0.033,-0.09,0.08,-0.087,-0.032,-0.141,0.034,0.17,-0.099,0.047,0.144,0.067,-0.058,0.032,0,0.148,-0.034,0.05,0.028,-0.087,-0.066,0.138,-0.24,-0.262,0.133,-0.111,0.026,-0.057,0.031,-0.017,0.08,-0.027,0.094,0.061,0.241,0.169,-0.048,-0.102,-0.175,0.025,0.13,-0.118,-0.109,0.009,-0.056,0.105,-0.035,-0.049,0.057,0.064,-0.125,-0.001,-0.052,-0.28,-0.102,0.092,-0.004,-0.294,0.08,-0.048,-0.2,0.04,-0.016,0.27,0.133,-0.166,-0.011,-0.007,-0.057,-0.033,-0.185,-0.029,0.096,0.194,-0.047,0.042,-0.157,-0.164,0.035,-0.073,-0.039,-0.104,-0.25,-0.191,-0.055,0.122,-0.101,0.041,-0.004,0.146,-0.072,-0.267,-0.101,-0.053,-0.037,0.023,-0.035,-0.269,0.129,-0.059,0.208,0.053,-0.259,0.122,0.228,0.014,-0.04,-0.044,-0.02,0.02,0,0.039,-0.184,0.05,0.022,0.079,0.006,0.168,0.118,0.121,-0.02,0.009,0.118,-0.039,-0.045,0.088,0.134,0.085,0.099,0.174,-0.201,0.176,-0.052,0.006,0.074,-0.059,0.239,0.144,0.108,-0.158,-0.089,0.011,-0.093,-0.282,0.13,0.153,0.182,-0.044,0.29,-0.064,-0.048,0.049,0.016,-0.123,0.152,0.003,-0.165,-0.088,0.034,0.228,-0.027,0.1,-0.036,-0.106,-0.016,-0.003,0.111,0.086,-0.117,0.001,0.082,-0.015,-0.251,-0.175,-0.066,-0.037,0.017,-0.12,0.245,0.229,0.303,-0.109,0.101,0.179,0.061,-0.001,0.095,-0.07,-0.09,0.226,0.117,0.058,0.089,0.012,0.055,0.177,0.089,0.208,0.084,-0.024,-0.031,0.118,-0.021,-0.036,0.067,-0.062,0,-0.22,-0.008,0.044,-0.148,-0.049,-0.112,0.146,-0.308,-0.124,-0.21,0.026,-0.049,0.117,0.016,0.194,-0.096,-0.014,0.073,-0.175,-0.19,-0.093,-0.126,0.074,-0.019,-0.064,0.034,0.052,0.045,0.072,0.094,-0.022,0.099,-0.018,0.012,0.062,0.161,0.049,0.048,0.176,-0.025,-0.15,0.005,0.004,-0.057,-0.003,-0.015,-0.068,-0.286,0.186,-0.039,0.005,-0.216,-0.324,0.149,0.008,-0.296,-0.003,-0.052,0.056,-0.067,0.047,-0.062,0.052,0.086],"source":"src/helpers/classicBattle/cardSelection.js [getOrLoadGokyoLookup]","tags":["code","what","function","utility","../randomCard.js","../cardUtils.js","../settingsStorage.js","../featureFlags.js","../dataUtils.js","../utils.js","../constants.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../../components/JudokaCard.js","../judokaUtils.js","../lazyPortrait.js","ensureGokyoLookup"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/cardSelection.js","node":"getOrLoadGokyoLookup"},"patterns":[],"relations":{"imports":["../randomCard.js","../cardUtils.js","../settingsStorage.js","../featureFlags.js","../dataUtils.js","../utils.js","../constants.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../../components/JudokaCard.js","../judokaUtils.js","../lazyPortrait.js"],"calls":["ensureGokyoLookup"]}},"version":1},
{"id":"cardSelection.js-_resetForTest","text":"export function _resetForTest() {\n  judokaData = null;\n  gokyoLookup = null;\n  opponentJudoka = null;\n  loadErrorModal = null;\n}","embedding":[-0.037,0.098,-0.123,0.02,-0.15,0.248,0.006,0.133,0.001,-0.183,0.129,-0.13,-0.118,-0.064,-0.045,0.135,-0.117,-0.011,-0.082,-0.162,0.038,0.027,0,-0.121,0.01,-0.043,-0.101,0.006,0.029,-0.171,-0.04,-0.014,-0.188,-0.138,0.151,0.306,-0.239,0.009,0.156,0.149,-0.067,-0.016,-0.197,-0.152,0.078,0.106,-0.108,0.106,0.306,-0.066,-0.03,0.012,0.044,-0.034,0.397,-0.143,0.143,0.028,-0.013,0.26,0.073,-0.082,0.019,0.137,0.135,-0.216,-0.352,0.055,-0.207,0.159,0.093,-0.001,0.119,0.04,-0.156,-0.189,-0.216,0.027,0.137,0.211,0.011,-0.246,-0.065,-0.007,0.315,0.17,-0.069,0.007,0.247,0.329,-0.119,0.114,0.16,0.219,-0.223,0.121,0.04,0.083,-0.131,0.267,-0.25,-0.086,0.23,0.041,-0.232,-0.087,-0.008,0.002,-0.026,-0.002,-0.065,0.11,0.018,-0.053,-0.187,0.116,-0.015,-0.091,-0.264,0.001,0.313,-0.147,0.089,-0.005,0.194,-0.002,0.125,0,0.032,-0.241,-0.236,0.02,-0.055,-0.189,0.002,-0.215,-0.217,0.213,-0.052,0.091,-0.19,0.103,-0.029,0.117,0.056,0.082,-0.043,0.022,0.331,0.071,-0.115,-0.094,-0.058,0.176,-0.005,-0.132,-0.025,0.115,0.106,-0.138,-0.127,0.097,-0.135,-0.097,0.081,-0.089,-0.455,-0.004,0.109,0.018,-0.267,0.056,0.232,-0.279,-0.024,0.153,0.198,0.007,-0.179,0.201,0.324,0.044,-0.048,-0.018,-0.122,-0.095,-0.243,-0.199,0.088,-0.083,-0.082,-0.074,0.158,0.013,0.004,-0.247,0.045,-0.232,-0.044,-0.208,0.189,0.084,0.064,-0.024,-0.078,-0.173,-0.118,-0.246,0.165,-0.139,-0.197,0.124,-0.024,0.195,0.14,-0.066,-0.008,0.301,-0.126,0.043,-0.114,-0.002,-0.11,0,0.169,0.045,-0.065,0.118,0.093,0.012,0.121,0.351,-0.113,0.083,0.033,-0.177,-0.057,0.038,0.174,0.31,0.018,0.177,-0.24,-0.014,0.063,0.116,0.092,-0.085,-0.184,0.158,0.148,0.091,-0.111,0.182,0.026,-0.015,-0.138,0.201,0.07,0.033,0.032,-0.176,0,0.239,0.283,0.146,-0.301,0.123,-0.056,-0.176,-0.248,0.014,0.276,-0.347,0.176,-0.108,-0.011,-0.194,0.119,0.106,0.175,-0.258,-0.086,0.207,-0.097,-0.082,0.051,-0.039,0.073,0.125,-0.101,0.319,-0.073,0.067,-0.16,0.096,0.028,-0.072,0.124,0.115,-0.239,0.091,0.133,0.167,0.208,0.022,0.067,-0.168,0.17,0.203,-0.041,0.147,0.034,0.014,0.061,-0.086,0.212,0.074,-0.151,0,-0.345,-0.146,0.09,-0.098,0.048,-0.142,-0.022,-0.197,-0.125,-0.176,-0.005,0.313,0.073,0.086,-0.002,-0.134,-0.071,0.163,-0.114,-0.126,-0.056,-0.03,-0.082,-0.102,0.194,-0.114,-0.168,0.134,0.196,0.058,0.007,0.113,0.101,0.025,-0.356,0.161,0.127,-0.165,-0.114,-0.023,0.009,-0.098,-0.075,-0.038,-0.207,-0.163,-0.19,-0.239,0.103,-0.138,-0.183,-0.131,-0.254,0.049,-0.011,-0.14,0.03,0.008,-0.2,0.143,-0.04,0.106,-0.02,-0.081],"source":"src/helpers/classicBattle/cardSelection.js [_resetForTest]","tags":["code","what","function","utility","../randomCard.js","../cardUtils.js","../settingsStorage.js","../featureFlags.js","../dataUtils.js","../utils.js","../constants.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../../components/JudokaCard.js","../judokaUtils.js","../lazyPortrait.js"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/cardSelection.js","node":"_resetForTest"},"patterns":[],"relations":{"imports":["../randomCard.js","../cardUtils.js","../settingsStorage.js","../featureFlags.js","../dataUtils.js","../utils.js","../constants.js","../setupScoreboard.js","../../components/Modal.js","../../components/Button.js","../../components/JudokaCard.js","../judokaUtils.js","../lazyPortrait.js"],"calls":[]}},"version":1},
{"id":"bootstrap.js-setupClassicBattlePage","text":"Bootstrap Classic Battle page by wiring controller and view.\n\nexport async function setupClassicBattlePage() {\n  const view = new ClassicBattleView({ waitForOpponentCard });\n  const controller = new ClassicBattleController({\n    waitForOpponentCard: view.waitForOpponentCard\n  });\n  view.bindController(controller);\n  await controller.init();\n  await view.init();\n}","qaContext":"Why: Bootstrap Classic Battle page by wiring controller and view. How: export async function setupClassicBattlePage() { const view = new ClassicBattleView({ waitForOpponentCard }); const controller...","embedding":[-0.162,0.064,-0.299,0.027,0.065,0.268,-0.12,0.018,-0.09,0.02,0.095,0.087,-0.12,-0.015,-0.152,0.029,0.003,-0.127,0.124,0.28,-0.094,-0.01,0.073,0.05,-0.145,-0.033,0.017,-0.064,0.02,-0.128,0.077,0.042,-0.048,-0.043,-0.145,-0.093,-0.013,-0.062,-0.115,-0.088,0.061,0.054,-0.134,-0.036,0.116,-0.098,-0.012,-0.048,0.207,-0.007,0.024,-0.002,-0.042,-0.212,0.077,-0.042,0.059,0.085,-0.001,0.059,0.011,-0.064,-0.013,0.053,0.12,-0.107,0.107,-0.054,0.052,-0.029,-0.08,0.089,0.239,-0.017,-0.067,-0.138,-0.104,0.113,0.043,-0.006,-0.025,0.099,-0.049,0.11,0.01,0.114,0.148,0.036,-0.074,-0.093,-0.146,0.008,-0.02,0.221,-0.2,0.044,-0.085,0.054,-0.001,-0.036,-0.032,0.074,-0.007,0.105,0.086,-0.179,0.165,-0.091,-0.133,-0.018,0.107,0.019,-0.175,0.117,0.063,-0.051,0.058,0.05,0.089,0.051,0.127,-0.08,0.109,-0.155,0.129,-0.041,0.104,0,0.166,-0.159,-0.174,0.148,-0.019,0.11,0.186,-0.064,-0.052,0.155,0.009,0.125,0.111,0.098,-0.064,-0.085,-0.074,-0.087,0.046,-0.137,0.09,0.096,0.036,-0.008,0.114,0.125,-0.014,0.102,-0.095,-0.007,0.232,-0.02,-0.13,-0.06,0.022,-0.202,0.144,-0.077,-0.18,0.003,-0.273,-0.147,-0.328,-0.005,-0.192,-0.156,0.08,0.001,0.173,-0.053,-0.329,-0.059,0.104,-0.054,-0.028,-0.031,-0.06,-0.034,0.025,-0.081,-0.187,-0.023,-0.026,0.093,-0.194,0.143,-0.18,-0.209,-0.101,-0.13,0.029,-0.194,0.109,-0.148,0.119,0.16,-0.008,0.19,-0.01,-0.02,0.048,-0.081,-0.067,0.246,0.105,-0.027,0.005,-0.093,0.312,0.146,-0.202,-0.077,0.178,-0.137,0.156,0,0.143,-0.017,-0.109,0.012,0.102,0.031,-0.12,0.063,-0.194,-0.04,-0.03,0.15,0.022,0.053,-0.121,0.105,0.164,-0.01,0.101,-0.033,0.061,0.045,-0.02,-0.121,0.114,0.032,0.158,0.044,-0.09,-0.059,0.093,-0.054,-0.015,0.144,-0.074,0.205,-0.02,-0.009,-0.094,-0.046,-0.098,-0.017,0.126,-0.154,0.033,-0.063,-0.044,-0.068,0.031,0.125,-0.137,-0.035,0.007,-0.135,-0.04,-0.164,-0.052,-0.067,-0.006,0.191,0.202,-0.182,0.04,-0.099,-0.055,0.017,-0.093,0.213,0.254,0.232,-0.094,0.001,0.194,0.081,0.125,0.063,0.011,-0.033,0.224,-0.042,0.23,-0.073,-0.052,-0.208,0.027,0.289,-0.091,0.026,0.121,-0.093,0.102,0.082,0.107,-0.022,-0.012,0,-0.147,0.118,0.18,-0.075,-0.034,-0.062,0.123,-0.217,-0.079,0.013,0.047,-0.006,0.192,-0.082,-0.019,0.122,0.093,-0.004,-0.032,-0.07,-0.036,-0.095,0.111,0.007,-0.003,0.051,0.055,-0.097,-0.024,0.013,-0.045,0.269,-0.112,0.013,-0.006,0.088,0.164,-0.003,0.089,0.026,-0.072,-0.043,0.023,-0.017,-0.206,0.102,-0.104,-0.062,-0.117,-0.025,-0.017,-0.177,-0.146,0.071,0.053,0.091,0.154,-0.205,0.118,-0.021,-0.194,-0.175,0.018,0.014],"source":"src/helpers/classicBattle/bootstrap.js [setupClassicBattlePage]","tags":["code","what","function","utility","../domReady.js","../battleJudokaPage.js","./controller.js","./view.js","./promises.js","./roundUI.js","bindController","init"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/bootstrap.js","node":"setupClassicBattlePage"},"patterns":[],"relations":{"imports":["../domReady.js","../battleJudokaPage.js","./controller.js","./view.js","./promises.js","./roundUI.js"],"calls":["bindController","init"]}},"version":1},
{"id":"battleEvents.js-onBattleEvent","text":"Subscribe to a battle event.\n\n@param {string} type - Event name.\n@param {(e: CustomEvent) => void} handler - Listener callback.\n\nexport function onBattleEvent(type, handler) {\n  target.addEventListener(type, handler);\n}","qaContext":"Why: Subscribe to a battle event. How: @param {string} type - Event name.","embedding":[-0.055,0.017,-0.036,0.083,0.014,0.167,0.193,0.116,0.065,-0.036,-0.113,-0.079,-0.164,0.077,0.073,0.033,0.055,-0.041,-0.036,-0.067,-0.067,-0.079,-0.016,0.045,-0.054,-0.26,0.016,-0.072,-0.01,-0.002,0.17,-0.097,-0.053,-0.089,0.073,0.048,-0.168,0.032,0.081,0.018,0.177,-0.072,-0.019,-0.082,-0.03,-0.134,0.022,-0.111,0.007,0.192,0.186,-0.037,-0.031,-0.117,0.196,0.052,-0.045,-0.05,0.138,0.025,-0.006,-0.132,-0.128,-0.003,-0.031,-0.057,0.063,0.237,-0.09,0.002,0.016,0.123,0.091,-0.061,0.034,-0.085,-0.087,0.07,-0.064,0.096,0.017,-0.042,-0.054,0.052,0.14,0.164,0.043,-0.002,-0.052,0.118,-0.35,-0.044,-0.035,0.101,-0.229,0.092,-0.083,-0.04,0.09,0.03,0.066,0.137,-0.204,0.07,0.101,-0.021,-0.163,-0.116,-0.057,0.095,0.084,0.071,-0.041,-0.076,-0.038,0.218,-0.006,0.019,-0.002,-0.153,0.244,-0.028,0.04,-0.105,0.065,0.15,0.134,0,0.058,-0.086,-0.235,0.013,0.044,0.081,0.001,-0.101,-0.048,-0.063,-0.041,0.077,-0.005,-0.126,0.022,-0.054,-0.094,0.033,-0.133,-0.015,-0.054,0.096,-0.123,0.124,-0.014,0.016,0.079,0.04,-0.054,0.02,0.16,-0.136,0.008,0.031,0.148,-0.193,-0.15,-0.016,-0.21,0.08,-0.029,-0.08,-0.355,-0.075,-0.112,-0.211,-0.022,-0.057,0.272,-0.234,-0.216,0.066,0.285,-0.142,0.179,0.115,-0.049,-0.004,0.022,-0.035,-0.116,0.06,0.176,-0.039,-0.085,0.086,-0.124,-0.186,-0.035,-0.135,0.246,-0.017,0.028,-0.059,0.19,0.121,-0.049,0.159,0.01,-0.043,-0.12,-0.229,0.045,0.27,0.183,0.004,-0.212,-0.197,0.084,0.114,-0.07,-0.039,-0.093,-0.094,-0.066,0,-0.016,0.2,-0.198,0.042,-0.055,0.05,-0.091,0.105,-0.209,0.099,-0.22,0.131,-0.059,0.038,-0.11,0.085,-0.072,0.012,0.013,-0.167,0.022,-0.006,0.232,0.033,-0.014,0.012,0.195,0.047,-0.014,-0.053,-0.106,0.134,-0.018,0.101,0.083,0.014,0.214,0.032,0.074,-0.121,-0.011,-0.008,0.09,-0.058,-0.075,0.043,-0.16,0.029,0.261,0.111,-0.165,-0.11,0.002,0.015,-0.036,-0.001,0.046,-0.074,-0.011,0.167,0.03,-0.216,0.111,-0.029,0.019,0.067,-0.098,0.043,0.009,0.183,-0.019,-0.07,0.018,-0.054,-0.034,0.056,-0.022,-0.022,0.117,0.051,0.055,0.035,0.084,-0.242,0.066,0.164,-0.075,0.241,-0.02,-0.002,0.101,0.077,-0.013,-0.001,-0.1,0,-0.044,0.014,0.015,-0.137,-0.112,0,-0.126,-0.241,0.017,-0.094,-0.128,-0.061,0.196,0.072,0.056,-0.05,0.085,0.108,-0.175,0.007,0.019,-0.004,-0.027,-0.024,0.04,0.064,-0.06,0.047,0.082,-0.115,0.078,0.181,-0.148,-0.025,-0.225,0.109,0.205,-0.166,0.123,0.092,-0.045,-0.063,-0.006,0.136,-0.147,0.083,-0.11,-0.092,0.096,0.211,0.054,-0.078,0.022,-0.013,0.004,0.106,0.046,-0.159,0.147,0.004,-0.044,-0.083,-0.028,0.036],"source":"src/helpers/classicBattle/battleEvents.js [onBattleEvent]","tags":["code","what","function","utility","addEventListener"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/battleEvents.js","node":"onBattleEvent"},"patterns":[],"relations":{"imports":[],"calls":["addEventListener"]}},"version":1},
{"id":"battleEvents.js-offBattleEvent","text":"Unsubscribe from a battle event.\n\n@param {string} type - Event name.\n@param {(e: CustomEvent) => void} handler - Listener callback.\n\nexport function offBattleEvent(type, handler) {\n  target.removeEventListener(type, handler);\n}","qaContext":"Why: Unsubscribe from a battle event. How: @param {string} type - Event name.","embedding":[-0.136,0.12,0.084,0.149,0.052,0.085,0.163,-0.14,0.118,-0.054,-0.144,-0.025,-0.146,0.035,-0.105,-0.021,0.029,-0.064,-0.037,-0.065,0.008,0.026,-0.022,0.156,0.167,-0.235,0.038,-0.139,-0.077,-0.008,0.301,-0.097,-0.046,-0.147,0.075,0.019,-0.203,0.024,0.023,-0.029,0.15,-0.067,-0.165,-0.16,-0.005,0.066,-0.155,-0.013,-0.034,0.151,0.24,0.03,-0.015,-0.02,0.212,0.088,0.074,-0.008,0.13,-0.098,-0.046,-0.04,-0.238,-0.024,-0.015,0.082,0.027,0.168,0.096,0.105,0.028,0.203,0.141,-0.095,0.173,-0.02,-0.125,-0.034,-0.044,0.183,0.045,-0.109,-0.056,0.053,0.059,0.126,0.041,-0.018,0.174,0.11,-0.368,0.065,0.098,0.286,-0.241,-0.093,-0.134,0.097,0.069,0.141,0.122,0.209,-0.225,0.045,-0.062,-0.094,-0.236,-0.061,-0.108,0.139,0.018,0.037,-0.175,0.063,-0.089,0.302,0.139,0.173,-0.08,-0.13,0.109,-0.127,-0.029,0.044,0.008,0.053,0.054,0,-0.112,-0.209,-0.323,-0.044,0.181,0.114,-0.01,-0.052,0.021,0.054,-0.054,0.185,0.089,-0.146,0.091,-0.095,0.02,0.125,-0.06,-0.155,0.074,0.3,-0.119,0.029,-0.058,-0.067,-0.024,-0.059,-0.021,0.055,0.141,-0.101,-0.029,0.132,0.172,-0.203,-0.209,-0.132,-0.109,0.061,0.012,-0.033,-0.375,-0.12,-0.073,-0.311,0.051,-0.143,0.307,-0.345,-0.027,0.125,0.316,-0.221,0.098,-0.016,0.093,-0.019,-0.018,-0.143,-0.13,0.102,0.179,-0.142,-0.124,0.072,-0.32,-0.144,-0.283,-0.225,0.195,0.094,0.07,-0.174,-0.044,0.12,0.015,0.272,0.083,0.097,0.067,-0.17,-0.119,0.252,0.184,-0.046,-0.174,-0.202,0.029,0.219,-0.016,0.083,-0.185,-0.157,0.015,0,-0.023,0.298,-0.211,-0.037,-0.007,0.038,-0.05,0.225,-0.17,0.039,-0.205,0.08,0.018,0.031,-0.09,0.119,-0.005,0.015,-0.22,-0.074,0.078,0.1,0.226,-0.062,-0.196,-0.122,0.194,0.124,0.075,-0.036,0.001,0.116,-0.004,-0.087,0.055,-0.078,-0.002,0.138,0.065,-0.065,-0.027,0.135,0.04,-0.112,-0.015,0.107,-0.135,0.07,0.295,0.158,-0.261,-0.074,0.147,-0.014,-0.125,-0.038,0.05,-0.117,0.139,0.051,0.22,-0.136,-0.047,-0.019,0.082,0.004,-0.062,0.191,0.037,0.025,-0.049,-0.107,-0.049,-0.125,-0.066,0.063,-0.114,-0.038,0.066,0.012,0.105,0.03,0.078,-0.262,0.052,0.056,-0.107,0.133,-0.023,0.148,0.177,-0.002,0.265,0.018,-0.092,0,-0.001,-0.165,0.14,-0.152,-0.094,-0.073,-0.126,0.023,0.007,-0.127,-0.037,-0.03,0.089,-0.023,0.015,-0.065,0.139,0.006,-0.132,-0.061,-0.009,-0.057,-0.057,0.012,-0.027,0.024,0.059,0.069,0.05,-0.188,0.019,0.141,-0.049,-0.039,-0.225,0.207,0.13,-0.203,0.006,0.081,0.007,0.116,-0.004,0.201,-0.21,0.046,0.018,-0.117,0.119,0.232,0.001,0.018,-0.153,0.014,0.029,0.067,0.09,-0.174,0.058,0.06,0.073,-0.026,-0.137,-0.077],"source":"src/helpers/classicBattle/battleEvents.js [offBattleEvent]","tags":["code","what","function","utility","removeEventListener"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/battleEvents.js","node":"offBattleEvent"},"patterns":[],"relations":{"imports":[],"calls":["removeEventListener"]}},"version":1},
{"id":"battleEvents.js-emitBattleEvent","text":"Emit a battle event with optional detail payload.\n\n@param {string} type - Event name.\n@param {any} [detail] - Optional data to pass to listeners.\n\nexport function emitBattleEvent(type, detail) {\n  target.dispatchEvent(new CustomEvent(type, { detail }));\n}","qaContext":"Why: Emit a battle event with optional detail payload. How: @param {string} type - Event name.","embedding":[0.093,0.229,0.038,0.141,0.017,0.112,0.178,0.142,0.054,-0.027,-0.152,-0.27,-0.257,0.145,0.242,0.096,0.214,-0.111,-0.048,-0.01,-0.108,-0.018,-0.084,-0.016,-0.075,-0.189,0.12,0.022,0.001,-0.053,0.274,-0.008,-0.064,0.055,0.115,-0.076,-0.176,-0.063,0.043,-0.061,0.15,0.002,-0.164,0.005,-0.096,-0.165,-0.018,-0.146,-0.038,0.102,0.125,-0.067,0.031,-0.035,0.247,-0.063,-0.089,-0.078,0.161,-0.013,-0.125,-0.191,-0.053,-0.051,0.029,-0.053,0.099,0.166,-0.023,0.041,0.083,0.036,0.171,-0.138,0.039,-0.03,-0.167,0.053,-0.045,0.07,-0.059,0.011,-0.187,0.158,0.124,0.22,-0.01,0.09,-0.07,0.081,-0.389,-0.148,0.08,0.191,-0.081,0.105,-0.033,-0.164,0.036,0.038,0.031,0.109,-0.193,0.028,0.034,-0.066,-0.12,-0.145,-0.115,0.116,0.141,0.037,-0.135,-0.098,-0.053,0.092,0.02,-0.03,-0.146,-0.037,0.211,-0.077,0.029,-0.015,0.032,-0.014,0.126,0,-0.018,-0.1,-0.32,0.004,0.005,0.054,-0.022,-0.094,0.035,-0.027,-0.069,0.133,0.075,-0.144,0.094,-0.037,-0.081,0.115,0.017,0.008,-0.004,0.114,-0.239,-0.017,0.104,-0.004,0.035,-0.032,-0.109,0.015,0.151,-0.08,0.176,0.142,0.132,-0.141,-0.102,-0.049,-0.254,0.064,0.07,-0.075,-0.441,0,-0.249,-0.145,0.001,-0.124,0.288,-0.237,-0.197,-0.024,0.252,-0.18,0.267,-0.014,-0.092,-0.098,0.043,-0.08,-0.185,0.095,0.083,-0.04,-0.061,0.062,-0.089,-0.277,-0.027,-0.213,0.073,0.017,0.04,-0.231,0.178,0.11,0.166,0.195,0.132,-0.043,-0.001,-0.271,0.032,0.229,0.205,0.036,-0.226,-0.175,-0.154,0.066,-0.02,-0.042,-0.278,-0.1,-0.006,0,0.059,0.258,-0.172,0.06,-0.014,0.103,-0.058,0.002,-0.152,0.18,-0.202,0.007,-0.148,-0.063,-0.142,0.109,-0.171,-0.115,0.058,-0.081,0.043,0.038,0.052,-0.098,-0.013,0.069,0.189,0.058,0.037,-0.017,-0.17,0.126,-0.041,-0.018,0.03,-0.025,0.349,0.179,-0.012,-0.03,-0.119,0.098,-0.081,0.122,-0.197,0.007,-0.105,0.13,0.302,0.116,-0.041,-0.088,-0.086,0.111,-0.051,-0.063,0.125,-0.246,-0.03,0.141,0.061,-0.189,0.061,0.016,0.018,-0.033,-0.059,0.014,-0.032,0.146,0.053,-0.061,0.053,-0.102,0.046,0.069,0.046,-0.107,0.216,0.103,0.1,0.217,0.112,-0.146,0.24,0.229,-0.082,0.263,0.091,0.058,0.021,0.117,0.155,-0.037,-0.066,0,-0.143,-0.05,-0.053,-0.096,-0.113,-0.036,-0.108,-0.174,0.08,0.021,0.034,0.04,0.013,0.036,0.166,-0.004,0.183,-0.02,-0.204,0.004,-0.036,-0.015,-0.062,-0.089,0.175,0.157,0.013,0.036,0.085,-0.009,0.01,0.108,0.007,-0.054,-0.268,0.056,0.23,-0.164,0.048,0.118,-0.075,-0.068,-0.082,0.12,-0.164,0.124,-0.17,-0.154,0.065,0.173,0.107,-0.099,-0.094,0.098,-0.039,0.117,0.164,-0.094,0.057,-0.041,0.173,0.001,-0.054,0.049],"source":"src/helpers/classicBattle/battleEvents.js [emitBattleEvent]","tags":["code","what","function","utility","dispatchEvent"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/battleEvents.js","node":"emitBattleEvent"},"patterns":[],"relations":{"imports":[],"calls":["dispatchEvent"]}},"version":1},
{"id":"battleDispatcher.js-dispatchBattleEvent","text":"Dispatch a battle event using the orchestrator when available.\n\n@param {string} eventName - Event to dispatch.\n@param {any} [payload] - Optional event payload.\n@returns {Promise<any>} Result of the dispatch when available.\n1. Try to import `./orchestrator.js` and call its `dispatchBattleEvent` export.\n2. If import or call fails, obtain the live machine via `window.__getClassicBattleMachine` and dispatch on it.\n3. Swallow errors and return `undefined` when no dispatcher is available.\n\nexport async function dispatchBattleEvent(eventName, payload) {\n  // Prefer orchestrator export when it can be loaded (satisfies test spies)\n  try {\n    const orchestrator = await import(\"./orchestrator.js\");\n    if (orchestrator && typeof orchestrator.dispatchBattleEvent === \"function\") {\n      if (payload === undefined) return await orchestrator.dispatchBattleEvent(eventName);\n      return await orchestrator.dispatchBattleEvent(eventName, payload);\n    }\n  } catch {}\n  // Fallback to the live machine when present\n  try {\n    if (typeof window !== \"undefined\") {\n      const getMachine = window.__getClassicBattleMachine;\n      const machine = typeof getMachine === \"function\" ? getMachine() : null;\n      if (machine && typeof machine.dispatch === \"function\") {\n        return await machine.dispatch(eventName, payload);\n      }\n    }\n  } catch {}\n}","qaContext":"Why: Dispatch a battle event using the orchestrator when available. How: If import or call fails, obtain the live machine via `window.","embedding":[-0.117,0.079,-0.003,0.133,0.01,0.069,-0.017,0.016,0.015,-0.08,-0.057,-0.123,-0.116,0.025,0.064,-0.043,0.154,-0.135,-0.079,0.021,0.046,-0.074,-0.005,-0.009,-0.02,-0.118,-0.081,-0.148,-0.034,0,0.054,-0.015,-0.19,-0.04,0.018,0.09,-0.014,-0.042,0.068,-0.041,0.076,0.057,-0.114,-0.029,0.014,-0.135,-0.04,-0.019,-0.037,0.054,-0.071,-0.007,-0.023,0.036,0.055,0.061,0.08,0.117,0.085,0.094,-0.119,-0.158,0.028,0.006,0.005,-0.025,0.014,0.073,0.029,0.027,-0.022,0.034,0,0.043,-0.05,-0.05,0.051,-0.055,-0.007,-0.007,0.035,-0.017,-0.113,-0.007,0.098,0.147,-0.009,-0.025,0.037,0.02,-0.212,-0.055,-0.032,0.147,0.085,0.09,-0.034,0.065,0.031,0.043,-0.016,-0.036,-0.012,-0.028,0.024,0.006,-0.054,-0.113,-0.049,-0.02,0.062,0.058,0.037,-0.034,-0.008,0.026,0.075,-0.012,0.001,0.072,0.158,-0.093,0.154,-0.049,0.185,-0.029,0.118,0,-0.009,-0.203,-0.095,0.047,0.081,-0.044,0.2,0.008,-0.03,0.008,-0.044,0.117,0.007,-0.103,0.03,-0.036,0.038,0.024,0.092,0.062,0.046,-0.078,-0.103,0,0.079,-0.012,-0.015,-0.006,-0.073,0.011,0.086,-0.033,-0.044,0.047,0.001,-0.063,-0.074,0.006,-0.23,-0.122,-0.031,-0.043,-0.195,0.076,-0.1,-0.243,-0.034,-0.112,0.198,-0.104,-0.037,0.076,0.143,-0.066,0.063,0.066,0.055,-0.037,-0.021,-0.059,-0.088,-0.104,-0.09,0.057,0.098,-0.024,-0.121,-0.116,-0.075,-0.082,0.018,-0.088,0.05,-0.029,0.134,0.058,-0.06,0.115,-0.003,-0.101,0.07,-0.131,-0.04,0.18,0.051,0.127,-0.095,-0.083,0.032,0.181,-0.045,-0.043,-0.04,0.023,-0.042,0,0.058,0.118,-0.093,-0.012,-0.03,0.14,-0.026,0.03,-0.206,-0.035,-0.088,0.112,0.043,0.04,-0.151,0.075,-0.011,-0.049,0.026,0.004,0.112,0.088,-0.004,0,-0.077,0.077,0.071,0.05,0.008,0.062,-0.012,0.001,-0.066,-0.041,0.08,0.004,0.052,0.072,-0.066,0.016,0.009,-0.002,0.007,0,0.01,0.013,0.054,0.023,0.055,0.092,-0.015,-0.033,-0.11,0.049,-0.005,-0.017,0.052,-0.159,-0.013,0.07,0.077,-0.137,0.041,-0.008,-0.042,0.006,-0.119,0.116,0.194,0.192,0.058,0.01,-0.006,-0.039,0.022,0.087,-0.014,-0.083,0.118,0.105,0.069,0.06,0.008,-0.056,0.055,0.062,0.073,0.123,0.052,-0.025,0.038,-0.03,-0.002,-0.074,-0.015,0,-0.019,0.044,0.025,-0.042,-0.068,-0.042,-0.047,-0.25,-0.041,-0.047,-0.013,-0.014,0.132,0.017,0.014,-0.076,0.05,0.018,-0.108,-0.012,-0.049,-0.019,0.041,0.021,-0.004,0.058,0.049,0.022,0.053,0.021,-0.186,0.103,-0.07,-0.034,-0.118,0.111,0.11,-0.122,0.118,0.057,-0.039,-0.023,-0.007,0.051,-0.046,0.046,-0.087,-0.159,0.069,0.049,-0.006,-0.154,-0.119,0.049,-0.018,0.044,-0.011,-0.074,0.037,0.049,0.074,-0.046,-0.027,-0.014],"source":"src/helpers/classicBattle/battleDispatcher.js [dispatchBattleEvent]","tags":["code","what","function","utility","dispatchBattleEvent","getMachine","dispatch"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/battleDispatcher.js","node":"dispatchBattleEvent"},"patterns":[],"relations":{"imports":[],"calls":["dispatchBattleEvent","getMachine","dispatch"]}},"version":1},
{"id":"autoSelectStat.js-autoSelectStat","text":"Automatically select a random stat and provide UI feedback.\nAvoids snackbar to prevent race conditions with the cooldown countdown.\n\n@param {(stat: string, opts?: { delayOpponentMessage?: boolean }) => Promise<void>|void} onSelect\n- Callback to handle the chosen stat.\n@param {number} [feedbackDelayMs=AUTO_SELECT_FEEDBACK_MS] - Visual delay before dispatch.\n@returns {Promise<void>} Resolves after feedback completes.\npick random stat from STATS\nmark corresponding button as selected\nwait `feedbackDelayMs`\ndispatch \"statSelected\" battle event\ninvoke onSelect with random stat and delayOpponentMessage true\n\nexport async function autoSelectStat(onSelect, feedbackDelayMs = AUTO_SELECT_FEEDBACK_MS) {\n  const randomStat = STATS[Math.floor(seededRandom() * STATS.length)];\n  // Defensive: ensure randomStat is a string before using it in a selector\n  let btn = null;\n  try {\n    if (typeof randomStat !== \"string\") {\n      try {\n        if (typeof window !== \"undefined\")\n          window.__classicBattleQuerySelectorError = { randomStat, where: \"autoSelectStat\" };\n      } catch {}\n    } else {\n      btn = document.querySelector(`#stat-buttons button[data-stat=\"${randomStat}\"]`);\n    }\n  } catch (e) {\n    try {\n      if (typeof window !== \"undefined\")\n        window.__classicBattleQuerySelectorError = {\n          randomStat,\n          where: \"autoSelectStat\",\n          err: String(e)\n        };\n    } catch {}\n  }\n  if (btn) btn.classList.add(\"selected\");\n  await new Promise((resolve) => setTimeout(resolve, feedbackDelayMs));\n  // Ensure timeout event is observed even in environments where the\n  // timer's own dispatch might be skipped by mocks.\n  try {\n    await dispatchBattleEvent(\"timeout\");\n  } catch {}\n  await dispatchBattleEvent(\"statSelected\");\n  await onSelect(randomStat, { delayOpponentMessage: true });\n}","qaContext":"Why: Automatically select a random stat and provide UI feedback. How: length)]; // Defensive: ensure randomStat is a string before using it in a selector let btn = null; try { if (typeof randomStat !","embedding":[-0.164,0.075,0,0.203,-0.029,0.094,0.097,0.035,0.064,-0.021,-0.041,-0.156,-0.034,-0.082,-0.023,-0.021,0.116,-0.119,-0.06,0.002,0.094,-0.065,0.131,0.071,-0.044,-0.132,0.021,-0.141,-0.003,0.008,-0.013,-0.068,-0.064,-0.07,-0.103,-0.132,-0.039,-0.008,0.009,-0.064,-0.03,0.031,-0.178,-0.072,0.075,-0.121,-0.026,-0.058,-0.064,0.089,-0.06,0.059,0.044,0.006,0.124,0.09,0.063,0.002,0.031,0.099,0.008,-0.176,-0.044,-0.028,0.134,0.038,0.009,0.057,0.075,0.002,-0.019,0.027,0.123,0.056,0.041,0.024,-0.114,-0.114,0.054,-0.062,-0.077,-0.086,-0.062,0.023,0.047,0.023,0.173,0.028,0.023,-0.152,-0.096,0.056,-0.141,0.177,0.03,0.093,0.046,-0.033,0.037,0.02,0.087,-0.053,-0.094,0.091,-0.048,-0.067,0.037,-0.154,-0.018,0.048,0.049,0.08,0.001,0.112,-0.063,0.03,-0.001,0.009,0.027,0,0.167,0.068,-0.025,-0.126,0.148,-0.023,0.178,0,0.042,-0.222,-0.203,-0.014,0.064,0.081,0.092,0.044,0.073,0.017,0.018,-0.067,0.016,-0.103,0.05,-0.048,-0.005,0.026,0.081,0.036,0.162,-0.057,-0.09,0.012,-0.006,0.094,-0.045,0.065,-0.112,0.044,0.076,0.034,-0.084,0.072,0.026,-0.015,-0.003,0.059,-0.14,-0.089,-0.025,-0.045,-0.12,0.077,-0.096,-0.169,0.03,-0.042,0.077,-0.002,-0.02,0.058,0.041,-0.097,0.101,0.078,0.053,-0.006,-0.04,0.067,-0.205,-0.081,-0.086,-0.104,-0.08,0.147,-0.115,-0.103,-0.015,-0.073,0.04,-0.03,0.026,0.03,-0.009,-0.044,0.025,0.075,-0.131,-0.14,0.17,-0.154,-0.18,0.122,0.085,0.044,0.042,-0.134,-0.067,0.109,-0.088,-0.014,0.021,-0.029,-0.085,0,0.018,-0.009,-0.053,0.167,0.02,0.046,-0.064,0.042,-0.09,-0.183,-0.039,0.061,0.013,-0.016,-0.108,0.168,0.04,-0.101,-0.007,0.072,0.095,0.082,-0.028,-0.06,-0.03,0.093,0.024,0.097,0.144,-0.007,-0.001,0.031,-0.138,-0.04,0.095,-0.113,0.073,0.019,-0.094,0.142,0.061,-0.064,-0.005,-0.004,0.015,0.05,0.023,0.066,-0.037,0.063,0.071,-0.077,-0.124,0.137,-0.023,-0.059,-0.02,-0.119,0.072,0.163,-0.026,-0.092,0.114,-0.02,0.128,0.065,-0.061,0.01,0.282,0.208,0.02,0.036,0.076,-0.146,0.066,0.044,-0.09,-0.099,0.078,0.039,0.005,0.089,0.14,-0.161,-0.033,0.091,-0.12,0.123,0.052,-0.011,-0.025,-0.024,0.083,-0.05,-0.043,0,0.005,0.078,0.08,0.006,0.031,-0.01,-0.142,-0.149,0.007,-0.158,0.11,0.084,0.09,0.024,-0.062,-0.182,-0.007,0.047,-0.063,0.037,-0.027,-0.044,-0.001,-0.022,0.02,0.102,0.065,0.039,0.091,0.029,-0.114,0.037,0.018,-0.014,-0.046,0.066,0.057,-0.089,0.182,0.016,0.07,-0.077,-0.037,0.027,-0.088,-0.083,-0.058,-0.08,0.143,0.04,-0.146,-0.195,-0.114,-0.004,0.024,-0.039,0.012,-0.154,-0.009,0.075,0.032,-0.152,-0.144,-0.003],"source":"src/helpers/classicBattle/autoSelectStat.js [autoSelectStat]","tags":["code","what","function","utility","../testModeUtils.js","../battleEngineFacade.js","./eventDispatcher.js","floor","seededRandom","querySelector","String","add","setTimeout","dispatchBattleEvent","onSelect"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/autoSelectStat.js","node":"autoSelectStat"},"patterns":[],"relations":{"imports":["../testModeUtils.js","../battleEngineFacade.js","./eventDispatcher.js"],"calls":["floor","seededRandom","querySelector","String","add","setTimeout","dispatchBattleEvent","onSelect"]}},"version":1},
{"id":"structure.js-createCarouselStructure","text":"Create base DOM elements for a card carousel.\n\n@returns {{wrapper: HTMLElement, container: HTMLElement, ariaLive: HTMLElement}}\n1. Create a wrapper `<div>` with class `carousel-container`.\n2. Create an `aria-live` region and append it to the wrapper.\n3. Create the scrolling container with required roles and styles.\n4. Return the `wrapper`, `container` and `ariaLive` elements.\n\nexport function createCarouselStructure() {\n  const wrapper = document.createElement(\"div\");\n  wrapper.className = \"carousel-container\";\n\n  const ariaLive = document.createElement(\"div\");\n  ariaLive.setAttribute(\"aria-live\", \"polite\");\n  ariaLive.className = \"carousel-aria-live\";\n  wrapper.appendChild(ariaLive);\n\n  const container = document.createElement(\"div\");\n  container.className = \"card-carousel\";\n  container.dataset.testid = \"carousel\";\n  container.setAttribute(\"role\", \"list\");\n  container.setAttribute(\"aria-label\", \"Judoka card carousel\");\n  container.style.scrollSnapType = \"x mandatory\";\n  container.style.overflowX = \"auto\";\n  container.style.display = \"flex\";\n  container.style.gap = \"var(--carousel-gap, 1rem)\";\n\n  return { wrapper, container, ariaLive };\n}","qaContext":"Why: Create base DOM elements for a card carousel. How: @returns {{wrapper: HTMLElement, container: HTMLElement, ariaLive: HTMLElement}} 1.","embedding":[0.014,0.095,0.037,0.069,0.072,0.083,-0.005,-0.05,-0.029,-0.159,-0.027,-0.006,-0.047,-0.091,0.076,-0.026,-0.131,-0.011,-0.078,0.098,0.064,-0.16,0.044,0.019,-0.114,0.095,0.048,-0.053,-0.007,0.01,0.061,-0.071,0.019,-0.03,-0.118,0.017,-0.104,-0.067,-0.089,0.026,0.035,-0.025,0.029,-0.003,0.144,-0.092,0.019,-0.046,0.008,0.172,-0.025,-0.042,0.183,0.026,-0.094,0.057,0.055,-0.001,0.064,0.004,0.06,0.014,0.13,0.053,-0.061,-0.09,-0.027,0.094,-0.169,0.153,-0.002,0.023,0.185,0.083,0.04,-0.031,-0.055,-0.039,0.057,0.072,-0.015,-0.064,-0.053,-0.002,0.007,0.11,0.015,-0.098,-0.182,-0.168,-0.044,0.105,-0.02,0.025,0.022,0.105,-0.03,-0.036,-0.116,0.06,-0.093,-0.013,-0.053,0.022,-0.083,-0.124,-0.073,0.053,-0.105,0.025,-0.012,0.031,-0.105,0.013,-0.142,-0.063,-0.045,-0.119,0.14,0.09,0.167,0.025,0.029,-0.023,0.088,-0.04,-0.017,0,0.025,-0.153,-0.051,0.147,0.132,-0.026,0.043,0.02,-0.133,0.034,0.146,0.008,-0.011,-0.05,-0.042,-0.001,-0.081,0.036,0.052,-0.1,-0.078,-0.03,-0.028,-0.078,-0.139,0.063,-0.135,-0.033,-0.046,0.024,0.053,-0.038,0.058,0.075,0.06,0.019,-0.014,0.025,-0.115,0.138,-0.002,-0.173,0.178,-0.064,-0.057,-0.046,0.176,0.059,0.093,0.049,-0.05,0.085,-0.006,-0.143,0.119,-0.067,-0.035,0.123,-0.024,-0.144,-0.103,0.102,0.035,-0.111,-0.027,-0.018,0.09,-0.02,-0.006,-0.124,0.055,-0.078,0.104,0.014,0.049,0.069,-0.07,0.025,-0.016,-0.081,-0.071,-0.108,-0.068,0.051,0.017,0.02,-0.008,0.034,0.047,0.155,-0.069,0.002,-0.032,-0.098,0.01,0,0.022,0.084,-0.019,0.113,0.017,0.018,0.074,0.114,0.106,-0.086,0.018,0.05,-0.083,-0.032,-0.101,0.1,0.028,-0.014,0.114,-0.034,0.157,0.076,-0.03,0.151,-0.121,0.008,0.074,0.094,-0.037,-0.045,0.076,-0.108,-0.003,0.178,0,-0.132,-0.069,0.067,-0.006,0.049,-0.066,-0.252,-0.004,-0.054,-0.048,-0.052,0.069,0.114,0.141,0.045,-0.048,-0.062,-0.078,-0.039,0.049,0.043,-0.104,-0.114,0.097,0.014,0.064,-0.01,0.125,-0.091,0.072,0.038,-0.094,-0.008,-0.034,0.155,-0.131,0.068,0.083,-0.03,-0.097,-0.044,0.136,-0.059,0.152,-0.163,-0.013,-0.031,-0.067,-0.208,0.017,0.032,-0.105,-0.035,0.035,-0.081,-0.019,0.107,-0.037,-0.111,-0.073,0,-0.069,-0.038,-0.043,-0.051,-0.115,0.004,0.089,-0.098,-0.025,-0.055,0.125,0.084,0.106,-0.063,0.012,-0.056,-0.015,0.064,-0.076,-0.075,0.009,-0.053,0.08,-0.044,0.103,-0.028,-0.058,-0.049,0.026,0.077,-0.071,-0.103,-0.013,0.125,0.067,-0.107,-0.084,-0.095,0.09,0.071,0.129,0.03,-0.062,0.031,-0.008,-0.055,-0.019,0.057,0.109,0.081,-0.005,-0.206,-0.024,0.021,0.08,-0.101,0.079,0.135,0,0.15,-0.062,0.046,0.095,0.064],"source":"src/helpers/carousel/structure.js [createCarouselStructure]","tags":["code","how","function","utility","createElement","setAttribute","appendChild","factory"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/carousel/structure.js","node":"createCarouselStructure"},"patterns":["factory"],"relations":{"imports":[],"calls":["createElement","setAttribute","appendChild"]}},"version":1},
{"id":"scroll.js-createScrollButton","text":"Creates a scroll button with the specified direction and functionality.\n\n@param {String} direction - Either \"left\" or \"right\".\n@param {HTMLElement} container - The carousel container to scroll.\n@returns {HTMLElement} The scroll button element.\n1. Validate the input parameters:\n   - Ensure `direction` is either \"left\" or \"right\".\n   - Ensure `container` is a valid DOM element.\n   - Throw an error if validation fails.\n\n2. Create a button element:\n   - Assign a class based on the `direction` (e.g., \"scroll-button left\" or \"scroll-button right\").\n   - Set the inner HTML to display an inline SVG chevron pointing left or right.\n   - Include a visible `<span class=\"label\">` with \"Prev.\" or \"Next\" text.\n   - Add an accessible label (`aria-label`) matching the visible text.\n\n3. Add a click event listener to the button:\n   - Scroll the `container` by one page width plus gap in the given direction.\n   - Use smooth scrolling for better user experience.\n\n4. Return the created button element.\n\nexport function createScrollButton(direction, container) {\n  if (direction !== \"left\" && direction !== \"right\") {\n    throw new Error(\"Invalid direction: must be 'left' or 'right'\");\n  }\n\n  if (!container) {\n    throw new Error(\"Container is required\");\n  }\n\n  const button = document.createElement(\"button\");\n\n  button.className = `scroll-button ${direction}`;\n\n  const labelText = direction === \"left\" ? \"Prev.\" : \"Next\";\n\n  button.innerHTML =\n    (direction === \"left\"\n      ? '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" width=\"36px\" viewBox=\"0 -960 960 960\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M560-240 320-480l240-240 56 56-184 184 184 184-56 56Z\"/></svg>'\n      : '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" width=\"36px\" viewBox=\"0 -960 960 960\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M504-480 320-664l56-56 240 240-240 240-56-56 184-184Z\"/></svg>') +\n    `<span class=\"label\">${labelText}</span>`;\n\n  button.setAttribute(\"aria-label\", labelText);\n\n  button.addEventListener(\"click\", () => {\n    const gap = parseFloat(getComputedStyle(container).columnGap) || 0;\n    const scrollAmount = container.clientWidth + gap;\n    container.scrollBy({\n      left: direction === \"left\" ? -scrollAmount : scrollAmount,\n      behavior: \"smooth\"\n    });\n  });\n\n  return button;\n}","qaContext":"Why: Creates a scroll button with the specified direction and functionality. How: Add a click event listener to the button: - Scroll the `container` by one page width plus gap in the given direction.","embedding":[-0.107,-0.01,-0.05,0.033,0.05,0.067,0.001,0.016,0.014,-0.059,-0.093,0.128,0.048,-0.057,0.03,0.019,-0.086,0.024,-0.03,0.003,0.084,-0.063,0.033,-0.021,-0.24,0.063,0.009,-0.048,-0.047,-0.037,0.006,-0.025,-0.077,0.073,-0.084,0.053,-0.11,-0.045,-0.117,0.008,-0.073,-0.031,0.007,-0.054,0.059,-0.025,-0.079,-0.064,-0.004,0.18,-0.048,-0.158,0.159,-0.003,-0.11,0.005,0.033,0.011,0.104,0.041,0.094,-0.119,0.121,-0.001,-0.014,-0.026,-0.049,0.018,-0.168,0.137,-0.049,0.004,0.083,0.09,-0.06,-0.096,0.066,-0.008,0.034,0.01,0.006,0.015,-0.053,0.128,0.058,0.072,-0.107,0.013,-0.086,-0.055,-0.058,0.084,-0.05,-0.04,0.052,0.174,-0.045,-0.003,-0.073,0.049,0,-0.008,-0.072,-0.006,0.149,-0.036,-0.061,-0.052,-0.071,0.098,0.006,-0.025,-0.029,-0.04,-0.087,-0.061,0.098,-0.06,0.148,-0.04,0.115,0.024,-0.021,-0.069,0.113,-0.061,0.014,0,-0.06,-0.114,-0.079,0.006,0.064,0.037,0.035,-0.007,-0.171,0.065,0.136,-0.041,0.005,-0.086,-0.047,-0.105,-0.004,0.036,-0.104,-0.108,0.017,-0.087,0.021,0.002,-0.057,0.054,-0.022,0.016,-0.003,-0.08,0.062,-0.016,0.064,-0.051,0.094,-0.047,-0.07,0.001,0.003,0.076,0.001,-0.106,0.077,-0.04,-0.038,0.072,0.063,0.009,0.057,0.012,-0.106,0.07,-0.012,-0.118,0.156,-0.009,0.028,0.167,-0.037,-0.043,-0.14,0.057,0.012,-0.077,-0.054,-0.028,0.055,0.038,0.061,-0.09,0.06,-0.118,0.094,-0.021,0.036,-0.023,-0.125,0.067,0.008,-0.047,-0.129,-0.092,-0.055,0.099,0.072,-0.017,-0.012,-0.045,0.016,-0.004,-0.006,0.018,-0.012,-0.045,-0.135,0,-0.03,0.181,-0.026,0.142,-0.033,0.138,0.02,0.134,0.001,-0.094,0.013,0.075,-0.043,-0.014,-0.058,0.177,-0.03,-0.029,0.007,-0.001,0.123,0.06,-0.046,0.105,-0.122,-0.012,0.205,0.189,-0.102,-0.03,-0.01,0.006,0.055,0.086,0.07,-0.168,-0.011,0.032,0.029,0.082,-0.004,-0.108,0.042,-0.041,-0.133,0.08,-0.016,0.096,-0.019,0.025,-0.098,-0.063,-0.121,0.004,0.051,0,-0.152,-0.007,0.03,0.004,0.01,-0.038,0.142,0.007,0.103,0.055,-0.095,-0.058,0.024,0.202,-0.075,0.162,0.122,-0.121,0.028,0.005,0.151,0.012,0.149,-0.081,-0.008,0.099,0.008,-0.062,-0.005,0.024,-0.131,-0.035,-0.012,0.038,-0.076,0.049,0.039,-0.104,-0.022,0,-0.047,-0.02,-0.013,-0.079,-0.066,-0.048,0.084,0.038,-0.133,0.038,0.112,0.155,-0.005,0.042,-0.031,0.013,-0.033,0.111,-0.016,0.098,0.113,-0.008,0.009,0.16,0.085,-0.006,-0.128,-0.033,0.049,-0.064,-0.109,-0.059,0.005,0.074,0.027,-0.06,-0.148,-0.092,0.028,0.111,0.114,0.103,-0.017,0.005,-0.077,-0.009,-0.059,-0.047,-0.009,-0.016,-0.017,-0.109,0.002,0.011,0.076,-0.038,-0.004,0.096,-0.049,0.211,-0.037,0.099,0.132,-0.004],"source":"src/helpers/carousel/scroll.js [createScrollButton]","tags":["code","what","function","utility","createElement","setAttribute","addEventListener","parseFloat","getComputedStyle","scrollBy","factory"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/carousel/scroll.js","node":"createScrollButton"},"patterns":["factory"],"relations":{"imports":[],"calls":["createElement","setAttribute","addEventListener","parseFloat","getComputedStyle","scrollBy"]}},"version":1},
{"id":"scroll.js-updateScrollButtonState","text":"Update scroll button disabled states based on container position.\n\n@param {HTMLElement} container - The scrolling container element.\n@param {HTMLButtonElement} leftBtn - Button that scrolls left.\n@param {HTMLButtonElement} rightBtn - Button that scrolls right.\n1. Calculate the remaining distance using `scrollWidth`, `clientWidth`, and\n   `scrollLeft` of `container`.\n2. Disable `leftBtn` when `scrollLeft` is within 1px of the carousel's\n   start to account for rounding differences.\n3. Disable `rightBtn` when the remaining distance is within 1px of the\n   carousel's end.\n\nexport function updateScrollButtonState(container, leftBtn, rightBtn) {\n  const EPSILON = 1; // allow small rounding differences\n  const remaining = container.scrollWidth - container.clientWidth - container.scrollLeft;\n  leftBtn.disabled = container.scrollLeft <= EPSILON;\n  rightBtn.disabled = remaining <= EPSILON;\n}","qaContext":"Why: Update scroll button disabled states based on container position. How: Calculate the remaining distance using `scrollWidth`, `clientWidth`, and `scrollLeft` of `container`.","embedding":[-0.02,0.05,0.012,-0.052,-0.049,0.086,-0.047,0.058,-0.125,-0.057,-0.053,0.176,0.054,-0.094,-0.045,-0.047,-0.023,0.061,-0.065,0.001,-0.007,-0.089,0.059,0.129,-0.166,0.017,-0.109,-0.124,-0.03,0.025,-0.091,0.026,-0.032,-0.113,-0.104,-0.048,-0.202,-0.112,-0.008,-0.062,-0.024,-0.051,-0.066,-0.086,0.04,-0.016,-0.095,0.083,-0.11,0.17,0.075,0.065,0.243,-0.014,-0.007,-0.01,0.085,0.113,0.125,-0.02,0.104,-0.035,0.128,-0.02,-0.15,0.055,0.026,-0.007,-0.126,0.209,0.018,0.045,0.108,0.062,0.111,-0.14,0.047,0.103,-0.001,0.071,-0.029,-0.098,0.049,0.049,-0.126,0.017,0,0.07,-0.036,-0.106,-0.025,0.021,-0.008,-0.08,0.052,0.027,-0.16,0.088,-0.126,0.034,-0.038,0.024,0.01,0.089,0.106,0.034,-0.068,-0.059,-0.056,0.082,0.05,-0.04,0.063,0.015,-0.106,-0.087,0.078,-0.004,-0.006,-0.043,0.117,0.015,0.023,-0.099,0.021,0.003,0.016,0,-0.131,-0.204,0.04,-0.083,0.175,0.087,0.009,0.032,-0.119,0.071,0.264,0.013,-0.003,-0.112,-0.07,-0.111,0.065,0.017,0.058,-0.095,0.06,-0.169,-0.096,0.088,-0.182,-0.045,-0.102,0.05,0.087,-0.009,-0.017,0.147,0.026,-0.062,0.098,-0.233,-0.078,-0.073,0.006,0.065,-0.09,-0.043,0.026,-0.07,-0.108,0.021,0.13,0.043,0.087,0.027,0.016,0.152,0.003,-0.19,0.153,-0.125,0.105,0.126,-0.022,-0.022,-0.1,-0.045,0.044,-0.098,-0.004,0.112,-0.012,0.026,-0.069,-0.06,0.101,-0.01,0.019,-0.015,0.005,-0.06,0.028,0.057,0.004,-0.036,-0.058,-0.075,-0.168,-0.016,-0.021,-0.092,-0.066,0.12,-0.046,-0.024,0.084,0.014,-0.047,0.014,-0.065,0,-0.023,0.106,-0.062,0.122,-0.059,0.063,0.061,0.203,0.067,-0.12,0.048,0.07,-0.189,-0.059,-0.08,0.085,0.156,-0.082,0.07,0.079,0.178,-0.121,-0.13,0.195,-0.119,0.015,0.028,0.207,-0.033,-0.109,-0.077,-0.029,0.031,-0.079,-0.057,-0.159,-0.167,0.011,0.018,0.037,-0.04,-0.146,0.007,0.034,0.083,0.026,-0.031,0.121,0.036,-0.056,-0.092,0.104,-0.007,-0.056,0.113,-0.019,-0.133,-0.06,0.119,-0.096,0.101,-0.034,0.183,0.053,-0.008,0.173,-0.022,0.004,0.052,0.221,0.093,0.181,0.12,-0.1,-0.035,-0.038,0.106,-0.028,0.21,-0.058,0.004,0.07,0.07,-0.254,-0.106,0.018,-0.107,-0.085,0.079,0.143,-0.085,0.077,-0.051,-0.162,-0.049,0,0.004,-0.058,-0.046,-0.056,0.012,0.026,0.127,0.143,-0.123,-0.057,0.11,0.183,0.083,0.054,0.051,0.066,-0.023,0.026,-0.039,0.034,-0.002,0.007,0.077,0.088,0.076,-0.087,-0.009,0.036,0.01,-0.158,-0.037,-0.192,0.016,0.007,0.077,-0.03,-0.2,0.003,0.038,0.076,0.017,0.018,-0.006,0.058,-0.116,-0.114,0.053,0.121,-0.084,-0.03,0.108,-0.06,-0.112,0.095,0.044,-0.076,0.024,0.007,-0.066,0.194,-0.106,0.081,0.061,0.078],"source":"src/helpers/carousel/scroll.js [updateScrollButtonState]","tags":["code","what","function","utility","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/carousel/scroll.js","node":"updateScrollButtonState"},"patterns":[],"relations":{"imports":[],"calls":[]}},"version":1},
{"id":"responsive.js-setupResponsiveSizing","text":"Setup responsive card sizing and scroll snap behavior.\n\n@param {HTMLElement} container - Carousel container with judoka cards.\n1. Define an internal `setCardWidths` function:\n   a. Get the current `window.innerWidth`.\n   b. Initialize `cardsInView` to a default of 3.\n   c. Conditionally adjust `cardsInView` based on `window.innerWidth` breakpoints:\n      i. Less than 600px: 1.5 cards.\n      ii. Less than 900px: 2.5 cards.\n      iii. Less than 1200px: 3.5 cards.\n      iv. Otherwise: 5 cards.\n   d. Calculate `cardWidth` as a CSS `clamp()` function string, ensuring it's between 200px and 260px, and responsive to `cardsInView` as a `vw` unit.\n   e. Query all `.judoka-card` elements within the `container`.\n   f. For each `card`:\n      i. Set the CSS custom property `--card-width` to the calculated `cardWidth`.\n      ii. Set `scrollSnapAlign` to \"center\".\n2. Create a `ResizeObserver` instance that calls `setCardWidths` whenever the `container` element's size changes.\n3. Start observing the `container` with the `resizeObs`.\n4. Add a \"resize\" event listener to the `window` that calls `setCardWidths` (for initial setup and window resizes).\n5. Immediately call `setCardWidths()` for initial setup.\n\nexport function setupResponsiveSizing(container) {\n  function setCardWidths() {\n    const width = window.innerWidth;\n    let cardsInView = 3;\n    if (width < 600) cardsInView = 1.5;\n    else if (width < 900) cardsInView = 2.5;\n    else if (width < 1200) cardsInView = 3.5;\n    else cardsInView = 5;\n    const cardWidth = `clamp(200px, ${Math.floor(100 / cardsInView)}vw, 260px)`;\n    container.querySelectorAll(\".judoka-card\").forEach((card) => {\n      card.style.setProperty(\"--card-width\", cardWidth);\n      card.style.scrollSnapAlign = \"center\";\n    });\n  }\n\n  const resizeObs = new ResizeObserver(setCardWidths);\n  resizeObs.observe(container);\n  window.addEventListener(\"resize\", setCardWidths);\n  setCardWidths();\n}","qaContext":"Why: Setup responsive card sizing and scroll snap behavior. How: @param {HTMLElement} container - Carousel container with judoka cards.","embedding":[-0.008,0.098,-0.005,0.088,-0.116,-0.007,-0.014,0.13,0.044,-0.12,-0.125,-0.013,-0.045,-0.017,0.027,-0.062,-0.071,0.112,-0.164,0.169,0.04,-0.223,0.082,-0.043,-0.075,0.157,-0.014,-0.043,-0.05,-0.032,-0.002,0.161,0.032,0.02,-0.029,-0.131,-0.149,-0.034,-0.108,-0.069,-0.094,0.099,0.019,0.011,0.128,-0.017,-0.14,0.112,0.002,0.141,-0.095,-0.045,0.089,0.039,0.067,-0.091,0.013,-0.039,0.117,-0.012,0.194,0.067,0.127,0.098,-0.076,-0.065,0.037,0.054,-0.09,0.147,0.048,0.065,0.251,-0.043,0.022,-0.132,0.042,0.002,-0.002,0.078,-0.106,-0.115,-0.026,0.021,0.072,0.001,0.084,-0.061,-0.034,-0.163,-0.085,0.112,-0.079,0.092,-0.08,-0.042,-0.097,-0.162,-0.113,0.078,-0.025,0.068,0.223,0.098,0.055,-0.076,-0.019,0.054,-0.016,0.043,0.038,0.073,-0.017,0.117,-0.079,0.089,0.095,-0.008,0.144,0.143,0.18,0.091,-0.105,-0.122,0.077,0.007,0.057,0,-0.066,-0.211,-0.015,-0.007,0.176,-0.005,-0.005,0.018,-0.085,0.061,0.096,0.127,-0.046,0.041,0.078,-0.084,-0.165,0.051,0.018,0.014,0.013,-0.152,-0.028,-0.006,-0.118,0.174,0.025,-0.003,-0.061,-0.002,0.013,-0.041,-0.075,-0.088,-0.001,0.001,0.06,0.062,-0.117,0.138,-0.109,0.003,0.062,-0.186,0.019,-0.096,0.15,0.126,0.051,0.104,-0.046,-0.023,0.068,-0.15,0.033,-0.181,0.119,0.142,-0.006,0.017,-0.293,-0.168,-0.128,0.02,-0.088,0.086,-0.037,-0.051,-0.129,-0.007,0,0.011,0.11,-0.046,-0.031,-0.087,-0.152,0.103,-0.233,-0.019,-0.002,0.061,-0.004,0.012,-0.018,-0.016,0.075,0.039,-0.06,0.032,-0.135,0.067,0.175,-0.07,-0.007,0,-0.003,0.036,-0.049,0.164,0.068,0.025,0.071,0.232,0.028,-0.283,0.028,0.047,-0.192,-0.046,-0.096,0.222,0.064,-0.086,-0.025,0.026,0.142,0.065,0.053,0.104,-0.052,0.048,0.143,0.057,-0.026,-0.086,-0.057,-0.167,-0.165,0.108,0.085,-0.141,-0.117,0.122,-0.028,0.116,-0.046,-0.047,-0.075,0.003,0.031,0.042,0.094,0.069,-0.029,-0.037,-0.134,-0.129,-0.017,-0.007,-0.059,0.091,-0.058,-0.12,-0.078,0.043,0.02,-0.074,0.061,-0.152,0.076,0.175,-0.169,-0.015,0.055,0.12,-0.218,-0.001,0.11,-0.065,-0.145,0.004,0.166,-0.089,0.251,-0.071,-0.077,0.042,0.025,-0.147,-0.018,0.18,-0.103,0.004,0.081,0.018,-0.105,0.046,0.181,-0.108,-0.084,0,-0.093,0.023,-0.107,0.079,-0.086,-0.022,0.069,-0.029,-0.06,-0.074,0.251,0.234,0.09,0.094,-0.062,-0.126,0.031,0.073,-0.083,-0.046,0.064,-0.086,0.152,0.094,0.035,-0.025,-0.173,-0.1,0.081,-0.031,-0.039,-0.032,0.073,0.15,0.06,-0.054,-0.027,0.046,0.104,0.058,0.046,-0.088,-0.059,-0.074,0.033,-0.12,0.051,0,0.158,0,-0.01,-0.126,-0.095,-0.059,0.102,-0.011,0.072,0.041,-0.008,0.08,-0.092,-0.025,-0.119,0.086],"source":"src/helpers/carousel/responsive.js [setupResponsiveSizing]","tags":["code","what","function","utility","floor","forEach","querySelectorAll","setProperty","observe","addEventListener","setCardWidths"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/carousel/responsive.js","node":"setupResponsiveSizing"},"patterns":[],"relations":{"imports":[],"calls":["floor","forEach","querySelectorAll","setProperty","observe","addEventListener","setCardWidths"]}},"version":1},
{"id":"navigation.js-setupKeyboardNavigation","text":"Sets up keyboard navigation for the carousel container.\n\n@param {HTMLElement} container - The carousel container element.\n1. Check if a `_carouselController` already exists on the `wrapper` (parent element of `container`). If so, exit early as keyboard events are already handled by the controller.\n2. Set the `scrollBehavior` style of the `container` to \"auto\" to ensure instant scrolling.\n3. Set the `tabIndex` of the `container` to 0 to make it focusable via keyboard.\n4. Add a \"keydown\" event listener to the `container`:\n   a. Inside the event listener, check if the `event.target` is not the `container` itself, or if the pressed key (`event.key`) is neither \"ArrowLeft\" nor \"ArrowRight\". If any of these conditions are true, exit the handler.\n   b. Prevent the default browser action for the keydown event (`event.preventDefault()`).\n   c. Get the `gap` between columns from the computed style of the `container`.\n   d. Calculate `scrollAmount` as the `container.clientWidth` plus the `gap`. This represents one page width.\n   e. Determine `delta`: If the key is \"ArrowLeft\", `delta` is `-scrollAmount`; otherwise (for \"ArrowRight\"), `delta` is `scrollAmount`.\n   f. Update the `container.scrollLeft` by adding `delta` to it, effectively scrolling the carousel.\n\nexport function setupKeyboardNavigation(container) {\n  // Thin wrapper: if a controller exists, it already wires keyboard events.\n  const wrapper = container.parentElement;\n  if (wrapper && wrapper._carouselController) return;\n  container.style.scrollBehavior = \"auto\";\n  container.tabIndex = 0;\n  container.addEventListener(\"keydown\", (event) => {\n    if (event.target !== container || (event.key !== \"ArrowLeft\" && event.key !== \"ArrowRight\"))\n      return;\n    event.preventDefault();\n    const gap = parseFloat(getComputedStyle(container).columnGap) || 0;\n    const scrollAmount = container.clientWidth + gap;\n    const delta = event.key === \"ArrowLeft\" ? -scrollAmount : scrollAmount;\n    container.scrollLeft += delta;\n  });\n}","qaContext":"Why: Sets up keyboard navigation for the carousel container. How: If so, exit early as keyboard events are already handled by the controller.","embedding":[-0.021,-0.135,0.02,0.037,-0.046,0.112,0.046,0.041,-0.003,0.009,0.027,0.089,0.063,-0.116,-0.034,-0.016,-0.051,0.049,-0.083,-0.013,0.029,-0.158,0.055,-0.037,-0.191,0.085,0.01,-0.109,-0.015,-0.022,-0.122,-0.058,-0.1,0.011,-0.154,-0.1,-0.158,-0.082,-0.082,-0.044,-0.031,0.009,-0.016,-0.072,0.159,-0.016,-0.071,0.017,-0.02,0.177,-0.04,0.058,0.203,-0.001,-0.05,-0.01,-0.055,-0.007,0.204,0.059,0.042,0.002,0.076,-0.034,-0.029,0.014,0.024,-0.001,-0.051,0.153,0.051,-0.063,0.113,0.002,-0.042,-0.123,-0.008,-0.022,0.02,0.095,-0.012,-0.097,-0.053,0.067,-0.021,0.004,-0.029,-0.052,-0.106,-0.115,-0.035,-0.154,0.024,0.048,0.046,0.039,-0.005,-0.012,-0.06,0.015,-0.097,0.001,0.01,0.071,0.059,-0.013,0.018,-0.059,-0.104,0.051,0.022,-0.008,-0.035,0.108,-0.061,0.073,0.063,0.006,0.134,0.074,0.108,0.033,-0.058,-0.061,0.017,-0.066,-0.053,0,-0.066,-0.086,-0.032,-0.065,0.142,0.023,0.078,0.011,-0.096,0.089,0.068,0.042,-0.068,-0.06,-0.018,-0.071,-0.04,0.014,0.034,-0.074,0.061,-0.115,-0.037,-0.001,0.032,0.02,-0.105,0.07,-0.012,0.02,0.008,0.095,-0.06,-0.084,0.072,-0.166,0.035,0.055,-0.037,-0.031,-0.072,-0.124,-0.019,-0.059,-0.071,-0.042,0.083,0.13,0.136,-0.009,0.019,0.027,0.009,-0.093,0.112,-0.052,-0.006,0.16,0.124,0.059,-0.157,-0.067,0.066,-0.019,0,0.067,-0.042,-0.013,-0.015,-0.173,0.076,-0.065,0.09,-0.038,0.1,-0.016,-0.076,-0.065,-0.02,-0.108,-0.016,0.012,-0.054,0.099,-0.02,-0.025,-0.045,0.055,-0.13,0.082,-0.001,0.01,0.088,0.005,-0.059,0,-0.013,0.13,-0.056,0.154,0.001,0.004,0.085,0.061,0.063,-0.169,-0.012,0.119,-0.011,0.011,-0.057,0.172,0.031,0.037,0.055,-0.011,0.106,-0.043,-0.085,0.071,-0.081,0.033,0.147,0.158,-0.094,-0.002,-0.01,0.08,-0.025,0.028,-0.034,-0.136,-0.07,0.048,-0.063,0.024,0.033,-0.133,0.043,-0.033,-0.005,0.065,0.091,0.139,0.051,0.002,-0.047,-0.096,-0.07,-0.063,-0.014,0.096,-0.003,-0.023,-0.045,0.003,0.03,-0.048,0.194,0.022,0.126,0.022,-0.054,0.016,0.128,0.116,-0.06,0.08,0.141,-0.005,-0.009,-0.011,0.109,-0.073,0.205,-0.13,-0.015,-0.001,0.02,-0.216,-0.06,0.136,-0.113,-0.008,0.029,0.139,-0.004,-0.05,-0.003,-0.133,-0.052,0,0.032,0.113,-0.077,-0.075,-0.027,-0.079,0.1,0.076,-0.059,-0.076,0.075,0.217,0.06,0.055,0.037,0.079,0.048,0.055,-0.083,-0.071,0.073,-0.039,0.096,0.039,0.036,-0.075,-0.064,0.033,0.031,-0.115,-0.056,-0.066,-0.027,0.031,-0.051,-0.061,0.014,-0.153,0.073,0.086,0.084,-0.008,-0.063,-0.073,-0.192,0.082,0.023,0.125,0.053,0.082,-0.029,-0.07,-0.041,-0.07,0.05,0.028,0.063,0.047,0.003,0.086,-0.074,0.045,-0.024,0.023],"source":"src/helpers/carousel/navigation.js [setupKeyboardNavigation]","tags":["code","what","function","utility","../constants.js","addEventListener","preventDefault","parseFloat","getComputedStyle"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/carousel/navigation.js","node":"setupKeyboardNavigation"},"patterns":[],"relations":{"imports":["../constants.js"],"calls":["addEventListener","preventDefault","parseFloat","getComputedStyle"]}},"version":1},
{"id":"navigation.js-setupSwipeNavigation","text":"Sets up swipe navigation for the carousel container, supporting touch and pointer events.\n\n@param {HTMLElement} container - The carousel container element.\n1. Check if a `_carouselController` already exists on the `wrapper` (parent element of `container`). If so, exit early as swipe events are already handled by the controller.\n2. Initialize `touchStartX` and `pointerStartX` to 0 to store the starting X-coordinates for touch and pointer events, respectively.\n3. Define a `scrollFromDelta` helper function that takes `delta` (the swipe distance):\n   a. Get the `gap` between columns from the computed style of the `container`.\n   b. Calculate `step` as the `container.clientWidth` plus the `gap`, representing one page width.\n   c. Initialize `left` with the current `container.scrollLeft`.\n   d. If `delta` is greater than `CAROUSEL_SWIPE_THRESHOLD`, decrement `left` by `step` (swipe right, go left).\n   e. Else if `delta` is less than negative `CAROUSEL_SWIPE_THRESHOLD`, increment `left` by `step` (swipe left, go right).\n   f. Else (swipe distance is within threshold), exit the helper function.\n   g. Calculate `maxScroll` as the maximum scrollable width of the `container`.\n   h. Clamp `left` to ensure it stays within the valid scrollable range (between 0 and `maxScroll`).\n   i. Scroll the `container` to the calculated `left` position with smooth behavior.\n4. Add a \"touchstart\" event listener to the `container`:\n   a. Store the `clientX` of the first touch in `touchStartX`.\n5. Add a \"touchend\" event listener to the `container`:\n   a. Get the `clientX` of the first changed touch.\n   b. Calculate `swipeDistance` as the difference between `touchEndX` and `touchStartX`.\n   c. Call `scrollFromDelta` with `swipeDistance`.\n6. Add a \"pointerdown\" event listener to the `container`:\n   a. If the `event.pointerType` is not \"touch\", store the `clientX` in `pointerStartX`.\n7. Add a \"pointerup\" event listener to the `container`:\n   a. If the `event.pointerType` is not \"touch\", calculate `swipeDistance` and call `scrollFromDelta`.\n\nexport function setupSwipeNavigation(container) {\n  // Thin wrapper: if a controller exists, it already wires swipe/pointer events.\n  const wrapper = container.parentElement;\n  if (wrapper && wrapper._carouselController) return;\n\n  let touchStartX = 0;\n  let pointerStartX = 0;\n\n  const scrollFromDelta = (delta) => {\n    const gap = parseFloat(getComputedStyle(container).columnGap) || 0;\n    const step = container.clientWidth + gap;\n    let left = container.scrollLeft;\n    if (delta > CAROUSEL_SWIPE_THRESHOLD) {\n      left -= step;\n    } else if (delta < -CAROUSEL_SWIPE_THRESHOLD) {\n      left += step;\n    } else {\n      return;\n    }\n\n    const maxScroll = container.scrollWidth - container.clientWidth;\n    left = Math.max(0, Math.min(left, maxScroll));\n    container.scrollTo({ left, behavior: \"smooth\" });\n  };\n\n  container.addEventListener(\"touchstart\", (event) => {\n    touchStartX = event.touches[0].clientX;\n  });\n  container.addEventListener(\"touchend\", (event) => {\n    const touchEndX = event.changedTouches[0].clientX;\n    const swipeDistance = touchEndX - touchStartX;\n    scrollFromDelta(swipeDistance);\n  });\n\n  container.addEventListener(\"pointerdown\", (event) => {\n    if (event.pointerType !== \"touch\") {\n      pointerStartX = event.clientX;\n    }\n  });\n  container.addEventListener(\"pointerup\", (event) => {\n    if (event.pointerType !== \"touch\") {\n      const pointerEndX = event.clientX;\n      const swipeDistance = pointerEndX - pointerStartX;\n      scrollFromDelta(swipeDistance);\n    }\n  });\n}","qaContext":"Why: Sets up swipe navigation for the carousel container, supporting touch and pointer events. How: If so, exit early as swipe events are already handled by the controller.","embedding":[-0.101,-0.113,0.059,-0.087,-0.084,-0.005,0.071,0.12,-0.056,-0.015,0.068,0.056,0.121,-0.021,-0.095,-0.008,-0.036,0.113,-0.015,0.087,0.088,-0.135,0.061,-0.097,-0.171,0.088,-0.009,-0.12,0.06,-0.027,-0.018,0.146,-0.171,-0.057,-0.043,-0.113,-0.219,-0.156,-0.104,-0.01,0.093,0.051,0.023,-0.013,0.137,-0.073,-0.02,0.032,-0.033,0.199,0.056,-0.011,0.2,0.033,0.021,0.007,0.05,0.059,0.098,0.105,0.089,0.007,0.119,-0.066,-0.007,-0.041,-0.001,-0.02,-0.026,0.146,-0.071,-0.04,0.14,-0.015,-0.054,-0.166,0.042,0.079,-0.153,-0.123,-0.015,-0.137,-0.052,0.058,0.015,-0.116,-0.063,-0.026,0.067,-0.037,-0.042,0.03,-0.165,-0.167,-0.091,-0.015,-0.025,-0.034,-0.074,0.073,-0.13,0.088,0.006,0.175,-0.003,-0.033,-0.146,-0.175,-0.21,0.109,0.02,-0.046,0.025,0.056,-0.061,-0.022,0.081,0.067,0.107,0.004,0.099,0.119,-0.061,-0.071,0.045,-0.004,-0.024,0,-0.058,-0.159,-0.11,-0.057,0.075,0.039,0.088,0.069,-0.096,0.001,0.194,-0.02,0.011,-0.062,-0.006,-0.092,-0.039,-0.038,-0.087,0.007,0.031,-0.099,-0.109,-0.05,0.002,0.075,-0.093,0.111,0.059,0.028,-0.067,0.066,0.011,-0.12,0.034,-0.084,-0.055,-0.052,0.086,-0.147,-0.138,-0.098,0.054,-0.131,-0.142,-0.07,-0.035,0.16,0.15,-0.036,0.079,0.004,-0.054,-0.124,-0.033,-0.197,-0.127,0.181,0.075,0.13,-0.096,-0.035,-0.064,-0.097,-0.011,0.19,-0.044,0.017,0.075,-0.117,0.025,0.052,0.157,0.058,0.07,-0.025,-0.068,0.024,-0.088,-0.127,-0.045,-0.046,0.007,-0.012,0.022,-0.191,0.057,0.028,-0.249,0.023,-0.09,-0.004,0.179,0.021,-0.076,0,0.023,0.091,0.007,0.14,-0.024,-0.055,0.123,0.057,-0.092,-0.167,-0.093,0.097,-0.136,-0.031,0.019,0.258,0.029,-0.002,0.003,0.059,0.143,0.041,0.016,0.118,-0.071,-0.057,0.228,0.081,-0.119,-0.087,-0.069,-0.068,-0.102,0.011,0.095,-0.129,-0.069,0.018,-0.014,0.051,0.232,-0.106,0.098,0.047,0.032,0.012,-0.112,0.191,-0.056,-0.027,-0.078,-0.015,-0.019,-0.062,0.042,0.152,0.094,-0.118,0.015,-0.104,0.085,-0.07,0.029,0.06,0.153,0.048,-0.048,-0.079,-0.002,0.111,-0.066,0.122,0.22,-0.084,0.017,0.05,0.188,-0.127,0.218,-0.155,-0.13,0.06,0.142,-0.135,-0.083,0.162,-0.233,0.005,0.149,0.019,-0.107,-0.005,0.131,-0.11,-0.003,0,-0.039,0.008,0.005,0.023,0.007,0.039,0.039,0.08,-0.077,-0.066,0.122,0.125,0.055,0.055,0.04,0.106,0.165,0.072,-0.129,-0.049,-0.049,0.007,0.151,0.14,-0.002,-0.077,-0.056,0.02,-0.033,-0.188,0.046,-0.119,0.041,0.165,0.05,0.012,-0.037,-0.057,0.094,0.209,0.014,0.073,-0.044,-0.041,-0.019,-0.037,0.007,-0.006,0.087,0.146,-0.082,-0.099,-0.023,-0.041,0.017,-0.084,0.022,-0.045,0.022,0.131,-0.066,0.132,0.056,0.127],"source":"src/helpers/carousel/navigation.js [setupSwipeNavigation]","tags":["code","how","function","utility","../constants.js","parseFloat","getComputedStyle","max","min","scrollTo","addEventListener","scrollFromDelta","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/carousel/navigation.js","node":"setupSwipeNavigation"},"patterns":[],"relations":{"imports":["../constants.js"],"calls":["parseFloat","getComputedStyle","max","min","scrollTo","addEventListener","scrollFromDelta"]}},"version":1},
{"id":"metrics.js-getPageMetrics","text":"Compute carousel paging metrics based on current layout.\n\n@param {HTMLElement} container\n@returns {{gap:number,pageWidth:number,cardsPerPage:number,pageCount:number}}\n1. Get the computed styles of the `container` element.\n2. Extract the `gap` value from the computed styles, preferring `columnGap` and falling back to `gap`, defaulting to 0 if neither is found.\n3. Query all elements with the class \".judoka-card\" within the `container`.\n4. Get the `firstCard` from the queried list.\n5. Determine `cardWidth`: If `firstCard` exists, use its `offsetWidth`; otherwise, set to 0.\n6. Get the `containerWidth` from `container.clientWidth`.\n7. Calculate `cardsPerPage`:\n   a. If `cardWidth` is greater than 0:\n      i. Calculate the number of cards that can fit by dividing the `containerWidth` plus `gap` by `cardWidth` plus `gap`.\n      ii. Use `Math.floor` to get a whole number of cards.\n      iii. Ensure at least 1 card per page using `Math.max(1, ...)`.\n   b. Otherwise (if `cardWidth` is 0), default `cardsPerPage` to 1.\n8. Calculate `pageCount`: Determine the total number of pages by dividing the total number of `cards` by `cardsPerPage`, using `Math.ceil` to round up, and ensuring at least 1 page using `Math.max(1, ...)`.\n9. Calculate `pageWidth`:\n   a. If `cardWidth` is greater than 0, calculate `pageWidth` as `cardsPerPage` multiplied by (`cardWidth` plus `gap`).\n   b. Otherwise, default `pageWidth` to `containerWidth` plus `gap`.\n10. Return an object containing `gap`, `pageWidth`, `cardsPerPage`, and `pageCount`.\n\nexport function getPageMetrics(container) {\n  const styles = getComputedStyle(container);\n  const gap = parseFloat(styles.columnGap || styles.gap) || 0;\n\n  const cards = container.querySelectorAll(\".judoka-card\");\n  const firstCard = cards[0];\n  const cardWidth = firstCard ? firstCard.offsetWidth : 0;\n  const containerWidth = container.clientWidth;\n\n  const cardsPerPage = cardWidth\n    ? Math.max(1, Math.floor((containerWidth + gap) / (cardWidth + gap)))\n    : 1;\n\n  const pageCount = Math.max(1, Math.ceil(cards.length / cardsPerPage));\n  const pageWidth = cardWidth ? cardsPerPage * (cardWidth + gap) : containerWidth + gap;\n\n  return { gap, pageWidth, cardsPerPage, pageCount };\n}","qaContext":"Why: Compute carousel paging metrics based on current layout. How: Calculate the number of cards that can fit by dividing the `containerWidth` plus `gap` by `cardWidth` plus `gap`.","embedding":[-0.094,0.205,-0.05,0.06,-0.128,0.049,0.001,0.092,-0.008,-0.022,-0.014,-0.177,0.112,-0.105,0.063,-0.163,-0.094,0.139,-0.089,0.006,0.047,0.028,0.083,-0.026,0.01,0.155,-0.029,-0.08,0.02,-0.103,-0.031,0.183,-0.049,-0.024,0.05,-0.084,-0.164,-0.002,-0.008,-0.024,-0.078,0.005,0.037,-0.017,0.178,-0.015,-0.274,0.093,-0.034,0.046,-0.141,0.076,-0.018,-0.023,0.064,-0.051,0.011,-0.107,-0.02,-0.031,0.072,-0.007,0.066,0.001,-0.056,-0.116,0.022,0.061,-0.053,0.198,-0.027,0.142,0.191,0.012,-0.027,-0.103,-0.007,-0.09,-0.017,-0.03,-0.162,-0.127,0.019,0.053,0.083,-0.045,0.074,0.044,0.01,-0.131,-0.083,0.113,-0.059,0.095,-0.02,0.105,-0.052,0.006,-0.006,0.111,-0.09,0.076,0.173,0.036,0.024,-0.033,0.009,-0.07,0.029,-0.045,0.092,0.044,-0.109,-0.008,-0.062,-0.008,0.181,-0.136,0.205,0.162,0.149,0.151,0.055,0.005,-0.053,-0.071,0.102,0,-0.101,-0.191,0.055,0.011,0.082,0.088,-0.035,0.005,-0.087,0.129,-0.021,0.148,-0.106,-0.002,0.163,0.017,-0.072,0.033,-0.036,-0.077,0.061,-0.22,-0.004,0.08,0.011,0.143,0.01,-0.001,-0.187,-0.022,0.134,-0.044,0,-0.016,0.065,-0.06,0.14,0.041,-0.091,-0.036,-0.182,-0.048,0.135,-0.184,-0.102,-0.034,0.139,0.118,0.12,0.169,-0.035,0.027,0.001,-0.017,-0.009,-0.253,0.037,0.249,0.136,0.056,-0.175,-0.044,0.006,-0.067,-0.064,0.114,-0.071,-0.042,-0.024,-0.006,0.043,-0.145,0.096,-0.029,0.085,-0.078,-0.005,-0.063,-0.195,-0.098,0.021,0.094,-0.112,-0.045,-0.084,0.058,0.183,0.075,-0.052,-0.043,-0.146,0.046,0.13,-0.023,-0.07,0,-0.052,0.114,0.071,0.125,0.129,-0.118,0.168,0.085,0.099,-0.125,-0.005,0.009,-0.09,-0.092,-0.006,0.222,-0.017,-0.182,-0.028,0.037,0.057,0.106,-0.032,0.065,-0.157,0.085,0.181,-0.008,-0.104,-0.101,0.062,-0.211,-0.193,0.167,-0.03,-0.139,-0.069,0.173,-0.063,0.149,-0.013,-0.162,-0.117,0.044,-0.007,-0.039,0.168,0.056,0.032,-0.128,-0.032,-0.062,-0.055,0.041,-0.1,0.079,-0.144,-0.039,-0.058,-0.015,-0.026,-0.037,0.074,-0.009,0.122,0.043,-0.188,-0.038,-0.056,0.171,-0.241,0.184,0.248,-0.032,-0.104,0.047,0.131,-0.052,0.315,-0.081,-0.146,0.025,0.057,-0.187,-0.125,0.06,0.017,-0.03,0.038,-0.071,-0.128,0.103,0.141,-0.116,-0.124,0,-0.09,-0.108,-0.063,0.018,0.051,0.006,0.121,0.051,-0.056,0.004,0.278,0.154,0.05,0.054,-0.1,-0.107,0.005,0.073,-0.134,-0.131,0.031,-0.061,0.086,0.025,-0.012,-0.061,-0.088,-0.042,0.11,-0.055,0.048,0.002,0.052,0.13,0.091,-0.023,0.028,0.069,0,0.154,-0.08,-0.174,-0.051,-0.045,0.091,-0.1,0.016,0.009,0.142,-0.053,-0.014,-0.197,-0.102,-0.113,-0.016,-0.145,0.1,0.017,0.037,0.05,-0.094,-0.115,0.005,0.024],"source":"src/helpers/carousel/metrics.js [getPageMetrics]","tags":["code","what","function","utility","getComputedStyle","parseFloat","querySelectorAll","max","floor","ceil"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/carousel/metrics.js","node":"getPageMetrics"},"patterns":[],"relations":{"imports":[],"calls":["getComputedStyle","parseFloat","querySelectorAll","max","floor","ceil"]}},"version":1},
{"id":"focus.js-setupFocusHandlers","text":"Add focus, keyboard and hover handlers for carousel cards.\n\n@param {HTMLElement} container - Carousel container element.\n1. Define an internal `updateCardFocusStyles` function:\n   a. Get all `.judoka-card` elements within the `container`.\n   b. For each card, remove the \"focused-card\" class and clear any `transform` style.\n   c. Get the bounding rectangle of the `container`.\n   d. Initialize `minDist` to `Infinity` and `centerCard` to `null`.\n   e. Iterate through each `card`:\n      i. Get the bounding rectangle of the `card`.\n      ii. Calculate the `cardCenter` (horizontal midpoint of the card).\n      iii. Calculate the `dist` (absolute distance from `cardCenter` to the `container`'s horizontal midpoint).\n      iv. If `dist` is less than `minDist`, update `minDist` and set `centerCard` to the current `card`.\n   f. If a `centerCard` is found, add the \"focused-card\" class to it and apply a `scale(1.1)` transform.\n2. Add a \"keydown\" event listener to the `container`:\n   a. If the `document.activeElement` is the `container` itself, exit (meaning focus is on the carousel container, not a card).\n   b. If the pressed key (`e.key`) is \"ArrowRight\" or \"ArrowLeft\":\n      i. Get all `.judoka-card` elements.\n      ii. Get the `current` active element.\n      iii. Find the `idx` of the `current` card in the `cards` array. If not found, default to 0.\n      iv. If \"ArrowRight\" is pressed and `idx` is not the last card, focus the next card (`cards[idx + 1]`).\n      v. Else if \"ArrowLeft\" is pressed and `idx` is not the first card, focus the previous card (`cards[idx - 1]`).\n      vi. Use `setTimeout(updateCardFocusStyles, 0)` to update styles after focus has shifted.\n3. Add \"focusin\" and \"focusout\" event listeners to the `container` that call `updateCardFocusStyles`.\n4. Add \"mouseover\" event listener to the `container`:\n   a. If the `e.target` has the class \"judoka-card\", call `updateCardFocusStyles`.\n5. Add \"mouseout\" event listener to the `container`:\n   a. If the `e.target` has the class \"judoka-card\", call `updateCardFocusStyles`.\n\nexport function setupFocusHandlers(container) {\n  function updateCardFocusStyles() {\n    const cards = Array.from(container.querySelectorAll(\".judoka-card\"));\n    cards.forEach((card) => {\n      card.classList.remove(\"focused-card\");\n      card.style.transform = \"\";\n    });\n    const containerRect = container.getBoundingClientRect();\n    let minDist = Infinity;\n    let centerCard = null;\n    cards.forEach((card) => {\n      const rect = card.getBoundingClientRect();\n      const cardCenter = rect.left + rect.width / 2;\n      const dist = Math.abs(cardCenter - (containerRect.left + containerRect.width / 2));\n      if (dist < minDist) {\n        minDist = dist;\n        centerCard = card;\n      }\n    });\n    if (centerCard) {\n      centerCard.classList.add(\"focused-card\");\n      centerCard.style.transform = \"scale(1.1)\";\n    }\n  }\n\n  container.addEventListener(\"keydown\", (e) => {\n    if (document.activeElement === container) return;\n    if (e.key === \"ArrowRight\" || e.key === \"ArrowLeft\") {\n      const cards = Array.from(container.querySelectorAll(\".judoka-card\"));\n      const current = document.activeElement;\n      let idx = cards.indexOf(current);\n      if (idx === -1) idx = 0;\n      if (e.key === \"ArrowRight\" && idx < cards.length - 1) {\n        cards[idx + 1].focus();\n      } else if (e.key === \"ArrowLeft\" && idx > 0) {\n        cards[idx - 1].focus();\n      }\n      setTimeout(updateCardFocusStyles, 0);\n    }\n  });\n  container.addEventListener(\"focusin\", updateCardFocusStyles);\n  container.addEventListener(\"focusout\", updateCardFocusStyles);\n\n  container.addEventListener(\"mouseover\", (e) => {\n    if (e.target.classList.contains(\"judoka-card\")) {\n      updateCardFocusStyles();\n    }\n  });\n  container.addEventListener(\"mouseout\", (e) => {\n    if (e.target.classList.contains(\"judoka-card\")) {\n      updateCardFocusStyles();\n    }\n  });\n}","qaContext":"Why: Add focus, keyboard and hover handlers for carousel cards. How: Iterate through each `card`: i.","embedding":[-0.012,-0.03,0.008,0.053,-0.181,0.052,0.187,-0.016,0.024,-0.162,0.034,-0.022,0.036,-0.108,0.04,-0.026,-0.013,0.114,-0.094,0.072,0.056,-0.133,0.097,-0.047,-0.136,0.137,-0.072,-0.137,-0.006,-0.086,-0.054,0.097,0.032,0.008,-0.103,-0.118,-0.167,-0.016,-0.095,-0.047,-0.032,0.063,-0.017,-0.053,0.124,-0.034,-0.128,0.017,0.02,0.083,-0.195,-0.139,0.106,-0.062,0.042,0.095,0.147,-0.082,0.096,-0.089,0.102,0.088,0.099,0.012,-0.074,-0.032,0.113,0.001,-0.044,0.065,0.029,0.013,0.136,-0.142,-0.048,-0.057,0.065,-0.049,0.008,-0.096,0.014,-0.208,0.074,-0.027,0.11,-0.015,0.043,-0.065,-0.108,-0.086,-0.092,-0.107,0.017,-0.022,0.063,0.043,-0.034,-0.016,-0.15,0.101,-0.004,-0.065,0.064,0.041,0.058,0.069,-0.006,-0.059,-0.092,-0.071,-0.032,-0.106,-0.071,0.028,-0.099,0.196,0.111,0.025,0.02,0.086,0.235,0.019,-0.017,-0.061,-0.023,-0.072,0.039,0,0.007,-0.184,-0.069,0.008,0.144,-0.017,0.073,-0.076,-0.088,0.013,0.089,0.07,-0.074,-0.006,-0.004,-0.179,-0.039,0.12,-0.028,-0.041,0.068,-0.051,-0.069,-0.057,-0.006,0.217,-0.077,0.036,-0.009,-0.008,-0.016,0.002,-0.103,-0.034,-0.083,-0.06,0.008,0.019,-0.02,-0.077,-0.091,-0.05,0.015,-0.125,-0.006,0.008,-0.03,0.225,0.065,0.09,0.051,0.044,-0.042,-0.165,-0.042,-0.071,0.032,0.292,0.082,-0.034,-0.108,-0.074,-0.082,0.079,0.044,0.199,-0.115,-0.073,0.014,-0.004,0.01,0.076,0.063,-0.005,0.077,-0.11,-0.193,-0.166,-0.228,-0.071,-0.021,0.04,-0.188,0.032,0.031,0.036,0.11,0.059,-0.189,0.049,-0.04,0.118,0.108,-0.09,-0.012,0,0.036,0.133,0.024,0.215,0.043,0.02,0.052,0.183,0.031,-0.143,-0.06,0.103,-0.097,-0.133,-0.102,0.164,0.001,0.08,-0.114,0.034,0.155,0.012,-0.003,0.079,-0.198,0.047,0.131,0.11,-0.013,-0.118,-0.042,0.014,-0.131,0.156,0.056,-0.057,-0.027,0.007,-0.135,0.111,0.065,-0.08,0.02,0.081,0.045,0.013,-0.076,0.134,-0.015,-0.031,-0.146,-0.177,-0.081,-0.068,-0.026,0.151,0.015,-0.101,0.008,0.042,-0.035,-0.045,0.118,-0.037,0.137,0.054,-0.133,0.013,0.063,0.043,-0.008,0.147,0.059,-0.047,-0.038,-0.01,0.135,-0.075,0.24,-0.181,-0.094,-0.035,0.096,-0.109,-0.109,0.218,0.007,0.007,0.168,-0.08,-0.106,0.085,0.278,-0.154,-0.131,0,-0.009,0.032,-0.083,0.125,-0.065,0.01,-0.021,0.027,-0.092,-0.154,0.134,0.231,0.094,0.067,0.011,-0.014,0.018,0.053,-0.087,-0.055,0.111,-0.039,0.16,0.138,-0.062,-0.121,-0.03,-0.007,0.053,-0.073,0.068,-0.027,0.027,0.203,-0.071,-0.143,0.023,0.06,0.068,0.208,0.037,-0.197,-0.153,-0.104,-0.103,-0.029,-0.027,-0.104,0.135,0.046,-0.08,-0.046,-0.035,-0.031,0.035,0.027,0.187,0.081,0.066,0.08,-0.073,0.041,-0.119,0.076],"source":"src/helpers/carousel/focus.js [setupFocusHandlers]","tags":["code","what","function","utility","from","querySelectorAll","forEach","remove","getBoundingClientRect","abs","add","addEventListener","indexOf","focus","setTimeout","contains","updateCardFocusStyles"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/carousel/focus.js","node":"setupFocusHandlers"},"patterns":[],"relations":{"imports":[],"calls":["from","querySelectorAll","forEach","remove","getBoundingClientRect","abs","add","addEventListener","indexOf","focus","setTimeout","contains","updateCardFocusStyles"]}},"version":1},
{"id":"controller.js-CarouselController","text":"Central controller for carousel navigation and indicators.\n1. Build prev/next buttons and scroll markers + counter.\n2. Append DOM as [left, container, right, markers] under wrapper.\n3. Wire keyboard, swipe/pointer, scroll, and resize to a single update path.\n4. Expose setPage/next/prev/update/destroy to manage state deterministically.\n\nexport class CarouselController {\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} wrapper\n   * @param {{threshold?:number}} [options]\n   */\n  constructor(container, wrapper, options = {}) {\n    this.container = container;\n    this.wrapper = wrapper;\n    this.threshold = options.threshold ?? 50;\n    this.currentPage = 0;\n    this.metrics = getPageMetrics(container);\n    this._rafId = null;\n    this._resizeTimer = null;\n    this._suppressScrollSync = false;\n    this._onKeydown = null;\n    this._onTouchStart = null;\n    this._onTouchEnd = null;\n    this._onTouchMove = null;\n    this._onTouchCancel = null;\n    this._onPointerDown = null;\n    this._onPointerUp = null;\n    this._onPointerCancel = null;\n\n    // Build UI and wire events\n    const { left, right } = this._buildButtons();\n    this.leftBtn = left;\n    this.rightBtn = right;\n    this.markersRoot = this._buildMarkers();\n\n    // Structure: [left][container][right][markers]\n    this.wrapper.append(this.leftBtn, this.container, this.rightBtn, this.markersRoot);\n\n    this._wireKeyboard();\n    this._wireSwipe();\n    this._wireScrollSync();\n    this._wireResize();\n\n    // Initial sync\n    this.update();\n\n    // If constructed while detached, recompute metrics after connection.\n    // Ensures correct pageCount/markers once real layout is known.\n    this._afterConnectedInit();\n  }\n\n  /**\n   * Cleans up the carousel controller by removing all event listeners and DOM elements.\n   * This prevents memory leaks and ensures proper detachment from the document.\n   *\n   * @pseudocode\n   * 1. Remove the \"scroll\" event listener from `this.container`.\n   * 2. Remove the \"keydown\" event listener from `this.container`.\n   * 3. Remove the \"touchstart\" event listener from `this.container`.\n   * 4. Remove the \"touchend\" event listener from `this.container`.\n   * 5. Remove the \"touchmove\" event listener from `this.container`.\n   * 6. Remove the \"touchcancel\" event listener from `this.container`.\n   * 7. Remove the \"pointerdown\" event listener from `this.container`.\n   * 8. Remove the \"pointerup\" event listener from `this.container`.\n   * 9. Remove the \"pointercancel\" event listener from `this.container`.\n   * 10. Remove the \"resize\" event listener from `window`.\n   * 11. Remove the `leftBtn` DOM element from the document, if it exists.\n   * 12. Remove the `rightBtn` DOM element from the document, if it exists.\n   * 13. Remove the `markersRoot` DOM element from the document, if it exists.\n   * 14. Set internal event handler references (`_onKeydown`, `_onTouchStart`, etc.) to `null` to release memory.\n   *\n   * @returns {void}\n   */\n  destroy() {\n    this.container.removeEventListener(\"scroll\", this._onScroll);\n    this.container.removeEventListener(\"keydown\", this._onKeydown);\n    this.container.removeEventListener(\"touchstart\", this._onTouchStart);\n    this.container.removeEventListener(\"touchend\", this._onTouchEnd);\n    this.container.removeEventListener(\"touchmove\", this._onTouchMove);\n    this.container.removeEventListener(\"touchcancel\", this._onTouchCancel);\n    this.container.removeEventListener(\"pointerdown\", this._onPointerDown);\n    this.container.removeEventListener(\"pointerup\", this._onPointerUp);\n    this.container.removeEventListener(\"pointercancel\", this._onPointerCancel);\n    window.removeEventListener(\"resize\", this._onResize);\n    this.leftBtn?.remove();\n    this.rightBtn?.remove();\n    this.markersRoot?.remove();\n    this._onKeydown =\n      this._onTouchStart =\n      this._onTouchEnd =\n      this._onPointerDown =\n      this._onPointerUp =\n      this._onPointerCancel =\n      this._onTouchMove =\n      this._onTouchCancel =\n        null;\n  }\n\n  /**\n   * Initializes the carousel after it has been connected to the DOM.\n   * This method is called once the container is part of the document flow,\n   * ensuring correct metric calculation and marker rendering.\n   * If the container is not yet connected, it polls using `requestAnimationFrame`.\n   *\n   * @pseudocode\n   * 1. Check if `this.container` is connected to the DOM (`this.container.isConnected`).\n   * 2. If connected:\n   *    a. Store the `oldCount` of pages from `this.metrics.pageCount`.\n   *    b. Recalculate `this.metrics` by calling `getPageMetrics` on `this.container`.\n   *    c. If the new `pageCount` is different from `oldCount`:\n   *       i. Remove the existing `markersRoot` from the DOM, if it exists.\n   *       ii. Rebuild `markersRoot` by calling `this._buildMarkers()`.\n   *       iii. Append the newly built `markersRoot` to `this.wrapper`.\n   *    d. Set the current page by calling `this.setPage` with `this.currentPage`.\n   * 3. If not connected:\n   *    a. Schedule `_afterConnectedInit` to be called again on the next animation frame using `requestAnimationFrame`.\n   *\n   * @returns {void}\n   */\n  _afterConnectedInit() {\n    if (this.container.isConnected) {\n      const oldCount = this.metrics.pageCount;\n      this.metrics = getPageMetrics(this.container);\n      if (this.metrics.pageCount !== oldCount) {\n        this.markersRoot?.remove();\n        this.markersRoot = this._buildMarkers();\n        this.wrapper.append(this.markersRoot);\n      }\n      this.setPage(this.currentPage);\n    } else {\n      // Poll once per frame until connected to the document\n      requestAnimationFrame(() => this._afterConnectedInit());\n    }\n  }\n\n  /**\n   * Navigates the carousel to the next page.\n   *\n   * @pseudocode\n   * 1. Increment `this.currentPage` by 1.\n   * 2. Call `this.setPage` with the new `this.currentPage` value to update the carousel's display.\n   *\n   * @returns {void}\n   */\n  next() {\n    this.setPage(this.currentPage + 1);\n  }\n\n  /**\n   * Navigates the carousel to the previous page.\n   *\n   * @pseudocode\n   * 1. Decrement `this.currentPage` by 1.\n   * 2. Call `this.setPage` with the new `this.currentPage` value to update the carousel's display.\n   *\n   * @returns {void}\n   */\n  prev() {\n    this.setPage(this.currentPage - 1);\n  }\n\n  /**\n   * Sets the current page of the carousel and updates its display.\n   *\n   * @pseudocode\n   * 1. Destructure `pageCount` and `pageWidth` from `this.metrics`.\n   * 2. Clamp the provided `index` to ensure it is within the valid range of pages (0 to `pageCount - 1`).\n   * 3. Update `this.currentPage` with the clamped index.\n   * 4. Calculate the `left` scroll position by multiplying the clamped index by `pageWidth`.\n   * 5. Set `this._suppressScrollSync` to `true` to temporarily disable scroll event synchronization, preventing conflicts with programmatic scrolling.\n   * 6. Programmatically scroll the `this.container` to the calculated `left` position with `behavior: \"auto\"` for instant scrolling.\n   * 7. Attach a one-time `scrollend` listener to clear `this._suppressScrollSync` once scrolling finishes and remove the listener.\n   * 8. Call `this.update()` to refresh the carousel's UI, including button states and markers.\n   *\n   * @param {number} index - The 0-based index of the page to set.\n   * @returns {void}\n   */\n  setPage(index) {\n    const { pageCount, pageWidth } = this.metrics;\n    const clamped = Math.max(0, Math.min(index, pageCount - 1));\n    this.currentPage = clamped;\n    const left = clamped * pageWidth;\n    // Instant scroll prevents animation queues from causing drift.\n    // Suppress scroll event sync while performing programmatic scroll to\n    // avoid intermediary scroll calculations from overriding the target page.\n    this._suppressScrollSync = true;\n    this.container.scrollTo({ left, behavior: \"auto\" });\n    // Listen for the scroll to fully end before re-enabling scroll sync.\n    const release = () => {\n      this._suppressScrollSync = false;\n      this.container.removeEventListener(\"scrollend\", release);\n    };\n    this.container.addEventListener(\"scrollend\", release);\n    this.update();\n  }\n\n  /**\n   * Updates the visual state of the carousel's navigation buttons and page indicators.\n   * This method should be called after any change to the carousel's current page or metrics.\n   *\n   * @pseudocode\n   * 1. Destructure `pageCount` from `this.metrics`.\n   * 2. Update the disabled state of the `leftBtn`:\n   *    a. If `this.leftBtn` exists, set its `disabled` property to `true` if `this.currentPage` is less than or equal to 0 (i.e., on the first page), otherwise `false`.\n   * 3. Update the disabled state of the `rightBtn`:\n   *    a. If `this.rightBtn` exists, set its `disabled` property to `true` if `this.currentPage` is greater than or equal to `pageCount - 1` (i.e., on the last page), otherwise `false`.\n   * 4. Call `this._syncMarkers()` to update the visual appearance of the page markers and the page counter.\n   *\n   * @returns {void}\n   */\n  update() {\n    // Update button disabled states\n    const { pageCount } = this.metrics;\n    if (this.leftBtn) this.leftBtn.disabled = this.currentPage <= 0;\n    if (this.rightBtn) this.rightBtn.disabled = this.currentPage >= pageCount - 1;\n\n    // Update markers and counter\n    this._syncMarkers();\n  }\n\n  /**\n   * Wires up keyboard navigation for the carousel container.\n   * Allows users to navigate pages using ArrowLeft and ArrowRight keys.\n   *\n   * @private\n   * @pseudocode\n   * 1. Set the `scrollBehavior` style of `this.container` to \"auto\" for instant scrolling.\n   * 2. Set the `tabIndex` of `this.container` to 0 to make it focusable.\n   * 3. Define `this._onKeydown` as an event handler function for keydown events:\n   *    a. If the event target is not `this.container`, exit the handler.\n   *    b. If the pressed key (`event.key`) is \"ArrowLeft\":\n   *       i. Prevent the default browser action for the keydown event.\n   *       ii. If `event.stopImmediatePropagation` is a function, call it to prevent other listeners on the same element from being called.\n   *       iii. Call `this.prev()` to navigate to the previous page.\n   *    c. Else if the pressed key (`event.key`) is \"ArrowRight\":\n   *       i. Prevent the default browser action for the keydown event.\n   *       ii. If `event.stopImmediatePropagation` is a function, call it.\n   *       iii. Call `this.next()` to navigate to the next page.\n   * 4. Add `this._onKeydown` as a \"keydown\" event listener to `this.container`.\n   *\n   * @returns {void}\n   */\n  _wireKeyboard() {\n    this.container.style.scrollBehavior = \"auto\";\n    this.container.tabIndex = 0;\n    this._onKeydown = (event) => {\n      if (event.target !== this.container) return;\n      if (event.key === \"ArrowLeft\") {\n        event.preventDefault();\n        if (typeof event.stopImmediatePropagation === \"function\") event.stopImmediatePropagation();\n        this.prev();\n      } else if (event.key === \"ArrowRight\") {\n        event.preventDefault();\n        if (typeof event.stopImmediatePropagation === \"function\") event.stopImmediatePropagation();\n        this.next();\n      }\n    };\n    this.container.addEventListener(\"keydown\", this._onKeydown);\n  }\n\n  /**\n   * Wires up swipe (touch and pointer) navigation for the carousel container.\n   * Allows users to navigate pages by swiping left or right.\n   *\n   * @private\n   * @pseudocode\n   * 1. Initialize `startX` to 0 to store the starting X-coordinate of a touch/pointer event.\n   * 2. Track `gestureActive` and `activeKind` to know if a swipe is in progress and its type.\n   * 3. Define an `onEnd` helper function that takes `endX` (the ending X-coordinate):\n   *    a. If `gestureActive` is false, exit.\n   *    b. Reset `gestureActive`, `activeKind`, and `pointerDown`.\n   *    c. Calculate `delta` as the difference between `endX` and `startX`.\n   *    d. If `delta` is greater than `this.threshold`, call `this.prev()` to navigate to the previous page.\n   *    e. Else if `delta` is less than negative `this.threshold`, call `this.next()` to navigate to the next page.\n   * 4. Define a `reset` helper to clear `gestureActive`, `activeKind`, and `pointerDown` without navigating.\n   * 5. Define `this._onTouchStart` as an event handler for \"touchstart\" events:\n   *    a. If `gestureActive` is true, exit.\n   *    b. Set `gestureActive` to true and `activeKind` to \"touch\".\n   *    c. Store the `clientX` of the first touch in `startX`.\n   * 6. Define `this._onTouchEnd` as an event handler for \"touchend\" events:\n   *    a. Call `onEnd` with the `clientX` of the first changed touch.\n   * 7. Define `this._onTouchCancel` as an event handler for \"touchcancel\" events:\n   *    a. Call `reset` to abandon the gesture.\n   * 8. Initialize `pointerDown` to `false` for tracking pointer (mouse) interactions.\n   * 9. Define `this._onPointerDown` as an event handler for \"pointerdown\" events:\n   *    a. Ignore events where `e.pointerType` is \"touch\" or `gestureActive` is true.\n   *    b. Set `gestureActive` to true, `activeKind` to \"pointer\", and `pointerDown` to true.\n   *    c. Store the `clientX` of the pointer event in `startX`.\n   * 10. Define `this._onPointerUp` as an event handler for \"pointerup\" events:\n   *    a. If `pointerDown` is `false`, exit the handler.\n   *    b. Call `onEnd` with the `clientX` of the pointer event.\n   * 11. Define `this._onPointerCancel` as an event handler for \"pointercancel\" events:\n   *    a. Call `reset` to abandon the gesture.\n   * 12. Add event listeners for \"touchstart\", \"touchend\", \"touchmove\", and \"touchcancel\".\n   * 13. Add event listeners for \"pointerdown\", \"pointerup\", and \"pointercancel\".\n   *\n   * @returns {void}\n   */\n  _wireSwipe() {\n    let startX = 0;\n    let gestureActive = false;\n    let activeKind = null;\n    let pointerDown = false;\n\n    const reset = () => {\n      gestureActive = false;\n      if (activeKind === \"pointer\") pointerDown = false;\n      activeKind = null;\n    };\n\n    const onEnd = (endX) => {\n      if (!gestureActive) return;\n      const delta = endX - startX;\n      reset();\n      if (delta > this.threshold) {\n        this.prev();\n      } else if (delta < -this.threshold) {\n        this.next();\n      }\n    };\n\n    this._onTouchStart = (e) => {\n      if (gestureActive) return;\n      gestureActive = true;\n      activeKind = \"touch\";\n      startX = e.touches[0].clientX;\n      if (typeof e.preventDefault === \"function\") e.preventDefault();\n    };\n\n    this._onTouchEnd = (e) => {\n      onEnd(e.changedTouches[0].clientX);\n      if (typeof e.preventDefault === \"function\") e.preventDefault();\n    };\n\n    this._onTouchMove = (e) => {\n      if (typeof e.preventDefault === \"function\") e.preventDefault();\n    };\n\n    this._onTouchCancel = () => {\n      reset();\n    };\n\n    this._onPointerDown = (e) => {\n      if (e.pointerType === \"touch\" || gestureActive) return;\n      gestureActive = true;\n      activeKind = \"pointer\";\n      pointerDown = true;\n      startX = e.clientX;\n    };\n\n    this._onPointerUp = (e) => {\n      if (!pointerDown) return;\n      onEnd(e.clientX);\n    };\n\n    this._onPointerCancel = () => {\n      reset();\n    };\n\n    this.container.addEventListener(\"touchstart\", this._onTouchStart, { passive: false });\n    this.container.addEventListener(\"touchend\", this._onTouchEnd, { passive: false });\n    this.container.addEventListener(\"touchmove\", this._onTouchMove, { passive: false });\n    this.container.addEventListener(\"touchcancel\", this._onTouchCancel);\n    this.container.addEventListener(\"pointerdown\", this._onPointerDown);\n    this.container.addEventListener(\"pointerup\", this._onPointerUp);\n    this.container.addEventListener(\"pointercancel\", this._onPointerCancel);\n  }\n  \"\";\n\n  /**\n   * Wires up scroll event synchronization for the carousel container.\n   * This method ensures that the `currentPage` and UI are updated when the user scrolls the carousel.\n   * It uses both immediate and `requestAnimationFrame`-based synchronization for responsiveness.\n   *\n   * @private\n   * @pseudocode\n   * 1. Define `this._onScroll` as an event handler function for \"scroll\" events:\n   *    a. If `this._suppressScrollSync` is true, exit the handler (programmatic scroll is in progress).\n   *    b. If `this.metrics.pageWidth` is less than or equal to 0, recalculate `this.metrics` using `getPageMetrics`.\n   *    c. Destructure `pageWidth` and `pageCount` from `this.metrics`.\n   *    d. If `pageWidth` is greater than 0:\n   *       i. Calculate `maxScroll` (maximum scrollable width).\n   *       ii. Calculate `remaining` scroll distance.\n   *       iii. Determine the `page` based on `scrollLeft` and `pageWidth`, handling the last page edge case.\n   *       iv. Update `this.currentPage` by clamping the calculated `page` within valid bounds.\n   *       v. Call `this.update()` to refresh the UI immediately.\n   *    e. If a previous `_rafId` exists, cancel the associated animation frame.\n   *    f. Request a new animation frame (`this._rafId`) to perform a follow-up synchronization:\n   *       i. In the animation frame callback, if `this._suppressScrollSync` is true, exit.\n   *       ii. If `this.metrics.pageWidth` is less than or equal to 0, recalculate `this.metrics`.\n   *       iii. Destructure `pageWidth` (`pw`) and `pageCount` (`pc`) from `this.metrics`.\n   *       iv. If `pw` is less than or equal to 0, exit.\n   *       v. Recalculate `maxScroll`, `remaining`, and `page` based on current scroll position and metrics.\n   *       vi. Update `this.currentPage` by clamping the calculated `page`.\n   *       vii. Call `this.update()` to refresh the UI.\n   * 2. Add `this._onScroll` as a \"scroll\" event listener to `this.container`.\n   *\n   * @returns {void}\n   */\n  _wireScrollSync() {\n    this._onScroll = () => {\n      if (this._suppressScrollSync) return;\n      if (this.metrics.pageWidth <= 0) {\n        this.metrics = getPageMetrics(this.container);\n      }\n      // Immediate sync for tests and snappy UI\n      const { pageWidth, pageCount } = this.metrics;\n      if (pageWidth > 0) {\n        const page = Math.round(this.container.scrollLeft / pageWidth);\n        // (no-op) immediate scroll sync\n        this.currentPage = Math.max(0, Math.min(page, pageCount - 1));\n        this.update();\n      }\n      // Follow-up rAF sync to catch any late layout\n      if (this._rafId) cancelAnimationFrame(this._rafId);\n      this._rafId = requestAnimationFrame(() => {\n        if (this._suppressScrollSync) return;\n        if (this.metrics.pageWidth <= 0) {\n          this.metrics = getPageMetrics(this.container);\n        }\n        const { pageWidth: pw, pageCount: pc } = this.metrics;\n        if (pw <= 0) return;\n        const page = Math.round(this.container.scrollLeft / pw);\n        // (no-op) rAF scroll sync\n        this.currentPage = Math.max(0, Math.min(page, pc - 1));\n        this.update();\n      });\n    };\n    this.container.addEventListener(\"scroll\", this._onScroll);\n  }\n\n  /**\n   * Wires up a debounced resize event listener to the window.\n   * This ensures that carousel metrics and markers are re-evaluated and updated\n   * only after the user has finished resizing the window, preventing excessive recalculations.\n   *\n   * @private\n   * @pseudocode\n   * 1. Define `this._onResize` as an event handler function for \"resize\" events:\n   *    a. Clear any existing `this._resizeTimer` to debounce the resize event.\n   *    b. Set `this._resizeTimer` to a new `setTimeout` that will execute after 100 milliseconds:\n   *       i. Store the `oldCount` of pages from `this.metrics.pageCount`.\n   *       ii. Recalculate `this.metrics` by calling `getPageMetrics` on `this.container`.\n   *       iii. If the new `pageCount` is different from `oldCount`:\n   *           1. Remove the existing `markersRoot` from the DOM, if it exists.\n   *           2. Rebuild `markersRoot` by calling `this._buildMarkers()`.\n   *           3. Append the newly built `markersRoot` to `this.wrapper`.\n   *       iv. Set the current page by calling `this.setPage` with `this.currentPage`.\n   * 2. Add `this._onResize` as a \"resize\" event listener to the `window` object.\n   *\n   * @returns {void}\n   */\n  _wireResize() {\n    this._onResize = () => {\n      clearTimeout(this._resizeTimer);\n      this._resizeTimer = setTimeout(() => {\n        const oldCount = this.metrics.pageCount;\n        this.metrics = getPageMetrics(this.container);\n        // Rebuild markers if page count changed\n        if (this.metrics.pageCount !== oldCount) {\n          this.markersRoot?.remove();\n          this.markersRoot = this._buildMarkers();\n          this.wrapper.append(this.markersRoot);\n        }\n        this.setPage(this.currentPage);\n      }, 100);\n    };\n    window.addEventListener(\"resize\", this._onResize);\n  }\n\n  /**\n   * Builds and returns the left (previous) and right (next) navigation buttons for the carousel.\n   * Each button includes an SVG icon and a text label, and is wired to navigate the carousel.\n   *\n   * @private\n   * @pseudocode\n   * 1. Create a new `button` element for the left navigation.\n   * 2. Assign it the class name \"scroll-button left\".\n   * 3. Set its `aria-label` attribute to \"Prev.\".\n   * 4. Set its `innerHTML` to include an SVG icon for \"previous\" and a `span` with the text \"Prev.\".\n   * 5. Add a \"click\" event listener to the left button that calls `this.prev()`.\n   * 6. Create a new `button` element for the right navigation.\n   * 7. Assign it the class name \"scroll-button right\".\n   * 8. Set its `aria-label` attribute to \"Next\".\n   * 9. Set its `innerHTML` to include an SVG icon for \"next\" and a `span` with the text \"Next\".\n   * 10. Add a \"click\" event listener to the right button that calls `this.next()`.\n   * 11. Return an object containing the created `left` and `right` button elements.\n   *\n   * @returns {{left: HTMLElement, right: HTMLElement}} An object containing the left and right button elements.\n   */\n  _buildButtons() {\n    const left = document.createElement(\"button\");\n    left.className = \"scroll-button left\";\n    left.setAttribute(\"aria-label\", \"Prev.\");\n    left.innerHTML =\n      '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" width=\"36px\" viewBox=\"0 -960 960 960\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M560-240 320-480l240-240 56 56-184 184 184 184-56 56Z\"/></svg>' +\n      '<span class=\"label\">Prev.</span>';\n    left.addEventListener(\"click\", () => this.prev());\n\n    const right = document.createElement(\"button\");\n    right.className = \"scroll-button right\";\n    right.setAttribute(\"aria-label\", \"Next\");\n    right.innerHTML =\n      '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"36px\" width=\"36px\" viewBox=\"0 -960 960 960\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M504-480 320-664l56-56 240 240-240 240-56-56 184-184Z\"/></svg>' +\n      '<span class=\"label\">Next</span>';\n    right.addEventListener(\"click\", () => this.next());\n\n    return { left, right };\n  }\n\n  /**\n   * Builds and returns the root element containing the page indicator markers and a page counter.\n   * It reuses an existing markers container if found, otherwise creates a new one.\n   *\n   * @private\n   * @pseudocode\n   * 1. Attempt to find an existing `.scroll-markers` element within `this.wrapper`.\n   * 2. If an existing element is found, reuse it; otherwise, create a new `div` element for the root.\n   * 3. Assign the class name \"scroll-markers\" to the `root` element.\n   * 4. Clear any existing `innerHTML` of the `root` element.\n   * 5. Destructure `pageCount` from `this.metrics`.\n   * 6. Loop from `i = 0` to `pageCount - 1`:\n   *    a. Create a new `span` element for each `marker`.\n   *    b. Assign the class name \"scroll-marker\" to the `marker`.\n   *    c. Append the `marker` to the `root` element.\n   * 7. Create a new `span` element for the `counter`.\n   * 8. Assign the class name \"page-counter\" to the `counter`.\n   * 9. Set the `aria-live` attribute of the `counter` to \"polite\" for accessibility.\n   * 10. Append the `counter` to the `root` element.\n   * 11. Return the `root` element.\n   *\n   * @returns {HTMLElement} The root element containing the scroll markers and page counter.\n   */\n  _buildMarkers() {\n    // If existing markers exist (e.g., older init), reuse container\n    const existing = this.wrapper.querySelector(\".scroll-markers\");\n    const root = existing || document.createElement(\"div\");\n    root.className = \"scroll-markers\";\n    root.innerHTML = \"\";\n\n    const { pageCount } = this.metrics;\n    for (let i = 0; i < pageCount; i++) {\n      const marker = document.createElement(\"span\");\n      marker.className = \"scroll-marker\";\n      root.appendChild(marker);\n    }\n\n    const counter = document.createElement(\"span\");\n    counter.className = \"page-counter\";\n    counter.setAttribute(\"aria-live\", \"polite\");\n    root.appendChild(counter);\n\n    return root;\n  }\n\n  /**\n   * Synchronizes the visual state of the page indicator markers and the page counter\n   * to reflect the current page of the carousel.\n   *\n   * @private\n   * @pseudocode\n   * 1. Destructure `pageCount` from `this.metrics`.\n   * 2. Query all elements with the class \"scroll-marker\" within `this.markersRoot` to get the `markers` list.\n   * 3. Iterate over each `marker` in the `markers` list along with its `index` (`i`):\n   *    a. Toggle the \"active\" class on the `marker` based on whether its `index` (`i`) matches `this.currentPage`.\n   * 4. Query the element with the class \"page-counter\" within `this.markersRoot` to get the `counter`.\n   * 5. If `counter` exists, update its `textContent` to display the current page number (1-based) and the total `pageCount`.\n   *\n   * @returns {void}\n   */\n  _syncMarkers() {\n    const { pageCount } = this.metrics;\n    const markers = this.markersRoot.querySelectorAll(\".scroll-marker\");\n    markers.forEach((m, i) => m.classList.toggle(\"active\", i === this.currentPage));\n    const counter = this.markersRoot.querySelector(\".page-counter\");\n    if (counter) counter.textContent = `Page ${this.currentPage + 1} of ${pageCount}`;\n  }\n}","qaContext":"Why: Central controller for carousel navigation and indicators. How: _afterConnectedInit(); } /** * Cleans up the carousel controller by removing all event listeners and DOM elements.","embedding":[-0.062,-0.068,0,0.051,0.016,0.08,0.048,0.053,-0.01,0.012,0.054,0.037,-0.012,-0.082,-0.03,0.029,-0.015,0.046,-0.067,0.028,0.047,-0.131,0.037,0.01,-0.075,0.135,-0.007,-0.141,-0.041,-0.018,-0.034,-0.091,-0.128,-0.064,-0.073,0.011,-0.087,-0.089,-0.063,-0.136,0.028,0.039,-0.036,-0.005,0.047,-0.018,-0.064,-0.022,-0.026,0.073,0.05,0.005,0.086,-0.004,-0.016,0.057,-0.01,0.017,0.089,0.046,0.064,0.025,0.08,-0.044,-0.001,-0.022,-0.004,0.011,-0.008,0.025,-0.027,0.031,0.195,-0.03,0.043,-0.125,-0.097,-0.034,-0.06,-0.09,-0.007,-0.028,-0.024,0.066,0.105,-0.017,0.024,-0.026,0.002,-0.085,-0.058,0.02,-0.076,-0.008,0.024,0.059,-0.109,-0.03,-0.078,0.117,-0.04,0.022,-0.018,0.083,0.01,-0.067,-0.081,-0.004,-0.141,0.088,0.019,0.03,-0.028,0.041,-0.031,-0.073,0.007,0,0.089,0.094,0.161,0.015,-0.009,-0.077,0.06,0.043,0.002,0,-0.043,-0.109,-0.099,0.081,0.071,0.096,0.052,0.077,-0.003,0.023,0.111,-0.036,-0.025,0.051,0.023,-0.136,0,0.073,0.04,-0.096,0.013,-0.048,-0.118,-0.018,0.053,0.15,-0.108,0.214,-0.124,-0.008,0.095,0.01,-0.009,-0.034,0.06,-0.084,-0.024,-0.022,-0.015,-0.047,-0.025,-0.154,-0.109,-0.093,-0.131,-0.04,0.009,0.077,0.078,-0.087,-0.055,0.053,-0.034,-0.133,0.008,-0.101,-0.068,0.072,0.046,0.017,-0.115,0.045,-0.057,-0.062,-0.004,0.075,-0.005,0.01,0.034,-0.206,-0.02,-0.01,0.196,-0.012,0.047,-0.001,-0.051,0.043,-0.081,-0.111,-0.037,-0.109,-0.096,0.065,0.136,-0.138,0.002,-0.046,-0.134,0.095,0.034,0.012,-0.011,-0.037,-0.116,0,0.018,0.073,-0.061,0.077,0.017,-0.024,-0.02,0.124,-0.044,-0.068,-0.035,0.055,-0.086,-0.013,-0.015,0.185,-0.001,0.001,0.095,-0.02,0.04,0.145,-0.006,0.03,-0.061,0.036,0.05,0.149,-0.035,0.026,-0.003,-0.051,-0.008,0.046,0.032,-0.151,0.002,0.012,-0.085,0.104,0.1,-0.177,-0.01,0.004,0.035,0.016,0.017,0.176,-0.101,-0.003,-0.007,-0.117,-0.081,-0.121,0.028,0.074,0.055,-0.098,0.054,0.008,0.066,-0.097,0.081,0.047,0.156,0.046,-0.013,0.02,0.044,0.191,-0.096,0.125,0.13,-0.195,0.082,0.003,0.098,-0.09,0.162,-0.184,-0.103,-0.043,0.065,-0.208,0.037,0.105,-0.136,0.01,0.046,0,-0.13,0.049,0.09,-0.037,-0.132,0,-0.07,0.057,-0.017,-0.066,-0.009,-0.013,0.069,0.066,-0.075,-0.034,0.092,0.111,0.07,0.058,0.029,-0.127,-0.01,0.062,-0.118,-0.062,0.015,0.029,0.065,0.026,0.153,-0.074,0.048,0.118,0,-0.027,-0.021,-0.022,0.046,0.097,0.014,-0.048,-0.084,-0.041,0.083,0.115,0.065,0.031,-0.075,0.018,0.046,0.003,-0.064,-0.005,0.044,-0.035,-0.167,-0.076,-0.067,0.008,0.072,-0.102,0.07,0.054,0.029,0.118,-0.073,0.03,-0.042,0.039],"source":"src/helpers/carousel/controller.js [CarouselController]","tags":["code","how","class","utility","./metrics.js","getPageMetrics","_buildButtons","_buildMarkers","append","_wireKeyboard","_wireSwipe","_wireScrollSync","_wireResize","update","_afterConnectedInit","removeEventListener","remove","setPage","requestAnimationFrame","max","min","scrollTo","addEventListener","_syncMarkers","preventDefault","stopImmediatePropagation","prev","next","reset","onEnd","round","cancelAnimationFrame","clearTimeout","setTimeout","createElement","setAttribute","querySelector","appendChild","querySelectorAll","forEach","toggle","state-management"],"metadata":{"construct":"class","role":"utility","graph":{"module":"src/helpers/carousel/controller.js","node":"CarouselController"},"patterns":[],"relations":{"imports":["./metrics.js"],"calls":["getPageMetrics","_buildButtons","_buildMarkers","append","_wireKeyboard","_wireSwipe","_wireScrollSync","_wireResize","update","_afterConnectedInit","removeEventListener","remove","setPage","requestAnimationFrame","max","min","scrollTo","addEventListener","_syncMarkers","preventDefault","stopImmediatePropagation","prev","next","reset","onEnd","round","cancelAnimationFrame","clearTimeout","setTimeout","createElement","setAttribute","querySelector","appendChild","querySelectorAll","forEach","toggle"]}},"version":1},
{"id":"cards.js-appendCards","text":"Generate judoka cards and append them to the container.\n\n@param {HTMLElement} container - Carousel container element.\n@param {Judoka[]} judokaList - Array of judoka objects.\n@param {Object} gokyoLookup - Lookup object for gokyo data.\n@returns {{ ready: Promise<void> }} Resolves when initial cards mount and listeners attach (not after images load).\n1. Initialize an empty array `pendingReplacements` to track asynchronous card replacement tasks.\n2. Iterate through each `judoka` object in `judokaList`:\n   a. Initialize `entry` with the current `judoka`.\n   b. Validate `judoka` using `hasRequiredJudokaFields()`:\n      i. If validation fails, log an error with missing fields using `getMissingJudokaFields()`.\n      ii. Set `entry` to a fallback judoka obtained asynchronously via `getFallbackJudoka()`.\n   c. Generate a `card` element asynchronously using `generateJudokaCard(entry, gokyoLookup, container)`.\n   d. If `card` generation fails (returns `null` or `undefined`):\n      i. Log a warning.\n      ii. Obtain another fallback judoka.\n      iii. Attempt to generate a `card` again with the new fallback.\n   e. If a `card` is successfully generated:\n      i. Query for an `<img>` element within the `card`.\n      ii. If an `img` element is found:\n         1. Add an \"error\" event listener to the `img` element (set to run `once`).\n         2. Inside the error listener, define an asynchronous `task`:\n            a. Obtain a fallback judoka.\n            b. Generate a `fallbackCard` without appending it to the container.\n            c. If `fallbackCard` is valid and the original `card` is still in the DOM, replace the original `card` with `fallbackCard`.\n            d. If the original `card` is no longer in the DOM but its parent exists, append the `fallbackCard` to the parent.\n            e. Catch and log any errors during the fallback swap.\n         3. Push this `task` Promise into `pendingReplacements`.\n      iii. Set `card.tabIndex` to 0 to make it focusable.\n      iv. Set `card.setAttribute(\"role\", \"listitem\")`.\n      v. Set `card.setAttribute(\"aria-label\", card.getAttribute(\"data-judoka-name\") || \"Judoka card\")` using the judoka's name or a generic label.\n      vi. Append the `card` to the `container`.\n3. After the loop, define an asynchronous `ready` task that:\n   a. Yields control to the event loop using `await Promise.resolve()` so synchronously dispatched image error events can register their tasks.\n   b. Awaits all tasks in `pendingReplacements` with `Promise.allSettled()`.\n4. Return an object containing the `ready` Promise.\n\nexport function appendCards(container, judokaList, gokyoLookup) {\n  // Track any in-flight replacements triggered during this execution.\n  const pendingReplacements = [];\n\n  const ready = (async () => {\n    for (const judoka of judokaList) {\n      let entry = judoka;\n      if (!hasRequiredJudokaFields(judoka)) {\n        console.error(\"Invalid judoka object:\", judoka);\n        const missing = getMissingJudokaFields(judoka).join(\", \");\n        console.error(`Missing fields: ${missing}`);\n        entry = await getFallbackJudoka();\n      }\n      let card = await generateJudokaCard(entry, gokyoLookup, container);\n      if (!card) {\n        console.warn(\"Failed to generate card for judoka:\", entry);\n        const fallback = await getFallbackJudoka();\n        card = await generateJudokaCard(fallback, gokyoLookup, container);\n      }\n      if (card) {\n        const img = card.querySelector(\"img\");\n        if (img) {\n          // Handle portrait load errors by swapping to a fallback card, but\n          // do not block on image load events while building the carousel.\n          img.addEventListener(\n            \"error\",\n            () => {\n              // Start the replacement asynchronously and track it so that\n              // appendCards can await if the error occurs before it returns.\n              const task = (async () => {\n                try {\n                  const fallback = await getFallbackJudoka();\n                  // Build a replacement card without auto-appending to container.\n                  const fallbackCard = await generateJudokaCard(fallback, gokyoLookup);\n                  if (fallbackCard) {\n                    const parent = container || card.parentElement;\n                    if (parent && parent.contains(card)) {\n                      parent.replaceChild(fallbackCard, card);\n                    } else if (parent) {\n                      parent.appendChild(fallbackCard);\n                    }\n                  }\n                } catch (err) {\n                  console.error(\"Failed to swap to fallback card\", err);\n                }\n              })();\n              pendingReplacements.push(task);\n            },\n            { once: true }\n          );\n        }\n        card.tabIndex = 0;\n        card.setAttribute(\"role\", \"listitem\");\n        card.setAttribute(\"aria-label\", card.getAttribute(\"data-judoka-name\") || \"Judoka card\");\n        container.appendChild(card);\n      }\n    }\n    // Give the event loop a turn so any synchronously dispatched image\n    // error events can register tasks, then await them.\n    await Promise.resolve();\n    if (pendingReplacements.length) {\n      await Promise.allSettled(pendingReplacements);\n    }\n  })();\n\n  return { ready };\n}","qaContext":"Why: Generate judoka cards and append them to the container. How: Iterate through each `judoka` object in `judokaList`: a.","embedding":[-0.138,0.148,-0.033,0.11,-0.075,-0.043,0.028,0.039,0.103,-0.131,0.067,-0.068,0.139,-0.032,-0.028,-0.035,-0.01,0.078,-0.134,0.014,0.093,-0.085,0.066,0.037,-0.102,0.093,-0.103,-0.106,-0.032,-0.042,-0.028,0.084,-0.121,-0.004,0.014,0.181,-0.159,0.02,0.03,-0.022,0.015,0.099,0.04,-0.034,0.139,-0.061,-0.049,-0.108,-0.069,0.016,-0.14,-0.02,-0.057,0.129,0.145,0.036,-0.01,0.01,-0.109,0.005,0.119,-0.012,0.021,0.014,0.023,-0.088,-0.029,0.038,0.039,0.124,-0.035,0.062,0.02,0.036,-0.07,0.106,0.034,-0.003,-0.027,-0.093,-0.081,-0.081,0.04,-0.042,0.065,0.036,-0.007,0.025,0.082,-0.12,0.066,-0.043,0.136,0.108,0.064,0.039,0.078,-0.014,-0.001,0.097,0.017,-0.027,0.104,0.02,0.097,-0.002,-0.12,-0.098,-0.03,-0.082,-0.087,0.053,-0.001,0.023,-0.093,0.094,-0.015,-0.076,-0.077,0.086,0.211,0,0.142,-0.006,-0.007,-0.137,-0.02,0,0.038,-0.124,0.05,-0.014,-0.028,-0.014,0.048,-0.111,-0.111,0.056,-0.028,0.124,-0.096,0.007,0.047,-0.01,-0.121,0.085,0.074,0.064,0.078,-0.006,-0.091,-0.023,0.039,0.174,0.016,-0.102,-0.122,0.02,0.032,-0.097,-0.131,0.039,-0.025,-0.057,0.03,-0.055,-0.133,-0.106,0.025,-0.038,-0.061,-0.027,0.086,-0.197,-0.021,0.086,0.143,0.057,0.016,0.017,0.132,-0.104,-0.09,-0.009,0.024,0.109,0.074,0.048,-0.022,-0.085,-0.16,0.005,0.01,0.059,-0.026,-0.126,-0.006,-0.088,-0.012,-0.057,-0.034,-0.001,-0.006,-0.134,-0.097,-0.031,-0.237,-0.063,-0.07,0.019,-0.216,0.043,-0.006,0.229,0.125,-0.128,-0.165,0.158,0.061,0.083,-0.006,-0.045,0.069,0,0.059,-0.047,-0.025,0.148,0.139,-0.082,0.094,0.098,-0.052,-0.194,-0.12,-0.032,-0.057,-0.061,-0.063,0.143,-0.031,0.001,-0.053,0.048,0.142,0.199,0.015,0.055,-0.174,0.156,0.115,0.01,-0.046,-0.116,0.003,-0.149,-0.187,0.147,0.125,-0.086,-0.017,0.07,-0.084,0.051,0.091,0.039,-0.049,0.144,-0.003,-0.107,-0.105,0.121,0.152,-0.068,-0.082,-0.154,-0.103,0.05,-0.041,0.056,0.125,-0.107,0.033,0.111,-0.099,-0.129,0.125,-0.077,0.094,0.039,-0.133,-0.031,-0.001,0.09,-0.036,0.112,0.054,-0.028,0.116,0.013,-0.059,-0.068,0.16,-0.126,-0.159,0.075,0.057,-0.027,0.02,0.031,0.006,0.053,0.061,-0.112,0.038,0.018,0.134,-0.015,-0.032,0,-0.108,-0.028,-0.026,0.032,0.061,-0.046,-0.002,-0.044,-0.05,-0.219,0.165,0.099,-0.007,0.049,-0.011,-0.111,0.048,0.078,-0.117,-0.051,0.037,-0.091,-0.019,0.051,0.046,0.003,0.036,0.011,0.075,-0.001,0.028,-0.051,0.086,0.164,-0.017,0.052,0.013,-0.005,-0.013,0.026,0.061,-0.099,-0.097,-0.044,0.047,-0.055,-0.08,-0.164,0.085,-0.071,-0.104,-0.219,-0.071,0.031,0.047,-0.075,0.257,-0.042,0.131,0.071,0.057,-0.045,0.016,0.058],"source":"src/helpers/carousel/cards.js [appendCards]","tags":["code","what","function","utility","../cardBuilder.js","../judokaUtils.js","../judokaValidation.js","hasRequiredJudokaFields","error","join","getMissingJudokaFields","getFallbackJudoka","generateJudokaCard","warn","querySelector","addEventListener","contains","replaceChild","appendChild","push","setAttribute","getAttribute","resolve","allSettled","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/carousel/cards.js","node":"appendCards"},"patterns":[],"relations":{"imports":["../cardBuilder.js","../judokaUtils.js","../judokaValidation.js"],"calls":["hasRequiredJudokaFields","error","join","getMissingJudokaFields","getFallbackJudoka","generateJudokaCard","warn","querySelector","addEventListener","contains","replaceChild","appendChild","push","setAttribute","getAttribute","resolve","allSettled"]}},"version":1},
{"id":"accessibility.js-applyAccessibilityImprovements","text":"Apply basic accessibility adjustments to a carousel wrapper.\n\n@param {HTMLElement} wrapper - Carousel wrapper element.\n1. Select all `.scroll-button` elements and call `ensureTouchTargetSize` on each.\n2. Update card text color to ensure contrast against backgrounds.\n\nexport function applyAccessibilityImprovements(wrapper) {\n  const buttons = wrapper.querySelectorAll(\".scroll-button\");\n  buttons.forEach((button) => ensureTouchTargetSize(button));\n  const cards = wrapper.querySelectorAll(\".judoka-card\");\n  cards.forEach((card) => {\n    card.style.color = \"var(--color-text-inverted)\";\n  });\n}","qaContext":"Why: Apply basic accessibility adjustments to a carousel wrapper. How: @param {HTMLElement} wrapper - Carousel wrapper element.","embedding":[-0.011,0.137,0.005,0.112,0.016,0.04,0.104,0.025,-0.072,-0.133,-0.143,0.056,-0.065,-0.096,0.035,0.013,0.019,0.077,-0.091,0.062,0.033,-0.128,0.117,-0.007,-0.279,0.127,0.044,-0.098,-0.029,-0.054,-0.116,0.063,0.137,0.012,-0.112,-0.109,-0.199,0.01,-0.086,0.034,-0.014,0.023,-0.096,-0.022,0.189,-0.078,0.081,0.066,-0.058,0.082,0.089,-0.071,0.22,-0.126,-0.05,-0.02,0.056,-0.08,0.118,0.014,0.102,0.033,0.082,0.111,-0.092,0.076,0.156,0.096,-0.149,0.068,0.157,0.008,0.271,0.038,0.052,-0.019,-0.039,0.023,0.038,0.078,-0.114,-0.212,-0.009,0.135,0.085,0.188,0.022,-0.093,-0.162,-0.11,0.002,0.053,-0.051,0.012,-0.124,-0.064,-0.065,-0.15,-0.113,0.066,-0.012,-0.015,0.134,0.043,-0.002,-0.01,-0.033,0.042,-0.079,0.076,0.102,-0.003,0.03,0.04,-0.165,0.008,0.04,-0.07,0.122,0.094,0.179,0.068,0.041,-0.145,-0.017,-0.005,0.07,0,-0.003,-0.139,-0.053,-0.031,0.05,0.042,0.043,-0.205,-0.164,0.105,0.25,0.113,-0.048,-0.006,-0.043,-0.02,-0.131,0.015,0.059,-0.004,-0.035,-0.107,-0.033,0.009,-0.203,0.078,-0.07,0.05,0.191,-0.001,-0.001,0.102,0.072,0.019,0.01,0.031,-0.054,-0.068,-0.073,0.092,-0.095,-0.008,0.109,-0.127,-0.022,0.08,0.27,-0.059,0.069,0.084,-0.097,0.029,0.106,-0.24,0.116,-0.146,0.146,0.214,0.003,-0.058,-0.108,-0.094,-0.04,-0.035,0.092,0.148,0.002,-0.03,-0.14,-0.122,0.15,0.001,0.004,-0.002,-0.004,-0.038,-0.041,0.138,-0.029,-0.047,-0.162,-0.043,-0.151,-0.008,-0.04,0.037,-0.013,0.054,0.043,0.058,0.044,0.102,-0.033,-0.139,-0.054,0,-0.019,0.096,-0.035,0.213,-0.029,0.007,-0.028,0.313,0.181,-0.238,0.054,0.12,-0.135,-0.139,-0.101,0.118,0.066,0.151,-0.065,-0.026,0.158,0.009,0.084,0.13,-0.112,0.049,0.057,0.121,-0.01,-0.139,0.045,-0.099,-0.008,0.223,-0.002,-0.086,-0.123,0.078,-0.049,0.108,-0.175,-0.135,-0.024,-0.039,-0.006,-0.05,-0.119,0.041,0.075,-0.102,-0.151,-0.123,0.03,-0.165,0.039,0.086,-0.001,-0.117,0.126,0.109,0.027,-0.054,0.084,-0.151,-0.024,0.171,-0.076,-0.108,0.037,0.235,0.04,0.065,0.101,-0.039,-0.084,-0.061,0.163,0.04,0.153,-0.124,0.02,-0.003,0.05,-0.163,-0.075,0.088,-0.118,-0.209,0.115,0.017,-0.136,0.063,0.126,-0.16,-0.101,0,0.023,-0.012,-0.119,-0.025,-0.045,-0.038,0.013,-0.124,-0.093,-0.055,0.174,0.268,0.088,0.024,0.022,0.01,-0.056,0.111,-0.081,0.014,0.082,-0.027,0.155,0.099,0.13,-0.049,-0.123,-0.067,0.044,0.052,0.008,-0.126,0.075,0.071,0.072,-0.097,-0.178,-0.092,0,0.209,0.032,-0.068,-0.085,0.051,-0.087,-0.129,-0.045,0.035,-0.034,0.025,0.103,-0.151,-0.11,0.049,-0.047,-0.127,0.117,0.202,-0.006,0.15,-0.115,-0.009,0.045,0.053],"source":"src/helpers/carousel/accessibility.js [applyAccessibilityImprovements]","tags":["code","what","function","utility","./focus.js","../lazyPortrait.js","./controller.js","querySelectorAll","forEach","ensureTouchTargetSize"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/carousel/accessibility.js","node":"applyAccessibilityImprovements"},"patterns":[],"relations":{"imports":["./focus.js","../lazyPortrait.js","./controller.js"],"calls":["querySelectorAll","forEach","ensureTouchTargetSize"]}},"version":1},
{"id":"accessibility.js-initAccessibility","text":"Initialize carousel accessibility and interaction helpers.\n\n@param {HTMLElement} container - Carousel container element.\n@param {HTMLElement} wrapper - Carousel wrapper element.\n1. Check if `wrapper` exists and if `wrapper._carouselController` is not already set.\n   a. If these conditions are met, instantiate a new `CarouselController` with the `container`, `wrapper`, and an empty options object (using default threshold).\n   b. Assign this new controller instance to `wrapper._carouselController`. This ensures a unified controller is available for consistent navigation behavior, especially if it wasn't created by the carousel builder.\n2. Call `setupFocusHandlers(container)` to set up focus management for the carousel cards.\n3. Call `applyAccessibilityImprovements(wrapper)` to apply general accessibility adjustments to the carousel wrapper and its controls.\n4. Call `setupLazyPortraits(container)` to enable lazy loading for judoka portrait images within the carousel.\n\nexport function initAccessibility(container, wrapper) {\n  // Ensure a unified controller exists for consistent navigation behavior.\n  if (wrapper && !wrapper._carouselController) {\n    // Instantiate with default threshold; builder may already have created one.\n    wrapper._carouselController = new CarouselController(container, wrapper, {});\n  }\n  setupFocusHandlers(container);\n  applyAccessibilityImprovements(wrapper);\n  setupLazyPortraits(container);\n}","qaContext":"Why: Initialize carousel accessibility and interaction helpers. How: If these conditions are met, instantiate a new `CarouselController` with the `container`, `wrapper`, and an empty options object...","embedding":[-0.069,-0.018,-0.026,0.065,0.015,0.09,0.022,0.021,-0.089,-0.05,0.086,0.025,0.052,-0.001,0.068,0.025,0.086,-0.01,-0.037,0.108,0.081,-0.138,0.026,-0.004,-0.222,0.04,-0.072,-0.072,0.038,-0.021,-0.082,-0.015,-0.113,-0.039,-0.018,-0.04,-0.118,-0.103,-0.104,-0.108,0.024,0.051,-0.016,-0.092,0.097,-0.074,0.05,-0.049,-0.028,0.049,-0.012,0.05,0.194,-0.085,-0.001,-0.039,0.035,0.029,0.054,0.026,-0.015,0.05,0.059,-0.014,-0.065,0.036,0.033,0.046,-0.057,0.134,-0.002,-0.038,0.18,0.008,0.103,-0.101,-0.044,-0.052,-0.037,-0.101,0.01,-0.023,0.003,-0.027,0.009,0.028,-0.053,-0.063,0.054,-0.096,0.031,-0.083,-0.026,0.053,0.066,-0.099,-0.058,-0.059,-0.129,0.066,-0.165,-0.026,0.086,0.112,0.04,-0.043,0.021,0.076,-0.103,0.077,-0.018,-0.062,0.035,0.085,-0.087,-0.091,-0.035,-0.067,0.006,0.05,0.108,0.005,0.156,-0.046,0.055,-0.021,-0.103,0,-0.058,-0.091,0,0.079,0.057,-0.026,0.081,0.009,-0.049,0.075,0.167,0.058,-0.095,0.025,0.008,-0.017,-0.042,0.058,0.028,-0.056,0.027,-0.024,-0.051,-0.084,-0.043,0.033,-0.085,0.052,0.033,0.05,0.025,-0.015,0.023,-0.035,0.054,-0.107,-0.028,-0.057,-0.12,0.024,-0.069,-0.133,0.078,-0.007,-0.069,-0.013,0.131,0.189,0.026,0.047,-0.007,0.07,0.004,-0.122,0.03,-0.114,-0.084,0.049,0.046,-0.087,-0.057,-0.078,-0.009,-0.079,-0.011,0.11,-0.026,-0.029,0.04,-0.12,0,-0.039,-0.047,0.027,0.202,-0.065,-0.024,-0.037,0,-0.072,-0.077,-0.028,-0.061,0.058,-0.046,-0.04,0.043,0.049,-0.074,0.054,0.037,0.097,-0.066,0.011,0.026,0,0.081,-0.012,0.002,0.056,0.054,-0.069,0.027,0.061,0.072,-0.19,-0.013,0.037,-0.019,-0.014,-0.12,0.052,0.002,-0.039,0.077,0.113,0.149,0.072,0.012,0.024,-0.115,0.068,0.003,0.14,0.024,-0.022,-0.006,-0.061,0.006,0.005,0.023,-0.009,-0.134,0.064,-0.179,0.036,0.022,-0.068,-0.042,0.097,0.04,-0.026,0.048,0.105,0.073,-0.003,-0.102,-0.111,0.042,-0.064,0.043,0.078,0.076,-0.106,0.049,0.042,0.093,-0.047,0.007,-0.04,0.037,0.031,0.029,-0.041,0.148,0.092,0.013,0.025,0.135,-0.119,-0.012,0.021,0.159,-0.037,0.176,-0.223,-0.079,-0.045,0.05,-0.193,-0.113,0.118,-0.083,-0.08,0.095,0.073,-0.01,0.061,0.081,-0.005,-0.151,0,0.014,0.057,0.02,-0.095,-0.083,-0.023,0.051,-0.026,-0.121,-0.016,0.139,0.172,0.041,0.008,0.055,-0.036,0.023,0.067,-0.118,-0.097,-0.046,-0.075,0.098,0.038,0.037,-0.036,-0.101,-0.069,0.014,0.007,0.019,-0.042,-0.002,0.129,-0.051,0.015,-0.153,-0.075,0.013,0.027,0.154,-0.008,-0.088,-0.032,-0.011,0.039,0.017,0.054,-0.011,0.03,-0.1,-0.135,-0.066,0.101,0.059,-0.032,0.201,-0.002,0.025,0.127,0.011,0.005,0.03,0.064],"source":"src/helpers/carousel/accessibility.js [initAccessibility]","tags":["code","what","function","utility","./focus.js","../lazyPortrait.js","./controller.js","setupFocusHandlers","applyAccessibilityImprovements","setupLazyPortraits"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/carousel/accessibility.js","node":"initAccessibility"},"patterns":[],"relations":{"imports":["./focus.js","../lazyPortrait.js","./controller.js"],"calls":["setupFocusHandlers","applyAccessibilityImprovements","setupLazyPortraits"]}},"version":1},
{"id":"setupCountryToggle.js-handleToggleClick","text":"Handle a click on the country toggle button.\n\n@param {HTMLButtonElement} toggleButton\n@param {Element} panel\n@param {Element} listContainer\n@returns {Promise<void>}\n1. Determine if panel was open.\n2. Toggle the panel state.\n3. If opening for the first time, load country slider.\n\nexport async function handleToggleClick(toggleButton, panel, listContainer) {\n  const wasOpen = panel.classList.contains(\"open\");\n  toggleCountryPanel(toggleButton, panel);\n  if (!wasOpen && listContainer.children.length === 0) {\n    await createCountrySlider(listContainer);\n  }\n}","qaContext":"Why: Handle a click on the country toggle button. How: @param {HTMLButtonElement} toggleButton @param {Element} panel @param {Element} listContainer @returns {Promise<void>} 1.","embedding":[-0.137,-0.099,-0.034,0.176,0.082,0.098,0.081,0.008,-0.034,0.02,-0.075,-0.071,-0.107,0.048,0.078,0.029,-0.09,-0.216,0.132,-0.106,0.137,-0.081,-0.005,-0.079,-0.034,0.003,0.005,-0.118,-0.03,0.102,0.032,0.006,-0.135,-0.061,0.075,0.015,-0.07,-0.04,-0.067,-0.009,0.098,-0.025,-0.024,-0.283,0.071,-0.016,0.061,0.105,0.003,0.057,0.123,0.047,0.108,-0.296,-0.001,0.075,0.082,0.015,-0.068,0.063,-0.097,-0.131,-0.008,-0.016,0.044,0.075,-0.063,0.036,-0.034,-0.07,0.004,-0.036,0.064,0.162,-0.045,-0.258,-0.029,0.048,0.028,-0.062,0.125,-0.018,0.016,-0.216,0.024,0.163,0.077,-0.009,0.006,-0.006,-0.023,0.022,-0.005,0.113,0.003,0.068,-0.042,0.038,-0.117,0.051,0.09,-0.151,0.014,0.051,-0.093,-0.042,0.017,0.016,-0.077,0.082,0.027,0.123,0.115,0.004,-0.067,-0.232,0.137,0.042,0.081,-0.059,0.172,-0.003,0.028,-0.054,-0.026,0.014,0.037,0,0.04,-0.147,-0.051,0.09,-0.022,-0.022,0.166,0.098,-0.125,0.065,0.092,-0.028,-0.021,-0.072,0.039,0.032,-0.018,0.064,0.101,-0.052,-0.041,-0.045,0.085,0.055,0.033,-0.006,-0.107,-0.008,-0.163,-0.02,0.055,-0.003,0.015,0.004,0.025,-0.04,-0.028,-0.11,-0.08,-0.092,-0.038,-0.087,0.081,0.08,-0.09,-0.076,0.112,0.033,-0.018,0.122,-0.075,0.101,-0.044,-0.216,0.135,0.048,0.004,0.132,0.217,0.042,-0.015,-0.031,0.004,-0.115,-0.031,0.065,0.112,-0.004,-0.102,-0.101,0.051,-0.09,0.1,0.055,0.254,0.127,-0.095,-0.046,0.012,-0.182,0.091,-0.191,-0.066,0.214,-0.026,0.083,0.041,-0.075,0.064,0.06,-0.088,-0.143,0.042,0.027,0.047,0,0.176,0.083,0.02,-0.087,-0.068,-0.086,-0.063,0.044,-0.081,0.025,0.102,0.013,0.223,-0.002,-0.067,0.202,0.094,0.02,-0.073,0.033,0.101,-0.03,-0.024,-0.026,-0.204,-0.03,0.103,-0.093,0.045,-0.074,0.03,-0.08,0.02,0.045,-0.029,-0.118,0.005,-0.046,-0.061,-0.024,-0.077,0.022,0.034,0.063,-0.158,-0.04,0.003,0.194,-0.021,-0.052,-0.147,-0.056,-0.056,-0.072,-0.008,0.026,0.009,-0.111,0.075,-0.083,-0.041,-0.101,0.029,0.13,0.096,-0.122,-0.093,0.189,0.105,0.078,0.081,-0.077,0.088,-0.182,-0.006,-0.01,0.096,-0.153,0.112,0.035,0.117,-0.129,0.073,-0.325,-0.03,0.098,0.038,-0.009,0.12,0.103,-0.121,-0.028,0.122,-0.04,-0.045,0,-0.162,-0.03,0.056,-0.21,-0.153,-0.027,0.03,0.033,-0.06,0.05,0.045,0.086,0.11,0.043,-0.029,0.17,-0.032,0.215,0.042,0.099,0.085,-0.052,0.143,0.103,0.021,0.017,-0.034,0.045,0.169,0.045,-0.088,-0.103,0.048,0.061,-0.084,0.069,-0.108,-0.051,0.126,0.064,0.056,-0.093,-0.023,0.138,-0.158,-0.065,-0.065,-0.051,0.041,-0.023,-0.167,-0.08,-0.153,0.002,0.071,-0.037,-0.077,-0.001,0.07,0.18,-0.067,-0.004,-0.067,0],"source":"src/helpers/browse/setupCountryToggle.js [handleToggleClick]","tags":["code","what","function","utility","../countrySlider.js","../countryPanel.js","./handleKeyboardNavigation.js","contains","toggleCountryPanel","createCountrySlider","state-management"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/browse/setupCountryToggle.js","node":"handleToggleClick"},"patterns":[],"relations":{"imports":["../countrySlider.js","../countryPanel.js","./handleKeyboardNavigation.js"],"calls":["contains","toggleCountryPanel","createCountrySlider"]}},"version":1},
{"id":"setupCountryToggle.js-handlePanelKeydown","text":"Handle keydown interactions within the country panel.\n\n@param {KeyboardEvent} event\n@param {HTMLButtonElement} toggleButton\n@param {Element} panel\n@param {Element} listContainer\n1. If Escape, close the panel.\n2. If ArrowRight/ArrowLeft, delegate to keyboard navigation helper.\n\nexport function handlePanelKeydown(event, toggleButton, panel, listContainer) {\n  if (event.key === \"Escape\") {\n    toggleCountryPanel(toggleButton, panel, false);\n  }\n\n  if (event.key === \"ArrowRight\" || event.key === \"ArrowLeft\") {\n    handleKeyboardNavigation(event, listContainer, \"flag-button\");\n  }\n}","qaContext":"Why: Handle keydown interactions within the country panel. How: @param {KeyboardEvent} event @param {HTMLButtonElement} toggleButton @param {Element} panel @param {Element} listContainer 1.","embedding":[0.013,-0.18,-0.007,0.064,0.059,0.082,0.151,-0.034,-0.058,0.131,-0.022,-0.049,-0.002,0.036,0.032,0.023,-0.046,-0.11,0.008,-0.008,0.083,-0.114,0.058,-0.045,-0.073,0.017,-0.001,-0.087,-0.017,0.1,-0.044,-0.035,-0.205,-0.051,-0.064,0.002,0.043,0.016,-0.081,-0.009,-0.125,0.087,-0.009,-0.188,0.078,0.025,0.025,0.124,-0.069,0.026,0.074,0.051,0.042,-0.26,-0.024,0.107,-0.041,-0.052,0.11,0.108,-0.104,-0.042,-0.051,-0.063,0.054,0.115,-0.064,-0.011,-0.077,-0.001,0.037,-0.141,-0.016,-0.003,0.036,-0.151,-0.017,0.08,0.064,-0.091,0.101,0.053,-0.032,-0.088,0.079,-0.006,0.018,0.001,-0.007,0.109,-0.033,-0.046,0.225,0.053,0.041,0.035,0.057,-0.008,-0.116,0.065,0.078,-0.143,-0.114,-0.082,0.031,-0.016,0.099,-0.056,-0.025,0.104,-0.046,0.128,-0.028,-0.007,-0.089,-0.133,0.204,0.061,0.179,-0.057,-0.038,-0.064,-0.042,-0.031,-0.015,0.1,-0.059,0,-0.005,-0.097,-0.074,0.028,0.042,0.021,0.048,0.068,-0.102,0.1,-0.012,-0.042,-0.052,-0.12,0.016,0.042,-0.069,0.04,-0.08,-0.11,-0.039,-0.082,0.1,0.122,0.089,0.046,-0.176,-0.038,-0.076,0.028,0.046,-0.037,-0.026,-0.092,-0.089,0,-0.051,-0.071,-0.063,-0.021,-0.073,-0.138,-0.104,-0.001,0.002,-0.09,0.191,-0.042,0.067,0.084,-0.126,0.008,0.12,-0.133,0.121,0.099,-0.015,0.198,0.223,0.1,-0.124,0.002,0.13,0.066,0.018,0.052,0.015,-0.019,-0.034,-0.22,0.026,-0.095,0.124,0.101,0.103,0.061,-0.131,-0.108,0.035,-0.198,-0.034,-0.104,-0.062,0.194,0.165,0.089,0.002,-0.122,0.04,0.029,-0.04,-0.121,0.014,-0.049,0.017,0,0.082,0.116,-0.095,-0.011,-0.185,-0.044,-0.017,-0.048,-0.034,-0.041,0.004,-0.028,0.227,-0.059,-0.08,0.169,0.079,0.078,0.003,-0.042,-0.062,-0.118,-0.021,0.021,-0.235,-0.02,0.174,0.025,0.092,-0.123,-0.012,0.126,0.081,0.032,-0.119,-0.194,-0.035,0.011,-0.053,0.059,-0.056,0.107,0.14,-0.029,-0.165,0.132,-0.035,0.065,-0.048,-0.052,-0.025,-0.063,-0.053,-0.049,-0.111,0.04,0.014,0.075,-0.063,-0.011,-0.114,-0.145,0.184,0.202,0.232,-0.09,-0.089,0.166,0.139,-0.049,0.141,-0.102,0.025,-0.065,0.028,0.054,0.148,-0.1,0.068,-0.124,0.138,-0.059,0.04,-0.224,-0.042,0.134,-0.042,0.13,0.076,0.124,-0.06,-0.067,0.08,-0.141,0.032,0,0.002,0.073,0.026,-0.129,-0.181,0.086,0.01,0.036,-0.049,-0.026,0.001,0.062,0.03,0.057,0.001,0.212,-0.055,0.225,0.007,0.087,0.05,-0.04,0.098,0.145,0.06,-0.037,-0.066,0.171,0.112,-0.086,-0.055,-0.087,0.006,-0.042,-0.166,0.006,-0.01,-0.159,0.073,0.029,0.006,-0.118,-0.134,0.015,-0.166,0.112,0.051,0.065,-0.026,0.07,-0.088,0.046,-0.078,-0.008,0.039,0.085,-0.13,-0.013,0.159,0.047,-0.032,0.072,-0.169,-0.069],"source":"src/helpers/browse/setupCountryToggle.js [handlePanelKeydown]","tags":["code","what","function","utility","../countrySlider.js","../countryPanel.js","./handleKeyboardNavigation.js","toggleCountryPanel","handleKeyboardNavigation"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/browse/setupCountryToggle.js","node":"handlePanelKeydown"},"patterns":[],"relations":{"imports":["../countrySlider.js","../countryPanel.js","./handleKeyboardNavigation.js"],"calls":["toggleCountryPanel","handleKeyboardNavigation"]}},"version":1},
{"id":"setupCountryToggle.js-setupCountryToggle","text":"Set up the country selection panel toggle behavior.\n\n@param {HTMLButtonElement} toggleButton\n@param {Element} panel\n@param {Element} listContainer\n@returns {() => boolean} Function returning true when countries are loaded.\n1. Attach click handler for toggle button.\n2. Attach keydown handler for panel interactions.\n3. Return a function indicating if countries are loaded.\n\nexport function setupCountryToggle(toggleButton, panel, listContainer) {\n  const countriesLoaded = () => listContainer.children.length > 0;\n\n  toggleButton.addEventListener(\"click\", () =>\n    handleToggleClick(toggleButton, panel, listContainer)\n  );\n\n  panel.addEventListener(\"keydown\", (e) =>\n    handlePanelKeydown(e, toggleButton, panel, listContainer)\n  );\n\n  return countriesLoaded;\n}","qaContext":"Why: Set up the country selection panel toggle behavior. How: @param {HTMLButtonElement} toggleButton @param {Element} panel @param {Element} listContainer @returns {() => boolean} Function returni...","embedding":[-0.052,-0.127,-0.001,0.094,0.045,0.107,0.149,-0.041,-0.085,0.063,-0.052,-0.122,-0.092,0.091,-0.002,0.008,-0.016,-0.177,0.099,-0.116,0.145,-0.191,0.07,-0.092,0.06,-0.035,0.041,-0.065,-0.047,0.099,-0.004,-0.008,-0.112,-0.114,-0.024,-0.09,-0.081,-0.031,-0.074,0.003,-0.034,-0.033,0.04,-0.234,0.001,0.002,0.049,0.231,-0.033,0.075,0.194,0.044,0.115,-0.3,-0.043,0.037,0.079,0.006,-0.072,0.045,-0.119,-0.102,-0.059,-0.008,0.095,0.125,-0.008,-0.04,-0.063,-0.037,0.03,-0.046,0.01,0.093,-0.009,-0.215,0.014,0.12,0.057,-0.093,0.049,0.044,0.053,-0.138,0.031,-0.025,0.062,-0.068,-0.109,-0.002,0.028,0.016,0.186,0.109,-0.012,0.112,0.062,0.032,-0.145,0.032,0.111,-0.175,-0.026,0.05,0.014,-0.027,0.009,-0.004,-0.006,0.084,-0.056,0.148,0.059,0.008,-0.133,-0.1,0.234,0.074,-0.011,-0.108,0.074,-0.027,-0.073,-0.03,-0.058,0.081,-0.039,0,0.029,-0.154,-0.048,0.134,-0.126,-0.053,0.104,0.083,-0.12,0.091,-0.016,0.06,-0.008,-0.05,0.053,0.005,-0.04,0.058,0.167,-0.026,-0.068,-0.087,0.125,0.081,0.151,0.082,-0.19,0.02,-0.155,0.026,0.045,-0.023,-0.042,-0.126,-0.012,-0.116,-0.063,-0.092,-0.066,0.034,0.031,-0.115,0.065,-0.053,-0.027,-0.025,0.143,-0.017,-0.001,0.12,-0.052,0.03,0.033,-0.203,0.108,0.099,-0.015,0.119,0.17,0.058,-0.01,-0.071,0.047,0.038,-0.054,0.082,0.148,-0.016,-0.053,-0.193,0.008,-0.024,0.199,0.064,0.2,0.117,-0.073,-0.097,-0.023,-0.161,0.002,-0.151,-0.063,0.023,0.081,0.053,0.034,-0.134,0.065,-0.02,-0.052,-0.121,0.042,-0.019,0.054,0,0.16,0.045,-0.043,-0.132,-0.062,0.001,-0.006,0.034,-0.09,0.002,0.117,-0.08,0.179,-0.008,-0.067,0.257,0.048,-0.005,-0.053,0.069,0.003,-0.113,0.005,-0.021,-0.18,-0.064,0.025,-0.07,0.119,-0.07,0.01,0.047,-0.017,0.058,-0.07,-0.087,-0.038,0.098,-0.026,0.063,-0.102,-0.008,0.071,0.053,-0.22,0.064,-0.026,0.148,-0.126,-0.091,-0.077,-0.011,-0.039,0.012,-0.075,0.062,0.01,0.039,0.036,-0.016,-0.106,-0.152,0.089,0.134,0.16,-0.117,-0.039,0.25,0.156,-0.033,0.076,-0.137,0.087,-0.17,0.075,0.075,0.093,-0.142,0.037,-0.063,0.165,-0.081,-0.009,-0.257,-0.094,0.118,-0.024,0.074,0.103,0.076,-0.067,-0.03,0.092,-0.163,-0.033,0,0.011,-0.015,0.08,-0.133,-0.152,-0.014,-0.006,0.063,-0.109,-0.003,-0.016,0.145,0.069,0.027,-0.042,0.155,-0.099,0.278,0.033,0.161,0.047,-0.073,0.064,0.169,0.09,-0.049,-0.098,0.011,0.211,0.053,0.002,-0.091,-0.031,0.044,-0.087,0.06,-0.065,-0.097,0.053,0.099,0.08,-0.067,-0.108,0.062,-0.136,0.019,-0.062,0.027,0.01,0.054,-0.186,-0.04,-0.105,-0.056,0.066,-0.028,-0.109,0.033,0.192,0.178,-0.063,0.011,-0.099,-0.062],"source":"src/helpers/browse/setupCountryToggle.js [setupCountryToggle]","tags":["code","what","function","utility","../countrySlider.js","../countryPanel.js","./handleKeyboardNavigation.js","addEventListener","handleToggleClick","handlePanelKeydown"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/browse/setupCountryToggle.js","node":"setupCountryToggle"},"patterns":[],"relations":{"imports":["../countrySlider.js","../countryPanel.js","./handleKeyboardNavigation.js"],"calls":["addEventListener","handleToggleClick","handlePanelKeydown"]}},"version":1},
{"id":"setupCountryFilter.js-highlightSelection","text":"Highlight the selected flag button within a container.\n\n@param {Element} container\n@param {HTMLButtonElement} button\n1. Remove `selected` class from all flag buttons in the container.\n2. Add `selected` class to the provided button.\n\nexport function highlightSelection(container, button) {\n  const buttons = container.querySelectorAll(\"button.flag-button\");\n  buttons.forEach((b) => b.classList.remove(\"selected\"));\n  button.classList.add(\"selected\");\n}","qaContext":"Why: Highlight the selected flag button within a container. How: @param {Element} container @param {HTMLButtonElement} button 1.","embedding":[0.127,0.14,-0.018,0.169,0.324,0.075,0.248,-0.132,-0.081,0.029,-0.12,-0.032,-0.237,-0.101,0.249,0.043,-0.136,-0.055,-0.011,-0.096,0.122,-0.04,0.103,-0.126,-0.144,0.044,0.271,-0.095,-0.111,-0.102,-0.152,0.068,-0.037,0.094,-0.097,0.007,0.046,-0.045,0.065,-0.009,-0.038,0.093,-0.217,-0.137,-0.097,-0.116,-0.044,-0.022,0,-0.178,0.186,-0.089,0.102,-0.117,-0.086,0.005,0.041,-0.118,0.037,-0.094,-0.037,-0.072,0.001,-0.027,0.204,0.073,0.099,-0.023,-0.157,0.049,-0.009,-0.047,0.224,0.036,0.015,-0.068,-0.129,0.11,0.032,0.068,-0.033,-0.051,0.023,0.02,0.032,0.221,-0.147,-0.012,-0.03,0.004,-0.087,0.028,0.054,0.067,-0.013,0.062,-0.137,-0.062,-0.067,0.08,-0.015,-0.082,-0.056,0.007,-0.167,-0.007,-0.218,-0.07,-0.048,0.004,0.008,0.136,-0.016,0.018,-0.061,-0.022,0.21,-0.05,0.065,0.125,0.336,-0.144,-0.038,-0.01,0.083,-0.044,0.026,0,0.145,-0.092,-0.224,-0.053,0.059,0.088,0.083,-0.141,-0.211,0.121,-0.036,-0.021,0.078,-0.04,-0.058,-0.002,-0.157,0.056,-0.178,-0.017,-0.175,0.245,-0.022,0.045,-0.114,-0.026,0.101,-0.133,0.099,0.052,0.123,0.033,0.014,0.179,-0.004,0.263,-0.095,0.021,0.014,0.009,0.084,-0.008,-0.011,0.074,-0.013,0.019,0.068,-0.134,0.072,-0.07,-0.024,-0.026,0.004,-0.257,-0.012,0.111,0.171,0.039,-0.072,0.092,-0.002,-0.011,-0.029,0.029,0.003,0.297,-0.032,0.082,0.033,-0.122,0.126,-0.021,0.262,-0.054,0.135,0.019,0.085,0.087,0.114,-0.037,-0.079,-0.204,-0.269,0.023,0.099,0.101,0.034,-0.007,0.184,0.014,0.003,0.27,-0.143,-0.143,-0.094,0,0.101,0.321,0.05,0.136,-0.167,0.084,-0.087,0.029,-0.283,-0.097,-0.015,-0.112,0.107,0.019,-0.212,0.21,-0.272,0.033,-0.158,0.016,0.066,-0.103,0.22,-0.025,-0.294,-0.16,0.08,0.106,0.227,-0.238,0.091,0.122,0.006,0.083,-0.076,0.033,0.072,0.129,-0.015,0.108,-0.323,-0.195,-0.108,-0.169,-0.122,-0.039,0.045,0.131,-0.122,-0.061,-0.216,-0.113,-0.078,-0.138,-0.094,-0.064,-0.14,-0.125,0.14,0.272,0.06,0.061,0.109,0.162,0.112,-0.123,0.048,0.149,0.051,0.095,0.131,0.091,0.158,-0.155,0.008,-0.011,-0.042,0.07,0.032,-0.11,0.074,0.007,-0.057,-0.166,-0.064,0.019,0.057,0.084,0.03,-0.172,-0.078,0.095,0.263,-0.308,0.034,0,-0.155,-0.147,-0.077,-0.22,0.144,-0.031,-0.039,0.242,0.019,0.075,-0.049,0.148,-0.024,-0.071,-0.07,0.26,-0.079,0.238,0.089,0.267,-0.017,-0.008,0.079,0.189,-0.006,-0.112,-0.015,0.063,0.213,0.257,-0.212,0.072,-0.015,-0.117,-0.007,-0.043,-0.094,-0.108,0.038,0.176,-0.106,-0.23,-0.051,-0.008,-0.061,-0.096,-0.284,0.039,0.016,0.047,0.182,0.06,-0.173,0.009,-0.098,-0.03,-0.163,0.054,-0.084,0.062,0.087,0.015,-0.079,-0.026],"source":"src/helpers/browse/setupCountryFilter.js [highlightSelection]","tags":["code","what","function","utility","../countryPanel.js","querySelectorAll","forEach","remove","add"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/browse/setupCountryFilter.js","node":"highlightSelection"},"patterns":[],"relations":{"imports":["../countryPanel.js"],"calls":["querySelectorAll","forEach","remove","add"]}},"version":1},
{"id":"setupCountryFilter.js-clearCountryFilter","text":"Clear the country filter and reset judoka list.\n\n@param {Element} listContainer\n@param {Array<Judoka>} judokaList\n@param {Function} render\n@param {HTMLButtonElement} toggleButton\n@param {Element} panel\n@param {(count: number, country: string) => void} updateLiveRegion\n@returns {Promise<void>}\n1. Deselect all country buttons.\n2. Render the full judoka list.\n3. Update the live region to show all countries.\n4. Close the country panel.\n\nexport async function clearCountryFilter(\n  listContainer,\n  judokaList,\n  render,\n  toggleButton,\n  panel,\n  updateLiveRegion\n) {\n  const buttons = listContainer.querySelectorAll(\"button.flag-button\");\n  buttons.forEach((b) => b.classList.remove(\"selected\"));\n  await render(judokaList);\n  updateLiveRegion(judokaList.length, \"all countries\");\n  toggleCountryPanel(toggleButton, panel, false);\n}","qaContext":"Why: Clear the country filter and reset judoka list. How: Update the live region to show all countries.","embedding":[-0.032,0.03,-0.041,0.206,0.036,0.121,0.094,-0.177,-0.011,0.001,-0.027,-0.192,-0.058,-0.019,-0.039,0.016,-0.142,-0.165,-0.014,-0.188,0.231,-0.069,0.145,-0.012,0.039,0.105,0.075,-0.13,-0.084,-0.08,-0.072,0.087,-0.022,-0.117,0.053,-0.037,-0.12,0.044,0.1,0.08,-0.016,0.077,-0.061,-0.171,0.069,0.124,0.021,0.054,0.049,0.016,0.163,0.04,0.045,-0.137,0.037,-0.109,-0.031,0.05,-0.103,0.079,-0.041,-0.098,0.067,0.036,0.042,-0.003,-0.037,0.049,0.015,-0.024,0.05,0.043,0.063,-0.007,-0.087,-0.162,-0.012,0.075,0.049,0.046,0.145,-0.126,0.02,-0.152,0.056,0.096,0.061,-0.152,0.02,-0.015,0.076,0.062,0.248,0.135,-0.14,0.039,0.074,0.142,-0.154,0.15,0.037,-0.184,0.044,0.085,-0.068,-0.052,0.015,0.085,-0.075,0.037,-0.067,0.19,-0.142,0.028,-0.127,-0.044,0.241,0.025,-0.084,-0.025,0.141,-0.107,-0.048,0.054,0.058,0.151,0.024,0,0.143,-0.16,-0.113,-0.016,-0.072,0,0.134,0.034,-0.091,0.138,0.051,0.062,-0.01,-0.004,0.04,-0.071,-0.076,0.025,-0.015,-0.089,0.014,0.084,-0.058,-0.039,-0.072,0.189,0.023,0.06,-0.179,0.037,0.059,0.068,-0.092,0.021,-0.052,-0.013,-0.014,-0.1,0.001,-0.023,0.091,-0.057,-0.013,0.002,0.074,-0.057,0.046,0.044,0.068,0.114,-0.156,0.138,0.024,-0.238,-0.039,0.008,0.093,0.112,0.069,-0.042,-0.058,-0.051,-0.095,0.051,0.015,0.178,0.127,-0.041,0.049,-0.249,0.022,-0.047,0.236,0.066,0.056,-0.027,-0.148,-0.11,-0.07,-0.027,0.095,-0.155,-0.262,0.19,0.206,0.124,0.122,0.014,0.053,0.061,-0.091,-0.002,0.013,-0.137,-0.001,0,0.239,0.094,-0.064,0.058,-0.033,-0.056,0.036,0.301,-0.055,-0.042,0.151,-0.011,0.089,-0.053,-0.13,0.249,0.001,0.061,-0.233,-0.067,-0.034,-0.008,0.025,-0.019,-0.31,-0.003,0.094,-0.024,0.164,-0.008,0.095,-0.058,-0.031,0.154,0.009,-0.114,-0.008,0.054,-0.06,0.143,-0.151,-0.111,-0.026,0.058,-0.058,-0.094,-0.064,0.136,0.015,-0.125,-0.061,-0.007,-0.124,-0.055,-0.031,-0.09,-0.086,-0.094,0.106,0.02,-0.069,0.007,0.108,0.019,0.149,0.006,-0.089,0.198,0.171,-0.033,-0.013,-0.116,-0.024,-0.182,0.104,-0.034,-0.078,0.029,0.159,0.025,0.092,-0.089,0.012,-0.197,0.084,-0.001,-0.086,-0.033,0.089,0.045,-0.068,-0.153,0.148,-0.055,-0.087,0,-0.081,-0.011,0.009,-0.029,-0.029,0,-0.06,0.053,-0.152,-0.095,0.052,0.256,-0.023,0.096,-0.002,0,-0.152,0.217,0.02,0.132,0.013,-0.145,0.003,-0.02,0.189,-0.062,-0.099,0.101,0.202,0.102,-0.003,-0.111,0.043,0.107,-0.046,-0.057,-0.085,-0.109,0.009,0.119,-0.041,-0.175,-0.077,0.126,-0.082,-0.105,-0.097,-0.181,0.021,-0.011,-0.1,-0.085,-0.101,-0.027,-0.078,-0.045,-0.025,-0.073,0.127,0.174,0.032,-0.067,-0.15,-0.041],"source":"src/helpers/browse/setupCountryFilter.js [clearCountryFilter]","tags":["code","how","function","utility","../countryPanel.js","querySelectorAll","forEach","remove","render","updateLiveRegion","toggleCountryPanel"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/browse/setupCountryFilter.js","node":"clearCountryFilter"},"patterns":[],"relations":{"imports":["../countryPanel.js"],"calls":["querySelectorAll","forEach","remove","render","updateLiveRegion","toggleCountryPanel"]}},"version":1},
{"id":"setupCountryFilter.js-applyCountryFilter","text":"Apply a country filter and render the resulting judoka list.\n\n@param {HTMLButtonElement} button\n@param {Element} listContainer\n@param {Array<Judoka>} judokaList\n@param {Function} render\n@param {HTMLButtonElement} toggleButton\n@param {Element} panel\n@param {Element} carouselEl\n@param {(count: number, country: string) => void} updateLiveRegion\n@returns {Promise<void>}\n1. Highlight the selected flag button.\n2. Filter judoka by the button's country value.\n3. Render the filtered list.\n4. Update the live region with the result count.\n5. Remove existing no-results message.\n6. If no results, append a no-results message.\n7. Close the country panel.\n\nexport async function applyCountryFilter(\n  button,\n  listContainer,\n  judokaList,\n  render,\n  toggleButton,\n  panel,\n  carouselEl,\n  updateLiveRegion\n) {\n  const selected = button.value;\n  highlightSelection(listContainer, button);\n  const filtered =\n    selected === \"all\" ? judokaList : judokaList.filter((j) => j.country === selected);\n  await render(filtered);\n  updateLiveRegion(filtered.length, selected === \"all\" ? \"all countries\" : selected);\n  const existingMessage = carouselEl.querySelector(\".no-results-message\");\n  if (existingMessage) {\n    existingMessage.remove();\n  }\n  if (filtered.length === 0) {\n    const noResultsMessage = document.createElement(\"div\");\n    noResultsMessage.className = \"no-results-message\";\n    noResultsMessage.setAttribute(\"role\", \"status\");\n    noResultsMessage.setAttribute(\"aria-live\", \"polite\");\n    noResultsMessage.textContent = \"No judoka available for this country\";\n    carouselEl.appendChild(noResultsMessage);\n  }\n  toggleCountryPanel(toggleButton, panel, false);\n}","qaContext":"Why: Apply a country filter and render the resulting judoka list. How: Filter judoka by the button's country value.","embedding":[-0.004,0.062,0.057,0.214,0.036,0.151,0.071,-0.102,0.049,-0.042,-0.035,-0.173,-0.01,-0.076,0.007,0.011,-0.025,-0.18,-0.07,-0.166,0.232,-0.033,0.123,-0.065,0.01,0.068,-0.03,-0.116,-0.128,0.001,-0.066,0.034,-0.089,-0.091,0.024,-0.145,-0.11,0.02,-0.016,0.048,-0.006,0.05,-0.031,-0.208,0.121,-0.08,-0.062,0.003,0.042,0.087,0.064,-0.017,0.106,-0.095,0.064,-0.017,-0.08,0.042,-0.034,-0.08,0.032,-0.111,0.084,0.028,0.012,-0.048,-0.064,0.02,-0.007,0.052,0.002,0.045,0.082,0.015,-0.025,-0.125,-0.003,0.064,0.06,-0.015,0.075,-0.124,-0.058,-0.095,0.074,0.009,0.043,-0.139,-0.002,-0.127,-0.021,0.084,0.145,0.106,-0.047,0.069,-0.075,0.084,-0.122,0.172,0.026,-0.167,-0.038,0.072,-0.005,-0.088,0.028,0.095,-0.092,0.039,-0.063,0.177,0.023,-0.008,-0.121,-0.109,0.194,-0.008,-0.012,-0.039,0.205,-0.095,-0.065,0.007,0.136,0.034,0.069,0,0.112,-0.128,-0.097,0.012,0.01,0.05,0.137,0.015,-0.057,0.039,0.068,0.094,0.015,-0.084,-0.034,-0.084,-0.045,0.009,0.073,-0.066,-0.032,0.031,-0.01,0.001,-0.085,0.144,-0.035,0.043,-0.22,0.001,0.028,0.054,0.01,0.017,0.007,-0.077,-0.069,-0.114,0.027,0.028,0.036,-0.113,0.032,-0.034,-0.035,0.012,0.095,0.115,0.045,0.073,-0.072,0.16,0.034,-0.248,0.05,0.088,0.015,0.113,0.082,-0.066,-0.112,-0.034,0.003,-0.045,-0.025,0.173,0.082,-0.079,-0.003,-0.249,0.017,-0.067,0.253,0.05,0.131,-0.053,-0.152,-0.024,-0.01,-0.088,0.09,-0.261,-0.316,0.163,0.26,0.192,0.108,-0.019,-0.039,0.128,-0.044,0.047,-0.052,-0.101,0.109,0,0.15,0.095,-0.107,0.021,0.051,-0.056,0.043,0.185,-0.037,-0.096,0.091,-0.062,0.048,-0.068,-0.18,0.247,0.046,-0.025,-0.157,0.001,0.015,0.177,-0.033,-0.001,-0.304,0.031,0.111,0.072,0.058,-0.077,0.068,-0.054,-0.11,0.057,0.058,-0.145,0.011,-0.028,-0.138,0.162,-0.107,-0.167,-0.052,0.054,0.01,-0.052,0.045,0.161,-0.042,0.007,-0.06,-0.079,-0.134,0.088,-0.002,-0.07,0.017,-0.143,0.117,0.05,-0.041,-0.053,0.156,-0.024,0.213,0.063,0.004,0.17,0.214,0.103,-0.083,-0.124,0.127,-0.197,0.079,0.052,-0.033,-0.036,0.153,-0.037,-0.09,-0.039,0.092,-0.205,0.064,-0.007,-0.127,-0.026,0.106,-0.001,-0.055,-0.153,0.14,-0.074,-0.09,0,-0.106,-0.012,-0.005,-0.065,-0.05,-0.008,0.016,-0.032,-0.151,-0.079,0.124,0.224,0.071,0.074,-0.013,-0.036,0.004,0.125,-0.053,0.043,0.046,-0.032,0.006,0.059,0.185,-0.062,-0.034,0.013,0.12,0.064,-0.091,-0.152,0.027,0.14,-0.002,-0.079,-0.006,-0.099,0.071,0.086,0.124,-0.008,-0.052,0.096,-0.025,-0.013,-0.026,-0.153,0.094,0.049,-0.08,-0.189,-0.056,-0.07,-0.004,-0.119,0.085,0.037,0.075,0.285,0.043,-0.126,-0.073,-0.033],"source":"src/helpers/browse/setupCountryFilter.js [applyCountryFilter]","tags":["code","what","function","utility","../countryPanel.js","highlightSelection","filter","render","updateLiveRegion","querySelector","remove","createElement","setAttribute","appendChild","toggleCountryPanel"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/browse/setupCountryFilter.js","node":"applyCountryFilter"},"patterns":[],"relations":{"imports":["../countryPanel.js"],"calls":["highlightSelection","filter","render","updateLiveRegion","querySelector","remove","createElement","setAttribute","appendChild","toggleCountryPanel"]}},"version":1},
{"id":"setupCountryFilter.js-setupCountryFilter","text":"Configure country filter interactions for the carousel.\n\n@param {Element} listContainer\n@param {HTMLButtonElement} clearButton\n@param {Array<Judoka>} judokaList\n@param {Function} render\n@param {HTMLButtonElement} toggleButton\n@param {Element} panel\n@param {Element} carouselEl\n@param {Element} ariaLiveEl\n1. Define helper to update aria-live region with count and country.\n2. On clearButton click:\n   a. Deselect all country buttons.\n   b. Render full judoka list.\n   c. Update live region.\n   d. Close country panel.\n3. On listContainer click:\n   a. If clicked element is a flag button:\n      i. Determine selected country.\n      ii. Highlight selection.\n      iii. Filter judokaList by country.\n      iv. Render filtered list.\n      v. Update live region.\n      vi. Remove any existing no-results message.\n      vii. If no results, show 'no-results-message'.\n      viii. Close country panel.\n\nexport function setupCountryFilter(\n  listContainer,\n  clearButton,\n  judokaList,\n  render,\n  toggleButton,\n  panel,\n  carouselEl,\n  ariaLiveEl\n) {\n  let liveRegion = ariaLiveEl;\n\n  function updateLiveRegion(count, country) {\n    liveRegion = carouselEl.querySelector(\".carousel-aria-live\") || liveRegion;\n    liveRegion.textContent = `Showing ${count} judoka for ${country}`;\n  }\n\n  clearButton.addEventListener(\"click\", async () => {\n    await clearCountryFilter(\n      listContainer,\n      judokaList,\n      render,\n      toggleButton,\n      panel,\n      updateLiveRegion\n    );\n  });\n\n  listContainer.addEventListener(\"click\", async (e) => {\n    const button = e.target.closest(\"button.flag-button\");\n    if (!button) return;\n    await applyCountryFilter(\n      button,\n      listContainer,\n      judokaList,\n      render,\n      toggleButton,\n      panel,\n      carouselEl,\n      updateLiveRegion\n    );\n  });\n}","qaContext":"Why: Configure country filter interactions for the carousel. How: Filter judokaList by country.","embedding":[-0.006,-0.002,0.008,0.12,-0.015,0.116,0.12,-0.116,-0.001,-0.05,0.005,-0.197,0.021,-0.099,-0.027,0.033,-0.071,-0.165,-0.079,-0.16,0.189,-0.055,0.129,-0.042,-0.069,0.11,-0.022,-0.096,-0.096,-0.019,-0.049,0.061,-0.069,-0.126,0.018,-0.104,-0.157,0.002,-0.037,0.027,-0.005,0.061,-0.059,-0.174,0.052,-0.062,-0.061,-0.029,0.045,0.051,0.014,-0.016,0.074,-0.1,0.067,-0.058,-0.028,0.042,-0.014,-0.028,0.005,-0.112,0.041,0.021,0.043,0.024,-0.049,0.003,-0.005,0.065,-0.013,0.053,0.064,0.027,-0.061,-0.069,0.031,0.01,0.031,-0.009,0.023,-0.177,-0.053,-0.096,0.105,0.026,0.065,-0.209,0.022,-0.09,0.02,0.079,0.112,0.094,-0.002,0.072,0.037,0.096,-0.11,0.167,-0.017,-0.152,-0.081,0.128,-0.021,-0.086,0.019,0.069,-0.101,0.024,-0.06,0.101,-0.024,-0.014,-0.147,-0.024,0.186,-0.035,-0.026,-0.001,0.197,-0.03,-0.035,0.004,0.162,0.003,0.05,0,0.071,-0.175,-0.111,-0.031,-0.001,0.019,0.146,0.05,-0.068,0.081,0.082,0.128,-0.055,-0.092,0.034,-0.109,-0.023,0.04,-0.012,-0.067,0.009,-0.004,-0.049,-0.019,-0.153,0.196,-0.027,0.08,-0.175,0.029,0.045,0.053,-0.009,0.031,-0.058,-0.08,-0.074,-0.08,0.033,0.005,0.042,-0.083,0.035,-0.062,0.016,-0.063,0.035,0.129,0.073,0.092,-0.055,0.124,0.002,-0.197,0.017,0.068,0.035,0.129,0.048,0.008,-0.109,-0.025,-0.02,-0.05,0.02,0.217,0.07,-0.12,0.064,-0.2,0.035,-0.015,0.239,0.071,0.149,-0.063,-0.151,-0.084,-0.098,-0.111,0.082,-0.168,-0.26,0.168,0.16,0.127,0.119,0.018,-0.08,0.063,-0.073,0.029,-0.038,-0.106,0.081,0,0.164,0.084,-0.028,0.075,0.069,-0.036,0.042,0.144,0.029,-0.055,0.086,0.01,0.019,-0.094,-0.144,0.244,0.033,-0.06,-0.128,-0.026,0.005,0.142,-0.003,0.017,-0.3,0.011,0.093,0.051,0.106,-0.047,0.035,-0.034,-0.15,0.1,0.051,-0.142,0.016,-0.017,-0.141,0.145,-0.073,-0.127,-0.015,0.054,0.008,-0.069,0.018,0.205,0.02,-0.054,-0.061,-0.027,-0.128,0.071,0.006,-0.021,0.019,-0.127,0.077,0.019,-0.032,-0.012,0.133,-0.009,0.21,0.109,-0.039,0.113,0.196,0.085,-0.087,-0.069,0.134,-0.2,0.071,0.056,-0.008,-0.05,0.204,-0.026,-0.086,0.004,0.073,-0.191,0.044,0.046,-0.154,-0.004,0.103,0.023,-0.072,-0.1,0.129,-0.105,-0.106,0,-0.089,0.004,-0.042,0.002,-0.025,-0.022,-0.014,0.011,-0.147,-0.102,0.13,0.22,0.06,0.109,-0.006,-0.096,-0.052,0.106,-0.07,0.045,-0.02,-0.059,0.041,-0.008,0.141,-0.063,-0.008,0.038,0.121,0.08,-0.001,-0.123,0.052,0.119,0.004,-0.034,0.012,-0.063,0.008,0.15,0.093,-0.11,-0.079,0.054,0.002,0.01,-0.054,-0.11,0.131,0.051,-0.113,-0.141,-0.075,-0.081,0.007,-0.102,0.076,-0.025,0.107,0.222,0.056,-0.09,-0.05,0.011],"source":"src/helpers/browse/setupCountryFilter.js [setupCountryFilter]","tags":["code","how","function","utility","../countryPanel.js","querySelector","addEventListener","clearCountryFilter","closest","applyCountryFilter"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/browse/setupCountryFilter.js","node":"setupCountryFilter"},"patterns":[],"relations":{"imports":["../countryPanel.js"],"calls":["querySelector","addEventListener","clearCountryFilter","closest","applyCountryFilter"]}},"version":1},
{"id":"handleKeyboardNavigation.js-handleKeyboardNavigation","text":"Handle left/right arrow key navigation within a button container.\n\n@param {KeyboardEvent} event\n@param {Element} container\n@param {string} buttonClass\n1. Exit if the key is not ArrowLeft or ArrowRight.\n2. Get all buttons with the specified class in the container.\n3. Find the index of the currently focused button.\n4. If focus is within the buttons, prevent default and calculate the next index.\n5. Move focus to the button at the next index.\n\nexport function handleKeyboardNavigation(event, container, buttonClass) {\n  if (event.key !== \"ArrowLeft\" && event.key !== \"ArrowRight\") {\n    return;\n  }\n\n  const buttons = Array.from(container.querySelectorAll(`button.${buttonClass}`));\n  const current = document.activeElement;\n  const index = buttons.indexOf(current);\n  if (index !== -1) {\n    event.preventDefault();\n    const offset = event.key === \"ArrowRight\" ? 1 : -1;\n    const next = (index + offset + buttons.length) % buttons.length;\n    buttons[next].focus();\n  }\n}","qaContext":"Why: Handle left/right arrow key navigation within a button container. How: @param {KeyboardEvent} event @param {Element} container @param {string} buttonClass 1.","embedding":[0.099,-0.108,0.046,0.101,0.075,0.085,0.154,0.027,-0.037,0.013,-0.057,0.053,-0.086,-0.035,-0.024,0.007,-0.127,0.034,-0.076,0.046,0.153,-0.058,0.012,-0.042,-0.201,0.012,-0.003,-0.155,0.004,-0.007,-0.033,-0.063,-0.097,0.034,-0.165,-0.065,-0.156,-0.054,0.044,-0.05,-0.105,0.124,-0.052,-0.029,0.187,-0.008,-0.113,-0.005,0.062,0.166,-0.149,-0.096,0.048,-0.168,-0.018,0.106,-0.042,-0.092,0.256,0.05,0.122,-0.064,0.045,-0.084,-0.043,0.142,0.119,-0.005,-0.068,0.07,-0.005,-0.068,0.043,-0.008,0.038,-0.164,-0.014,0.065,0.038,0.113,-0.02,-0.118,0,-0.002,0.053,0.117,-0.119,-0.062,-0.036,-0.093,-0.172,-0.093,0.075,0.043,0.224,0.014,-0.066,0.017,-0.041,0.064,-0.015,0.007,-0.12,-0.158,0.088,0.017,0.056,-0.147,-0.173,0.06,-0.022,0.034,-0.029,0.015,0.013,0.002,0.083,-0.035,0.236,0.018,0.121,0.021,0.044,-0.015,-0.001,-0.007,-0.063,0,-0.012,-0.165,-0.033,-0.045,-0.031,0.024,0.137,0.012,-0.05,0.071,-0.002,-0.001,-0.075,-0.117,0.045,-0.13,-0.006,0.035,-0.11,-0.008,-0.024,-0.025,0.009,0.07,0.045,0.004,-0.132,-0.066,0,-0.004,0.082,0.032,-0.092,-0.023,-0.019,0.004,-0.071,0.085,-0.024,-0.094,-0.068,-0.012,0.072,0.031,-0.058,-0.033,-0.038,-0.074,0.106,-0.028,-0.114,-0.008,0.025,-0.073,0.081,-0.064,-0.008,0.247,-0.02,0.049,-0.128,-0.092,0.11,0.143,-0.067,0.042,-0.136,-0.021,0.014,-0.128,0.094,-0.089,0.041,-0.11,0.029,0.01,-0.102,-0.086,0.016,-0.135,-0.072,0.069,-0.061,0.116,0.107,0.015,-0.099,-0.048,0.023,0.137,-0.048,0.029,-0.104,0.003,-0.063,0,0.038,0.207,-0.006,0.098,-0.138,0.087,0.053,-0.026,-0.035,-0.089,-0.026,0.123,0.064,-0.002,-0.103,0.169,0.076,0.055,0.042,-0.051,0.039,-0.086,0.015,0.026,-0.074,0.041,0.125,0.139,-0.05,-0.106,-0.006,0.119,0.129,0.094,-0.114,-0.107,-0.035,0.032,0.055,0.051,0.014,-0.078,0.076,-0.087,-0.065,0.13,0.053,0.081,-0.039,-0.022,0.024,-0.065,-0.094,-0.129,-0.043,0.078,-0.082,-0.014,0.022,0.045,0.108,-0.063,0.225,0.086,0.059,0.018,-0.076,0.118,0.019,0.166,0.107,0.132,0.037,0.004,-0.022,-0.036,0.052,0.002,0.138,-0.09,0.089,0.03,-0.014,-0.087,-0.043,0.11,0.058,-0.067,0.058,0.099,-0.065,-0.047,-0.049,-0.2,0.004,0,0.025,0.108,-0.056,-0.04,-0.066,-0.026,0.018,0.126,-0.119,-0.031,0.023,0.18,0.087,0.026,0.029,0.074,-0.047,0.049,-0.042,0.115,0.091,-0.052,0.028,0.16,-0.034,-0.117,-0.049,0.09,0.229,-0.015,-0.034,-0.008,-0.057,-0.033,-0.19,-0.034,-0.051,-0.123,0.025,0.1,-0.065,-0.119,0.006,0.024,-0.165,0.033,-0.021,0.005,0.109,0.037,-0.016,0.047,-0.068,0.106,-0.033,0.063,-0.056,0.102,0,0.088,-0.014,0.06,-0.183,0.062],"source":"src/helpers/browse/handleKeyboardNavigation.js [handleKeyboardNavigation]","tags":["code","what","function","utility","from","querySelectorAll","indexOf","preventDefault","focus"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/browse/handleKeyboardNavigation.js","node":"handleKeyboardNavigation"},"patterns":[],"relations":{"imports":[],"calls":["from","querySelectorAll","indexOf","preventDefault","focus"]}},"version":1},
{"id":"battleUI.js-getStatButtons","text":"Query all stat buttons.\n\n@returns {NodeListOf<HTMLButtonElement>} Node list of stat buttons.\n\nexport function getStatButtons() {\n  if (typeof document?.querySelectorAll !== \"function\") {\n    return [];\n  }\n  return document.querySelectorAll(\"#stat-buttons button\");\n}","qaContext":"Why: Query all stat buttons. How: @returns {NodeListOf<HTMLButtonElement>} Node list of stat buttons.","embedding":[-0.02,0.007,-0.068,0.192,0.248,0.156,0.065,0.11,-0.042,0.121,-0.088,-0.09,-0.149,-0.157,0.173,0.004,-0.147,-0.143,0.149,-0.115,0.057,0.089,0.03,-0.098,-0.128,-0.037,-0.138,-0.15,-0.086,-0.063,-0.04,-0.077,0.062,-0.114,0.03,0.062,-0.034,-0.27,0.143,0.018,-0.169,0.093,-0.098,-0.196,0.208,0.065,-0.22,0.005,0.095,0.137,0.013,0.019,-0.015,-0.192,0.201,0.116,-0.091,-0.243,0.1,0.329,0.051,-0.28,-0.04,0.089,0.09,0.302,-0.097,0.061,-0.217,-0.076,-0.083,-0.12,-0.014,0.092,0.179,-0.221,-0.246,-0.121,-0.013,0.121,-0.223,-0.104,-0.115,0.133,0.085,0.198,-0.07,0.103,-0.11,-0.024,-0.281,0.095,-0.125,0.086,-0.117,0.145,-0.068,-0.013,-0.023,0.036,-0.089,-0.066,-0.034,-0.264,-0.009,-0.059,0.076,-0.125,-0.044,-0.007,-0.085,0.135,-0.229,-0.009,-0.049,-0.311,0.193,-0.084,0.022,0.039,0.455,0.155,0.077,0.153,0.126,0.055,0.062,0,0.074,-0.245,0.013,-0.063,-0.125,0.17,0.145,-0.061,0.052,0.182,-0.089,0.077,-0.103,-0.148,-0.03,0.069,0.072,-0.069,-0.058,-0.083,0.116,0.048,0.119,0.385,-0.091,0.122,0.019,0.122,-0.158,0.001,0.087,-0.041,-0.047,0.052,-0.027,0.035,-0.13,-0.018,-0.12,0.011,-0.045,0.029,-0.025,-0.031,-0.134,-0.018,-0.077,-0.137,0.188,-0.004,-0.348,0.018,0.221,-0.135,0.146,-0.014,0.011,0.246,-0.144,0.106,0.071,-0.141,0.011,-0.246,-0.219,0.21,0.001,0.123,0.054,-0.12,0.234,0.012,0.073,-0.07,0.211,0.078,-0.184,-0.084,0,-0.027,-0.171,-0.033,-0.248,0.175,0.465,0.13,-0.024,-0.156,0.23,0.223,0.039,-0.099,-0.179,-0.193,-0.169,0,-0.053,0.357,-0.102,-0.026,-0.276,0.051,-0.151,0.086,0.081,0.06,0.147,-0.07,-0.078,-0.249,0.029,0.311,-0.116,-0.099,-0.074,-0.047,-0.048,-0.083,0.33,-0.04,-0.099,-0.008,0.061,0.024,0.167,-0.01,0.049,0.22,-0.044,0.308,0.089,-0.249,0.066,0.103,0.099,0.138,-0.065,-0.208,0.074,-0.122,-0.156,0.108,0.057,0.107,-0.002,-0.067,0.016,-0.053,-0.076,-0.115,-0.25,-0.18,-0.271,-0.102,0.116,0.048,0.081,-0.245,-0.069,0.114,-0.053,-0.068,-0.011,0.004,-0.027,0.413,0.078,0.02,0.24,-0.219,-0.092,0.113,-0.193,-0.081,0.046,-0.007,0.275,0.199,0.068,-0.325,0.14,-0.079,0.005,-0.06,0.039,-0.004,-0.141,0.056,0.098,-0.01,-0.046,0,-0.116,0.03,0.056,-0.214,0.086,0.087,-0.112,0.136,-0.027,0.008,0.112,0.162,0.115,-0.07,-0.012,-0.063,0.047,0.278,0.105,0.23,0.023,-0.214,0.056,0.163,0.057,-0.028,-0.194,-0.098,0.341,0.158,0.09,-0.024,0.049,-0.036,0.044,0.033,0.027,-0.053,0.026,0.08,-0.097,-0.067,-0.169,0.251,-0.214,-0.197,-0.068,0.057,0.158,0.005,-0.007,-0.216,-0.084,0.01,-0.189,-0.03,-0.057,0,-0.017,0.124,-0.113,0.053,-0.012,0.013],"source":"src/helpers/battle/battleUI.js [getStatButtons]","tags":["code","what","function","utility","../../utils/scheduler.js","querySelectorAll"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/battle/battleUI.js","node":"getStatButtons"},"patterns":[],"relations":{"imports":["../../utils/scheduler.js"],"calls":["querySelectorAll"]}},"version":1},
{"id":"battleUI.js-getRoundMessageEl","text":"Get the element used for round messages.\n\n@returns {HTMLElement|null} The round message element or null.\n\nexport function getRoundMessageEl() {\n  return document.getElementById(\"round-message\");\n}","qaContext":"Why: Get the element used for round messages. How: @returns {HTMLElement|null} The round message element or null.","embedding":[0.125,0.288,0.034,0.244,0.298,-0.077,0.214,0.067,0.451,-0.31,0.043,-0.121,-0.29,-0.228,0.223,-0.059,-0.097,-0.21,0.011,-0.049,0.046,0.049,0.052,0.147,0.029,0.166,0.012,-0.1,-0.071,-0.19,-0.019,0.035,-0.005,-0.083,-0.068,0.094,0.112,0.148,0.2,0.004,-0.124,0.068,0.174,-0.119,0.053,-0.276,-0.269,0.193,0.017,0.138,0.245,-0.201,0.068,0.227,-0.06,-0.01,-0.106,-0.044,0.114,0.159,-0.121,-0.408,0.182,-0.137,-0.165,-0.196,-0.143,-0.406,-0.341,-0.039,0.098,-0.102,0.097,0.095,0.167,-0.093,-0.256,-0.047,0.069,0.227,-0.29,-0.15,0.026,-0.062,0.195,0.189,-0.026,0.068,0.014,0.03,-0.281,0.205,-0.177,0.371,-0.175,0.382,-0.143,-0.086,-0.231,0.162,0.252,0.049,0.077,-0.259,0.091,0.013,0.049,-0.171,-0.072,0.02,-0.208,0.171,0.226,0.195,-0.049,-0.245,0.011,-0.249,0.231,-0.067,0.426,0.041,0.105,-0.022,0.22,0.198,0.401,0,-0.182,0.117,-0.063,0.279,-0.022,0.003,-0.072,0.02,0.024,-0.182,-0.186,0.107,0.062,-0.287,0.166,0.046,0.093,0.007,0.202,-0.116,-0.183,-0.206,0.111,0.177,0.174,0.143,-0.113,-0.108,-0.413,0.048,0.176,0.152,0.273,0.163,0.201,0.154,-0.044,0.12,-0.218,0.135,0.026,-0.24,-0.125,-0.219,-0.218,0.025,0.077,0.152,0.013,-0.199,-0.164,0.175,0.221,-0.214,0.266,-0.086,0.143,-0.054,-0.133,-0.198,0.104,0.213,0.21,-0.264,-0.172,-0.157,-0.103,-0.09,-0.392,-0.285,0.233,-0.091,0.338,0.342,-0.052,-0.163,-0.141,0.049,0.348,-0.103,0.114,-0.203,-0.153,-0.104,0.353,0.117,0.108,-0.223,0.151,0.262,-0.391,-0.164,-0.142,-0.014,-0.209,0,-0.273,0.235,-0.258,0.173,-0.089,0.253,0.045,0.096,0.125,0.062,0.108,0.066,-0.247,-0.154,0.157,0.4,0.074,-0.154,-0.066,-0.217,0.299,-0.235,-0.178,0.08,-0.204,0.014,0.188,-0.05,-0.005,-0.109,-0.055,0.123,0.239,-0.035,0.132,-0.311,0.196,-0.118,0.193,0.171,-0.017,-0.051,-0.281,0.07,-0.194,0.015,0.079,0.051,-0.029,-0.073,0.024,-0.199,0.257,0.167,-0.109,0.099,-0.201,0.022,0.092,-0.001,-0.221,-0.246,0.142,-0.067,0.128,0.156,-0.111,0.249,-0.087,0.33,0.045,0.009,0.123,-0.156,-0.042,0.152,0.126,-0.139,0.074,-0.066,0.4,0.109,0.017,-0.24,0.139,-0.191,-0.115,0.139,-0.101,0.166,-0.033,0.003,0.156,-0.047,0.013,0,-0.413,-0.309,0.175,-0.384,0.221,0.224,0.081,-0.086,-0.072,-0.239,-0.004,0.113,0.177,-0.177,0.074,-0.044,-0.185,0.175,0.001,-0.121,0.194,0.137,-0.028,-0.1,0.213,-0.136,-0.049,0.138,-0.142,-0.213,-0.292,0.13,-0.08,0.016,-0.283,0.029,0.192,-0.18,0.125,0.139,0.142,-0.009,-0.221,-0.144,-0.153,0.075,-0.232,-0.13,-0.006,0.06,-0.097,-0.064,-0.069,0.226,-0.296,-0.144,0.177,-0.026,-0.122,0.07,-0.178,0.109,0.156,0.072],"source":"src/helpers/battle/battleUI.js [getRoundMessageEl]","tags":["code","what","function","utility","../../utils/scheduler.js","getElementById"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/battle/battleUI.js","node":"getRoundMessageEl"},"patterns":[],"relations":{"imports":["../../utils/scheduler.js"],"calls":["getElementById"]}},"version":1},
{"id":"battleUI.js-resetStatButtons","text":"Remove highlight and focus from all stat buttons.\n1. Loop over buttons returned by `getStatButtons`.\n2. Remove the `selected` class and any inline background color.\n3. Disable the button to clear active/tap highlight.\n4. Force reflow so Safari clears the overlay.\n5. In the next frame via the shared scheduler re-enable, clear styles, and blur.\n\nexport function resetStatButtons(\n  scheduler = {\n    onFrame: scheduleFrame,\n    cancel: cancelFrame\n  }\n) {\n  console.log(\"INFO: resetStatButtons called\");\n  try {\n    const before = document.querySelectorAll(\"#stat-buttons .selected\").length;\n    console.warn(`[test] resetStatButtons: before=${before}`);\n  } catch {}\n  const { onFrame, cancel } = scheduler;\n  getStatButtons().forEach((btn) => {\n    btn.classList.remove(\"selected\");\n    btn.style.removeProperty(\"background-color\");\n    btn.disabled = true;\n    void btn.offsetWidth;\n    let frameId = 0;\n    frameId = onFrame(() => {\n      btn.disabled = false;\n      btn.style.backgroundColor = \"\";\n      btn.blur();\n      cancel(frameId);\n    });\n  });\n  try {\n    const after = document.querySelectorAll(\"#stat-buttons .selected\").length;\n    console.warn(`[test] resetStatButtons: after=${after}`);\n  } catch {}\n}","qaContext":"Why: Remove highlight and focus from all stat buttons. How: Loop over buttons returned by `getStatButtons`.","embedding":[-0.093,-0.044,0.083,0.219,0.168,0.027,0.216,-0.123,-0.047,-0.056,-0.095,0.122,-0.157,-0.032,-0.004,0.051,-0.106,-0.054,-0.081,-0.083,0.098,-0.045,0.161,0.11,-0.086,-0.02,0.085,-0.156,-0.037,-0.085,-0.038,-0.022,0.051,-0.083,-0.168,-0.07,-0.091,0.066,-0.021,0.039,-0.119,0.069,-0.139,-0.029,0.006,-0.005,-0.054,0.094,0.075,0.072,0.086,-0.087,0.034,-0.129,0.037,0.079,0.071,0.015,0.107,0.042,-0.074,-0.098,0.02,0.05,0.13,0.239,0.034,0.037,-0.04,0.079,0.012,-0.039,0.134,-0.019,0.022,0.049,-0.09,-0.016,-0.073,0.078,-0.015,-0.254,-0.041,0.048,0.169,0.004,-0.041,-0.034,-0.068,-0.144,-0.052,0.083,0.017,0.1,0.021,0.14,-0.093,0.009,-0.054,0.132,0.095,-0.16,-0.042,0.062,-0.085,-0.064,-0.043,0.056,-0.103,0.07,0.015,-0.018,0.045,0.094,-0.054,0.086,0.155,0.078,0.085,-0.086,0.243,0.07,-0.055,-0.091,0.04,-0.055,0.199,0,-0.005,-0.164,-0.234,-0.077,0.049,0.067,0.065,-0.009,-0.124,0.066,0.148,-0.053,0.023,-0.134,-0.002,-0.156,0.181,0.062,0.039,-0.026,0.027,0.131,-0.112,0.085,-0.119,0.016,-0.009,0.034,-0.07,-0.014,0.011,0.142,-0.088,0.096,-0.053,0,-0.034,0.012,-0.01,-0.02,-0.196,0.055,-0.104,-0.023,0.043,-0.067,-0.006,0.075,-0.012,0.024,-0.058,0.059,0.058,-0.216,-0.012,0.075,0.105,0.01,-0.134,0.023,0.107,-0.081,-0.054,-0.065,-0.147,0.098,0.01,0.054,-0.042,-0.234,0.017,0.042,0.096,-0.056,0.035,-0.028,0.023,0.04,-0.091,-0.036,0.054,0.01,-0.163,0.057,0.056,0.045,0.052,0.041,-0.034,0.166,-0.044,0.035,-0.039,-0.03,-0.071,0,0.036,0.206,-0.058,0.1,-0.096,0.054,0.074,0.149,-0.025,-0.182,0.059,0,0.022,-0.055,-0.125,0.256,-0.081,0.104,-0.271,0.07,0.083,0.032,0.147,-0.088,-0.106,0.066,-0.006,0.208,0.139,-0.006,-0.033,0.082,-0.028,0.018,0.019,-0.053,-0.019,0.042,-0.09,0.134,0.057,-0.017,-0.102,-0.117,-0.013,0.149,0.02,0.143,-0.175,-0.121,-0.048,-0.018,-0.089,-0.01,-0.032,-0.078,-0.045,-0.112,0.077,0.102,0.116,-0.041,0.02,0.075,0.088,-0.068,-0.021,0.108,0.139,0.138,-0.035,0.023,0.057,-0.071,0.063,0.023,-0.027,-0.087,-0.042,0.05,0.057,0.035,0.017,-0.162,-0.002,0.075,-0.091,0,0.065,-0.015,-0.128,-0.054,0.147,-0.045,-0.062,0,-0.037,0.003,0.074,-0.065,0.042,-0.175,-0.092,0.061,0.008,-0.073,0.052,0.189,0.125,-0.029,-0.189,0.012,-0.102,0.037,0.025,0.132,0.022,-0.16,-0.009,0.07,0.022,-0.028,-0.106,0.054,0.236,0.108,-0.115,-0.016,0.084,-0.034,-0.072,-0.074,-0.071,-0.051,0.042,0.116,-0.049,-0.105,0.013,0.09,-0.035,-0.218,-0.066,0.006,0.034,-0.013,-0.126,-0.052,-0.043,0.086,0.068,-0.147,0.009,0.105,-0.118,0.093,0.025,-0.031,-0.173,-0.064],"source":"src/helpers/battle/battleUI.js [resetStatButtons]","tags":["code","how","function","utility","../../utils/scheduler.js","log","forEach","getStatButtons","remove","removeProperty","onFrame","blur","cancel","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/battle/battleUI.js","node":"resetStatButtons"},"patterns":[],"relations":{"imports":["../../utils/scheduler.js"],"calls":["log","forEach","getStatButtons","remove","removeProperty","onFrame","blur","cancel"]}},"version":1},
{"id":"battleUI.js-showResult","text":"export function showResult(\n  message,\n  scheduler = {\n    onFrame: scheduleFrame,\n    cancel: cancelFrame,\n    setTimeout: globalThis.setTimeout,\n    clearTimeout: globalThis.clearTimeout\n  }\n) {\n  const { onFrame, cancel, setTimeout, clearTimeout } = scheduler;\n  const el = getRoundMessageEl();\n  if (!el) return;\n\n  if (cancelFade) {\n    cancelFade();\n  }\n\n  el.classList.add(\"fade-transition\");\n  el.textContent = message;\n  el.classList.remove(\"fading\");\n  el.style.removeProperty(\"opacity\");\n\n  if (!message) return;\n\n  let frameId = 0;\n  frameId = onFrame(() => {\n    el.style.opacity = 0;\n    cancel(frameId);\n  });\n\n  const timeoutId = setTimeout(() => {\n    el.classList.add(\"fading\");\n    el.style.removeProperty(\"opacity\");\n    cancelFade = undefined;\n  }, 2000);\n\n  function cancelFadeFn() {\n    cancel(frameId);\n    clearTimeout(timeoutId);\n    el.classList.remove(\"fading\");\n    el.style.removeProperty(\"opacity\");\n    cancelFade = undefined;\n  }\n\n  cancelFade = cancelFadeFn;\n}","qaContext":"Why: export function showResult( message, scheduler = { onFrame: scheduleFrame, cancel: cancelFrame, setTimeout: globalThis. How: setTimeout, clearTimeout: globalThis.","embedding":[-0.047,0.084,0.14,0.142,0.102,-0.009,0.147,-0.024,0.248,-0.156,0.04,0.014,-0.136,-0.028,-0.014,0.063,-0.035,-0.04,-0.122,-0.082,0.172,-0.066,0.069,0.054,-0.021,0.01,-0.017,-0.094,0.028,-0.025,0.034,-0.071,0.067,-0.018,-0.121,0.021,-0.024,-0.014,0.033,0.062,-0.062,0.06,-0.078,-0.183,0.03,-0.112,-0.055,-0.119,0.032,0.096,0.13,-0.051,-0.063,-0.111,0.035,0.176,0.041,0.101,0.065,0.058,-0.094,-0.015,0.028,-0.006,0.033,0.06,0.035,-0.045,-0.057,0.126,-0.023,-0.027,0.163,0.125,-0.063,0.043,-0.027,0.053,-0.106,0.084,0.031,-0.305,-0.029,-0.031,0.113,0.027,0.02,0.007,-0.037,0.025,-0.147,0.058,-0.042,0.105,-0.055,0.082,-0.148,-0.017,-0.089,0.174,-0.059,-0.088,0.046,0.028,-0.13,-0.063,0.02,0.085,-0.23,0.048,-0.031,-0.009,0.07,0.065,-0.009,0.185,0.071,0.082,0.194,-0.05,0.265,0.022,0.03,-0.047,0.061,-0.074,0.213,0,-0.119,-0.11,-0.219,0.055,0.164,0.1,0.038,-0.053,-0.119,-0.115,0.053,-0.012,0.026,-0.073,0.049,-0.135,0.257,0.032,0.174,-0.048,0.133,-0.101,-0.074,-0.007,0.011,0.037,0.003,-0.098,-0.067,-0.033,0.036,0.103,-0.006,0.116,0.126,0.016,-0.063,0.016,0.029,-0.044,-0.112,-0.072,-0.207,0.016,-0.03,-0.055,0.17,0.101,0.007,0.065,0.043,0.07,-0.034,-0.278,0.08,-0.028,0.046,-0.021,-0.095,-0.022,0.071,0.132,0.043,-0.211,-0.057,0.046,-0.133,-0.126,-0.15,-0.281,0.022,-0.08,0.206,0.075,-0.002,0.024,-0.116,0.051,0.019,-0.124,0.067,-0.084,-0.085,0.013,0.116,-0.028,0.069,0.003,-0.084,0.192,-0.149,0.006,0.097,0.064,-0.017,0,0.066,0.121,-0.167,0.048,0.038,0.157,0.066,0.152,-0.034,-0.051,0.147,0.09,-0.052,-0.081,-0.178,0.105,0.082,0.058,-0.11,0.039,0.017,0.113,-0.041,-0.077,-0.044,0.026,0.008,0.145,-0.062,-0.082,-0.134,-0.003,-0.023,-0.108,0.057,-0.034,-0.003,-0.026,-0.124,0.053,0.099,-0.094,-0.182,-0.092,-0.054,0.183,-0.006,-0.014,0.021,-0.018,0.034,-0.115,0.071,-0.008,0.044,0.036,0.048,-0.066,0.041,0.105,0.1,-0.134,0.107,-0.024,0.222,-0.024,-0.082,0.126,0.083,0.059,0.042,-0.034,-0.041,-0.082,0.053,0.02,0.039,-0.178,-0.052,0.091,0.056,0.006,-0.022,-0.044,-0.085,0.013,-0.163,0.065,0.017,0.083,-0.119,-0.06,0.11,-0.006,-0.018,0,-0.187,-0.095,0.18,-0.239,0.069,-0.134,0.047,-0.115,0.023,-0.215,0.041,0.034,0.19,-0.045,-0.064,-0.009,-0.102,0.085,0.033,0.074,-0.027,-0.076,-0.018,-0.027,0.051,-0.095,0.042,0.083,0.072,-0.013,-0.159,-0.003,0.072,-0.091,-0.19,-0.107,0.046,-0.104,0.048,0.23,0.095,-0.027,-0.103,0.068,0.072,-0.05,0.073,-0.178,-0.068,0.166,-0.058,-0.064,-0.159,-0.007,-0.036,-0.254,0.079,0.091,-0.171,0.203,-0.07,0.029,-0.018,-0.056],"source":"src/helpers/battle/battleUI.js [showResult]","tags":["code","how","function","utility","../../utils/scheduler.js","getRoundMessageEl","cancelFade","add","remove","removeProperty","onFrame","cancel","setTimeout","clearTimeout"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/battle/battleUI.js","node":"showResult"},"patterns":[],"relations":{"imports":["../../utils/scheduler.js"],"calls":["getRoundMessageEl","cancelFade","add","remove","removeProperty","onFrame","cancel","setTimeout","clearTimeout"]}},"version":1},
{"id":"vectorSearchPage.js-selectMatches","text":"Select matches to render based on similarity scores.\n\n@param {Array<{score:number}>} strongMatches - Results meeting the similarity threshold.\n@param {Array<{score:number}>} weakMatches - Results below the threshold.\n@returns {Array} Matches chosen for display.\n1. If `strongMatches` has entries:\n   a. When multiple strong matches and the score gap between the first two exceeds `DROP_OFF_THRESHOLD`, return only the first.\n   b. Otherwise, return all strong matches.\n2. If no strong matches, return the first three `weakMatches`.\n\nexport function selectMatches(strongMatches, weakMatches) {\n  if (strongMatches.length > 0) {\n    if (\n      strongMatches.length > 1 &&\n      strongMatches[0].score - strongMatches[1].score > DROP_OFF_THRESHOLD\n    ) {\n      return [strongMatches[0]];\n    }\n    return strongMatches;\n  }\n  return weakMatches.slice(0, 3);\n}","qaContext":"Why: Select matches to render based on similarity scores. How: @param {Array<{score:number}>} strongMatches - Results meeting the similarity threshold.","embedding":[-0.033,0.055,0.016,-0.03,0.15,0.109,0.082,0.005,0.058,-0.118,-0.163,-0.12,0.003,0.027,0.041,0.049,0.013,-0.125,-0.074,-0.165,0.1,-0.071,-0.107,0.006,0.013,0.144,0.05,0.019,-0.101,-0.117,-0.084,-0.051,0.109,0.087,-0.115,-0.051,-0.175,-0.009,0.062,-0.064,0.015,0.12,-0.126,-0.125,-0.061,-0.041,-0.283,0.007,-0.052,0.076,-0.224,0.15,0.051,0.051,0.171,-0.001,-0.013,-0.164,-0.008,-0.113,0.079,-0.278,0.081,-0.181,0.232,-0.072,0.063,-0.048,0.08,0.215,0.014,0.076,0.158,-0.001,-0.06,0.1,-0.159,-0.177,-0.002,0.06,-0.149,-0.095,-0.104,0.133,0.04,0.001,-0.02,-0.093,0.168,-0.136,-0.063,0.108,0.098,0.185,-0.038,0.082,0.007,-0.035,0.06,0.123,-0.109,-0.012,0.103,-0.117,-0.085,-0.044,0.06,-0.004,-0.101,-0.066,0.041,0.082,0.087,0.146,-0.161,0.046,0.292,-0.06,0.05,0.166,0.233,0.075,0.001,-0.028,0.049,0.156,-0.044,0,0.032,-0.257,-0.069,-0.19,-0.013,-0.126,-0.181,-0.028,-0.11,0.072,-0.094,0.147,0.038,0.051,0.044,-0.153,0.174,-0.102,-0.04,-0.055,-0.133,-0.107,-0.074,0.035,-0.008,-0.044,-0.071,-0.062,-0.032,-0.046,0.125,0.073,-0.02,-0.015,0.266,0.108,-0.038,0.108,-0.032,0.04,-0.077,-0.014,-0.007,0.042,0.105,0.013,-0.019,0.034,-0.086,0.06,0.077,-0.034,0.062,-0.105,-0.014,-0.087,0.009,0.118,0.104,0.045,-0.022,0.001,-0.001,0.008,-0.01,0.032,-0.061,-0.025,-0.056,0.054,0.085,0.18,0.104,-0.152,0.031,-0.116,0.111,0.038,0.037,-0.25,-0.155,-0.191,-0.191,-0.135,-0.067,0.158,0.007,-0.109,-0.128,-0.091,-0.092,0.043,0.019,-0.193,0.072,0,0.071,0.018,0.127,0.009,0.098,-0.048,0.075,0.068,-0.127,0.053,0.049,0.02,-0.028,-0.111,-0.047,0.08,0.078,-0.02,0.031,-0.125,0.137,0.036,-0.129,0.164,-0.196,0.08,0.192,-0.175,-0.033,-0.098,0.027,-0.013,0.126,0.09,0.036,-0.08,-0.086,-0.085,-0.064,0.154,-0.223,0.03,-0.099,0.124,-0.004,0.035,0.141,0.047,-0.001,-0.165,0.018,0.045,-0.177,0.186,-0.001,-0.084,-0.079,-0.005,-0.057,0.233,-0.042,-0.042,0.111,0.167,0.233,-0.042,-0.167,0.069,0.044,0.275,-0.01,0.069,0.209,-0.048,-0.043,-0.045,-0.123,0.101,0.088,0.208,-0.003,0.012,0.03,0.105,-0.08,0.161,0.016,0.038,0.031,0.075,0.028,-0.021,0.122,-0.181,-0.11,0,-0.023,-0.219,-0.16,-0.021,0,0.141,-0.03,0.094,-0.005,-0.067,0.057,0.112,-0.031,0.095,0.168,-0.124,-0.004,0.159,-0.047,0.158,-0.073,0.031,-0.059,0.099,0.092,0.001,-0.074,-0.093,0.081,0.119,0.049,0.028,0.179,-0.088,0.139,0.061,-0.161,-0.072,0.046,0.18,-0.035,0.012,-0.078,-0.026,0.066,-0.168,0.08,-0.136,0.081,-0.052,0.012,-0.203,-0.106,0.05,-0.121,-0.158,-0.104,0.062,-0.006,-0.058,0.246,-0.215,0.006,0.125],"source":"src/helpers/api/vectorSearchPage.js [selectMatches]","tags":["code","what","function","utility","slice"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/api/vectorSearchPage.js","node":"selectMatches"},"patterns":[],"relations":{"imports":[],"calls":["slice"]}},"version":1},
{"id":"vectorSearchPage.js-getExtractor","text":"Load the MiniLM feature extractor on first use.\n\n@returns {Promise<any>} The feature extraction pipeline instance.\n1. If `extractor` is already initialized (cached), return it immediately.\n2. If `extractor` is not initialized, begin a `try...catch` block to handle potential loading errors:\n   a. Inside the `try` block:\n      i. Dynamically import the `pipeline` function from the Transformers.js library.\n      ii. Instantiate a feature-extraction pipeline using the \"Xenova/all-MiniLM-L6-v2\" model, ensuring it's quantized.\n      iii. Assign the created pipeline instance to `extractor`.\n   b. In the `catch` block (if an error occurs during loading):\n      i. Log an error message \"Model failed to load\" along with the `error` object to the console.\n      ii. Reset `extractor` to `null` to ensure that the next call will re-attempt loading.\n      iii. Re-throw the `error` to propagate the failure to the caller.\n3. Return the initialized `extractor` instance.\n\nexport async function getExtractor() {\n  if (!extractor) {\n    try {\n      const { pipeline } = await import(\n        \"https://cdn.jsdelivr.net/npm/@xenova/transformers@2.6.0/dist/transformers.min.js\"\n      );\n      extractor = await pipeline(\"feature-extraction\", \"Xenova/all-MiniLM-L6-v2\", {\n        quantized: true\n      });\n    } catch (error) {\n      console.error(\"Model failed to load\", error);\n      extractor = null;\n      throw error;\n    }\n  }\n  return extractor;\n}","qaContext":"Why: Load the MiniLM feature extractor on first use. How: Instantiate a feature-extraction pipeline using the \"Xenova/all-MiniLM-L6-v2\" model, ensuring it's quantized.","embedding":[-0.186,0.062,0.058,0.095,0.097,0.003,-0.165,0.11,0.025,-0.043,0.032,-0.074,-0.151,0.03,0.078,0.076,-0.007,0.05,-0.132,-0.062,0.159,0.067,-0.073,-0.028,-0.021,-0.012,-0.16,-0.107,0.132,-0.074,-0.032,-0.018,-0.16,0.002,0.087,0.237,-0.124,-0.036,0.009,-0.117,0.074,-0.03,-0.128,-0.198,0.058,-0.244,-0.038,-0.016,-0.023,0.002,-0.01,0.087,-0.041,0.149,-0.013,0.057,0.074,-0.013,0.029,0.038,-0.07,-0.108,0.111,0.023,0.095,-0.084,-0.014,-0.048,0.008,0.039,-0.055,-0.054,-0.112,-0.008,0.026,0.03,0.122,0.058,0.065,0.004,-0.118,-0.136,-0.075,0.03,-0.041,0.118,-0.06,-0.053,0.077,-0.072,-0.1,-0.043,-0.022,0.212,0.089,0.016,0.072,0.083,-0.021,0.08,-0.086,0.011,0.083,0.066,0.026,-0.139,0.014,-0.113,-0.116,-0.064,0.059,0.06,0.079,-0.061,0.136,0.011,0.099,0.038,-0.113,0.1,0.134,-0.008,0.14,0.073,0.192,0.026,0.058,0,0.039,-0.124,-0.018,0.057,0,0.033,0.145,0.079,-0.141,0.08,-0.048,0.02,-0.138,-0.122,0,-0.045,0.093,-0.042,0.093,0.121,0.143,-0.134,-0.104,-0.011,-0.034,0.014,0.087,-0.033,-0.205,0.055,0.098,-0.046,-0.004,0.022,-0.036,-0.136,0.145,0.065,-0.273,-0.131,-0.019,0.097,-0.065,-0.066,-0.112,-0.184,0.09,-0.013,0.177,-0.104,0,0.1,0.017,-0.032,0.117,0.039,0.017,-0.023,0.061,0.004,-0.044,0.087,-0.115,0.081,0.07,0.005,0.022,-0.033,-0.088,-0.01,-0.123,-0.077,0.197,-0.111,0.317,-0.095,-0.007,0.047,0.003,-0.191,0.064,-0.047,-0.056,0.185,-0.02,0.147,0.015,-0.13,-0.009,0.062,-0.052,-0.067,-0.045,-0.034,-0.041,0,0.124,0.001,-0.031,0.082,0.093,-0.085,0.016,0.085,-0.068,-0.11,-0.06,0.021,-0.05,0.042,0.001,0.211,-0.036,-0.273,0.079,0.123,0.136,0.062,-0.086,0.052,-0.116,0.081,0.016,0.067,-0.054,-0.085,-0.087,0.079,-0.157,-0.021,-0.058,-0.107,-0.045,0.116,0.014,0.053,0.033,0.006,-0.213,-0.046,0,-0.124,0.212,0.009,-0.04,0.037,-0.035,0.011,-0.16,0.194,-0.011,-0.007,0.004,-0.116,0.013,0.138,-0.063,-0.107,-0.055,-0.194,-0.011,-0.077,-0.038,0.032,0.146,0.049,-0.006,0.004,0.129,-0.093,0.047,-0.074,-0.18,-0.274,0.164,0.042,-0.111,0.063,0.044,-0.023,0.238,-0.011,0.028,0.116,0.015,-0.045,-0.059,0.026,-0.015,0.001,-0.006,0,-0.091,0.013,-0.01,-0.016,0.084,-0.074,0.005,0.118,0.006,-0.048,0.023,0.154,-0.012,0.087,0.005,0.023,0.061,0.081,-0.094,-0.116,-0.018,-0.003,0.113,-0.102,-0.049,-0.14,0.131,-0.096,0.089,-0.024,-0.317,0.138,0.075,0.07,-0.013,0.074,0.121,-0.028,0.046,0.085,0.179,0.097,-0.069,0.006,-0.002,0.029,-0.114,-0.041,0.167,0.06,0.009,-0.127,-0.158,0.116,0.042,-0.102,0.075,-0.156,-0.017,0.026,0.099,-0.018,0.067,-0.164],"source":"src/helpers/api/vectorSearchPage.js [getExtractor]","tags":["code","what","function","utility","pipeline","error","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/api/vectorSearchPage.js","node":"getExtractor"},"patterns":[],"relations":{"imports":[],"calls":["pipeline","error"]}},"version":1},
{"id":"vectorSearchPage.js-preloadExtractor","text":"Preload the feature extractor without awaiting its result.\n1. Call `getExtractor()` to trigger the model download.\n2. Ignore any errors to avoid blocking page initialization.\n\nexport function preloadExtractor() {\n  getExtractor().catch(() => {});\n}","qaContext":"Why: Preload the feature extractor without awaiting its result. How: 1.","embedding":[-0.1,0.006,-0.041,0.162,0.319,0.064,-0.095,0.002,0.015,-0.015,0.064,-0.094,-0.166,-0.035,0.01,0.025,0.102,0.066,-0.019,0.028,-0.037,0.041,-0.033,0.063,-0.007,-0.176,-0.081,-0.058,0.225,0.06,0.004,-0.066,0.008,-0.055,0.115,-0.013,-0.178,-0.074,0.219,-0.025,0.2,-0.093,-0.067,-0.094,0.141,-0.259,0.016,0.062,0.097,-0.061,-0.049,0.124,-0.116,-0.135,0.132,0.015,0.085,-0.024,0.002,0.084,-0.129,-0.323,-0.144,-0.004,0.016,0.146,-0.148,0.062,0.143,-0.025,0.031,0,-0.008,-0.116,0.015,-0.113,-0.02,0.238,0.007,0.135,-0.151,-0.244,0.212,0.042,0.015,0.194,0.068,-0.074,0.052,0.002,-0.183,-0.066,-0.079,0.112,-0.157,0.227,-0.139,-0.131,-0.042,0.09,-0.027,0.103,0.07,0.105,-0.115,-0.129,0.268,0.024,-0.058,0.12,0.088,0.127,0.09,-0.139,-0.121,0.035,0.037,0.003,0.108,0.053,0.29,0.105,0.17,0.097,0.22,-0.091,0.164,0,-0.035,-0.07,-0.102,0.177,-0.248,-0.024,0.203,-0.023,0.036,-0.027,-0.287,-0.018,-0.14,0.135,-0.129,-0.003,-0.001,-0.059,0.258,0.218,0.23,-0.356,-0.135,0.004,0.046,0.09,-0.241,0.055,-0.248,0.143,0.151,-0.04,0.091,0.047,-0.121,-0.169,-0.046,0.04,-0.15,-0.087,0.091,0.04,-0.16,-0.183,-0.151,-0.113,-0.166,-0.203,0.151,-0.028,-0.063,0.164,0.084,-0.073,-0.103,-0.018,0.028,-0.091,0.134,-0.004,-0.116,0.144,-0.047,-0.107,0.07,-0.1,-0.001,-0.037,-0.189,-0.086,-0.149,-0.157,0.14,-0.317,0.391,-0.055,-0.174,0.057,0.213,-0.102,0.06,-0.2,-0.12,-0.119,0.186,0.2,-0.04,-0.2,0.11,0.093,0.041,0.03,-0.087,0.083,-0.055,0,0.278,-0.077,-0.04,-0.121,0.029,0.037,0.018,0.079,-0.143,0.032,0.121,-0.097,-0.176,-0.005,0.085,0.273,0.007,-0.218,0.042,0.082,0.095,-0.143,-0.064,0.06,-0.152,-0.088,0.149,0.198,-0.13,0.088,-0.17,0.193,-0.15,-0.004,-0.059,0.151,-0.075,0.193,0.183,0.247,0.128,-0.09,-0.317,-0.107,0.088,-0.068,0.198,0.125,0.061,-0.002,0.053,0.134,0.03,-0.096,-0.006,-0.063,0.01,-0.267,-0.121,0.188,-0.118,-0.116,-0.068,-0.201,0.027,-0.103,-0.014,0.296,0.027,0.12,-0.238,-0.042,0.016,-0.042,-0.009,-0.046,-0.122,-0.141,0.28,-0.087,0.008,0.218,0.035,-0.085,0.218,-0.043,-0.006,-0.018,0.045,-0.175,-0.113,0.026,0.021,0.072,-0.02,0,-0.361,0.027,0.173,-0.032,0.086,0.029,-0.002,0.083,-0.077,-0.188,0.005,0.125,-0.056,0.224,0.075,-0.032,0.114,0.171,-0.105,-0.241,0.073,0.01,0.307,-0.175,0.246,-0.22,0.073,-0.039,0.143,0.001,-0.206,0.084,-0.13,0.067,0.027,0.187,0.175,-0.123,-0.034,0.07,0.231,0.139,-0.109,-0.125,-0.143,0.157,-0.1,-0.137,0.166,0.027,0.095,-0.063,-0.175,0.339,-0.081,-0.213,-0.06,-0.193,0.041,0.082,0.049,0,0.115,-0.029],"source":"src/helpers/api/vectorSearchPage.js [preloadExtractor]","tags":["code","what","function","utility","catch","getExtractor"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/api/vectorSearchPage.js","node":"preloadExtractor"},"patterns":[],"relations":{"imports":[],"calls":["catch","getExtractor"]}},"version":1},
{"id":"vectorSearchPage.js-__setExtractor","text":"Inject a custom extractor for testing purposes.\nThis allows mock extractor implementations to be used during tests\nwithout affecting the production loading logic.\n\n@param {any} model - The mock extractor instance to use.\n1. Assign the provided `model` to the `extractor` variable.\n\nexport function __setExtractor(model) {\n  extractor = model;\n}","qaContext":"Why: Inject a custom extractor for testing purposes. How: This allows mock extractor implementations to be used during tests without affecting the production loading logic.","embedding":[-0.242,0.101,-0.098,0.149,0.129,-0.029,-0.094,0.029,-0.008,0.01,0.024,-0.153,-0.077,-0.042,0.217,-0.101,0.131,-0.016,0.011,-0.065,0.035,-0.038,-0.017,0.094,-0.084,-0.243,-0.13,0.004,0.165,-0.013,0.214,0.02,-0.085,0,0.239,0.048,0.01,-0.018,0.108,-0.011,0.117,-0.11,-0.031,-0.277,0.138,-0.173,0.149,0.008,0.018,0.039,-0.072,0.092,-0.061,0.03,0.035,-0.005,0.173,-0.261,0.014,0.118,-0.139,-0.075,0.046,-0.009,0.038,-0.012,-0.135,0.179,0.082,-0.155,-0.069,-0.111,0.051,-0.073,0.02,0.169,-0.122,-0.007,0.131,0.139,-0.129,-0.039,0.044,0.032,-0.185,0.228,0.224,-0.102,0.102,0.051,-0.015,-0.08,-0.175,0.263,0.041,-0.037,0.227,-0.03,0.073,0.198,-0.031,0.122,0.2,-0.117,-0.209,-0.027,0.094,-0.351,0.068,-0.079,0.064,0.139,0.044,-0.118,0.082,-0.099,-0.005,-0.052,-0.003,0.04,0.157,0.059,0.17,0.226,0.232,0.096,0.122,0,-0.037,-0.152,0.062,0.181,0.011,0.164,0.108,0.066,-0.01,-0.013,-0.038,0.005,-0.135,0.097,-0.096,0.229,-0.099,-0.077,0.194,0.213,0.227,-0.218,-0.221,-0.059,-0.108,0.065,-0.126,0.012,-0.207,0.078,0.127,0.003,-0.026,0.197,-0.062,-0.041,0.058,0.122,-0.356,-0.026,0.138,-0.067,0.011,0.08,-0.053,-0.192,-0.083,-0.117,0.228,-0.097,0.034,0.148,0.13,-0.246,-0.105,-0.003,0.191,-0.094,0.205,0.05,-0.223,0.179,-0.076,0.152,0.074,0,-0.072,-0.209,-0.019,0.126,-0.142,0.009,-0.138,-0.072,0.079,-0.152,-0.078,0.127,0.097,-0.085,0.129,-0.055,-0.086,-0.04,-0.038,-0.033,-0.083,-0.286,0.132,-0.255,-0.115,0.01,-0.188,-0.02,0.171,0,0.217,0.014,-0.044,0.14,0.137,-0.118,0.096,0.118,-0.062,0.07,-0.036,-0.264,-0.071,-0.007,-0.002,0.011,-0.074,-0.351,-0.011,0.078,-0.015,0.116,0.184,-0.055,-0.107,0.023,0.019,0.05,-0.012,-0.014,-0.244,0.173,-0.015,0.01,-0.126,0.042,0.028,0.154,0.092,0.159,-0.066,0.169,-0.267,0.057,-0.018,0.131,0.012,-0.085,0.034,-0.037,0.109,0.017,-0.171,0.077,0.161,-0.138,-0.221,-0.202,-0.05,0.103,-0.041,0.057,-0.184,-0.096,-0.09,-0.133,-0.059,0.124,0.012,0.1,0.061,-0.072,0.155,0.06,0.125,-0.025,-0.196,-0.095,0.193,0.136,-0.094,-0.113,0.119,-0.017,0.024,-0.086,0.058,0.184,-0.029,0.033,0.023,-0.069,0.038,0.058,-0.021,0,-0.192,-0.081,0.103,0.047,-0.227,0.011,0.008,-0.077,0.017,-0.042,-0.084,0.09,-0.058,0.098,0.048,-0.044,0.116,0.235,-0.081,-0.074,-0.073,0.159,0.374,-0.11,0.103,0.105,0.055,-0.096,0.088,0.048,-0.071,-0.046,-0.058,-0.053,-0.051,0.245,-0.064,0.111,0.069,0.172,-0.115,-0.08,-0.234,-0.242,-0.201,-0.174,-0.329,-0.139,0.053,-0.004,0.061,-0.161,-0.22,0.069,-0.142,-0.082,0.082,-0.088,-0.198,-0.08,0.099,-0.01,0.106,-0.038],"source":"src/helpers/api/vectorSearchPage.js [__setExtractor]","tags":["code","what","function","utility"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/api/vectorSearchPage.js","node":"__setExtractor"},"patterns":[],"relations":{"imports":[],"calls":[]}},"version":1},
{"id":"countryService.js-loadCountryMapping","text":"Load the country code mapping with caching and persistence.\n\n@returns {Promise<Record<string, {code: string, country: string, active: boolean}>>}\n1. If `mapping` (in-memory cache) exists, return it.\n2. If no `mappingPromise`, start loading from storage or network/module.\n3. On success, persist to storage and cache in memory.\n4. Await `mappingPromise`, assign to `mapping`, and return it.\n\nexport async function loadCountryMapping() {\n  if (mapping) return mapping;\n  if (!mappingPromise) {\n    mappingPromise = (async () => {\n      const cached = getItem(STORAGE_KEY);\n      if (cached) return cached;\n      try {\n        const data = await fetchJson(`${DATA_DIR}countryCodeMapping.json`);\n        setItem(STORAGE_KEY, data);\n        return data;\n      } catch (err) {\n        // Prefer debug logs in tests/CI to reduce noise.\n        debugLog(\"Failed to fetch countryCodeMapping.json\", err);\n        const data = await importJsonModule(\"../../data/countryCodeMapping.json\");\n        setItem(STORAGE_KEY, data);\n        return data;\n      }\n    })();\n  }\n  mapping = await mappingPromise;\n  return mapping;\n}","qaContext":"Why: Load the country code mapping with caching and persistence. How: @returns {Promise<Record<string, {code: string, country: string, active: boolean}>>} 1.","embedding":[-0.024,0.128,-0.127,0.115,-0.026,-0.052,-0.088,0.007,-0.013,-0.004,0.061,-0.11,-0.057,-0.03,0.036,0.073,-0.019,-0.018,-0.034,-0.091,0.095,-0.042,0.092,-0.051,0.077,-0.073,-0.011,-0.146,0.013,0.028,0.025,0.01,-0.234,0.04,0.098,0.196,-0.15,-0.204,0.044,-0.119,0.142,0.156,-0.075,-0.067,0.105,-0.073,0.074,0.137,-0.129,0.057,-0.01,0.08,-0.138,-0.057,0.035,0.087,-0.009,0.069,-0.099,0.051,0.005,-0.179,0.136,-0.087,0.055,-0.025,0.012,0,0.121,-0.025,0.064,0.017,-0.014,-0.065,-0.002,-0.04,-0.045,-0.076,0.028,-0.103,-0.027,-0.066,0.025,-0.008,0.004,0.035,0.067,-0.1,0.008,-0.086,-0.039,-0.07,-0.099,0.174,-0.058,-0.024,0.095,0.109,-0.056,0.032,0.122,0.013,0.092,-0.036,-0.082,-0.167,0.075,-0.126,-0.171,0.117,-0.026,0.148,-0.094,0.095,-0.104,0.016,0.034,-0.013,0.031,0.155,0.17,-0.06,0.011,-0.123,-0.004,-0.053,0.097,0,0.052,-0.086,0.038,0.148,0.028,-0.084,0.106,-0.016,-0.197,0.017,-0.036,0.095,-0.062,0.007,-0.039,0.044,0.092,-0.146,0.163,0.16,0.114,-0.003,0.007,-0.07,0.182,-0.02,-0.063,0.146,-0.186,0.009,0.158,0.057,-0.118,-0.044,0.14,-0.019,0.006,0.019,-0.33,-0.069,0.097,0.02,-0.062,-0.046,-0.016,-0.315,0.052,0.012,0.144,0.087,0.011,0.072,-0.058,-0.118,0.14,-0.074,0.029,-0.102,0.108,0.049,-0.124,-0.23,0.01,0.066,0.13,0.047,-0.049,0.013,-0.054,-0.136,0.092,-0.149,0.106,0.089,0.021,0.114,-0.195,-0.041,-0.165,-0.116,0.086,-0.12,-0.298,0.215,-0.069,0.155,-0.032,-0.101,0.072,0.167,-0.138,0.042,0.076,-0.131,-0.036,0,0.086,-0.128,-0.042,0.077,-0.003,-0.137,0.264,0.053,-0.132,0.027,-0.125,-0.13,0.154,0.156,0.063,0.166,0.003,-0.085,0.137,0.095,0.009,0.141,-0.014,0.093,-0.144,0.079,-0.116,-0.083,-0.179,-0.159,-0.016,-0.074,-0.153,-0.078,-0.031,-0.075,0.192,0.103,-0.121,0.135,-0.05,-0.076,-0.124,0.006,-0.016,-0.114,0.082,0.041,-0.055,0.045,0.168,0.033,-0.13,-0.016,0.066,-0.024,-0.087,-0.109,0.142,-0.042,-0.126,-0.255,0.061,0.025,0.028,-0.192,-0.085,0.003,0.291,0.099,-0.025,0.095,-0.015,0.062,0.08,-0.055,-0.026,-0.056,0.193,0.06,-0.054,-0.098,-0.052,0.022,0.083,0.144,0.041,0,-0.025,0.003,-0.018,0.018,-0.291,-0.148,-0.117,0,-0.123,0.035,-0.024,0.131,-0.102,-0.145,0.208,-0.006,0.033,-0.036,0,0.112,0.02,-0.068,-0.031,-0.042,0.082,0.118,-0.06,0.072,-0.053,0.085,-0.081,0.041,0.189,0.055,0.172,0.06,0.062,-0.014,0.001,-0.076,0.114,-0.028,-0.077,-0.096,0.199,-0.098,0.093,0.067,0.123,0.125,0.045,0.057,-0.116,-0.109,0.008,0.049,0.076,0.023,-0.25,-0.113,-0.211,0.147,0.055,-0.091,0.046,-0.081,0.028,0.173,0.143,-0.129,-0.186,-0.154],"source":"src/helpers/api/countryService.js [loadCountryMapping]","tags":["code","what","function","utility","../dataUtils.js","../constants.js","../storage.js","../debug.js","getItem","fetchJson","setItem","debugLog","importJsonModule","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/api/countryService.js","node":"loadCountryMapping"},"patterns":[],"relations":{"imports":["../dataUtils.js","../constants.js","../storage.js","../debug.js"],"calls":["getItem","fetchJson","setItem","debugLog","importJsonModule"]}},"version":1},
{"id":"countryService.js-getCountryName","text":"Resolve the country name for a code.\n\n@param {string} code\n@returns {Promise<string>}\n\nexport async function getCountryName(code) {\n  const normalized = normalizeCode(code);\n  if (!normalized) return DEFAULT_COUNTRY;\n  const map = await loadCountryMapping();\n  const entry = map[normalized];\n  return entry && entry.active ? entry.country : DEFAULT_COUNTRY;\n}","qaContext":"Why: Resolve the country name for a code. How: @param {string} code @returns {Promise<string>} export async function getCountryName(code) { const normalized = normalizeCode(code); if (!","embedding":[0.021,0.12,-0.084,0.092,-0.059,0.006,0,0.095,-0.042,-0.089,-0.037,-0.181,-0.142,-0.025,-0.049,0.05,-0.12,-0.1,0.034,-0.183,0.231,-0.034,0.052,-0.023,0.172,-0.104,-0.003,-0.156,0.077,0.024,0.063,0.126,-0.022,0.137,0.115,0.087,-0.346,-0.208,0.124,-0.088,0.126,0.034,0.005,-0.106,0.094,-0.057,0.027,0.116,-0.083,0.129,0.122,0.021,-0.187,-0.222,0.028,0.075,0.023,-0.059,-0.045,0.093,-0.064,-0.218,0.1,-0.044,0.07,0.007,-0.03,0.091,-0.068,-0.121,0.17,-0.012,0.126,0.04,-0.114,-0.125,-0.253,0.11,-0.01,0.053,0.084,0.02,-0.006,-0.008,0.15,0.269,-0.002,-0.117,0.064,0.019,-0.169,-0.217,0,0.185,-0.171,-0.07,0.12,0.087,-0.082,0.051,-0.033,0.008,0.189,-0.041,-0.082,0.002,0.072,-0.121,-0.088,0.084,-0.128,0.188,0.08,0.038,-0.058,-0.145,0.096,-0.107,0.138,0.041,0.26,-0.079,-0.014,-0.098,-0.106,0.088,0.102,0,0.014,-0.074,0.051,0.198,-0.125,-0.124,0.049,-0.063,-0.167,0.042,0.053,-0.003,0.016,0.014,-0.129,0.111,0.158,-0.058,0.043,0.25,0.041,0.036,-0.013,-0.01,0.102,-0.072,-0.134,0.031,-0.106,-0.01,0.292,-0.147,-0.029,-0.018,0.161,-0.034,0.058,0.025,-0.362,0.04,0.132,0.075,-0.083,0.088,-0.01,-0.152,0.058,-0.014,0.269,0.084,-0.09,0.103,-0.009,-0.176,0.244,-0.052,0.053,-0.017,0.093,-0.011,-0.125,-0.281,-0.032,0.042,0.152,0.048,0.023,-0.035,-0.107,-0.054,0.077,-0.142,0.095,0.251,0.118,0.134,-0.119,-0.079,-0.109,-0.236,-0.122,-0.062,-0.327,0.323,-0.001,0.245,-0.029,-0.257,0.124,0.141,-0.139,-0.133,-0.176,-0.123,-0.032,0,0.18,-0.048,-0.142,0.024,-0.042,-0.059,0.233,0.103,-0.125,0.168,0.113,-0.042,0.142,0.155,0.334,0.15,0.058,0.011,0.065,0.067,0.024,0.061,-0.071,-0.044,-0.052,0.1,-0.128,0.037,-0.079,-0.22,-0.104,-0.061,-0.086,0.138,-0.208,-0.06,0.153,0.145,0.022,0.015,-0.131,-0.113,-0.177,0.029,-0.164,-0.097,-0.005,-0.036,0.084,-0.191,0.14,-0.004,-0.094,-0.054,-0.006,0.003,-0.097,-0.179,0.247,-0.021,-0.097,-0.125,0.137,-0.085,-0.038,-0.265,-0.181,0.089,0.2,-0.017,0.033,-0.024,-0.135,0.137,-0.084,-0.066,-0.018,-0.122,0.129,0.077,0.034,-0.001,-0.017,0.046,0.097,0.232,0.15,-0.01,-0.038,0.082,-0.075,0.056,-0.341,-0.105,-0.223,0,-0.264,-0.027,0.003,0.083,-0.078,-0.008,0.078,-0.105,-0.034,-0.042,-0.071,0.031,0.118,-0.109,-0.01,-0.024,-0.001,0.387,-0.109,0.142,-0.085,0.122,-0.064,-0.176,0.085,-0.047,0.119,0.161,0.183,0.02,0.04,0.125,0.113,-0.018,-0.192,-0.116,0.119,-0.159,0.12,0.041,0.103,0.157,0.054,0.07,-0.205,-0.05,0.101,-0.157,0.217,-0.031,-0.104,-0.071,-0.289,0.215,-0.044,-0.111,-0.032,-0.105,-0.027,0.145,-0.029,-0.145,-0.073,-0.054],"source":"src/helpers/api/countryService.js [getCountryName]","tags":["code","what","function","utility","../dataUtils.js","../constants.js","../storage.js","../debug.js","normalizeCode","loadCountryMapping"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/api/countryService.js","node":"getCountryName"},"patterns":[],"relations":{"imports":["../dataUtils.js","../constants.js","../storage.js","../debug.js"],"calls":["normalizeCode","loadCountryMapping"]}},"version":1},
{"id":"countryService.js-getFlagUrl","text":"Build the flag URL for a code.\n\n@param {string} code\n@returns {Promise<string>}\n\nexport async function getFlagUrl(code) {\n  const normalized = normalizeCode(code);\n  if (!normalized) return DEFAULT_FLAG_URL;\n  const map = await loadCountryMapping();\n  if (map[normalized] && map[normalized].active) {\n    return `https://flagcdn.com/w320/${normalized}.png`;\n  }\n  return DEFAULT_FLAG_URL;\n}","qaContext":"Why: Build the flag URL for a code. How: @param {string} code @returns {Promise<string>} export async function getFlagUrl(code) { const normalized = normalizeCode(code); if (!","embedding":[-0.011,0.181,-0.153,0.121,0.017,-0.072,-0.04,0.081,0.009,-0.067,-0.05,-0.038,-0.174,0.087,0.012,0.127,-0.153,0.053,-0.042,-0.179,0.186,-0.054,0.133,-0.105,-0.02,0.04,-0.059,-0.107,0.103,-0.109,0.133,0.065,-0.314,-0.019,0.128,0.125,-0.107,-0.145,0.213,-0.013,0.161,0.121,-0.11,-0.109,-0.226,0.073,0.018,0.064,-0.116,-0.04,0.024,-0.005,-0.259,-0.117,0.083,0.013,-0.176,-0.068,-0.019,0.127,-0.109,-0.116,0.091,-0.042,0.152,-0.014,-0.217,0.046,-0.042,0.04,-0.083,-0.128,0.038,0.014,-0.102,0.085,-0.167,0.079,-0.102,-0.125,0.161,-0.091,0.063,0.095,0.271,0.235,-0.115,0.017,0.172,0.116,-0.122,0.014,-0.148,0.09,-0.078,0.008,-0.152,-0.074,-0.13,0.076,0.036,0.033,0.261,-0.091,0.084,-0.071,0.085,0.137,0.027,0.154,-0.046,0.197,0.054,-0.179,-0.039,-0.098,-0.054,-0.07,0.143,-0.084,0.271,-0.086,-0.06,-0.051,0.067,-0.092,0.113,0,0.135,0.053,-0.019,0.015,-0.087,-0.018,0.09,-0.117,-0.123,-0.029,-0.105,0.041,-0.159,0.067,-0.216,0.071,0.071,-0.08,-0.031,0.078,0.019,0.064,-0.016,-0.009,-0.006,-0.165,0.049,0.018,-0.067,-0.032,0.287,-0.115,0.076,-0.007,0.115,-0.007,-0.017,0.091,-0.284,0.191,0.158,0.028,-0.117,0.155,-0.069,-0.095,0.034,-0.034,0.145,-0.029,0.099,0.034,0.09,-0.072,0.18,-0.171,-0.021,-0.169,-0.099,0.096,-0.061,-0.124,-0.071,-0.084,0.044,0.1,0.025,-0.018,-0.165,0.004,0.097,-0.114,0.061,0.081,0.008,0.081,-0.268,0.115,-0.014,-0.046,0.018,-0.108,-0.119,0.285,0.033,0.104,0.033,-0.237,-0.001,-0.017,-0.039,0.042,-0.05,-0.041,0.014,0,0.157,0.005,-0.042,0.233,-0.099,0.122,0.271,0.005,-0.116,0.182,-0.031,0.058,0.011,0.039,0.08,-0.04,-0.052,0.069,0.007,0.078,0.015,0.23,0.026,0.113,-0.109,0.104,0.11,-0.157,-0.074,-0.155,-0.075,0.021,-0.036,-0.098,0.065,-0.001,0.099,0.269,-0.03,0.077,-0.079,-0.107,-0.179,0.006,0.042,-0.137,-0.04,-0.154,-0.075,0.115,0.049,-0.035,0.052,-0.092,0.011,-0.08,-0.208,-0.108,0.016,0.156,-0.003,-0.264,0.109,-0.154,0.005,-0.022,-0.064,-0.029,-0.059,0.147,0.026,-0.078,-0.059,0.063,0.052,-0.132,0.125,-0.017,0.087,0.168,-0.026,-0.039,-0.031,-0.054,0.152,0.052,-0.033,0.038,-0.067,0.058,-0.003,0.054,-0.048,-0.077,-0.026,0,-0.304,-0.014,0.004,0.063,0.024,0.153,0.085,-0.093,0.026,-0.046,-0.078,-0.042,0.074,0.029,-0.067,0.076,0.008,0.12,0.016,0.002,-0.155,0.193,-0.09,-0.071,0.016,-0.024,0.122,0.035,-0.012,0.053,0.007,0.043,0.128,-0.163,-0.317,0.022,0.063,-0.129,0.062,0.047,0.09,0.113,0.133,-0.009,-0.087,0.062,0.01,-0.01,-0.02,0.017,0.156,-0.084,-0.244,0.063,-0.037,-0.142,-0.053,-0.084,-0.007,0.192,0.055,-0.15,0.008,0.02],"source":"src/helpers/api/countryService.js [getFlagUrl]","tags":["code","what","function","utility","../dataUtils.js","../constants.js","../storage.js","../debug.js","normalizeCode","loadCountryMapping"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/api/countryService.js","node":"getFlagUrl"},"patterns":[],"relations":{"imports":["../dataUtils.js","../constants.js","../storage.js","../debug.js"],"calls":["normalizeCode","loadCountryMapping"]}},"version":1},
{"id":"battleUI.js-chooseOpponentStat","text":"Choose an opponent stat based on difficulty and available values.\n\n@param {{stat: string, value: number}[]} values - Stat entries to compare.\n@param {\"easy\"|\"medium\"|\"hard\"} [difficulty=\"easy\"] - Difficulty setting.\n@returns {string} Chosen stat key.\n1. If `difficulty` is `hard` and `values` are provided:\n   a. Find the maximum value.\n   b. Return a random stat among those with the maximum.\n2. If `difficulty` is `medium` and `values` are provided:\n   a. Compute the average value.\n   b. Collect stats at or above the average.\n   c. If any qualify, return a random one.\n3. Otherwise, return a random stat from `STATS`.\n\nexport function chooseOpponentStat(values, difficulty = \"easy\") {\n  if (difficulty === \"hard\" && values.length) {\n    const max = Math.max(...values.map((v) => v.value));\n    const best = values.filter((v) => v.value === max);\n    return best[Math.floor(Math.random() * best.length)].stat;\n  }\n  if (difficulty === \"medium\" && values.length) {\n    const avg = values.reduce((sum, v) => sum + v.value, 0) / values.length;\n    const eligible = values.filter((v) => v.value >= avg);\n    if (eligible.length > 0) {\n      return eligible[Math.floor(Math.random() * eligible.length)].stat;\n    }\n  }\n  return STATS[Math.floor(Math.random() * STATS.length)];\n}","qaContext":"Why: Choose an opponent stat based on difficulty and available values. How: @param {{stat: string, value: number}[]} values - Stat entries to compare.","embedding":[0.037,0.117,-0.007,0.038,-0.009,0.114,0.145,0.084,-0.009,0.057,-0.105,-0.118,0.088,0.004,0.096,0.069,-0.003,-0.036,-0.116,-0.071,0.047,-0.029,0.039,-0.144,0.081,-0.01,0.046,0.033,0.093,-0.094,-0.06,-0.032,0.154,0.001,-0.094,-0.155,-0.245,-0.061,-0.003,0.017,-0.05,0.136,-0.013,-0.135,0.111,0.006,-0.156,-0.125,0.073,0.212,-0.082,0.079,0.001,-0.027,0.146,-0.006,-0.128,-0.209,0.051,-0.149,0.004,-0.239,0.084,-0.056,0.159,-0.016,-0.028,0.207,-0.05,0.134,-0.008,0.109,0.084,0.034,0.11,0.039,-0.215,-0.157,0.09,0.135,-0.161,-0.179,-0.156,0.118,0.15,0.036,0.101,0.039,0.166,-0.066,-0.092,0.149,-0.002,0.194,0.031,0.175,0.002,-0.115,0.082,0.093,-0.043,-0.075,0.064,-0.091,-0.053,-0.208,0.119,-0.016,-0.068,-0.014,-0.052,0.079,0.052,0.151,-0.111,0.104,0.102,0.006,-0.026,0.013,0.128,0.077,0.052,0.088,0.085,0.087,0.138,0,0.026,-0.214,-0.05,-0.043,0.027,0.003,0.022,-0.064,0.008,0.077,-0.063,0.161,-0.009,-0.05,0.109,-0.123,0.12,0.021,-0.06,-0.101,0.076,-0.02,0.002,-0.031,0.031,-0.037,0.051,0.045,-0.161,-0.046,0.181,0.051,-0.127,0.081,0.114,-0.011,0.089,0.153,-0.208,0.036,0.033,-0.012,-0.003,-0.007,-0.038,-0.002,0.053,0.039,0.101,0.04,-0.076,-0.041,0.09,0,0.019,0.099,-0.016,0.097,-0.127,0.06,-0.165,0.053,0.029,0.034,-0.039,0.171,-0.089,-0.037,0.116,-0.054,0.108,-0.043,-0.064,-0.047,-0.024,-0.009,0.018,0.026,-0.099,-0.282,-0.066,0.053,-0.181,0.044,0.059,0.129,-0.066,-0.121,-0.007,-0.006,-0.136,0.012,-0.036,0.025,-0.074,0,-0.156,0.062,0.123,0.093,0.175,-0.05,0.093,-0.117,0.185,-0.023,-0.159,-0.06,0.033,-0.131,0.127,0.104,-0.149,-0.017,0.081,-0.018,-0.086,0.085,0.044,-0.045,-0.068,0.19,0.075,-0.022,0.039,-0.145,-0.077,-0.046,-0.114,-0.001,-0.016,-0.206,0.181,0.008,-0.03,0.089,-0.122,-0.147,-0.018,-0.088,0.065,0.111,0.272,-0.053,0,-0.108,0.095,-0.054,-0.181,0.184,-0.072,-0.052,-0.204,-0.064,0.077,0.138,0.016,-0.096,0.019,0.119,0.09,0.041,-0.114,-0.095,-0.023,0.2,-0.121,0.097,0.195,-0.091,0.032,-0.133,-0.14,-0.028,0.162,-0.013,-0.028,0.038,-0.015,-0.057,-0.095,0.087,0.08,-0.01,0.151,0.034,-0.077,0.02,0.05,-0.013,-0.17,0,0.086,-0.092,-0.143,0.07,0.144,0.1,-0.099,-0.003,-0.048,-0.121,0.156,0.097,0.043,-0.059,-0.075,-0.116,-0.125,0.159,-0.018,0.107,0.072,-0.055,-0.067,0.022,0.092,-0.001,0.017,-0.126,0.183,0.154,-0.052,-0.035,0.155,0.003,-0.056,-0.009,-0.102,-0.081,0.015,0.164,0.08,0.054,-0.014,0.004,0.013,-0.116,0.039,-0.101,0.261,-0.116,0.033,-0.256,-0.06,-0.1,0.006,0,-0.012,0.011,-0.066,-0.048,0.095,-0.148,-0.21,0.024],"source":"src/helpers/api/battleUI.js [chooseOpponentStat]","tags":["code","what","function","utility","../battleEngineFacade.js","max","map","filter","floor","random","reduce"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/api/battleUI.js","node":"chooseOpponentStat"},"patterns":[],"relations":{"imports":["../battleEngineFacade.js"],"calls":["max","map","filter","floor","random","reduce"]}},"version":1},
{"id":"battleUI.js-evaluateRound","text":"Evaluate a round using player and opponent stat values.\n\n@param {number} playerVal - Player's stat value.\n@param {number} opponentVal - Opponent's stat value.\n@returns {{message: string, matchEnded: boolean, playerScore: number, opponentScore: number}}\n1. Delegate to `handleStatSelection` on the battle engine with the provided values.\n2. Return its result.\n\nexport function evaluateRound(playerVal, opponentVal) {\n  return handleStatSelection(playerVal, opponentVal);\n}","qaContext":"Why: Evaluate a round using player and opponent stat values. How: @param {number} playerVal - Player's stat value.","embedding":[0.041,0.287,-0.186,0.103,-0.036,0.22,0.187,0.148,0.092,0.027,-0.085,-0.215,-0.057,0.091,0.166,0.031,-0.034,0.007,0.098,-0.061,-0.026,0.012,0.017,-0.047,0.017,-0.074,-0.103,0.029,0.028,-0.142,0.012,0.017,0.021,0.045,-0.175,0.043,-0.11,-0.098,0.001,0.03,0.102,0.062,0.003,-0.134,0.107,-0.012,-0.239,0.213,-0.038,0.098,-0.007,-0.031,0.001,-0.021,0.228,0.054,0.004,-0.194,0.085,-0.019,-0.087,-0.255,0.011,-0.101,-0.027,-0.171,0.009,-0.041,-0.166,0.123,0.172,0.05,0.123,-0.104,0.007,0.019,-0.222,-0.069,0.168,0.137,-0.103,-0.249,-0.15,0.035,0.172,-0.059,0.07,-0.005,0.091,0.205,-0.194,0.181,0.059,0.138,-0.012,0.147,-0.05,-0.087,0.042,0.083,-0.051,0.079,-0.073,-0.178,-0.032,0.059,0.144,-0.04,-0.061,-0.019,0.065,0.065,0.071,0.061,-0.039,0.006,0.089,-0.028,-0.008,-0.013,0.238,0.032,-0.019,0.049,0.133,0.07,0.129,0,0.015,-0.2,-0.115,0.089,-0.096,0,-0.07,-0.096,-0.165,-0.035,-0.193,0.247,0.076,-0.06,0.156,-0.081,0.098,0.079,-0.054,-0.008,0.139,-0.061,-0.122,0.086,0.036,0.031,-0.005,0.032,-0.056,-0.032,0.188,-0.09,0.011,0.19,0.068,0.043,0.077,0.132,-0.141,0.088,-0.118,0.013,-0.237,-0.015,-0.333,-0.178,-0.035,0.079,0.16,-0.053,-0.156,0.068,0.198,-0.016,0.024,-0.048,0.035,0.076,-0.136,0.006,-0.021,0.216,0.005,-0.076,-0.216,0.035,-0.115,-0.099,-0.015,-0.1,0.086,0.047,0.019,0.041,0.007,-0.09,-0.003,0.086,0.036,-0.261,0.121,-0.049,-0.14,0.136,0.087,0.052,-0.162,-0.111,-0.035,0.088,-0.201,-0.168,-0.128,-0.043,-0.175,0,-0.104,0.143,0.056,0.143,0.042,0.064,0.07,0.014,0.02,-0.042,-0.095,0.027,-0.076,-0.113,0.079,-0.028,-0.205,-0.124,0.03,-0.135,0.029,-0.084,0.063,-0.082,-0.156,0.061,0.172,-0.235,0.19,0.067,0.003,-0.163,0.084,0.037,-0.043,-0.119,0.247,-0.038,0.07,0.196,0.044,-0.05,-0.13,0.129,0.03,0.07,0.123,-0.001,0.042,-0.169,0.034,0.051,-0.081,0.167,-0.231,-0.114,-0.069,-0.209,0.082,0.132,0.059,-0.119,0.078,0.058,0.024,0.167,-0.128,0.02,-0.043,0.118,-0.001,0.072,0.14,-0.039,-0.026,0.032,-0.209,0.067,0.175,0.178,0.114,0.098,0.064,-0.154,-0.027,0.073,0.112,0.147,-0.125,0.13,-0.001,0.018,0.006,-0.104,-0.021,0,-0.202,-0.089,0.059,0.127,-0.163,0.199,0.001,-0.224,0.094,-0.018,0.048,0.042,0.119,-0.187,0.043,-0.014,-0.059,0.14,-0.063,0.149,0.063,0.016,-0.09,-0.011,0.058,0.009,-0.192,0.052,-0.08,-0.101,-0.029,0.125,0.044,0.029,-0.065,0.006,-0.053,0.055,0.181,0.185,-0.133,-0.052,-0.231,0.085,-0.019,-0.081,-0.121,-0.125,-0.002,0.002,0.121,-0.145,-0.108,0.074,-0.113,0.033,0.087,-0.095,-0.09,-0.003,-0.015,-0.067,0.075,0.027],"source":"src/helpers/api/battleUI.js [evaluateRound]","tags":["code","what","function","utility","../battleEngineFacade.js","handleStatSelection"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/api/battleUI.js","node":"evaluateRound"},"patterns":[],"relations":{"imports":["../battleEngineFacade.js"],"calls":["handleStatSelection"]}},"version":1},
{"id":"tagFilter.test.js-tag filter > passes selected tag to findMatches","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/vectorSearchPage/tagFilter.test.js [tag filter > passes selected tag to findMatches]","tags":["test-code","what","test","vitest","./fixtures.js","it","mockResolvedValue","fn","mockVectorSearch","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","toHaveBeenCalled","expect","toEqual"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/tagFilter.test.js","node":"tag filter > passes selected tag to findMatches"},"patterns":[],"relations":{"imports":["vitest","./fixtures.js"],"calls":["it","mockResolvedValue","fn","mockVectorSearch","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","toHaveBeenCalled","expect","toEqual"]}},"version":1},
{"id":"tagFilter.test.js-tag filter > displays embedding count and tag options on init","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/vectorSearchPage/tagFilter.test.js [tag filter > displays embedding count and tag options on init]","tags":["test-code","what","test","vitest","./fixtures.js","it","mockVectorSearch","mockResolvedValue","fn","mockDataUtils","mockConstants","setupPage","getElementById","toContain","expect","map","from","querySelectorAll","toEqual"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/tagFilter.test.js","node":"tag filter > displays embedding count and tag options on init"},"patterns":[],"relations":{"imports":["vitest","./fixtures.js"],"calls":["it","mockVectorSearch","mockResolvedValue","fn","mockDataUtils","mockConstants","setupPage","getElementById","toContain","expect","map","from","querySelectorAll","toEqual"]}},"version":1},
{"id":"rendering.test.js-rendering > renders table rows when matches are found","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/vectorSearchPage/rendering.test.js [rendering > renders table rows when matches are found]","tags":["test-code","what","test","vitest","./fixtures.js","it","mockVectorSearch","mockResolvedValue","fn","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","toBe","expect","querySelectorAll"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/rendering.test.js","node":"rendering > renders table rows when matches are found"},"patterns":[],"relations":{"imports":["vitest","./fixtures.js"],"calls":["it","mockVectorSearch","mockResolvedValue","fn","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","toBe","expect","querySelectorAll"]}},"version":1},
{"id":"rendering.test.js-rendering > highlights the top match","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/vectorSearchPage/rendering.test.js [rendering > highlights the top match]","tags":["test-code","what","test","vitest","./fixtures.js","it","mockVectorSearch","mockResolvedValue","fn","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","querySelectorAll","toBe","expect","contains"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/rendering.test.js","node":"rendering > highlights the top match"},"patterns":[],"relations":{"imports":["vitest","./fixtures.js"],"calls":["it","mockVectorSearch","mockResolvedValue","fn","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","querySelectorAll","toBe","expect","contains"]}},"version":1},
{"id":"rendering.test.js-rendering > adds search-result-empty class when no matches","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/vectorSearchPage/rendering.test.js [rendering > adds search-result-empty class when no matches]","tags":["test-code","what","test","vitest","./fixtures.js","it","mockVectorSearch","mockResolvedValue","fn","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","toBe","expect","contains"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/rendering.test.js","node":"rendering > adds search-result-empty class when no matches"},"patterns":[],"relations":{"imports":["vitest","./fixtures.js"],"calls":["it","mockVectorSearch","mockResolvedValue","fn","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","toBe","expect","contains"]}},"version":1},
{"id":"rendering.test.js-rendering > highlights query terms in rendered snippets","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/vectorSearchPage/rendering.test.js [rendering > highlights query terms in rendered snippets]","tags":["test-code","what","test","vitest","./fixtures.js","it","mockVectorSearch","mockResolvedValue","fn","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","querySelector","toContain","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/rendering.test.js","node":"rendering > highlights query terms in rendered snippets"},"patterns":[],"relations":{"imports":["vitest","./fixtures.js"],"calls":["it","mockVectorSearch","mockResolvedValue","fn","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","querySelector","toContain","expect"]}},"version":1},
{"id":"queryBuilding.test.js-query building > wraps query words in <mark>","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/vectorSearchPage/queryBuilding.test.js [query building > wraps query words in <mark>]","tags":["test-code","what","test","vitest","./fixtures.js","it","highlightTerms","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/queryBuilding.test.js","node":"query building > wraps query words in <mark>"},"patterns":[],"relations":{"imports":["vitest","./fixtures.js"],"calls":["it","highlightTerms","toBe","expect"]}},"version":1},
{"id":"queryBuilding.test.js-query building > returns escaped text when no terms provided","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/vectorSearchPage/queryBuilding.test.js [query building > returns escaped text when no terms provided]","tags":["test-code","what","test","vitest","./fixtures.js","it","toBe","expect","highlightTerms"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/queryBuilding.test.js","node":"query building > returns escaped text when no terms provided"},"patterns":[],"relations":{"imports":["vitest","./fixtures.js"],"calls":["it","toBe","expect","highlightTerms"]}},"version":1},
{"id":"queryBuilding.test.js-query building > expands query terms using the synonym list","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/vectorSearchPage/queryBuilding.test.js [query building > expands query terms using the synonym list]","tags":["test-code","what","test","vitest","./fixtures.js","it","mockConstants","doMock","mockResolvedValue","fn","mockDataUtils","expandQueryWithSynonyms","toContain","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/queryBuilding.test.js","node":"query building > expands query terms using the synonym list"},"patterns":[],"relations":{"imports":["vitest","./fixtures.js"],"calls":["it","mockConstants","doMock","mockResolvedValue","fn","mockDataUtils","expandQueryWithSynonyms","toContain","expect"]}},"version":1},
{"id":"queryBuilding.test.js-query building > handles misspellings via Levenshtein check","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/vectorSearchPage/queryBuilding.test.js [query building > handles misspellings via Levenshtein check]","tags":["test-code","what","test","vitest","./fixtures.js","it","mockResolvedValue","fn","doMock","endsWith","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","toContain","expect","toHaveBeenCalled"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/queryBuilding.test.js","node":"query building > handles misspellings via Levenshtein check"},"patterns":[],"relations":{"imports":["vitest","./fixtures.js"],"calls":["it","mockResolvedValue","fn","doMock","endsWith","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","toContain","expect","toHaveBeenCalled"]}},"version":1},
{"id":"fixtures.js-mockVectorSearch","text":"export function mockVectorSearch(overrides = {}) {\n  const defaults = {\n    findMatches: vi.fn(),\n    fetchContextById: vi.fn(),\n    loadEmbeddings: vi.fn().mockResolvedValue([]),\n    expandQueryWithSynonyms: vi.fn((q) => q),\n    CURRENT_EMBEDDING_VERSION: 1\n  };\n  const impl = { ...defaults, ...overrides };\n  vi.doMock(\"../../../src/helpers/vectorSearch/index.js\", () => ({ default: impl }));\n  return impl;\n}","qaContext":"Why: export function mockVectorSearch(overrides = {}) { const defaults = { findMatches: vi. How: fn(), fetchContextById: vi.","embedding":[-0.163,0.067,0.113,0.034,0.029,0.124,-0.094,0.075,0,-0.051,-0.081,0.025,-0.169,0.001,0.041,-0.061,0.042,0.043,0.099,-0.003,0.026,0.037,0.177,-0.199,-0.044,-0.083,-0.105,-0.095,0.119,-0.006,0.204,0.181,-0.158,0.098,-0.11,0.053,-0.058,-0.058,-0.082,-0.035,-0.025,0.23,-0.096,-0.062,0.134,-0.007,0.094,-0.053,0.062,-0.005,-0.085,0.024,0.002,-0.107,0.109,0.08,0.001,-0.085,0.125,0.077,0.085,-0.119,0.132,-0.089,0.056,-0.098,0.099,0.103,0.059,0.048,-0.076,0.096,0.11,-0.003,0.046,0.191,-0.116,-0.025,0.272,-0.098,-0.017,-0.185,0.022,0.047,0.05,0.169,0.057,-0.269,0.119,-0.028,0.028,-0.18,-0.143,0.183,-0.043,0.035,0.104,0.07,0.079,0.077,-0.024,-0.09,0.177,0.039,-0.118,0.068,0.002,0.033,-0.042,-0.046,-0.064,0.168,0.061,-0.153,-0.138,-0.068,0.043,-0.15,0.146,0.058,0.132,0.13,0.051,0.097,0.006,0.054,-0.006,0,0.043,-0.087,0.071,0.098,-0.077,-0.026,0.118,0.171,-0.258,0.044,0.021,0.03,-0.112,0.047,-0.138,0.04,-0.02,-0.113,-0.024,-0.003,0.111,-0.039,0.002,-0.041,-0.092,-0.14,-0.015,-0.043,-0.164,-0.026,0.005,-0.025,0.032,0.078,0.01,0.124,0.062,0.116,-0.358,0.001,0.112,0.022,-0.041,-0.052,-0.036,-0.056,-0.005,0.001,0.117,0.021,-0.129,0.129,-0.028,-0.15,0.172,0.085,0.178,0.085,-0.02,-0.118,-0.126,-0.01,0.035,0.038,-0.161,0.049,0.02,-0.131,-0.058,0.167,0.031,0.083,-0.061,-0.062,0.068,-0.099,-0.204,-0.024,0.072,-0.083,0.033,-0.07,-0.087,0.212,0.084,-0.176,-0.036,-0.275,0.139,0.011,0.008,-0.127,0.025,-0.149,-0.001,0,0.034,0.03,-0.021,0.231,-0.033,-0.05,0.05,-0.061,-0.1,-0.024,-0.005,-0.134,0.102,-0.086,-0.063,0.228,-0.125,-0.171,0.048,-0.063,-0.01,0.045,0.158,0.078,0.019,0.013,0.15,0.131,-0.077,-0.085,0.043,-0.027,-0.082,0.065,-0.01,0.089,0.016,0.039,0.021,0.013,-0.089,0.046,-0.164,0.063,-0.068,0.027,0.05,0.006,0.184,-0.106,0,-0.133,-0.078,0.056,-0.015,-0.02,-0.065,-0.017,0.094,0.147,0.089,-0.071,-0.129,-0.076,0.05,-0.086,-0.058,0.163,0.145,0.007,0.105,0.028,0.145,-0.048,0.147,0.028,0.087,-0.082,0.158,-0.024,0.006,-0.078,0.071,0.022,0.002,0.116,-0.024,0.214,-0.09,0.076,-0.024,-0.019,-0.107,-0.076,0.061,0,-0.109,-0.081,-0.159,-0.087,0.031,-0.095,-0.001,0.002,-0.112,0.01,-0.061,0.04,0.044,0.004,0.093,-0.115,0.007,0.15,-0.186,0.037,-0.122,0.2,0.034,-0.007,0.076,0.03,0.079,0.009,0.278,0.062,-0.116,0.05,-0.084,-0.148,-0.175,0.07,0.03,-0.064,-0.041,0.164,-0.03,-0.06,0.009,-0.045,-0.161,-0.068,-0.127,0.038,0.116,0.037,0.024,-0.05,-0.26,0.155,-0.098,-0.111,-0.035,0.084,-0.065,-0.101,0.011,-0.079,0.029,-0.055],"source":"tests/helpers/vectorSearchPage/fixtures.js [mockVectorSearch]","tags":["code","what","function","test","vitest","fn","mockResolvedValue","doMock","state-management"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/fixtures.js","node":"mockVectorSearch"},"patterns":[],"relations":{"imports":["vitest"],"calls":["fn","mockResolvedValue","doMock"]}},"version":1},
{"id":"fixtures.js-mockDataUtils","text":"export function mockDataUtils(impl) {\n  const fetchJson = impl ?? vi.fn().mockResolvedValue({ count: 0, version: 1 });\n  vi.doMock(\"../../../src/helpers/dataUtils.js\", () => ({ fetchJson }));\n  return fetchJson;\n}","qaContext":"Why: export function mockDataUtils(impl) { const fetchJson = impl ? How: vi.","embedding":[-0.356,0.067,-0.008,-0.03,0.015,-0.127,-0.109,0.234,0.038,-0.03,0.075,-0.011,-0.174,-0.014,0.089,-0.151,0.001,-0.025,-0.046,0,0.001,0.032,0.139,-0.023,-0.014,-0.144,-0.107,-0.015,0.098,0.021,0.214,0.022,-0.232,0.086,0.045,0.117,0.035,-0.077,-0.016,-0.039,-0.049,0.213,-0.172,-0.125,0.18,-0.067,0.039,-0.061,0.053,0.103,-0.134,0.137,0.006,-0.073,0.206,0.078,-0.094,-0.041,0.123,0.325,-0.026,-0.152,0.101,-0.058,0.004,-0.053,-0.048,0.22,0.063,-0.14,-0.041,0.007,0.149,-0.007,-0.08,0.152,-0.19,-0.035,0.245,-0.066,-0.045,-0.219,-0.136,0.189,-0.108,0.277,0.209,-0.014,-0.012,-0.029,-0.012,-0.129,-0.212,0.177,-0.25,0.111,0.185,-0.044,0.002,0.092,-0.076,-0.022,0.218,-0.048,-0.114,-0.1,0.132,-0.115,-0.036,-0.005,-0.023,0.277,-0.104,-0.162,-0.282,-0.191,-0.05,-0.259,0.177,-0.075,0.235,0.032,0.143,0.17,0.176,-0.133,0.264,0,-0.138,-0.129,0.14,0.141,0.061,-0.175,0.176,0.058,-0.259,-0.028,-0.001,0.06,-0.059,0.025,-0.238,0.101,0.108,-0.194,0.02,0.146,0.246,0.051,0.101,0.014,-0.018,-0.112,-0.135,0.23,-0.065,0.042,0.155,0.011,0.025,0.208,0.047,0.117,0.04,0.05,-0.343,0.114,0.186,-0.01,-0.188,0.103,0.043,-0.093,0.173,-0.128,0.171,0.03,-0.123,0.152,-0.053,-0.188,0.117,-0.057,0.221,-0.063,0.095,0.001,-0.053,0.033,-0.176,0.038,-0.204,-0.038,-0.183,-0.156,0.077,0.122,0.159,0.085,-0.067,-0.047,0.095,0.051,-0.248,0.125,0.047,-0.129,0.12,-0.145,-0.161,0.365,0.153,-0.044,-0.047,-0.124,0.118,-0.056,-0.038,-0.12,0.052,-0.295,-0.057,0,0.177,0.109,0.047,0.326,-0.08,-0.046,-0.009,0.048,-0.025,0.08,-0.035,-0.172,0.118,-0.08,-0.033,0.273,-0.123,-0.294,0.018,-0.13,-0.031,0.041,0.31,0.132,-0.149,0.03,0.159,0.049,-0.135,-0.019,0.025,0.007,-0.015,0.008,0.029,-0.084,0.196,0.109,0.009,0.013,-0.168,-0.134,-0.208,0.01,-0.207,0.065,0.124,-0.045,0.101,-0.153,0.224,-0.11,-0.036,-0.001,0.011,-0.093,-0.08,-0.019,0.055,0.146,0.034,-0.333,-0.145,-0.072,0.024,-0.05,-0.061,0.153,0.096,0.03,0.153,-0.002,0.149,-0.185,0.112,-0.039,-0.16,-0.299,0.306,0.127,0.029,-0.051,-0.114,-0.067,0.063,-0.007,0.013,0.097,-0.136,-0.017,0.02,0.002,-0.071,-0.033,0.127,0,-0.023,-0.111,-0.217,-0.062,0.029,-0.081,-0.112,-0.106,0.097,0.188,0.062,0.047,0.028,-0.031,0.071,-0.07,0.109,0.242,-0.073,0.071,-0.072,0.264,0.051,-0.18,0.151,0.084,0.059,0.005,0.109,-0.044,-0.057,-0.14,-0.014,-0.201,-0.063,-0.001,0.153,0.073,0.081,0.044,-0.063,0.005,-0.094,0.016,-0.236,-0.096,-0.274,0.097,0.026,-0.061,0.086,-0.058,-0.17,0.006,-0.223,-0.077,-0.089,0.019,-0.207,-0.027,0.165,-0.013,0.063,0.037],"source":"tests/helpers/vectorSearchPage/fixtures.js [mockDataUtils]","tags":["code","what","function","test","vitest","mockResolvedValue","fn","doMock"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/fixtures.js","node":"mockDataUtils"},"patterns":[],"relations":{"imports":["vitest"],"calls":["mockResolvedValue","fn","doMock"]}},"version":1},
{"id":"fixtures.js-mockConstants","text":"export function mockConstants() {\n  vi.doMock(\"../../../src/helpers/constants.js\", () => ({ DATA_DIR: \"./\" }));\n}","qaContext":"Why: export function mockConstants() { vi. How: doMock(\".","embedding":[-0.312,0.111,0.055,-0.04,0.162,-0.154,-0.094,0.217,0.051,-0.034,0.092,0.002,-0.196,-0.06,0.107,-0.152,0.063,0.081,-0.003,0.005,0.026,0.033,0.282,-0.037,-0.01,-0.184,-0.052,-0.061,0.104,-0.055,0.322,0.053,-0.22,-0.024,-0.011,0.144,0.035,-0.149,-0.079,-0.05,-0.032,0.222,-0.187,-0.153,0.074,-0.123,0.1,-0.035,0.001,0.167,-0.021,-0.005,-0.069,-0.235,0.165,0.094,0.083,-0.014,0.138,0.337,0.119,-0.121,0.111,-0.032,0.165,-0.155,-0.086,0.438,-0.032,0.093,-0.066,0.088,0.078,0.054,0.003,0.156,-0.377,-0.005,0.329,-0.147,0.018,-0.189,-0.056,0.171,0.114,0.304,0.245,0.039,0.076,-0.153,-0.076,-0.129,-0.214,0.205,-0.224,0.148,0.098,0.052,0.002,0.085,-0.106,-0.025,0.171,0.02,-0.004,-0.021,-0.007,0.031,0.095,-0.004,-0.043,0.233,-0.127,-0.182,-0.205,-0.304,0.055,-0.165,0.109,0.156,0.334,0.056,0.068,0.145,0.231,-0.075,0.336,0,-0.008,-0.12,0.145,0.157,0.085,-0.064,0.111,0.177,-0.283,0.16,0.132,-0.082,-0.054,-0.08,-0.26,0.111,0.081,-0.112,0.024,-0.031,0.186,-0.046,-0.045,0.083,-0.079,-0.175,-0.092,0.137,-0.047,-0.021,0.137,0.014,0.033,0.203,0.115,0.12,0.029,0.074,-0.423,0.164,0.195,-0.09,-0.219,0.028,-0.07,-0.072,0.072,-0.195,0.272,-0.015,-0.248,0.124,0.064,-0.177,0.195,-0.066,0.018,-0.084,-0.043,-0.113,-0.099,0.134,-0.08,0.008,-0.295,-0.067,-0.038,-0.127,-0.063,0.071,0.096,0.055,-0.049,-0.01,-0.004,0.004,-0.347,0.133,-0.059,-0.172,-0.055,-0.2,-0.194,0.404,0.198,-0.242,-0.074,-0.04,0.164,-0.077,0.122,-0.125,-0.004,-0.283,-0.085,0,0.162,0.299,-0.004,0.372,-0.054,0.024,0.048,-0.032,-0.122,0.104,-0.085,-0.177,0.021,-0.154,-0.07,0.289,-0.137,-0.189,0.049,-0.11,-0.078,-0.037,0.357,0.136,-0.104,0.024,0.111,0.1,-0.192,0.04,0.031,0.189,-0.032,-0.097,0.041,-0.037,0.132,0.244,0.121,0.015,-0.089,-0.036,-0.068,-0.032,-0.12,0.066,0.165,-0.253,0.003,-0.256,0.128,-0.202,-0.153,-0.038,0.032,0.083,-0.212,0.04,0.011,0.253,0.08,-0.231,-0.135,-0.076,-0.13,-0.166,-0.09,0.198,0.31,-0.047,0.116,0.092,0.152,-0.02,0.117,-0.141,0.01,-0.349,0.295,0.007,0.119,-0.047,-0.063,-0.173,0.032,-0.006,-0.105,0.237,-0.102,-0.046,-0.02,0.041,-0.028,-0.033,0.053,0,-0.05,-0.126,-0.063,-0.221,-0.149,-0.086,-0.057,-0.064,0.167,0.206,0.158,0.013,0.143,-0.055,-0.018,-0.132,0.125,0.311,-0.187,0.125,-0.114,0.313,0.038,-0.1,0.199,0.072,-0.002,-0.11,0.156,-0.065,-0.115,-0.091,-0.055,-0.147,-0.164,-0.018,0.073,0.028,0.098,0.159,-0.092,-0.097,-0.122,-0.063,-0.078,-0.211,-0.138,0.054,0.001,-0.103,0.051,-0.001,-0.23,0.013,-0.076,-0.107,-0.041,0.097,-0.264,-0.23,-0.043,0.038,0.034,-0.093],"source":"tests/helpers/vectorSearchPage/fixtures.js [mockConstants]","tags":["code","what","function","test","vitest","doMock"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/fixtures.js","node":"mockConstants"},"patterns":[],"relations":{"imports":["vitest"],"calls":["doMock"]}},"version":1},
{"id":"fixtures.js-mockExtractor","text":"export async function mockExtractor(impl = async () => ({ data: [0, 0, 0] })) {\n  const { __setExtractor } = await import(\"../../../src/helpers/api/vectorSearchPage.js\");\n  __setExtractor(impl);\n}","qaContext":"Why: export async function mockExtractor(impl = async () => ({ data: [0, 0, 0] })) { const { __setExtractor } = await import(\". How: /.","embedding":[-0.195,0.033,-0.151,0.103,0.017,0.022,-0.124,0.044,0.046,-0.1,-0.043,0.033,-0.102,-0.132,0.017,-0.047,-0.079,-0.093,0.053,0.011,-0.011,-0.052,0.204,-0.092,-0.011,-0.135,-0.082,-0.299,0.013,0.037,0.16,0.018,-0.209,0.042,-0.016,0.049,-0.094,-0.013,-0.066,0.008,0.087,0.203,-0.261,-0.101,0.133,-0.069,0.011,-0.028,0.115,0.064,-0.081,0.039,-0.182,-0.162,-0.001,0.065,0.092,-0.029,0.126,0.091,0.12,-0.117,0.114,0.014,0.067,-0.082,-0.116,0.192,0.089,-0.028,-0.094,0.111,0.195,0.026,0.096,-0.057,-0.123,-0.016,0.12,0.115,-0.119,-0.111,-0.025,0.092,-0.039,0.182,0.18,0.005,-0.087,-0.089,-0.035,-0.093,-0.29,0.209,-0.009,0.124,0.182,0.152,0.081,-0.011,0.053,-0.103,0.124,0.115,-0.157,-0.131,0.11,-0.23,0.042,-0.066,-0.011,0.147,0.054,-0.089,-0.186,-0.098,0.017,-0.187,0.252,0.045,0.195,0.176,0.161,0.133,0.097,0.02,0.12,0,-0.046,-0.147,0.039,0.116,0.01,0.054,0.157,0.029,-0.188,-0.003,-0.094,-0.013,-0.024,0.086,-0.182,0.046,0.117,-0.135,0.156,0.05,0.147,-0.106,-0.015,-0.002,-0.036,-0.105,-0.216,0.005,-0.166,-0.007,0.04,0.14,-0.108,0.186,-0.043,0.018,-0.021,0.015,-0.331,0.028,0.025,-0.007,-0.047,-0.053,-0.093,-0.107,0.001,-0.037,0.271,0.048,-0.203,0.187,-0.076,-0.25,0.188,0.028,0.13,-0.064,-0.002,-0.046,-0.025,-0.006,0.007,0.042,-0.189,-0.043,-0.15,-0.066,-0.125,0.125,0.044,0.004,-0.043,-0.07,0.037,0.101,-0.121,0.106,0.049,-0.105,0.131,-0.067,-0.214,0.034,0.062,-0.05,-0.061,-0.195,0.233,0.057,-0.12,-0.029,-0.131,-0.087,-0.013,0,0.021,-0.034,-0.063,0.247,0,0.075,0.098,0.04,-0.058,0.282,0.031,-0.054,0.031,-0.086,-0.054,0.191,0.063,-0.084,0.081,-0.11,0.003,0.106,0.097,0.015,-0.052,-0.037,0.122,0.126,-0.152,-0.173,-0.061,0.078,0.001,0.144,-0.052,0.027,0.066,0.006,0.018,-0.012,-0.018,0.075,-0.096,-0.002,0.026,-0.002,0.022,0.014,0.151,-0.096,0.092,-0.079,-0.061,-0.034,0.071,-0.03,-0.142,-0.043,0.206,0.059,-0.034,-0.193,0.04,0.014,-0.013,-0.055,-0.128,0.21,0.119,0.226,0.058,0.087,0.049,-0.006,0.053,-0.103,-0.073,-0.178,0.2,0.121,0.048,0.103,0.107,0.036,0.098,0.132,-0.078,0.202,-0.062,-0.011,0.081,-0.005,-0.079,-0.04,0.021,0,-0.209,-0.023,-0.113,0.011,-0.141,-0.133,0.078,-0.219,-0.055,-0.026,-0.084,-0.034,0.135,0.109,0.071,-0.096,0.112,0.074,0.076,0.018,-0.004,0.186,0.127,0.052,0.092,0.068,0.129,0.073,0.172,-0.054,-0.246,0.039,-0.056,-0.119,-0.116,-0.016,0.165,0.042,-0.057,0.058,-0.12,-0.071,0.025,-0.08,-0.082,-0.03,-0.172,-0.054,0.075,-0.086,0.15,-0.113,-0.123,0.133,0,-0.136,-0.09,-0.074,-0.139,-0.049,-0.045,-0.077,0.025,-0.079],"source":"tests/helpers/vectorSearchPage/fixtures.js [mockExtractor]","tags":["code","what","function","test","vitest","__setExtractor"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/fixtures.js","node":"mockExtractor"},"patterns":[],"relations":{"imports":["vitest"],"calls":["__setExtractor"]}},"version":1},
{"id":"fixtures.js-setupPage","text":"export async function setupPage(html = defaultDom, extractor) {\n  await mockExtractor(extractor);\n  document.body.innerHTML = html;\n  const mod = await import(\"../../../src/helpers/vectorSearchPage.js\");\n  await mod.init();\n  return mod;\n}","qaContext":"Why: export async function setupPage(html = defaultDom, extractor) { await mockExtractor(extractor); document. How: body.","embedding":[-0.225,0.037,-0.137,0.06,0.138,-0.022,-0.229,-0.049,-0.05,-0.074,0.005,0.03,-0.069,-0.118,-0.011,-0.061,0.025,-0.059,0.1,0.08,-0.071,-0.07,0.235,-0.158,0.077,-0.123,-0.189,-0.246,0.092,-0.051,0.288,-0.026,-0.138,-0.054,0.086,0.243,-0.079,-0.024,-0.06,-0.073,0.121,0.11,-0.194,-0.17,0.196,-0.179,-0.031,-0.017,0.091,0.056,-0.127,0.07,-0.117,-0.155,-0.067,0.075,0.172,-0.052,0.099,0.034,0.149,-0.061,0.109,0.023,0.109,-0.006,-0.045,0.149,0.053,-0.166,-0.07,0.106,0.235,0.07,0.114,-0.175,-0.192,0.059,0.187,0.08,-0.005,-0.059,0.016,0.087,-0.02,0.156,0.17,0,-0.053,0.042,0.021,-0.098,-0.239,0.195,-0.066,0.123,0.08,0.118,0.071,0.053,0.005,-0.158,0.116,0.031,-0.076,-0.149,0.115,-0.183,0.082,-0.099,-0.047,0.163,0.034,-0.136,-0.182,-0.207,0.112,-0.182,0.33,0.033,0.183,0.264,0.171,0.132,0.182,0.068,0.149,0,-0.052,-0.064,0.066,0.257,0.003,0.022,0.223,0.003,-0.17,-0.087,-0.051,-0.085,0.002,0.102,-0.1,0.051,-0.005,-0.121,0.194,-0.022,0.069,-0.093,-0.028,-0.056,-0.052,-0.081,-0.172,0.08,-0.244,0.009,0.112,0.101,-0.128,0.207,0.016,0.018,0.137,0.024,-0.453,0.042,0.015,-0.063,-0.054,-0.054,-0.064,-0.094,-0.078,-0.038,0.277,-0.011,-0.225,0.169,0.182,-0.239,0.173,0.097,0.048,-0.107,0.169,-0.009,-0.031,-0.075,-0.041,0.016,-0.12,-0.162,-0.137,-0.149,-0.133,-0.031,-0.004,-0.044,0.01,-0.062,0.038,0.131,-0.166,0.144,0.014,-0.072,0.131,-0.033,-0.196,0.026,0.136,-0.059,-0.017,-0.23,0.298,0.081,-0.04,-0.13,-0.147,-0.117,0.053,0,0.097,0.006,-0.054,0.203,0.06,0.096,0.119,0.063,-0.003,0.219,0.074,0,0.063,-0.067,-0.075,0.327,0.179,-0.092,0.131,-0.039,0.093,0.083,0.067,0.035,-0.13,0.015,0.091,0.218,-0.265,-0.029,0.011,0.173,-0.029,0.223,-0.017,0.089,-0.022,0.009,-0.017,-0.007,0.019,0.061,-0.071,0.055,0.043,-0.072,0.081,-0.15,0.125,0.005,-0.001,-0.174,-0.046,-0.102,0.074,-0.094,-0.182,-0.015,0.063,0.112,0.008,-0.067,-0.101,-0.061,-0.09,-0.114,-0.142,0.205,0.118,0.187,-0.089,0.072,0.163,-0.07,0.135,-0.046,0.05,-0.114,0.195,-0.039,0.062,0.029,0.011,-0.186,0.061,-0.01,-0.081,0.152,-0.086,-0.097,0.06,-0.039,-0.025,0.029,0.076,0,-0.244,-0.037,-0.111,-0.095,-0.065,-0.098,0.156,-0.305,-0.096,-0.085,-0.084,-0.013,0.171,0.116,-0.022,-0.097,-0.067,0.19,-0.037,-0.181,-0.002,0.203,0.257,0.043,0.132,0.144,0.086,-0.155,0.198,0.024,-0.239,0.119,-0.199,-0.116,-0.171,0.041,0.174,0.01,0.024,-0.063,0.002,-0.011,-0.087,-0.15,-0.07,-0.027,-0.19,-0.022,0.037,-0.092,0.147,-0.16,-0.181,0.174,0.029,-0.148,0.026,-0.066,-0.026,-0.067,-0.101,-0.067,0.151,-0.144],"source":"tests/helpers/vectorSearchPage/fixtures.js [setupPage]","tags":["code","what","function","test","vitest","mockExtractor","init"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/fixtures.js","node":"setupPage"},"patterns":[],"relations":{"imports":["vitest"],"calls":["mockExtractor","init"]}},"version":1},
{"id":"errorHandling.test.js-error handling > shows a message when embedding load fails","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/vectorSearchPage/errorHandling.test.js [error handling > shows a message when embedding load fails]","tags":["test-code","what","test","vitest","./fixtures.js","it","mockImplementation","spyOn","mockVectorSearch","mockRejectedValue","fn","mockDataUtils","mockResolvedValue","mockConstants","setupPage","getElementById","toContain","expect","mockRestore"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/errorHandling.test.js","node":"error handling > shows a message when embedding load fails"},"patterns":[],"relations":{"imports":["vitest","./fixtures.js"],"calls":["it","mockImplementation","spyOn","mockVectorSearch","mockRejectedValue","fn","mockDataUtils","mockResolvedValue","mockConstants","setupPage","getElementById","toContain","expect","mockRestore"]}},"version":1},
{"id":"errorHandling.test.js-error handling > shows a fallback message when query vector construction fails","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/vectorSearchPage/errorHandling.test.js [error handling > shows a fallback message when query vector construction fails]","tags":["test-code","what","test","vitest","./fixtures.js","it","mockImplementation","spyOn","fn","mockVectorSearch","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","toHaveBeenCalled","expect","toContain","mockRestore"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/vectorSearchPage/errorHandling.test.js","node":"error handling > shows a fallback message when query vector construction fails"},"patterns":[],"relations":{"imports":["vitest","./fixtures.js"],"calls":["it","mockImplementation","spyOn","fn","mockVectorSearch","mockDataUtils","mockConstants","setupPage","getElementById","handleSearch","toHaveBeenCalled","expect","toContain","mockRestore"]}},"version":1},
{"id":"utils.js-setupClassicBattleDom","text":"reset environment\n  - reset Vitest modules\n  - clear document body\nbuild DOM nodes\n  - create player/opponent cards and battle header\n  - append nodes and snackbar container to body\nmock APIs\n  - use fake timers\n  - mock fetchJson, generateRandomCard, getRandomJudoka, render\nreturn configured spies/mocks\n  - expose timerSpy, mocks, and currentFlags\n\nexport function setupClassicBattleDom() {\n  vi.resetModules();\n  document.body.innerHTML = \"\";\n  const { playerCard, opponentCard } = createBattleCardContainers();\n  const header = createBattleHeader();\n  document.body.append(playerCard, opponentCard, header);\n  const container = document.createElement(\"div\");\n  container.id = \"snackbar-container\";\n  container.setAttribute(\"role\", \"status\");\n  container.setAttribute(\"aria-live\", \"polite\");\n  document.body.append(container);\n\n  const timerSpy = vi.useFakeTimers();\n  const fetchJsonMock = vi.fn(async (url) => {\n    if (String(url).includes(\"gameTimers.json\")) {\n      return [{ id: 1, value: 30, default: true, category: \"roundTimer\" }];\n    }\n    return [];\n  });\n  const generateRandomCardMock = vi.fn(async (_d, _g, container, _pm, cb) => {\n    container.innerHTML = `<ul><li class=\"stat\"><strong>Power</strong> <span>5</span></li></ul>`;\n    if (cb) cb({ id: 1 });\n  });\n  const getRandomJudokaMock = vi.fn(() => ({ id: 2 }));\n  const renderMock = vi.fn(async () => {\n    const el = document.createElement(\"div\");\n    el.innerHTML = `<ul><li class=\"stat\"><strong>Power</strong> <span>3</span></li></ul>`;\n    return el;\n  });\n  const currentFlags = {};\n\n  return {\n    timerSpy,\n    fetchJsonMock,\n    generateRandomCardMock,\n    getRandomJudokaMock,\n    renderMock,\n    currentFlags\n  };\n}","qaContext":"Why: reset environment - reset Vitest modules - clear document body build DOM nodes - create player/opponent cards and battle header - append nodes and snackbar container to body mock APIs - use fa...","embedding":[-0.153,0.139,-0.024,0.084,-0.069,0.051,-0.008,0.099,0.064,-0.117,-0.001,-0.076,-0.038,-0.155,0.064,-0.075,0.058,-0.019,-0.067,0.037,0.014,-0.068,0.153,-0.06,-0.073,-0.048,0.003,-0.11,-0.015,-0.117,0.234,0.006,-0.138,-0.056,-0.182,0.045,-0.091,-0.097,-0.009,-0.05,-0.033,0.094,-0.087,-0.044,0.152,-0.082,-0.077,-0.011,0.057,0.085,-0.095,-0.05,0.1,-0.061,0.04,0.037,0.032,0.028,0.015,0.098,0.029,-0.048,0.1,-0.005,0.113,-0.116,0.006,0.119,0.019,0.071,0.041,0.088,0.18,0.006,-0.05,-0.042,-0.131,-0.032,0.076,0.044,0.007,-0.127,-0.09,-0.037,-0.033,0.1,0.153,0.03,-0.081,-0.127,-0.114,0.172,-0.138,0.142,-0.053,0.122,0.065,-0.05,-0.009,0.186,0.015,-0.053,-0.013,0.133,-0.033,-0.113,0.007,0.071,-0.043,0.051,0.035,0.132,-0.073,0.027,-0.095,0.023,0.049,-0.057,0.163,0.129,0.315,0.022,0.002,-0.075,0.139,-0.045,0.153,0,0.026,-0.225,-0.051,0.149,0.175,-0.036,0.111,-0.002,-0.141,-0.095,0.031,-0.075,0.04,-0.006,-0.087,-0.138,-0.088,0.005,0.109,-0.102,0.074,-0.121,-0.024,-0.035,-0.065,0.154,-0.006,0.12,-0.204,-0.022,0.203,0.006,-0.072,0.112,0.046,0.054,-0.023,0.062,-0.201,-0.012,0.041,-0.088,-0.058,-0.049,-0.124,-0.127,0.017,0.01,-0.023,0.037,-0.105,0.105,0.033,-0.187,0.05,0.074,0.018,0.057,-0.123,-0.042,-0.057,0.088,-0.045,-0.041,-0.137,0.088,-0.078,-0.064,0.059,-0.074,0.066,-0.052,0.14,-0.059,-0.033,0.073,-0.105,-0.031,-0.203,-0.15,0.231,-0.095,-0.096,0.16,0.089,-0.099,0.03,-0.09,0.004,0.189,-0.087,-0.019,0.15,-0.175,-0.054,0,0.022,0.104,-0.019,0.139,0.192,0.022,0.03,0.059,-0.131,-0.02,-0.042,0.058,-0.098,-0.093,-0.031,0.227,0.03,-0.049,0.028,0.03,0.024,0.133,0.096,-0.005,-0.01,0.01,0.113,0.054,-0.048,-0.095,0.111,-0.02,-0.107,0.119,0.133,-0.106,0.09,0.041,-0.008,0.031,0.003,-0.102,-0.021,-0.02,-0.061,0.009,0.042,0.034,0.011,-0.021,-0.024,-0.195,-0.068,0.023,-0.016,-0.025,-0.027,-0.069,0.115,0.157,0.03,-0.248,-0.046,-0.058,0.159,-0.046,-0.14,0.12,0.142,0.143,-0.092,0.132,0.106,-0.114,0.066,-0.027,-0.034,-0.133,0.035,-0.011,-0.015,-0.041,-0.056,-0.189,0.061,0.019,-0.111,0.131,-0.011,-0.059,-0.058,0.037,0.05,-0.022,-0.005,0,-0.059,-0.061,-0.08,0.049,-0.051,-0.035,-0.018,-0.241,-0.01,-0.083,0.147,0.052,0.195,-0.035,-0.04,-0.163,-0.111,0.102,-0.091,0.084,-0.053,0.048,0.035,0.008,0.11,0.071,0.034,-0.041,0.173,0.048,-0.133,0.044,0.007,-0.009,-0.024,-0.056,0.03,-0.019,0.099,0.233,0.082,-0.001,-0.085,-0.015,-0.107,-0.106,-0.083,-0.031,0.153,0.093,-0.098,-0.093,-0.131,-0.091,0.021,-0.039,0.071,0.04,-0.061,0.07,0.066,-0.006,0,-0.009],"source":"tests/helpers/classicBattle/utils.js [setupClassicBattleDom]","tags":["code","what","function","test","vitest","../../utils/testUtils.js","resetModules","createBattleCardContainers","createBattleHeader","append","createElement","setAttribute","useFakeTimers","fn","includes","String","cb"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/utils.js","node":"setupClassicBattleDom"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js"],"calls":["resetModules","createBattleCardContainers","createBattleHeader","append","createElement","setAttribute","useFakeTimers","fn","includes","String","cb"]}},"version":1},
{"id":"timerStateExposure.test.js-classic battle timer state exposure > mirrors timer state on window and DOM","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/timerStateExposure.test.js [classic battle timer state exposure > mirrors timer state on window and DOM]","tags":["test-code","what","test","vitest","it","dispatch","toEqual","expect","getElementById","toBeTruthy","toBe"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/timerStateExposure.test.js","node":"classic battle timer state exposure > mirrors timer state on window and DOM"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","dispatch","toEqual","expect","getElementById","toBeTruthy","toBe"]}},"version":1},
{"id":"timerStateExposure.test.js-classic battle timer state exposure > updates paused/resumed and remaining after transitions","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/timerStateExposure.test.js [classic battle timer state exposure > updates paused/resumed and remaining after transitions]","tags":["test-code","what","test","vitest","it","dispatch","getElementById","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/timerStateExposure.test.js","node":"classic battle timer state exposure > updates paused/resumed and remaining after transitions"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","dispatch","getElementById","toBe","expect"]}},"version":1},
{"id":"timerService.nextRound.test.js-timerService next round handling > clicking Next during cooldown skips current phase","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/timerService.nextRound.test.js [timerService next round handling > clicking Next during cooldown skips current phase]","tags":["test-code","what","test","vitest","./domUtils.js","../mockScheduler.js","it","createTimerNodes","scheduleNextRound","addEventListener","onNextButtonClick","tick","click","toHaveBeenCalledWith","expect","toBeGreaterThanOrEqual"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/timerService.nextRound.test.js","node":"timerService next round handling > clicking Next during cooldown skips current phase"},"patterns":[],"relations":{"imports":["vitest","./domUtils.js","../mockScheduler.js"],"calls":["it","createTimerNodes","scheduleNextRound","addEventListener","onNextButtonClick","tick","click","toHaveBeenCalledWith","expect","toBeGreaterThanOrEqual"]}},"version":1},
{"id":"timerService.nextRound.test.js-timerService next round handling > auto-dispatches ready when cooldown finishes","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/timerService.nextRound.test.js [timerService next round handling > auto-dispatches ready when cooldown finishes]","tags":["test-code","what","test","vitest","./domUtils.js","../mockScheduler.js","it","mockImplementation","onExpired","createTimerNodes","scheduleNextRound","tick","toHaveBeenCalledWith","expect","toHaveBeenCalledTimes"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/timerService.nextRound.test.js","node":"timerService next round handling > auto-dispatches ready when cooldown finishes"},"patterns":[],"relations":{"imports":["vitest","./domUtils.js","../mockScheduler.js"],"calls":["it","mockImplementation","onExpired","createTimerNodes","scheduleNextRound","tick","toHaveBeenCalledWith","expect","toHaveBeenCalledTimes"]}},"version":1},
{"id":"timerService.nextRound.test.js-timerService next round handling > computeNextRoundCooldown respects test mode","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/timerService.nextRound.test.js [timerService next round handling > computeNextRoundCooldown respects test mode]","tags":["test-code","what","test","vitest","./domUtils.js","../mockScheduler.js","it","computeNextRoundCooldown","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/timerService.nextRound.test.js","node":"timerService next round handling > computeNextRoundCooldown respects test mode"},"patterns":[],"relations":{"imports":["vitest","./domUtils.js","../mockScheduler.js"],"calls":["it","computeNextRoundCooldown","toBe","expect"]}},"version":1},
{"id":"timerService.nextRound.test.js-timerService next round handling > createNextRoundSnackbarRenderer shows and updates","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/timerService.nextRound.test.js [timerService next round handling > createNextRoundSnackbarRenderer shows and updates]","tags":["test-code","what","test","vitest","./domUtils.js","../mockScheduler.js","it","createNextRoundSnackbarRenderer","renderer","toHaveBeenCalledWith","expect","toHaveBeenCalled"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/timerService.nextRound.test.js","node":"timerService next round handling > createNextRoundSnackbarRenderer shows and updates"},"patterns":[],"relations":{"imports":["vitest","./domUtils.js","../mockScheduler.js"],"calls":["it","createNextRoundSnackbarRenderer","renderer","toHaveBeenCalledWith","expect","toHaveBeenCalled"]}},"version":1},
{"id":"timerService.nextRound.test.js-timerService next round handling > scheduleNextRound handles zero-second cooldown fast path","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/timerService.nextRound.test.js [timerService next round handling > scheduleNextRound handles zero-second cooldown fast path]","tags":["test-code","what","test","vitest","./domUtils.js","../mockScheduler.js","it","createTimerNodes","setTestMode","scheduleNextRound","tick","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/timerService.nextRound.test.js","node":"timerService next round handling > scheduleNextRound handles zero-second cooldown fast path"},"patterns":[],"relations":{"imports":["vitest","./domUtils.js","../mockScheduler.js"],"calls":["it","createTimerNodes","setTestMode","scheduleNextRound","tick","toBe","expect"]}},"version":1},
{"id":"timerService.drift.test.js-timerService drift handling > startTimer shows fallback on drift","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/timerService.drift.test.js [timerService drift handling > startTimer shows fallback on drift]","tags":["test-code","what","test","vitest","./domUtils.js","../mockScheduler.js","it","resetModules","doMock","fn","onTick","importActual","startTimer","onDrift","toHaveBeenCalledWith","expect","toHaveBeenCalledTimes"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/timerService.drift.test.js","node":"timerService drift handling > startTimer shows fallback on drift"},"patterns":[],"relations":{"imports":["vitest","./domUtils.js","../mockScheduler.js"],"calls":["it","resetModules","doMock","fn","onTick","importActual","startTimer","onDrift","toHaveBeenCalledWith","expect","toHaveBeenCalledTimes"]}},"version":1},
{"id":"timerService.drift.test.js-timerService drift handling > scheduleNextRound shows fallback on drift","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/timerService.drift.test.js [timerService drift handling > scheduleNextRound shows fallback on drift]","tags":["test-code","what","test","vitest","./domUtils.js","../mockScheduler.js","it","resetModules","doMock","fn","onTick","importActual","createMockScheduler","createTimerNodes","scheduleNextRound","tick","onDrift","some","spyOn","toBe","expect","toHaveBeenCalledTimes"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/timerService.drift.test.js","node":"timerService drift handling > scheduleNextRound shows fallback on drift"},"patterns":[],"relations":{"imports":["vitest","./domUtils.js","../mockScheduler.js"],"calls":["it","resetModules","doMock","fn","onTick","importActual","createMockScheduler","createTimerNodes","scheduleNextRound","tick","onDrift","some","spyOn","toBe","expect","toHaveBeenCalledTimes"]}},"version":1},
{"id":"stateTransitions.test.js-BattleStateMachine.create > initialises with embedded state table","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/stateTransitions.test.js [BattleStateMachine.create > initialises with embedded state table]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/helpers/classicBattle/stateMachine.js","../../../src/helpers/classicBattle/battleEvents.js","../../../src/helpers/classicBattle/orchestratorHandlers.js","it","create","toBeGreaterThan","expect","find","toBe","getState"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/stateTransitions.test.js","node":"BattleStateMachine.create > initialises with embedded state table"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/helpers/classicBattle/stateMachine.js","../../../src/helpers/classicBattle/battleEvents.js","../../../src/helpers/classicBattle/orchestratorHandlers.js"],"calls":["it","create","toBeGreaterThan","expect","find","toBe","getState"]}},"version":1},
{"id":"stateTransitions.test.js-classic battle state table transitions","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/stateTransitions.test.js [classic battle state table transitions]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/helpers/classicBattle/stateMachine.js","../../../src/helpers/classicBattle/battleEvents.js","../../../src/helpers/classicBattle/orchestratorHandlers.js","it","fn","emitBattleEvent","onBattleEvent","createMachineForTransition","dispatch","toBe","expect","getState","toHaveBeenCalled","isStateTransition","offBattleEvent"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/stateTransitions.test.js","node":"classic battle state table transitions"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/helpers/classicBattle/stateMachine.js","../../../src/helpers/classicBattle/battleEvents.js","../../../src/helpers/classicBattle/orchestratorHandlers.js"],"calls":["it","fn","emitBattleEvent","onBattleEvent","createMachineForTransition","dispatch","toBe","expect","getState","toHaveBeenCalled","isStateTransition","offBattleEvent"]}},"version":1},
{"id":"statSelection.test.js-classicBattle stat selection > clears selected class on stat buttons after each round","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/statSelection.test.js [classicBattle stat selection > clears selected class on stat buttons after each round]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","querySelector","add","selectStat","expectDeselected"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/statSelection.test.js","node":"classicBattle stat selection > clears selected class on stat buttons after each round"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","querySelector","add","selectStat","expectDeselected"]}},"version":1},
{"id":"statSelection.test.js-classicBattle stat selection > re-enables stat button after selection","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/statSelection.test.js [classicBattle stat selection > re-enables stat button after selection]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","querySelector","add","selectStat","expectDeselected","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/statSelection.test.js","node":"classicBattle stat selection > re-enables stat button after selection"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","querySelector","add","selectStat","expectDeselected","toBe","expect"]}},"version":1},
{"id":"statSelection.test.js-classicBattle stat selection > clears inline background color with selected class","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/statSelection.test.js [classicBattle stat selection > clears inline background color with selected class]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","querySelector","add","selectStat","expectDeselected","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/statSelection.test.js","node":"classicBattle stat selection > clears inline background color with selected class"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","querySelector","add","selectStat","expectDeselected","toBe","expect"]}},"version":1},
{"id":"statSelection.test.js-classicBattle stat selection > shows tie message when values are equal","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/statSelection.test.js [classicBattle stat selection > shows tie message when values are equal]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","getElementById","selectStat","toMatch","expect","querySelector","toBe"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/statSelection.test.js","node":"classicBattle stat selection > shows tie message when values are equal"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","getElementById","selectStat","toMatch","expect","querySelector","toBe"]}},"version":1},
{"id":"statSelection.test.js-classicBattle stat selection > evaluateRound updates the score","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/statSelection.test.js [classicBattle stat selection > evaluateRound updates the score]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","createBattleStore","_resetForTest","evaluateRound","toMatch","expect","toBe"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/statSelection.test.js","node":"classicBattle stat selection > evaluateRound updates the score"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","createBattleStore","_resetForTest","evaluateRound","toMatch","expect","toBe"]}},"version":1},
{"id":"statSelection.test.js-classicBattle stat selection > shows stat comparison after selection","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/statSelection.test.js [classicBattle stat selection > shows stat comparison after selection]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","getElementById","selectStat","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/statSelection.test.js","node":"classicBattle stat selection > shows stat comparison after selection"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","getElementById","selectStat","toBe","expect"]}},"version":1},
{"id":"statSelection.test.js-classicBattle stat selection > advances machine to cooldown after stat selection","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/statSelection.test.js [classicBattle stat selection > advances machine to cooldown after stat selection]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","getElementById","selectStat","toHaveBeenNthCalledWith","expect","__getStateLog","toEqual","slice"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/statSelection.test.js","node":"classicBattle stat selection > advances machine to cooldown after stat selection"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","getElementById","selectStat","toHaveBeenNthCalledWith","expect","__getStateLog","toEqual","slice"]}},"version":1},
{"id":"statSelection.test.js-classicBattle stat selection > dispatches matchPointReached when match ends","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/statSelection.test.js [classicBattle stat selection > dispatches matchPointReached when match ends]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","setPointsToWin","__reset","getElementById","selectStat","toHaveBeenNthCalledWith","expect","toEqual","__getStateLog"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/statSelection.test.js","node":"classicBattle stat selection > dispatches matchPointReached when match ends"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","setPointsToWin","__reset","getElementById","selectStat","toHaveBeenNthCalledWith","expect","toEqual","__getStateLog"]}},"version":1},
{"id":"statSelection.test.js-classicBattle stat selection > simulateOpponentStat returns a valid stat","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/statSelection.test.js [classicBattle stat selection > simulateOpponentStat returns a valid stat]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","simulateOpponentStat","toBe","expect","includes"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/statSelection.test.js","node":"classicBattle stat selection > simulateOpponentStat returns a valid stat"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","simulateOpponentStat","toBe","expect","includes"]}},"version":1},
{"id":"statDoubleClick.test.js-classicBattle stat double-click > ignores rapid double-clicks without ending match","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/statDoubleClick.test.js [classicBattle stat double-click > ignores rapid double-clicks without ending match]","tags":["test-code","what","test","vitest","./utils.js","./mockSetup.js","it","createBattleStore","_resetForTest","playDoubleClickRound","toBe","expect","scheduleNextRound","runAllTimersAsync","onNextButtonClick"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/statDoubleClick.test.js","node":"classicBattle stat double-click > ignores rapid double-clicks without ending match"},"patterns":[],"relations":{"imports":["vitest","./utils.js","./mockSetup.js"],"calls":["it","createBattleStore","_resetForTest","playDoubleClickRound","toBe","expect","scheduleNextRound","runAllTimersAsync","onNextButtonClick"]}},"version":1},
{"id":"statButtons.state.test.js-classicBattle stat button state > enables stat buttons only while waiting for player action","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/statButtons.state.test.js [classicBattle stat button state > enables stat buttons only while waiting for player action]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/stateMachine.js","../../../src/helpers/classicBattle/orchestratorHandlers.js","../../../src/helpers/classicBattle/view.js","it","fn","init","toHaveBeenCalledWith","expect","querySelector","toBe","dispatch"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/statButtons.state.test.js","node":"classicBattle stat button state > enables stat buttons only while waiting for player action"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateMachine.js","../../../src/helpers/classicBattle/orchestratorHandlers.js","../../../src/helpers/classicBattle/view.js"],"calls":["it","fn","init","toHaveBeenCalledWith","expect","querySelector","toBe","dispatch"]}},"version":1},
{"id":"stallRecovery.test.js-classicBattle stalled stat selection recovery > auto-selects after stall timeout","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/stallRecovery.test.js [classicBattle stalled stat selection recovery > auto-selects after stall timeout]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","createBattleStore","_resetForTest","startRound","advanceTimersByTime","toMatch","expect","querySelector","runAllTimersAsync","toBe"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/stallRecovery.test.js","node":"classicBattle stalled stat selection recovery > auto-selects after stall timeout"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","createBattleStore","_resetForTest","startRound","advanceTimersByTime","toMatch","expect","querySelector","runAllTimersAsync","toBe"]}},"version":1},
{"id":"selectionPrompt.test.js-classicBattle selection prompt > shows selection prompt until a stat is chosen","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/selectionPrompt.test.js [classicBattle selection prompt > shows selection prompt until a stat is chosen]","tags":["test-code","what","test","vitest","./utils.js","./mockSetup.js","it","createBattleStore","_resetForTest","startRound","toBe","expect","querySelector","advanceTimersByTime","toBeNull","getElementById","getCardStatValue","handleStatSelection","runAllTimersAsync"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/selectionPrompt.test.js","node":"classicBattle selection prompt > shows selection prompt until a stat is chosen"},"patterns":[],"relations":{"imports":["vitest","./utils.js","./mockSetup.js"],"calls":["it","createBattleStore","_resetForTest","startRound","toBe","expect","querySelector","advanceTimersByTime","toBeNull","getElementById","getCardStatValue","handleStatSelection","runAllTimersAsync"]}},"version":1},
{"id":"selectionHandler.resolve.test.js-handleStatSelection resolution paths > uses state machine when available","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/selectionHandler.resolve.test.js [handleStatSelection resolution paths > uses state machine when available]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle.js","it","mockResolvedValue","handleStatSelection","toHaveBeenCalledWith","expect","toHaveBeenCalled","any","toBe"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/selectionHandler.resolve.test.js","node":"handleStatSelection resolution paths > uses state machine when available"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle.js"],"calls":["it","mockResolvedValue","handleStatSelection","toHaveBeenCalledWith","expect","toHaveBeenCalled","any","toBe"]}},"version":1},
{"id":"selectionHandler.resolve.test.js-handleStatSelection resolution paths > resolves directly without machine","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/selectionHandler.resolve.test.js [handleStatSelection resolution paths > resolves directly without machine]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle.js","it","mockImplementation","handleStatSelection","toHaveBeenCalled","expect","toBe","toBeNull"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/selectionHandler.resolve.test.js","node":"handleStatSelection resolution paths > resolves directly without machine"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle.js"],"calls":["it","mockImplementation","handleStatSelection","toHaveBeenCalled","expect","toBe","toBeNull"]}},"version":1},
{"id":"selectionHandler.resolve.test.js-handleStatSelection resolution paths > falls back to direct resolution on dispatch error","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/selectionHandler.resolve.test.js [handleStatSelection resolution paths > falls back to direct resolution on dispatch error]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle.js","it","mockRejectedValue","mockImplementation","handleStatSelection","toHaveBeenCalled","expect","toBe","toBeNull"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/selectionHandler.resolve.test.js","node":"handleStatSelection resolution paths > falls back to direct resolution on dispatch error"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle.js"],"calls":["it","mockRejectedValue","mockImplementation","handleStatSelection","toHaveBeenCalled","expect","toBe","toBeNull"]}},"version":1},
{"id":"scheduleNextRound.test.js-classicBattle scheduleNextRound > auto-dispatches ready after cooldown","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/scheduleNextRound.test.js [classicBattle scheduleNextRound > auto-dispatches ready after cooldown]","tags":["test-code","what","test","vitest","./utils.js","./domUtils.js","./mockSetup.js","it","remove","getElementById","createTimerNodes","mockBattleData","spyOn","createBattleStore","_resetForTest","fn","startRound","initClassicBattleOrchestrator","getBattleStateMachine","dispatchBattleEvent","toBe","expect","getState","scheduleNextRound","advanceTimersByTime","runAllTimersAsync","onStateTransition","toHaveBeenCalledWith","toHaveBeenCalledTimes"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/scheduleNextRound.test.js","node":"classicBattle scheduleNextRound > auto-dispatches ready after cooldown"},"patterns":[],"relations":{"imports":["vitest","./utils.js","./domUtils.js","./mockSetup.js"],"calls":["it","remove","getElementById","createTimerNodes","mockBattleData","spyOn","createBattleStore","_resetForTest","fn","startRound","initClassicBattleOrchestrator","getBattleStateMachine","dispatchBattleEvent","toBe","expect","getState","scheduleNextRound","advanceTimersByTime","runAllTimersAsync","onStateTransition","toHaveBeenCalledWith","toHaveBeenCalledTimes"]}},"version":1},
{"id":"scheduleNextRound.test.js-classicBattle scheduleNextRound > transitions roundOver → cooldown → roundStart without duplicates","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/scheduleNextRound.test.js [classicBattle scheduleNextRound > transitions roundOver → cooldown → roundStart without duplicates]","tags":["test-code","what","test","vitest","./utils.js","./domUtils.js","./mockSetup.js","it","remove","getElementById","createTimerNodes","mockImplementation","spyOn","mockBattleData","createBattleStore","_resetForTest","fn","startRound","initClassicBattleOrchestrator","getBattleStateMachine","toHaveBeenCalledTimes","expect","dispatchBattleEvent","toBe","getState","scheduleNextRound","dispatchEvent","onStateTransition","runAllTimersAsync"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/scheduleNextRound.test.js","node":"classicBattle scheduleNextRound > transitions roundOver → cooldown → roundStart without duplicates"},"patterns":[],"relations":{"imports":["vitest","./utils.js","./domUtils.js","./mockSetup.js"],"calls":["it","remove","getElementById","createTimerNodes","mockImplementation","spyOn","mockBattleData","createBattleStore","_resetForTest","fn","startRound","initClassicBattleOrchestrator","getBattleStateMachine","toHaveBeenCalledTimes","expect","dispatchBattleEvent","toBe","getState","scheduleNextRound","dispatchEvent","onStateTransition","runAllTimersAsync"]}},"version":1},
{"id":"scheduleNextRound.test.js-classicBattle scheduleNextRound > handles zero-second cooldown fast path","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/scheduleNextRound.test.js [classicBattle scheduleNextRound > handles zero-second cooldown fast path]","tags":["test-code","what","test","vitest","./utils.js","./domUtils.js","./mockSetup.js","it","remove","getElementById","createTimerNodes","mockBattleData","setTestMode","scheduleNextRound","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/scheduleNextRound.test.js","node":"classicBattle scheduleNextRound > handles zero-second cooldown fast path"},"patterns":[],"relations":{"imports":["vitest","./utils.js","./domUtils.js","./mockSetup.js"],"calls":["it","remove","getElementById","createTimerNodes","mockBattleData","setTestMode","scheduleNextRound","toBe","expect"]}},"version":1},
{"id":"scheduleNextRound.progress.test.js-scheduleNextRound progress > resolves ready immediately in test mode","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/scheduleNextRound.progress.test.js [scheduleNextRound progress > resolves ready immediately in test mode]","tags":["test-code","what","test","vitest","@/helpers/classicBattle/timerService.js","@/helpers/testModeUtils.js","./domUtils.js","@/helpers/classicBattle/skipHandler.js","it","createTimerNodes","mockImplementation","spyOn","setTestMode","scheduleNextRound","toBeUndefined","expect","setSkipHandler","restoreAllMocks"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/scheduleNextRound.progress.test.js","node":"scheduleNextRound progress > resolves ready immediately in test mode"},"patterns":[],"relations":{"imports":["vitest","@/helpers/classicBattle/timerService.js","@/helpers/testModeUtils.js","./domUtils.js","@/helpers/classicBattle/skipHandler.js"],"calls":["it","createTimerNodes","mockImplementation","spyOn","setTestMode","scheduleNextRound","toBeUndefined","expect","setSkipHandler","restoreAllMocks"]}},"version":1},
{"id":"roundStartError.test.js-round start error recovery > dispatches interrupt when drawCards rejects","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/roundStartError.test.js [round start error recovery > dispatches interrupt when drawCards rejects]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/stateMachine.js","../../../src/helpers/classicBattle/orchestratorHandlers.js","it","resetModules","doMock","mockRejectedValue","fn","roundStartEnter","toBe","expect","getState"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/roundStartError.test.js","node":"round start error recovery > dispatches interrupt when drawCards rejects"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateMachine.js","../../../src/helpers/classicBattle/orchestratorHandlers.js"],"calls":["it","resetModules","doMock","mockRejectedValue","fn","roundStartEnter","toBe","expect","getState"]}},"version":1},
{"id":"roundSelectModal.test.js-initRoundSelectModal > renders three options from battleRounds.json","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/roundSelectModal.test.js [initRoundSelectModal > renders three options from battleRounds.json]","tags":["test-code","what","test","vitest","fs","path","../../../src/helpers/constants.js","../../../src/helpers/classicBattle/roundSelectModal.js","it","initRoundSelectModal","fn","querySelectorAll","toHaveLength","expect","toEqual","map"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/roundSelectModal.test.js","node":"initRoundSelectModal > renders three options from battleRounds.json"},"patterns":[],"relations":{"imports":["vitest","fs","path","../../../src/helpers/constants.js","../../../src/helpers/classicBattle/roundSelectModal.js"],"calls":["it","initRoundSelectModal","fn","querySelectorAll","toHaveLength","expect","toEqual","map"]}},"version":1},
{"id":"roundSelectModal.test.js-initRoundSelectModal > selecting an option sets points and starts the match","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/roundSelectModal.test.js [initRoundSelectModal > selecting an option sets points and starts the match]","tags":["test-code","what","test","vitest","fs","path","../../../src/helpers/constants.js","../../../src/helpers/classicBattle/roundSelectModal.js","it","fn","initRoundSelectModal","querySelector","click","toHaveBeenCalledWith","expect","toHaveBeenCalled"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/roundSelectModal.test.js","node":"initRoundSelectModal > selecting an option sets points and starts the match"},"patterns":[],"relations":{"imports":["vitest","fs","path","../../../src/helpers/constants.js","../../../src/helpers/classicBattle/roundSelectModal.js"],"calls":["it","fn","initRoundSelectModal","querySelector","click","toHaveBeenCalledWith","expect","toHaveBeenCalled"]}},"version":1},
{"id":"roundSelectModal.test.js-initRoundSelectModal > opens modal and starts match even if tooltip init fails","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/roundSelectModal.test.js [initRoundSelectModal > opens modal and starts match even if tooltip init fails]","tags":["test-code","what","test","vitest","fs","path","../../../src/helpers/constants.js","../../../src/helpers/classicBattle/roundSelectModal.js","it","fn","mockRejectedValue","mockImplementation","spyOn","initRoundSelectModal","toHaveBeenCalled","expect","toHaveBeenCalledWith","querySelector","click","mockRestore"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/roundSelectModal.test.js","node":"initRoundSelectModal > opens modal and starts match even if tooltip init fails"},"patterns":[],"relations":{"imports":["vitest","fs","path","../../../src/helpers/constants.js","../../../src/helpers/classicBattle/roundSelectModal.js"],"calls":["it","fn","mockRejectedValue","mockImplementation","spyOn","initRoundSelectModal","toHaveBeenCalled","expect","toHaveBeenCalledWith","querySelector","click","mockRestore"]}},"version":1},
{"id":"roundSelectModal.test.js-initRoundSelectModal > falls back to defaults when rounds fail to load","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/roundSelectModal.test.js [initRoundSelectModal > falls back to defaults when rounds fail to load]","tags":["test-code","what","test","vitest","fs","path","../../../src/helpers/constants.js","../../../src/helpers/classicBattle/roundSelectModal.js","it","fn","mockRejectedValue","mockImplementation","spyOn","initRoundSelectModal","toHaveBeenCalledWith","expect","getElementById","toBeNull","toContain","querySelectorAll","toEqual","map","click","toHaveBeenCalled","mockRestore"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/roundSelectModal.test.js","node":"initRoundSelectModal > falls back to defaults when rounds fail to load"},"patterns":[],"relations":{"imports":["vitest","fs","path","../../../src/helpers/constants.js","../../../src/helpers/classicBattle/roundSelectModal.js"],"calls":["it","fn","mockRejectedValue","mockImplementation","spyOn","initRoundSelectModal","toHaveBeenCalledWith","expect","getElementById","toBeNull","toContain","querySelectorAll","toEqual","map","click","toHaveBeenCalled","mockRestore"]}},"version":1},
{"id":"roundSelectModal.test.js-initRoundSelectModal > auto-starts a default match when ?autostart=1 is present","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/roundSelectModal.test.js [initRoundSelectModal > auto-starts a default match when ?autostart=1 is present]","tags":["test-code","what","test","vitest","fs","path","../../../src/helpers/constants.js","../../../src/helpers/classicBattle/roundSelectModal.js","it","fn","replaceState","initRoundSelectModal","toHaveBeenCalledWith","expect","toHaveBeenCalled","toBeNull","querySelector"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/roundSelectModal.test.js","node":"initRoundSelectModal > auto-starts a default match when ?autostart=1 is present"},"patterns":[],"relations":{"imports":["vitest","fs","path","../../../src/helpers/constants.js","../../../src/helpers/classicBattle/roundSelectModal.js"],"calls":["it","fn","replaceState","initRoundSelectModal","toHaveBeenCalledWith","expect","toHaveBeenCalled","toBeNull","querySelector"]}},"version":1},
{"id":"roundResolverOnce.test.js-clears playerChoice after fallback resolve","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/roundResolverOnce.test.js [clears playerChoice after fallback resolve]","tags":["test-code","what","test","vitest","it","createBattleStore","_resetForTest","getCardStatValue","getElementById","handleStatSelection","toBe","expect","advanceTimersByTimeAsync","toBeNull"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/roundResolverOnce.test.js","node":"clears playerChoice after fallback resolve"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","createBattleStore","_resetForTest","getCardStatValue","getElementById","handleStatSelection","toBe","expect","advanceTimersByTimeAsync","toBeNull"]}},"version":1},
{"id":"roundResolved.statButton.test.js-roundResolved stat button reset > keeps .selected for one frame before clearing","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/roundResolved.statButton.test.js [roundResolved stat button reset > keeps .selected for one frame before clearing]","tags":["test-code","what","test","vitest","it","useFakeTimers","mockImplementation","spyOn","querySelector","emitBattleEvent","toBe","expect","contains","advanceTimersByTimeAsync","toHaveBeenCalled","toHaveBeenCalledOnce","mockRestore","useRealTimers"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/roundResolved.statButton.test.js","node":"roundResolved stat button reset > keeps .selected for one frame before clearing"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","useFakeTimers","mockImplementation","spyOn","querySelector","emitBattleEvent","toBe","expect","contains","advanceTimersByTimeAsync","toHaveBeenCalled","toHaveBeenCalledOnce","mockRestore","useRealTimers"]}},"version":1},
{"id":"roundReset.test.js-classicBattle round reset > clears player choice and selection flag","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/roundReset.test.js [classicBattle round reset > clears player choice and selection flag]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/orchestratorHandlers.js","it","roundOverEnter","toBeNull","expect","toBe"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/roundReset.test.js","node":"classicBattle round reset > clears player choice and selection flag"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/orchestratorHandlers.js"],"calls":["it","roundOverEnter","toBeNull","expect","toBe"]}},"version":1},
{"id":"roundDecisionGuard.test.js-scheduleRoundDecisionGuard > interrupts when no selection occurs","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/roundDecisionGuard.test.js [scheduleRoundDecisionGuard > interrupts when no selection occurs]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/orchestratorHandlers.js","it","scheduleRoundDecisionGuard","advanceTimersByTime","runAllTimersAsync","toHaveBeenCalledWith","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/roundDecisionGuard.test.js","node":"scheduleRoundDecisionGuard > interrupts when no selection occurs"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/orchestratorHandlers.js"],"calls":["it","scheduleRoundDecisionGuard","advanceTimersByTime","runAllTimersAsync","toHaveBeenCalledWith","expect"]}},"version":1},
{"id":"resetBattleUI.helpers.test.js-resetBattleUI helpers > removeBackdrops > removes backdrops and destroys quit modal","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/resetBattleUI.helpers.test.js [resetBattleUI helpers > removeBackdrops > removes backdrops and destroys quit modal]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/uiHelpers.js","it","fn","removeBackdrops","toHaveLength","expect","querySelectorAll","toHaveBeenCalledTimes","toBeNull"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/resetBattleUI.helpers.test.js","node":"resetBattleUI helpers > removeBackdrops > removes backdrops and destroys quit modal"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/uiHelpers.js"],"calls":["it","fn","removeBackdrops","toHaveLength","expect","querySelectorAll","toHaveBeenCalledTimes","toBeNull"]}},"version":1},
{"id":"resetBattleUI.helpers.test.js-resetBattleUI helpers > resetActionButtons > replaces buttons and wires next click","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/resetBattleUI.helpers.test.js [resetBattleUI helpers > resetActionButtons > replaces buttons and wires next click]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/uiHelpers.js","it","createElement","fn","addEventListener","append","resetActionButtons","getElementById","toBe","expect","toBeUndefined","dispatchEvent","toHaveBeenCalledTimes"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/resetBattleUI.helpers.test.js","node":"resetBattleUI helpers > resetActionButtons > replaces buttons and wires next click"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/uiHelpers.js"],"calls":["it","createElement","fn","addEventListener","append","resetActionButtons","getElementById","toBe","expect","toBeUndefined","dispatchEvent","toHaveBeenCalledTimes"]}},"version":1},
{"id":"resetBattleUI.helpers.test.js-resetBattleUI helpers > clearRoundInfo > clears round info and syncs scoreboard","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/resetBattleUI.helpers.test.js [resetBattleUI helpers > clearRoundInfo > clears round info and syncs scoreboard]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/uiHelpers.js","it","clearRoundInfo","toHaveBeenCalledTimes","expect","toBe","getElementById"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/resetBattleUI.helpers.test.js","node":"resetBattleUI helpers > clearRoundInfo > clears round info and syncs scoreboard"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/uiHelpers.js"],"calls":["it","clearRoundInfo","toHaveBeenCalledTimes","expect","toBe","getElementById"]}},"version":1},
{"id":"race.statSelected.startup.test.js-race: statSelected before setMachine does not stall round > resolves round via machine after waitingForPlayerAction and clears playerChoice before fallback","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/race.statSelected.startup.test.js [race: statSelected before setMachine does not stall round > resolves round via machine after waitingForPlayerAction and clears playerChoice before fallback]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","it","createBattleCardContainers","createBattleHeader","append","spyOn","getPlayerAndOpponentValues","handleStatSelection","roundDecisionEnter","waitingForPlayerActionEnter","advanceTimersByTimeAsync","__getEvents","toBeNull","expect","some","startsWith","String","toBe","includes","toHaveBeenCalled"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/race.statSelected.startup.test.js","node":"race: statSelected before setMachine does not stall round > resolves round via machine after waitingForPlayerAction and clears playerChoice before fallback"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js"],"calls":["it","createBattleCardContainers","createBattleHeader","append","spyOn","getPlayerAndOpponentValues","handleStatSelection","roundDecisionEnter","waitingForPlayerActionEnter","advanceTimersByTimeAsync","__getEvents","toBeNull","expect","some","startsWith","String","toBe","includes","toHaveBeenCalled"]}},"version":1},
{"id":"quitModal.test.js-quitModal > calls battleEngine.quitMatch when confirmed","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/quitModal.test.js [quitModal > calls battleEngine.quitMatch when confirmed]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/quitModal.js","../../../src/helpers/classicBattle/roundManager.js","../../../src/helpers/battleEngineFacade.js","../../../src/helpers/battle/index.js","it","createBattleStore","quitMatch","getElementById","click","toHaveBeenCalled","expect","toHaveBeenCalledWith"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/quitModal.test.js","node":"quitModal > calls battleEngine.quitMatch when confirmed"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/quitModal.js","../../../src/helpers/classicBattle/roundManager.js","../../../src/helpers/battleEngineFacade.js","../../../src/helpers/battle/index.js"],"calls":["it","createBattleStore","quitMatch","getElementById","click","toHaveBeenCalled","expect","toHaveBeenCalledWith"]}},"version":1},
{"id":"playerChoiceReset.test.js-clears store.playerChoice before each round","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/playerChoiceReset.test.js [clears store.playerChoice before each round]","tags":["test-code","what","test","vitest","it","createBattleStore","startRound","toBeNull","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/playerChoiceReset.test.js","node":"clears store.playerChoice before each round"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","createBattleStore","startRound","toBeNull","expect"]}},"version":1},
{"id":"pauseTimer.test.js-classicBattle timer pause > does not show auto-select message when stat picked before timer expires","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/pauseTimer.test.js [classicBattle timer pause > does not show auto-select message when stat picked before timer expires]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./domUtils.js","./mockSetup.js","it","getElementById","getCardStatValue","handleStatSelection","runAllTimersAsync","advanceTimersByTime","map","toBe","expect","some"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/pauseTimer.test.js","node":"classicBattle timer pause > does not show auto-select message when stat picked before timer expires"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./domUtils.js","./mockSetup.js"],"calls":["it","getElementById","getCardStatValue","handleStatSelection","runAllTimersAsync","advanceTimersByTime","map","toBe","expect","some","test"]}},"version":1},
{"id":"pauseTimer.test.js-classicBattle timer pause","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/pauseTimer.test.js [classicBattle timer pause]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./domUtils.js","./mockSetup.js"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/pauseTimer.test.js","node":"classicBattle timer pause"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./domUtils.js","./mockSetup.js"],"calls":["test"]}},"version":1},
{"id":"orchestrator.events.test.js-classic battle orchestrator UI events > emits events and triggers UI listeners on init","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/orchestrator.events.test.js [classic battle orchestrator UI events > emits events and triggers UI listeners on init]","tags":["test-code","what","test","vitest","it","fn","onBattleEvent","initClassicBattleOrchestrator","toHaveBeenCalled","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/orchestrator.events.test.js","node":"classic battle orchestrator UI events > emits events and triggers UI listeners on init"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","fn","onBattleEvent","initClassicBattleOrchestrator","toHaveBeenCalled","expect"]}},"version":1},
{"id":"opponentDelay.test.js-classicBattle opponent delay > shows snackbar during opponent delay and clears before outcome","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/opponentDelay.test.js [classicBattle opponent delay > shows snackbar during opponent delay and clears before outcome]","tags":["test-code","what","test","vitest","it","useFakeTimers","setOpponentDelay","mockReturnValue","spyOn","createBattleStore","fn","handleStatSelection","simulateOpponentStat","toHaveBeenCalled","expect","runAllTimersAsync","toHaveBeenCalledWith","clearAllTimers","mockRestore"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/opponentDelay.test.js","node":"classicBattle opponent delay > shows snackbar during opponent delay and clears before outcome"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","useFakeTimers","setOpponentDelay","mockReturnValue","spyOn","createBattleStore","fn","handleStatSelection","simulateOpponentStat","toHaveBeenCalled","expect","runAllTimersAsync","toHaveBeenCalledWith","clearAllTimers","mockRestore"]}},"version":1},
{"id":"onTransition.helpers.test.js-onTransition helpers > updates debug globals and timer info on transition","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/onTransition.helpers.test.js [onTransition helpers > updates debug globals and timer info on transition]","tags":["test-code","what","test","vitest","it","dispatch","toBe","expect","getElementById","toBeTruthy","toEqual"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/onTransition.helpers.test.js","node":"onTransition helpers > updates debug globals and timer info on transition"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","dispatch","toBe","expect","getElementById","toBeTruthy","toEqual"]}},"version":1},
{"id":"mocks.js-mockScheduler","text":"export function mockScheduler() {\n  vi.mock(\"../../../src/utils/scheduler.js\", () => ({\n    start: vi.fn(),\n    stop: vi.fn(),\n    onFrame: vi.fn(),\n    cancel: vi.fn(),\n    onSecondTick: vi.fn()\n  }));\n}","qaContext":"Why: export function mockScheduler() { vi. How: mock(\".","embedding":[-0.235,-0.002,0.002,0.047,0.179,0.073,-0.095,0.167,0.077,-0.064,-0.19,0.019,-0.316,-0.046,0.022,-0.2,-0.122,-0.037,0.063,-0.042,0.084,0.039,0.294,0.158,-0.061,-0.154,-0.029,0.007,0.017,-0.021,0.222,0.043,-0.113,-0.054,-0.006,0.115,-0.157,-0.005,-0.062,-0.056,0.018,0.063,-0.089,-0.274,0.179,0.036,-0.022,-0.037,0.006,0.177,-0.04,0.035,-0.07,-0.178,0.164,0.23,0.086,-0.14,0.236,0.142,0.024,-0.141,0.08,-0.009,-0.004,0.025,-0.075,0.184,0.077,0.005,-0.025,0.012,0.019,0.046,-0.025,0.029,-0.18,0.037,0.164,-0.002,-0.035,-0.304,-0.024,0.186,0.006,0.147,0.166,-0.06,0.123,-0.042,-0.146,0.032,-0.204,0.129,-0.255,0.034,0.021,0.119,0.124,0.167,-0.027,-0.17,0.203,0.065,-0.038,0.059,0.001,-0.092,-0.024,-0.043,0.105,0.247,0.099,-0.075,-0.012,0.11,0.011,-0.011,0.205,0.1,0.361,0.068,0.043,-0.008,0.059,0.018,0.386,0,-0.147,-0.181,0.055,0.019,0.198,0.039,0.079,0.147,-0.156,-0.057,0.077,-0.2,0.036,0.056,-0.092,-0.081,0.225,-0.171,0.039,-0.021,0.326,-0.168,-0.113,0.07,-0.159,-0.056,0.01,0.064,-0.049,-0.007,0.107,0.031,-0.007,0.161,0.072,0.036,-0.094,0.142,-0.288,0.045,-0.01,-0.063,-0.363,0.07,0.038,-0.112,0.1,0.039,0.285,0.089,-0.107,0.029,0.108,-0.216,0.163,0.102,0.194,-0.085,-0.049,-0.057,-0.029,0.049,-0.161,-0.056,-0.289,0.022,-0.015,-0.149,-0.116,-0.014,0.093,0.035,-0.074,-0.033,0.008,0.113,-0.237,0.099,-0.125,-0.109,0.175,-0.017,-0.118,0.08,0.123,-0.241,-0.041,-0.032,0.239,0.061,-0.025,-0.179,0.128,-0.015,-0.04,0,0.042,0.191,-0.077,0.388,-0.067,0.009,0.073,-0.034,-0.161,0.033,-0.059,-0.157,0.047,-0.139,-0.089,0.159,0.084,-0.086,-0.047,-0.044,-0.005,-0.057,0.135,-0.019,-0.117,0.08,0.089,0.154,-0.088,0.024,-0.068,-0.043,0.047,0.009,0.219,0.088,0.033,0.138,0.05,0.013,0.057,0.012,-0.047,-0.011,-0.116,0.126,-0.051,0.003,-0.081,-0.19,-0.036,-0.058,-0.042,-0.087,0.083,-0.013,0.014,-0.113,0.034,0.185,0.079,-0.281,0.015,0.043,0.086,-0.194,-0.107,0.124,0.174,0.034,0.031,0.002,0.048,0.038,-0.054,-0.08,-0.06,-0.175,0.089,0.15,0.106,-0.097,0.088,-0.149,-0.104,0.095,-0.098,0.158,0.008,0.065,-0.007,-0.107,0.023,-0.089,0.102,0,-0.067,-0.082,0.037,-0.23,-0.022,-0.245,0.009,-0.175,0.089,0.154,-0.001,0.015,0.12,0.076,0.004,-0.046,0.059,0.303,-0.05,0.114,-0.038,0.117,-0.015,-0.219,0.037,0.035,-0.013,0.071,0.258,0.001,-0.137,0.007,-0.068,-0.153,-0.36,0.022,0.034,-0.02,0.078,0.003,0.031,-0.147,-0.08,-0.1,-0.092,-0.08,-0.117,-0.025,0.033,-0.003,-0.051,-0.077,-0.178,0.011,-0.19,-0.074,0.017,-0.129,-0.215,-0.193,-0.046,0.037,-0.072,-0.042],"source":"tests/helpers/classicBattle/mocks.js [mockScheduler]","tags":["code","what","function","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json","mock","fn"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/mocks.js","node":"mockScheduler"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json"],"calls":["mock","fn"]}},"version":1},
{"id":"mocks.js-mockFeatureFlags","text":"export function mockFeatureFlags(initialFlags = {}) {\n  const defaultFlags = {\n    battleStateBadge: { enabled: true },\n    ...initialFlags\n  };\n\n  vi.doMock(\"../../../src/helpers/featureFlags.js\", () => ({\n    featureFlagsEmitter: new EventTarget(),\n    isEnabled: (flag) => defaultFlags[flag]?.enabled ?? false,\n    initFeatureFlags: vi.fn().mockResolvedValue({ featureFlags: defaultFlags })\n  }));\n}","qaContext":"Why: export function mockFeatureFlags(initialFlags = {}) { const defaultFlags = { battleStateBadge: { enabled: true }, . How: initialFlags }; vi.","embedding":[-0.102,0.059,0.048,0.042,0.116,0.085,0.01,0.108,-0.157,-0.075,-0.028,-0.092,-0.146,0.059,0.013,-0.088,0.094,-0.077,0.102,0.026,-0.053,-0.17,0.125,0.027,0.008,-0.012,-0.101,-0.015,0.013,-0.055,0.108,0.097,-0.096,-0.01,0.044,0.029,0.03,-0.083,-0.105,-0.101,-0.067,0.039,-0.087,-0.156,0.153,0.117,0.133,0.053,-0.042,0.114,0.034,0.079,0.018,-0.158,0.185,0.037,0.128,-0.081,0.092,0.156,-0.019,-0.066,0.034,-0.001,0.032,0.04,0.062,0.195,-0.014,0.008,-0.036,0.165,0.179,-0.033,0.077,0.121,-0.228,0.028,0.317,-0.011,-0.071,-0.192,-0.064,0.006,-0.028,0.173,0.08,-0.084,0.056,0.082,-0.112,-0.08,-0.057,0.168,-0.102,0.038,0.084,-0.041,-0.052,0.077,-0.016,-0.141,0.174,0.065,0.11,-0.017,0,-0.131,-0.015,0.074,0.029,0.149,0.115,-0.09,-0.087,0.037,0.002,-0.033,0.061,-0.017,0.146,0.088,0.127,0.015,0.107,0.032,0.104,0,0.095,-0.155,-0.016,0.159,-0.053,0.075,0.071,-0.031,-0.119,0.004,0.075,0.006,0.006,0.067,-0.089,-0.057,-0.052,-0.082,-0.082,-0.031,0.092,-0.036,-0.013,-0.09,-0.065,-0.097,-0.056,0.108,-0.144,0.043,0.025,-0.061,0.006,0.136,-0.001,-0.025,-0.031,-0.05,-0.274,0.105,0.082,-0.028,-0.185,0.011,0.047,-0.063,0.059,-0.118,0.191,-0.065,-0.142,0.08,0.052,-0.22,0.075,0.053,0.13,-0.055,-0.066,-0.14,-0.014,0.02,-0.065,-0.055,-0.097,0.085,-0.001,-0.107,-0.09,-0.052,0.085,-0.066,-0.064,-0.027,-0.021,0.025,-0.023,0.076,-0.048,-0.127,0.071,-0.081,-0.118,0.194,0.162,-0.184,0.012,-0.157,0.12,-0.028,0.006,-0.02,0.069,-0.165,-0.052,0,0.054,0.074,-0.005,0.21,-0.074,0.009,-0.011,-0.015,-0.035,-0.009,-0.071,-0.119,-0.025,-0.126,-0.046,0.112,-0.03,-0.081,0.121,0.004,0.051,-0.035,0.124,0.135,-0.111,-0.048,0.118,-0.05,0.077,-0.096,0.113,0.124,-0.072,-0.036,0.123,-0.07,0.091,0.056,0.022,0.038,-0.041,0.013,-0.141,0.046,-0.12,0.121,0.067,-0.125,0.06,-0.05,-0.03,-0.164,0.001,-0.022,-0.069,-0.102,-0.072,-0.056,0.058,0.196,0.116,-0.118,-0.097,-0.147,0.041,-0.021,-0.102,0.166,0.086,0.056,0.064,-0.022,0.016,-0.157,0.069,0.032,-0.026,-0.129,0.173,-0.082,0.015,-0.025,0.023,-0.153,0.011,-0.046,-0.035,0.174,-0.018,0.081,0.042,-0.013,0.033,0.031,-0.005,0,-0.044,-0.027,-0.135,-0.077,-0.1,0.058,-0.016,-0.142,0.005,-0.052,-0.034,0.085,0.049,-0.007,0.109,-0.056,-0.118,0.236,-0.163,0.1,-0.029,0.16,0.064,-0.096,0.051,0.08,0.123,-0.009,0.226,0.122,-0.082,0.015,-0.097,-0.196,-0.128,0.107,0.092,-0.019,0.134,0.022,-0.026,-0.014,-0.113,-0.06,-0.261,-0.049,-0.161,0.076,0.013,-0.046,-0.011,0.082,-0.117,0.096,-0.077,0.063,-0.023,-0.006,-0.002,-0.09,0,-0.018,0.072,0.003],"source":"tests/helpers/classicBattle/mocks.js [mockFeatureFlags]","tags":["code","what","function","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json","doMock","mockResolvedValue","fn","state-management"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/mocks.js","node":"mockFeatureFlags"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json"],"calls":["doMock","mockResolvedValue","fn"]}},"version":1},
{"id":"mocks.js-mockDataUtils","text":"export function mockDataUtils(fetchImplementation) {\n  const defaultFetch = async (path) => {\n    if (path.includes(\"battleRounds.json\")) return [];\n    return {};\n  };\n\n  vi.doMock(\"../../../src/helpers/dataUtils.js\", () => ({\n    fetchJson: vi.fn(fetchImplementation || defaultFetch),\n    importJsonModule: vi.fn(async () => defaultSettings)\n  }));\n}","qaContext":"Why: export function mockDataUtils(fetchImplementation) { const defaultFetch = async (path) => { if (path. How: includes(\"battleRounds.","embedding":[-0.222,0.066,-0.017,0.072,-0.063,-0.028,-0.074,0.082,-0.107,-0.06,0.069,-0.026,-0.133,0.051,0.105,-0.094,0.073,0,-0.016,-0.074,-0.079,-0.012,0.188,-0.007,-0.017,-0.125,-0.123,-0.052,0.013,-0.009,0.138,0.043,-0.19,0.073,0.075,0.014,-0.021,-0.068,0.004,-0.008,-0.001,0.125,-0.164,-0.172,0.1,-0.075,0.017,-0.058,0.05,0.082,-0.083,0.072,-0.027,-0.139,0.148,0.083,0.052,0.031,0.035,0.176,0.024,-0.207,0.002,-0.037,0.014,-0.112,-0.023,0.205,0.056,-0.076,0.065,0.033,0.183,0.007,-0.01,0.171,-0.1,-0.019,0.178,-0.054,-0.035,-0.145,-0.136,0.127,-0.072,0.168,0.14,-0.061,0.076,-0.018,-0.041,-0.146,-0.192,0.156,-0.199,0.08,0.201,-0.103,-0.02,0.026,-0.024,-0.123,0.188,0.113,0.039,-0.105,0.067,-0.129,-0.017,-0.005,0.006,0.198,-0.042,-0.05,-0.264,-0.055,-0.036,-0.121,0.046,0.021,0.252,0.014,0.104,0.049,0.126,-0.065,0.157,0,0.011,-0.179,0.054,0.064,0.061,-0.123,0.168,-0.001,-0.159,-0.033,-0.076,0.118,-0.049,0.108,-0.226,0.046,0.013,-0.117,0.016,0.114,0.143,0.022,0.052,-0.037,0.01,-0.132,-0.085,0.179,-0.092,0.047,0.085,-0.031,-0.01,0.187,0.079,0.124,0.022,-0.029,-0.301,0.077,0.11,0.028,-0.177,0.021,-0.101,-0.083,0.081,-0.174,0.098,-0.004,-0.105,0.125,0.023,-0.102,0.131,-0.08,0.128,-0.073,0.039,-0.063,-0.042,-0.032,-0.027,-0.017,-0.101,0.076,-0.109,-0.107,-0.012,0.026,0.051,0.061,-0.044,-0.035,0.137,0.016,-0.149,0.102,0.075,-0.207,0.209,-0.08,-0.188,0.31,0.11,-0.026,-0.001,-0.119,0.107,-0.026,-0.081,-0.035,0.109,-0.171,-0.003,0,0.191,0.077,0.027,0.16,0.009,-0.035,0.063,0.027,0.044,0.132,-0.015,-0.143,0.079,-0.127,-0.04,0.181,-0.002,-0.165,0.095,-0.061,-0.023,-0.037,0.124,0.015,-0.022,-0.061,0.048,-0.026,-0.105,-0.038,0.007,0.001,-0.156,-0.025,0.059,0.046,0.133,0.157,0.01,0.059,-0.056,-0.045,-0.114,0.115,-0.021,-0.002,-0.025,0.004,0.057,-0.105,0.146,-0.095,0.013,0.012,-0.028,-0.029,0.041,-0.072,-0.008,0.148,-0.011,-0.243,-0.178,-0.078,-0.068,-0.102,-0.089,0.09,0.1,0.018,0.027,-0.023,0.177,-0.142,0.105,-0.037,-0.131,-0.162,0.31,0.181,0.034,-0.02,0.028,-0.06,0.095,0.036,-0.032,0.192,-0.028,-0.002,0.07,-0.095,0.042,0.043,0.069,0,-0.003,-0.121,-0.16,0.036,-0.005,-0.013,-0.064,-0.055,0.137,0.051,0.094,0.177,0.018,-0.037,-0.058,-0.051,-0.001,0.175,-0.078,0.065,-0.075,0.143,0.043,-0.111,0.125,0.162,0.074,-0.032,0.003,-0.039,-0.022,-0.166,-0.029,-0.163,-0.093,-0.032,0.128,0.025,0.155,0.086,-0.09,0.036,-0.081,-0.001,-0.203,-0.047,-0.196,0.09,0.004,-0.064,0.059,-0.092,-0.113,-0.005,-0.089,0.004,-0.011,-0.046,-0.147,-0.037,0.015,-0.01,0.055,-0.004],"source":"tests/helpers/classicBattle/mocks.js [mockDataUtils]","tags":["code","what","function","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json","includes","doMock","fn"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/mocks.js","node":"mockDataUtils"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json"],"calls":["includes","doMock","fn"]}},"version":1},
{"id":"mocks.js-mockStats","text":"export function mockStats() {\n  vi.doMock(\"../../../src/helpers/stats.js\", () => ({\n    loadStatNames: async () => [{ name: \"Power\" }]\n  }));\n}","qaContext":"Why: export function mockStats() { vi. How: doMock(\".","embedding":[-0.368,0.172,-0.115,0.112,0.042,-0.106,-0.07,0.206,0.054,0.017,-0.077,-0.047,-0.084,-0.081,0.059,-0.087,0.031,0.001,0.052,-0.119,0.037,-0.061,0.174,-0.094,0.129,-0.153,-0.169,-0.055,0.032,-0.072,0.149,-0.1,-0.186,-0.053,-0.042,0.098,-0.03,-0.018,-0.063,-0.072,0.041,0.045,-0.107,-0.148,0.117,-0.042,0.027,-0.044,0.039,0.172,-0.028,-0.069,-0.001,-0.102,0.196,0.056,0.222,-0.162,0.158,0.27,0.102,-0.185,0.038,-0.01,0.201,-0.031,0.017,0.331,-0.116,0.029,0.01,0.033,0.213,-0.031,0.019,0.136,-0.391,-0.065,0.233,-0.062,-0.051,-0.205,-0.163,0.235,0.116,0.421,0.196,-0.049,-0.029,-0.089,-0.122,0.064,-0.153,0.286,-0.216,0.106,0.115,0.04,-0.023,0.135,-0.122,-0.013,0.262,-0.052,-0.056,-0.099,0.033,-0.095,0.032,-0.017,0.018,0.128,-0.147,-0.001,-0.087,-0.154,0.072,-0.023,0.054,0.084,0.419,0.125,0.077,0.053,0.304,0.07,0.256,0,0.02,-0.142,0.134,0.123,0.109,0.059,0.101,0.07,-0.174,0.126,0.152,0.08,0.053,-0.093,-0.19,0.033,0.089,-0.114,0.046,-0.013,0.23,-0.113,0.001,0.163,-0.055,-0.094,-0.009,0.185,-0.124,0.031,0.144,-0.042,-0.022,0.038,0.065,-0.052,0.169,-0.003,-0.411,0.087,0.059,-0.077,-0.242,0.069,-0.209,-0.144,0.049,-0.158,0.247,0.031,-0.347,0.055,0.076,-0.153,0.087,-0.019,0.033,0.052,-0.086,-0.109,-0.038,-0.05,-0.129,-0.06,-0.182,0.027,-0.026,-0.127,-0.034,0.045,0.189,-0.028,-0.081,0.017,0.105,-0.007,-0.246,0.207,-0.246,-0.187,0.103,-0.244,-0.246,0.337,0.265,-0.094,-0.052,-0.134,0.072,0.027,-0.058,-0.062,0.023,-0.214,-0.281,0,-0.063,0.203,-0.022,0.326,0.116,-0.098,-0.065,-0.056,-0.081,0.099,0.071,-0.2,-0.172,-0.172,0.135,0.291,-0.058,-0.278,0.043,-0.062,0.025,0.029,0.277,0.125,-0.148,0.074,0.1,0.017,-0.08,0.001,-0.051,0.225,-0.148,0.115,-0.023,0.038,0.174,0.128,0.03,0.055,-0.066,0.004,-0.005,-0.047,-0.171,0.075,0.075,-0.086,0.008,-0.125,0.169,-0.15,-0.128,0.092,-0.016,-0.084,-0.072,-0.012,0.028,0.156,0.077,-0.284,-0.107,-0.036,-0.118,-0.148,0.023,0.024,0.292,0.115,0.034,-0.031,0.192,-0.062,-0.048,-0.107,-0.051,-0.307,0.134,-0.053,0.101,-0.007,0.043,-0.276,0.059,0.02,0.053,0.245,0.043,0.017,-0.016,0.098,-0.026,-0.036,0.008,0,0.07,-0.061,0.02,-0.068,-0.073,-0.041,-0.066,-0.091,0.08,0.152,0.197,-0.006,0.244,-0.06,0.049,-0.152,0.068,0.429,-0.114,0.012,-0.148,0.159,0.06,-0.084,0.127,0.151,0.005,-0.212,0.13,-0.018,-0.103,0.009,-0.018,-0.207,-0.082,0.096,0.098,0.004,0.133,0.128,-0.051,-0.087,-0.107,0.066,-0.177,-0.226,-0.211,0.009,0.198,-0.074,0.099,-0.19,-0.122,-0.075,-0.202,0.014,0.001,0.022,-0.131,-0.047,0.134,-0.045,-0.003,-0.036],"source":"tests/helpers/classicBattle/mocks.js [mockStats]","tags":["code","what","function","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json","doMock"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/mocks.js","node":"mockStats"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json"],"calls":["doMock"]}},"version":1},
{"id":"mocks.js-mockRoundManager","text":"export function mockRoundManager() {\n  const store = {};\n  vi.doMock(\"../../../src/helpers/classicBattle/roundManager.js\", () => ({\n    createBattleStore: () => store,\n    startRound: vi.fn(),\n    resetGame: vi.fn(),\n    // Legacy export kept for modules that import directly\n    _resetForTest: vi.fn()\n  }));\n}","qaContext":"Why: export function mockRoundManager() { const store = {}; vi. How: doMock(\".","embedding":[-0.191,0.046,-0.073,-0.006,0.139,0.052,-0.116,0.112,-0.21,0.016,0.076,0.001,-0.151,-0.009,0.11,-0.132,-0.055,0.062,0.077,0.006,-0.025,-0.141,0.207,0.019,-0.076,-0.163,0.005,0.124,-0.008,-0.145,0.145,0.237,-0.137,-0.072,0.043,0.162,-0.042,-0.036,0.012,-0.206,0.056,0.152,-0.05,-0.088,0.14,0.065,0,0.049,0.08,0.093,0.127,-0.062,-0.032,-0.172,0.088,0.263,0.102,-0.026,0.065,0.249,0.01,-0.198,0.041,-0.104,0.027,-0.11,0.083,0.18,0.024,-0.129,0.04,0.054,0.031,-0.035,-0.143,0.044,-0.266,0.025,0.155,0.135,0.005,-0.087,0.027,0.061,-0.035,0.139,0.199,-0.063,0.1,0.076,-0.151,-0.013,-0.044,0.165,-0.237,0.08,0.113,-0.011,0.049,0.093,-0.006,-0.016,0.313,-0.013,0.027,0.004,0.09,-0.046,-0.027,-0.004,0.002,0.177,0.079,-0.073,-0.078,-0.005,-0.085,-0.111,0.044,0.03,0.104,0.137,0.144,0.031,-0.002,0.062,0.263,0,-0.055,-0.145,-0.092,0.216,0.098,0.057,0.149,0.108,-0.197,-0.088,-0.001,-0.007,-0.131,0.036,-0.061,-0.07,0.05,-0.024,0.08,-0.038,0.102,0.054,-0.002,-0.09,0.007,0.071,0.003,0.059,0.101,-0.008,0.182,-0.006,-0.003,-0.032,0.023,0.005,-0.054,-0.023,-0.43,0.023,-0.091,0.065,-0.245,0.08,-0.091,-0.121,-0.026,-0.055,0.332,0.036,-0.38,0.072,-0.027,-0.219,-0.012,-0.132,0.13,-0.111,-0.067,-0.255,-0.005,0.162,-0.146,0.142,-0.101,0.201,-0.095,-0.227,-0.071,0.041,0.081,-0.027,-0.004,-0.07,0.16,0.004,-0.079,0.074,-0.061,-0.31,0.192,-0.105,-0.114,0.21,0.07,-0.133,-0.029,-0.083,0.312,0.138,-0.033,-0.038,0.147,-0.022,-0.091,0,0.02,0.084,-0.098,0.236,-0.043,0.097,-0.097,0.093,-0.145,-0.007,-0.158,-0.043,0.148,-0.076,-0.067,0.185,0.075,-0.123,0.044,-0.087,-0.037,-0.046,0.059,0.095,-0.004,0.072,0.079,0.026,-0.095,0.027,0.159,-0.03,0.018,0.149,0.054,-0.036,0.078,0.05,-0.003,0.058,-0.057,-0.026,-0.007,-0.102,-0.082,0.049,0.013,-0.062,0.113,-0.244,-0.085,-0.153,-0.061,-0.255,-0.001,-0.026,0.04,-0.023,0.062,0.048,0.107,-0.241,-0.063,-0.096,-0.097,-0.033,-0.034,0.214,0.014,0.092,-0.006,0.107,0.195,-0.023,0.05,0.014,-0.037,-0.131,0.122,-0.088,0.084,-0.039,-0.009,-0.231,0.028,-0.053,-0.011,0.119,-0.011,0.07,0.014,0.013,-0.054,-0.095,0.027,0,-0.044,-0.083,-0.087,-0.031,0.017,-0.124,0.135,-0.065,0.185,0.053,-0.03,0.061,0.025,-0.003,0.063,0.024,-0.036,0.27,-0.069,0.137,-0.148,0.113,0.064,-0.179,-0.068,0.144,0.128,0.057,0.149,0.019,-0.046,0.088,-0.004,-0.003,-0.256,0.028,0.142,0.081,0.1,0.008,-0.12,-0.076,-0.152,-0.047,-0.16,-0.128,-0.081,0.021,0.039,0.026,-0.026,-0.069,-0.088,-0.001,-0.065,0.006,0.024,-0.111,-0.142,-0.221,0.015,-0.087,0.123,0.057],"source":"tests/helpers/classicBattle/mocks.js [mockRoundManager]","tags":["code","what","function","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json","doMock","fn","state-management"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/mocks.js","node":"mockRoundManager"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json"],"calls":["doMock","fn"]}},"version":1},
{"id":"mocks.js-mockSelectionHandler","text":"export function mockSelectionHandler() {\n  vi.doMock(\"../../../src/helpers/classicBattle/selectionHandler.js\", () => ({\n    handleStatSelection: vi.fn()\n  }));\n}","qaContext":"Why: export function mockSelectionHandler() { vi. How: doMock(\".","embedding":[-0.121,-0.004,0.056,0.079,0.175,0.014,-0.046,0.126,-0.102,0.055,-0.012,-0.014,-0.232,-0.037,0.097,-0.167,0.065,-0.094,0.121,0.165,-0.059,-0.104,0.323,-0.073,-0.199,-0.137,-0.051,0.083,0.041,-0.123,0.084,0.095,-0.153,-0.067,-0.065,0.035,-0.076,-0.114,0.011,-0.113,-0.043,0.123,-0.11,-0.08,0.148,0.14,0.108,-0.02,0.109,0.213,0.079,0.021,0.135,-0.226,0.178,0.121,0.061,-0.331,0.141,0.325,-0.037,-0.182,-0.024,-0.107,0.021,-0.093,0.09,0.198,-0.109,-0.022,-0.088,0.002,0.109,0.096,0.07,0.072,-0.355,0.018,0.284,-0.042,0.021,-0.186,-0.152,0.262,0.064,0.439,0.139,-0.108,0.154,0.101,-0.256,-0.081,-0.201,0.2,-0.386,0.087,0.053,0.071,-0.035,0.136,0.008,-0.198,0.208,-0.094,-0.075,-0.021,0.014,-0.135,0.028,-0.092,0.012,0.203,-0.111,-0.039,-0.138,-0.097,0.161,-0.082,0.143,-0.019,0.28,0.105,0.054,0.054,0.156,-0.011,0.248,0,-0.01,-0.327,0.008,0.155,-0.013,0.086,0.03,0.115,-0.312,0.033,0.187,-0.155,0.098,-0.004,-0.044,-0.012,-0.054,-0.053,0.005,-0.087,0.06,0.025,0.002,0.08,-0.236,-0.002,-0.071,0.112,0.109,-0.013,0.088,-0.069,-0.059,-0.02,0.063,0.14,-0.012,0.007,-0.347,0.053,0.013,-0.07,-0.274,0.156,-0.118,-0.183,-0.073,0.069,0.364,0.071,-0.231,-0.072,0.211,-0.214,0.131,0.041,0.092,0.219,-0.016,-0.068,-0.1,0.025,-0.149,0.175,-0.051,0.174,-0.056,-0.145,-0.08,-0.056,0.158,-0.051,0.053,-0.046,0.081,-0.119,-0.184,0.167,0.066,-0.16,0.031,-0.158,-0.124,0.234,0.138,-0.193,-0.061,-0.216,0.291,0.005,-0.002,-0.015,0.034,-0.204,-0.097,0,0.022,0.296,-0.003,0.48,-0.078,-0.063,-0.121,-0.037,-0.203,-0.206,-0.032,-0.095,0.056,-0.063,-0.067,0.272,-0.181,-0.187,0.017,-0.064,0.025,-0.106,0.435,0.075,-0.18,-0.022,0.179,0.179,-0.066,-0.17,0.043,0.147,0.019,0.187,0.157,-0.034,0.183,0.262,0.142,0.218,-0.173,0.047,0.12,-0.042,-0.132,0.215,-0.038,-0.034,0.147,-0.068,-0.205,-0.158,-0.15,-0.06,-0.03,0.021,0.026,-0.109,0.123,0.203,0.117,-0.134,-0.088,-0.017,0.107,-0.067,0.053,0.164,0.076,0.042,0.13,-0.073,0.212,-0.264,0.13,0.036,0.069,-0.216,0.106,-0.028,0.14,-0.062,-0.01,-0.323,-0.076,0.237,-0.161,0.148,-0.031,0.009,0.056,-0.067,0.156,-0.192,0.107,0,-0.114,-0.006,-0.085,-0.346,-0.004,0.02,-0.213,-0.102,0.068,0.153,-0.006,-0.055,0.133,-0.051,0.217,-0.118,0.204,0.334,-0.226,0.107,-0.068,0.076,0.28,-0.088,-0.004,0.075,-0.218,-0.061,0.111,-0.001,-0.032,0.13,0.012,-0.219,-0.253,0.076,0,-0.091,0.065,0.139,-0.145,-0.195,-0.197,-0.025,-0.29,-0.091,0.017,-0.029,0.15,0.051,0.059,-0.123,-0.066,-0.019,-0.236,0.053,0.102,0.008,-0.124,-0.171,0.068,0.026,-0.024,0.128],"source":"tests/helpers/classicBattle/mocks.js [mockSelectionHandler]","tags":["code","what","function","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json","doMock","fn"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/mocks.js","node":"mockSelectionHandler"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json"],"calls":["doMock","fn"]}},"version":1},
{"id":"mocks.js-mockBattleJudokaPage","text":"export function mockBattleJudokaPage() {\n  vi.doMock(\"../../../src/helpers/battleJudokaPage.js\", () => ({\n    waitForOpponentCard: vi.fn()\n  }));\n}","qaContext":"Why: export function mockBattleJudokaPage() { vi. How: doMock(\".","embedding":[-0.174,0.219,-0.166,-0.081,0.019,0.145,-0.136,0.078,-0.026,-0.092,0.063,-0.053,-0.296,-0.024,0.079,-0.283,-0.042,0.086,0.129,0.215,-0.031,-0.101,0.282,-0.061,-0.073,-0.1,-0.08,-0.087,-0.001,-0.089,0.299,0.076,-0.07,-0.048,0.048,0.133,-0.207,0.092,-0.017,-0.057,-0.082,0.113,-0.205,-0.034,0.229,0.016,-0.037,-0.007,0.14,0.135,-0.084,-0.131,-0.04,-0.16,0.153,-0.007,0.176,-0.099,0.108,0.282,-0.039,-0.201,0.138,-0.049,0.072,-0.092,-0.008,0.226,-0.116,0.114,-0.022,0.113,0.374,-0.038,-0.083,0.022,-0.267,-0.068,0.371,-0.02,0.131,-0.231,-0.165,0.232,0.046,0.319,0.353,-0.008,0.021,-0.012,-0.06,0.105,-0.074,0.159,-0.313,0.147,-0.086,-0.027,-0.026,0.092,0.076,-0.073,0.284,-0.04,0.011,-0.047,0.168,-0.089,0.106,-0.051,0.041,0.175,-0.217,-0.141,-0.304,0.04,0.088,-0.154,0.189,-0.018,0.351,0.08,0.092,-0.093,0.177,-0.048,0.262,0,0.022,-0.192,-0.114,0.246,0.013,-0.016,0.145,-0.026,-0.295,0.021,-0.045,-0.176,0.044,0.009,-0.224,0.026,-0.156,-0.076,-0.071,-0.008,0.305,-0.173,0.053,0.109,-0.116,0.023,-0.118,-0.005,-0.016,0.013,0.171,-0.062,-0.092,0.141,0.11,-0.014,0.023,-0.136,-0.345,0.107,-0.195,-0.08,-0.244,0.011,-0.039,-0.308,-0.11,-0.041,0.345,0.19,-0.36,0.108,0.085,-0.176,0.075,0.03,0.071,0.188,-0.056,-0.212,-0.075,-0.01,-0.091,-0.011,-0.263,0.029,-0.191,-0.175,-0.197,-0.217,0.216,-0.182,-0.008,-0.072,-0.07,0.112,-0.198,0.221,-0.071,-0.138,0.109,-0.195,-0.259,0.197,0.248,-0.147,-0.001,-0.25,0.209,0.055,-0.07,0.033,0.106,-0.199,-0.01,0,0.061,0.108,-0.039,0.311,0.088,0.076,-0.04,-0.013,-0.168,0.092,-0.204,0.075,0.003,-0.205,-0.113,0.312,0.146,-0.079,0.111,-0.124,-0.059,0,0.251,0.209,-0.047,0.079,0.382,-0.003,-0.063,0.059,0.098,0.126,-0.144,0.304,0.267,0.103,0.177,0.072,0.05,0.105,-0.133,0,0.123,-0.135,-0.204,0.109,0.058,-0.087,0.169,-0.04,-0.005,-0.23,-0.085,-0.11,-0.071,-0.037,-0.167,-0.011,-0.116,0.221,0.096,-0.232,-0.084,-0.094,-0.025,0.092,-0.167,0.245,0.212,0.094,0.082,0.134,0.087,0.072,0.072,0.015,0.037,-0.186,0.299,-0.166,0.186,0.027,-0.113,-0.364,0.041,0.128,-0.174,0.097,-0.145,-0.147,0.09,0.228,0.082,-0.038,0.066,0,-0.047,-0.023,0.016,-0.249,-0.151,-0.145,0.113,-0.244,0.024,0.131,0.168,0.018,0.35,-0.089,0.102,-0.13,0.093,0.272,-0.186,0.078,-0.062,0.101,0.116,-0.173,-0.049,0.173,0.067,-0.173,0.073,-0.134,0.004,0.189,-0.148,-0.189,-0.169,0.183,0.201,-0.078,0.015,0.157,-0.104,-0.122,-0.093,-0.097,-0.269,-0.096,-0.156,0.019,0.061,-0.006,0.038,-0.087,-0.167,0.053,-0.184,-0.004,0.221,-0.004,0.066,-0.063,-0.037,-0.069,0.105,0.008],"source":"tests/helpers/classicBattle/mocks.js [mockBattleJudokaPage]","tags":["code","what","function","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json","doMock","fn"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/mocks.js","node":"mockBattleJudokaPage"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json"],"calls":["doMock","fn"]}},"version":1},
{"id":"mocks.js-mockShowSnackbar","text":"export function mockShowSnackbar() {\n  vi.doMock(\"../../../src/helpers/showSnackbar.js\", () => ({\n    showSnackbar: vi.fn()\n  }));\n}","qaContext":"Why: export function mockShowSnackbar() { vi. How: /src/helpers/showSnackbar.","embedding":[-0.205,0.18,0.012,-0.14,0.111,0.022,-0.192,0.292,0.056,0.05,-0.051,-0.063,-0.071,-0.111,0.096,-0.273,-0.085,-0.075,0.165,0.017,0.073,-0.08,0.23,-0.119,-0.098,-0.221,0.061,-0.015,0.04,-0.032,0.134,0.028,-0.026,-0.074,-0.184,0.144,0.057,-0.095,-0.113,-0.084,-0.102,0.159,-0.287,-0.242,0.232,0.008,0.159,-0.023,0.085,0.117,0.087,-0.097,-0.006,-0.136,0.229,0.105,-0.017,-0.305,0.271,0.37,0.109,-0.072,0.077,-0.093,0.316,-0.119,0.032,0.384,-0.009,0.106,-0.025,-0.037,0.197,0.036,-0.101,-0.132,-0.342,0.01,0.265,-0.025,-0.015,-0.205,-0.079,0.191,0.131,0.394,0.033,-0.151,0.071,-0.013,-0.128,-0.112,-0.122,0.197,-0.246,0.004,0.136,0.07,-0.042,0.251,-0.071,0.011,0.383,-0.125,0.015,0.093,0.132,0.009,0.088,0.095,-0.024,0.157,-0.032,-0.174,-0.293,-0.08,0.06,-0.064,0.075,0.031,0.327,0.207,0.093,0.168,0.158,-0.03,0.343,0,-0.092,-0.221,0.042,0.12,0.103,-0.075,0.099,0.133,-0.309,0.024,0.183,-0.146,-0.105,0.131,-0.181,0.045,0.055,-0.181,-0.039,-0.073,0.139,-0.213,0.032,0.164,-0.086,-0.009,0.109,0.098,-0.048,-0.018,0.158,-0.051,0.107,-0.006,0.11,-0.001,0.02,0.052,-0.335,0.131,0.053,-0.229,-0.388,0.178,-0.023,-0.001,0.172,0.133,0.186,0.052,-0.263,0.189,-0.024,-0.175,0.073,0.024,0.252,0.14,-0.038,-0.224,-0.09,0.052,0.004,0.11,-0.293,0.14,-0.081,-0.02,-0.114,-0.146,0.004,0.122,-0.017,0.032,-0.065,0.009,-0.414,0.064,-0.076,-0.156,0.244,-0.293,-0.194,0.288,0.238,-0.228,0.182,-0.289,0.14,-0.07,-0.05,-0.124,0.074,-0.192,0.037,0,0.109,0.269,-0.068,0.343,-0.13,-0.021,0.018,-0.106,-0.261,0.042,-0.008,-0.1,-0.01,-0.227,-0.039,0.45,-0.08,-0.059,-0.029,-0.249,-0.069,-0.134,0.257,0.105,-0.116,0.109,0.334,0.24,-0.152,-0.111,0.126,0.09,0.029,0.022,0.11,0.104,0.253,0.064,0.009,0.029,-0.062,0.027,-0.027,-0.13,-0.264,0.163,0.112,-0.179,0.132,-0.289,0.223,-0.122,-0.113,-0.053,-0.007,0.082,-0.079,0.104,0.064,0.105,0.043,-0.318,-0.037,-0.089,0.06,-0.241,0.034,0.278,0.228,0.066,0.197,0.106,0.255,-0.202,0.014,0.023,0.145,-0.298,0.1,-0.09,0.063,-0.151,0.159,-0.257,-0.054,0.049,-0.081,0.261,-0.178,0.011,-0.013,0.121,-0.055,-0.157,0.146,0,0.003,-0.108,-0.147,-0.288,-0.045,-0.095,-0.108,-0.19,-0.045,-0.011,-0.007,-0.014,-0.019,0.01,0.178,-0.205,0.061,0.441,-0.24,-0.014,-0.176,0.264,0.182,-0.095,-0.035,0.051,-0.116,-0.022,0.26,-0.148,-0.123,0.067,-0.082,-0.294,-0.149,0.111,-0.016,0.022,0.025,0.137,-0.024,-0.291,-0.091,-0.003,-0.252,-0.103,-0.034,0.107,0.065,0.044,0.044,-0.04,-0.144,-0.081,-0.324,0.07,-0.055,0.108,-0.188,-0.125,0.034,-0.07,-0.038,-0.003],"source":"tests/helpers/classicBattle/mocks.js [mockShowSnackbar]","tags":["code","how","function","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json","doMock","fn"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/mocks.js","node":"mockShowSnackbar"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json"],"calls":["doMock","fn"]}},"version":1},
{"id":"mocks.js-mockTooltips","text":"export function mockTooltips() {\n  vi.doMock(\"../../../src/helpers/tooltip.js\", () => ({\n    initTooltips: vi.fn().mockResolvedValue(() => {})\n  }));\n}","qaContext":"Why: export function mockTooltips() { vi. How: doMock(\".","embedding":[-0.293,-0.031,0.104,-0.038,0.137,-0.077,0.112,0.148,0.09,-0.08,0.088,0.012,-0.225,-0.04,0.103,-0.17,0.007,-0.121,0.091,0.04,0.086,-0.197,0.182,0.066,-0.041,-0.064,-0.109,0.013,0.012,-0.006,0.032,0.17,-0.211,-0.106,-0.003,0.046,0.049,0.036,0.03,-0.029,-0.118,0.06,-0.119,-0.251,0.271,-0.079,0.203,-0.069,0.033,0.369,0.049,-0.033,0.122,-0.177,0.269,0.175,0.176,-0.318,0.159,0.34,0.118,-0.109,0.081,-0.015,0.099,-0.082,0.088,0.127,-0.134,-0.086,-0.13,-0.071,0.187,0.126,0.025,0.195,-0.352,0.019,0.334,-0.057,0.082,-0.15,-0.024,0.249,0.036,0.264,0.216,-0.012,0.005,0.072,-0.175,-0.101,-0.212,0.157,-0.176,0.039,0.087,-0.205,-0.143,0.156,0.02,-0.137,0.215,-0.208,0.038,0.18,-0.028,-0.171,-0.043,-0.047,0.034,0.073,0.029,-0.08,-0.131,-0.274,0.048,-0.135,0.252,-0.007,0.207,0.193,0.037,0.094,0.204,0.133,0.208,0,0.059,-0.13,-0.046,0.069,-0.086,-0.059,0.047,0.091,-0.34,-0.135,0.272,-0.277,0.078,-0.037,-0.08,0.099,0.163,-0.043,-0.111,-0.08,0.161,-0.173,0.022,0,0.048,0.003,-0.17,0.052,0.027,0.057,-0.019,0.042,0.105,-0.014,0.012,0.097,0.107,-0.081,-0.276,0.06,0.077,-0.086,-0.118,0.087,0.046,0.077,-0.018,0.092,0.229,0.014,-0.275,0.084,0.083,-0.178,0.161,0.16,0.127,0.098,-0.01,-0.118,-0.064,0.092,-0.271,-0.182,-0.126,0.104,-0.022,-0.036,-0.03,-0.044,0.135,0.006,-0.128,0.193,0.011,-0.093,-0.203,-0.015,0.248,-0.202,0.04,-0.171,-0.03,0.114,0.133,-0.315,0.122,-0.263,0.021,-0.007,-0.039,-0.009,-0.121,-0.169,-0.241,0,0.019,0.313,-0.157,0.434,-0.101,0.095,-0.12,-0.175,-0.106,-0.026,-0.114,-0.136,-0.061,-0.102,0.03,0.226,-0.159,-0.092,0.167,-0.201,0.103,-0.212,0.37,0.217,-0.158,-0.043,0.23,0.079,-0.054,-0.044,0.083,0.186,-0.007,-0.123,0.147,0.068,0.163,-0.036,0.228,0.157,-0.048,-0.191,-0.021,-0.27,-0.271,0.029,0.018,-0.017,0.136,-0.138,0.124,-0.276,-0.017,0.053,-0.151,-0.158,-0.031,-0.067,0.141,0.116,-0.001,-0.143,-0.056,0.214,0.079,-0.081,0.005,0.148,0.073,-0.051,0.154,0.139,0.305,-0.243,0.172,0.026,0.121,-0.273,0.28,-0.302,0.154,-0.065,0.086,-0.121,-0.145,0.061,-0.086,0.181,-0.156,0.056,-0.035,0.037,0.054,-0.137,0.096,0,-0.01,0.152,-0.034,-0.178,-0.1,0.143,-0.073,-0.152,0.161,0.048,0.012,0.045,0.133,0.075,0.141,-0.021,0.013,0.296,-0.172,0.119,-0.047,0.275,0.123,-0.173,-0.061,0.039,-0.013,0.043,0.233,0.119,-0.065,-0.013,-0.201,-0.238,-0.132,0.119,-0.032,-0.019,0.09,0.226,-0.163,-0.106,-0.345,-0.224,-0.099,-0.172,-0.119,0.051,-0.121,-0.108,-0.068,-0.004,-0.181,0.031,-0.22,-0.136,0.126,0.156,-0.095,-0.124,-0.006,0.004,0.034,0.118],"source":"tests/helpers/classicBattle/mocks.js [mockTooltips]","tags":["code","what","function","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json","doMock","mockResolvedValue","fn"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/mocks.js","node":"mockTooltips"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json"],"calls":["doMock","mockResolvedValue","fn"]}},"version":1},
{"id":"mocks.js-mockTestModeUtils","text":"export function mockTestModeUtils() {\n  vi.doMock(\"../../../src/helpers/testModeUtils.js\", () => ({\n    setTestMode: vi.fn()\n  }));\n}","qaContext":"Why: export function mockTestModeUtils() { vi. How: doMock(\".","embedding":[-0.15,0.083,-0.121,0.019,0.078,-0.035,-0.056,0.246,-0.012,-0.008,0.02,-0.071,-0.193,0.025,0.105,-0.226,-0.02,0.045,0.087,0.089,0.015,-0.044,0.267,-0.07,-0.075,-0.21,-0.008,-0.039,0.018,-0.023,0.164,-0.017,-0.102,-0.01,-0.064,0.188,0.018,-0.12,0.013,-0.115,-0.144,0.079,-0.16,-0.217,0.178,0.037,0.139,-0.012,0.039,0.147,0.039,0.01,0.022,-0.141,0.155,0.024,0.081,-0.179,0.257,0.277,0.009,-0.183,0.04,-0.004,0.156,0.011,0.046,0.244,-0.082,0.063,-0.068,0.088,0.222,0.061,-0.035,0.091,-0.367,0.06,0.351,0.026,0.069,-0.176,-0.135,0.232,0.116,0.352,0.236,-0.09,0.038,0.054,-0.135,-0.027,-0.17,0.227,-0.23,0.007,0.177,0.116,-0.024,0.138,-0.04,-0.114,0.226,-0.084,0.003,0.034,0.137,-0.058,0.119,-0.024,0.017,0.204,-0.016,-0.181,-0.164,-0.049,0.057,-0.023,0.188,0.162,0.235,0.071,0.031,-0.015,0.285,0.073,0.251,0,-0.009,-0.185,-0.001,0.3,0.103,0.064,0.165,0.098,-0.362,-0.058,0.17,-0.223,-0.056,0.014,-0.116,0.071,0.037,-0.313,0.045,-0.047,0.184,-0.129,-0.03,0.014,-0.135,-0.085,-0.043,-0.008,-0.097,0.027,0.088,0.057,0.023,0.165,0.123,0.097,0.053,0.102,-0.377,0.116,0.115,-0.115,-0.309,0.077,0.017,-0.167,-0.116,-0.006,0.265,0.049,-0.203,0.112,0.097,-0.332,0.129,0.01,0.151,-0.006,-0.095,-0.146,-0.049,0.027,-0.052,0.169,-0.176,-0.054,-0.188,-0.213,-0.064,-0.006,0.076,0.021,-0.126,-0.005,-0.016,0.045,-0.329,0.164,0.017,-0.256,0.168,-0.062,-0.181,0.254,0.21,-0.234,-0.122,-0.171,0.2,-0.13,0.055,-0.166,0.061,-0.308,-0.073,0,0.096,0.23,-0.125,0.444,-0.05,-0.07,0.033,-0.086,-0.14,0.088,0.03,-0.145,0.015,-0.112,-0.099,0.279,-0.126,-0.275,0.094,-0.22,-0.032,-0.141,0.392,0.219,-0.083,-0.015,0.161,0.242,0.004,-0.019,-0.039,0.205,0.008,0.091,0.132,0.043,0.222,0.18,0.115,0.122,-0.119,0.003,-0.087,-0.077,-0.14,0.24,0.222,-0.225,0.084,-0.164,0.101,-0.145,-0.119,-0.017,-0.052,-0.092,-0.161,-0.072,0.003,0.201,0.074,-0.136,-0.026,0.026,-0.008,-0.133,-0.176,0.213,0.178,0.035,0.142,-0.085,0.19,-0.141,0.104,-0.106,0.056,-0.317,0.232,0.033,0.168,-0.137,-0.114,-0.149,-0.032,0.141,-0.024,0.272,-0.108,-0.012,0.054,0.06,-0.038,-0.229,0.062,0,-0.078,-0.081,-0.194,-0.206,-0.106,-0.074,-0.108,-0.208,0.052,0.052,-0.053,0.054,0.106,0.008,0.095,-0.151,0.011,0.369,-0.186,0.075,-0.139,0.153,0.138,0.009,0.119,0.025,0.017,-0.134,0.17,-0.046,-0.121,0.028,-0.144,-0.261,-0.345,0.163,0.083,-0.008,0.098,0.115,-0.067,-0.214,-0.147,-0.075,-0.356,-0.135,-0.139,0.123,0.079,-0.035,0.08,-0.02,-0.132,-0.029,-0.183,-0.037,0.089,0.123,-0.177,-0.163,0.051,0.038,0.098,-0.025],"source":"tests/helpers/classicBattle/mocks.js [mockTestModeUtils]","tags":["code","what","function","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json","doMock","fn"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/mocks.js","node":"mockTestModeUtils"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json"],"calls":["doMock","fn"]}},"version":1},
{"id":"mocks.js-mockRoundSelectModal","text":"export function mockRoundSelectModal() {\n  vi.doMock(\"../../../src/helpers/classicBattle/roundSelectModal.js\", () => ({\n    initRoundSelectModal: vi.fn()\n  }));\n}","qaContext":"Why: export function mockRoundSelectModal() { vi. How: doMock(\".","embedding":[-0.131,0.075,-0.044,0.059,0.158,0.023,-0.023,0.169,-0.078,-0.033,0.003,-0.073,-0.258,-0.056,0.172,-0.173,0.021,0.047,0.185,0.144,0.004,-0.145,0.269,-0.016,0.03,-0.048,0.02,0.07,0.09,-0.186,0.118,0.249,-0.075,-0.124,-0.102,0.03,-0.147,-0.045,-0.021,-0.197,-0.014,0.12,-0.139,-0.155,0.09,-0.058,0.118,-0.008,0.11,0.244,0.025,-0.099,0.102,-0.121,0.091,0.077,0.151,-0.084,0.19,0.157,-0.132,-0.175,-0.017,-0.095,0.112,-0.057,0.059,0.02,-0.034,0.036,0.108,-0.036,0.207,0.116,-0.042,0.09,-0.266,0.038,0.398,-0.005,-0.012,-0.239,-0.15,0.109,0.054,0.32,0.212,-0.06,-0.01,0.109,-0.134,0.151,-0.164,0.118,-0.172,0.093,0.096,-0.066,-0.02,0.162,0.056,-0.088,0.029,0.003,-0.057,-0.087,0.17,-0.235,0.059,-0.063,-0.114,0.104,0.082,-0.048,-0.141,-0.121,0.095,-0.066,0.229,-0.098,0.244,0.092,0.073,-0.038,0.185,-0.015,0.311,0,0.025,-0.199,-0.082,0.192,0.044,0.136,0.088,0.099,-0.285,-0.233,0.049,-0.072,-0.037,0.016,-0.062,-0.086,0.022,-0.164,0.104,-0.095,0.124,-0.093,0.029,0.138,-0.144,-0.01,-0.028,0.011,0.003,0.069,0.053,0.009,-0.157,0.056,0.097,0.119,0.016,0.018,-0.366,0.136,-0.038,-0.121,-0.337,0.1,-0.146,-0.098,0.005,0.031,0.306,0.038,-0.241,0.027,0.11,-0.358,0.034,0.084,0.13,0.036,-0.05,-0.215,0.043,0.235,0.01,0.154,-0.18,0.102,-0.155,-0.183,-0.07,-0.071,0.096,-0.066,0.074,-0.041,-0.035,0.016,-0.318,0.017,0.047,-0.228,0.134,-0.109,-0.135,0.152,0.312,-0.161,-0.118,-0.235,0.231,0.011,0.061,-0.14,0.01,-0.168,-0.049,0,-0.034,0.272,-0.026,0.461,-0.037,0.087,-0.027,0.009,0.034,-0.069,-0.043,-0.028,0.037,-0.199,-0.008,0.206,-0.088,-0.101,0.107,-0.116,0.091,-0.147,0.045,0.188,0.027,0.013,0.156,0.164,0.01,-0.095,0.065,0.177,-0.07,0.022,0.236,0.086,0.181,0.098,0.003,0.057,-0.141,-0.075,0.023,-0.072,-0.102,0.04,0.044,-0.105,0.07,-0.038,0.048,-0.179,-0.082,-0.027,0.007,-0.055,-0.073,0.01,0.112,0.176,0.033,-0.129,-0.047,-0.064,-0.023,-0.07,-0.066,0.112,0.18,0.063,0.196,0.018,0.324,-0.02,0.105,0.02,0.178,-0.144,0.21,-0.07,0.235,0.033,-0.039,-0.215,-0.068,0.086,-0.213,0.202,-0.083,0.057,0.094,-0.038,0.138,-0.165,0.112,0,-0.112,-0.109,-0.092,-0.21,0.075,-0.052,-0.014,-0.19,0.091,-0.065,0.048,-0.005,0.26,-0.067,0.123,0.001,0.03,0.26,-0.223,0.092,-0.154,0.04,0.08,-0.154,-0.027,0.057,-0.094,-0.098,0.08,0.044,-0.093,0.106,-0.042,-0.144,-0.358,0.116,0.158,0.055,0.041,0.025,-0.119,-0.232,-0.194,-0.119,-0.282,-0.083,-0.206,0.058,-0.077,-0.016,0.016,-0.083,-0.104,0.046,-0.169,0.037,0.147,-0.049,-0.159,-0.158,-0.023,0.051,0.164,0.018],"source":"tests/helpers/classicBattle/mocks.js [mockRoundSelectModal]","tags":["code","what","function","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json","doMock","fn"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/mocks.js","node":"mockRoundSelectModal"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json"],"calls":["doMock","fn"]}},"version":1},
{"id":"mockSetup.js-applyMockSetup","text":"export function applyMockSetup({\n  fetchJsonMock,\n  generateRandomCardMock,\n  getRandomJudokaMock,\n  renderMock,\n  currentFlags\n} = {}) {\n  mocks.fetchJsonMock = fetchJsonMock;\n  mocks.generateRandomCardMock = generateRandomCardMock;\n  mocks.getRandomJudokaMock = getRandomJudokaMock;\n  mocks.renderMock = renderMock;\n  mocks.currentFlags = currentFlags ?? {};\n  return mocks;\n}","qaContext":"Why: export function applyMockSetup({ fetchJsonMock, generateRandomCardMock, getRandomJudokaMock, renderMock, currentFlags } = {}) { mocks. How: fetchJsonMock = fetchJsonMock; mocks.","embedding":[-0.217,0.081,-0.047,0.064,0.06,-0.038,0.002,0.132,0.024,-0.035,-0.032,-0.049,-0.132,-0.185,0.076,-0.03,0.027,-0.094,0.09,0.091,-0.024,-0.128,0.103,-0.003,0.009,-0.08,-0.058,-0.003,0.045,-0.022,0.171,0.176,-0.165,-0.123,0.146,0.124,-0.006,-0.037,0.018,-0.084,0.048,0.042,0.003,-0.2,0.24,0.036,0.014,0.126,0.047,0.173,-0.003,0.02,-0.001,-0.115,0.137,0.018,0.038,-0.053,0.088,0.139,-0.006,-0.119,0,0.025,0.103,-0.025,-0.022,0.064,0.033,-0.06,0.016,0.1,0.217,-0.082,0.049,0.036,-0.152,-0.084,0.238,-0.078,-0.083,-0.155,-0.036,-0.013,-0.189,0.104,0.09,-0.01,0.026,0.004,-0.06,-0.068,-0.149,0.139,-0.215,-0.044,0.013,0.039,-0.165,0.076,0.066,-0.036,0.188,-0.049,0.075,-0.084,-0.006,-0.072,-0.031,-0.003,0.03,0.098,0.015,0.003,-0.089,-0.118,0.033,-0.101,0.035,0.067,0.231,0.07,0.084,0.008,0.001,0.005,0.235,0,0.054,-0.133,0.014,0.099,0.175,-0.114,0.062,-0.139,-0.077,-0.018,0.085,0.005,-0.057,0.183,-0.136,-0.07,-0.026,-0.001,0.087,0.177,0.065,-0.122,0.008,-0.129,-0.028,0.113,-0.081,0.223,-0.299,0.052,0.237,0.046,-0.065,0.089,-0.056,-0.039,0.045,-0.017,-0.251,-0.036,0.012,-0.097,-0.18,0.131,0.003,-0.113,0.131,-0.088,0.223,0.01,-0.112,0.001,0.047,-0.185,0.083,-0.056,0.08,-0.015,0.184,-0.077,-0.121,-0.041,-0.177,0.033,-0.108,0.012,-0.021,-0.083,-0.107,0.041,0.142,-0.011,-0.047,-0.01,-0.006,0.062,-0.049,0.164,-0.114,-0.062,0.176,0.017,-0.196,-0.007,0.067,0.062,0.042,-0.033,0.072,-0.017,-0.179,-0.039,0.109,-0.207,-0.054,0,-0.008,0.11,-0.052,0.071,-0.044,0.012,0.11,0.066,0.022,-0.029,-0.19,-0.007,0.044,-0.066,-0.041,0.099,0.028,-0.075,0.127,-0.142,-0.01,0.02,0.08,0.095,-0.191,0.04,0.008,-0.013,-0.009,-0.082,-0.053,0.042,0.014,0.094,0.025,-0.096,0.082,0.144,0.075,0.015,-0.086,-0.103,-0.102,0.033,0.013,-0.069,0.037,-0.023,0.089,-0.045,-0.018,-0.062,-0.098,0.026,-0.042,-0.052,-0.136,-0.099,0.165,0.036,-0.009,-0.267,-0.067,-0.081,0.053,0.017,-0.101,0.061,0.16,0.179,0.005,0.012,0.094,-0.144,0.102,-0.005,-0.001,-0.021,0.201,0.067,-0.044,0.021,0.018,-0.039,0.029,-0.097,0.006,0.035,-0.055,-0.037,0.004,0.003,0.043,0.001,0.014,0,0.044,-0.012,0.015,-0.083,0.016,-0.04,-0.06,-0.24,0.004,-0.157,-0.024,0.138,0.077,0.076,0.114,-0.163,-0.094,0.168,-0.129,0.086,-0.065,0.118,0.205,-0.049,0.069,0.145,0.131,-0.152,0.064,0.127,-0.159,0,-0.121,-0.161,-0.015,-0.003,0.03,0.02,0.154,0.16,-0.098,-0.083,-0.061,-0.039,-0.245,-0.1,-0.175,0.008,-0.064,0.049,-0.015,-0.14,-0.16,-0.081,-0.012,-0.086,-0.057,-0.063,0.01,0.041,0.096,0.072,0.045,-0.035],"source":"tests/helpers/classicBattle/mockSetup.js [applyMockSetup]","tags":["code","what","function","test","vitest","../../../src/data/settings.json"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/mockSetup.js","node":"applyMockSetup"},"patterns":[],"relations":{"imports":["vitest","../../../src/data/settings.json"],"calls":[]}},"version":1},
{"id":"matchEnd.test.js-classicBattle match end > quits match after confirmation","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/matchEnd.test.js [classicBattle match end > quits match after confirmation]","tags":["test-code","what","test","vitest","./utils.js","../../../src/helpers/constants.js","./mockSetup.js","it","createBattleStore","quitMatch","getElementById","toBeNull","expect","dispatchEvent","toMatch","querySelector"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/matchEnd.test.js","node":"classicBattle match end > quits match after confirmation"},"patterns":[],"relations":{"imports":["vitest","./utils.js","../../../src/helpers/constants.js","./mockSetup.js"],"calls":["it","createBattleStore","quitMatch","getElementById","toBeNull","expect","dispatchEvent","toMatch","querySelector"]}},"version":1},
{"id":"matchEnd.test.js-classicBattle match end > does not quit match when cancel is chosen","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/matchEnd.test.js [classicBattle match end > does not quit match when cancel is chosen]","tags":["test-code","what","test","vitest","./utils.js","../../../src/helpers/constants.js","./mockSetup.js","it","createBattleStore","_resetForTest","querySelector","quitMatch","getElementById","toBeNull","expect","dispatchEvent","toBe"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/matchEnd.test.js","node":"classicBattle match end > does not quit match when cancel is chosen"},"patterns":[],"relations":{"imports":["vitest","./utils.js","../../../src/helpers/constants.js","./mockSetup.js"],"calls":["it","createBattleStore","_resetForTest","querySelector","quitMatch","getElementById","toBeNull","expect","dispatchEvent","toBe"]}},"version":1},
{"id":"matchEnd.test.js-classicBattle match end > ends the match when player reaches required wins","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/matchEnd.test.js [classicBattle match end > ends the match when player reaches required wins]","tags":["test-code","what","test","vitest","./utils.js","../../../src/helpers/constants.js","./mockSetup.js","it","createBattleStore","_resetForTest","playerWinsRounds","toBe","expect","querySelector","toMatch"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/matchEnd.test.js","node":"classicBattle match end > ends the match when player reaches required wins"},"patterns":[],"relations":{"imports":["vitest","./utils.js","../../../src/helpers/constants.js","./mockSetup.js"],"calls":["it","createBattleStore","_resetForTest","playerWinsRounds","toBe","expect","querySelector","toMatch"]}},"version":1},
{"id":"matchEnd.test.js-classicBattle match end > ends the match when opponent reaches required wins","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/matchEnd.test.js [classicBattle match end > ends the match when opponent reaches required wins]","tags":["test-code","what","test","vitest","./utils.js","../../../src/helpers/constants.js","./mockSetup.js","it","createBattleStore","_resetForTest","opponentWinsRounds","toBe","expect","querySelector","toMatch"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/matchEnd.test.js","node":"classicBattle match end > ends the match when opponent reaches required wins"},"patterns":[],"relations":{"imports":["vitest","./utils.js","../../../src/helpers/constants.js","./mockSetup.js"],"calls":["it","createBattleStore","_resetForTest","opponentWinsRounds","toBe","expect","querySelector","toMatch"]}},"version":1},
{"id":"matchEnd.test.js-classicBattle match end > additional stat selections after match end do not change the score","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/matchEnd.test.js [classicBattle match end > additional stat selections after match end do not change the score]","tags":["test-code","what","test","vitest","./utils.js","../../../src/helpers/constants.js","./mockSetup.js","it","createBattleStore","_resetForTest","playerWinsRounds","querySelector","playRound","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/matchEnd.test.js","node":"classicBattle match end > additional stat selections after match end do not change the score"},"patterns":[],"relations":{"imports":["vitest","./utils.js","../../../src/helpers/constants.js","./mockSetup.js"],"calls":["it","createBattleStore","_resetForTest","playerWinsRounds","querySelector","playRound","toBe","expect"]}},"version":1},
{"id":"matchControls.test.js-classicBattle match controls > enable/disable helpers toggle button state","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/matchControls.test.js [classicBattle match controls > enable/disable helpers toggle button state]","tags":["test-code","what","test","vitest","./domUtils.js","it","getElementById","disableNextRoundButton","toBe","expect","toBeUndefined","enableNextRoundButton"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/matchControls.test.js","node":"classicBattle match controls > enable/disable helpers toggle button state"},"patterns":[],"relations":{"imports":["vitest","./domUtils.js"],"calls":["it","getElementById","disableNextRoundButton","toBe","expect","toBeUndefined","enableNextRoundButton"]}},"version":1},
{"id":"matchControls.test.js-classicBattle match controls > resetBattleUI replaces Next button and reattaches click handler","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/matchControls.test.js [classicBattle match controls > resetBattleUI replaces Next button and reattaches click handler]","tags":["test-code","what","test","vitest","./domUtils.js","it","getElementById","mockImplementation","spyOn","resetBattleUI","toBe","expect","toBeUndefined","dispatchEvent","toHaveBeenCalledTimes"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/matchControls.test.js","node":"classicBattle match controls > resetBattleUI replaces Next button and reattaches click handler"},"patterns":[],"relations":{"imports":["vitest","./domUtils.js"],"calls":["it","getElementById","mockImplementation","spyOn","resetBattleUI","toBe","expect","toBeUndefined","dispatchEvent","toHaveBeenCalledTimes"]}},"version":1},
{"id":"matchControls.test.js-classicBattle match controls > quit button triggers quitMatch","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/matchControls.test.js [classicBattle match controls > quit button triggers quitMatch]","tags":["test-code","what","test","vitest","./domUtils.js","it","createBattleStore","initQuitButton","click","getElementById","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/matchControls.test.js","node":"classicBattle match controls > quit button triggers quitMatch"},"patterns":[],"relations":{"imports":["vitest","./domUtils.js"],"calls":["it","createBattleStore","initQuitButton","click","getElementById","toBe","expect"]}},"version":1},
{"id":"matchControls.test.js-classicBattle match controls > home link invokes quitMatch","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/matchControls.test.js [classicBattle match controls > home link invokes quitMatch]","tags":["test-code","what","test","vitest","./domUtils.js","it","querySelector","createElement","appendChild","createBattleStore","click","toBe","expect","getElementById"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/matchControls.test.js","node":"classicBattle match controls > home link invokes quitMatch"},"patterns":[],"relations":{"imports":["vitest","./domUtils.js"],"calls":["it","querySelector","createElement","appendChild","createBattleStore","click","toBe","expect","getElementById"]}},"version":1},
{"id":"interruptHandlers.test.js-initInterruptHandlers > cleans up and interrupts on pagehide","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/interruptHandlers.test.js [initInterruptHandlers > cleans up and interrupts on pagehide]","tags":["test-code","what","test","vitest","it","createStore","initInterruptHandlers","dispatchEvent","toBeNull","expect","toBe","toHaveBeenCalledWith","toHaveBeenCalled","toHaveBeenCalledTimes"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/interruptHandlers.test.js","node":"initInterruptHandlers > cleans up and interrupts on pagehide"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","createStore","initInterruptHandlers","dispatchEvent","toBeNull","expect","toBe","toHaveBeenCalledWith","toHaveBeenCalled","toHaveBeenCalledTimes"]}},"version":1},
{"id":"interruptHandlers.test.js-initInterruptHandlers > cleans up and interrupts on beforeunload","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/interruptHandlers.test.js [initInterruptHandlers > cleans up and interrupts on beforeunload]","tags":["test-code","what","test","vitest","it","createStore","initInterruptHandlers","dispatchEvent","toHaveBeenCalledWith","expect","toHaveBeenCalledTimes"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/interruptHandlers.test.js","node":"initInterruptHandlers > cleans up and interrupts on beforeunload"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","createStore","initInterruptHandlers","dispatchEvent","toHaveBeenCalledWith","expect","toHaveBeenCalledTimes"]}},"version":1},
{"id":"interruptHandlers.test.js-initInterruptHandlers > opens error modal and interrupts on error event","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/interruptHandlers.test.js [initInterruptHandlers > opens error modal and interrupts on error event]","tags":["test-code","what","test","vitest","it","createStore","initInterruptHandlers","dispatchEvent","toHaveBeenCalledWith","expect","toHaveBeenCalledTimes","toHaveBeenCalled","toContain","querySelector"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/interruptHandlers.test.js","node":"initInterruptHandlers > opens error modal and interrupts on error event"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","createStore","initInterruptHandlers","dispatchEvent","toHaveBeenCalledWith","expect","toHaveBeenCalledTimes","toHaveBeenCalled","toContain","querySelector"]}},"version":1},
{"id":"interruptHandlers.test.js-initInterruptHandlers > opens error modal and interrupts on unhandledrejection","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/interruptHandlers.test.js [initInterruptHandlers > opens error modal and interrupts on unhandledrejection]","tags":["test-code","what","test","vitest","it","createStore","initInterruptHandlers","dispatchEvent","toHaveBeenCalledWith","expect","toHaveBeenCalledTimes","toHaveBeenCalled","toContain","querySelector"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/interruptHandlers.test.js","node":"initInterruptHandlers > opens error modal and interrupts on unhandledrejection"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","createStore","initInterruptHandlers","dispatchEvent","toHaveBeenCalledWith","expect","toHaveBeenCalledTimes","toHaveBeenCalled","toContain","querySelector"]}},"version":1},
{"id":"interruptFlow.test.js-classic battle interrupt flow > routes matchStart → interruptMatch → matchOver with payloads","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/interruptFlow.test.js [classic battle interrupt flow > routes matchStart → interruptMatch → matchOver with payloads]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/stateMachine.js","it","dispatch","toBe","expect","getState","toEqual"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/interruptFlow.test.js","node":"classic battle interrupt flow > routes matchStart → interruptMatch → matchOver with payloads"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateMachine.js"],"calls":["it","dispatch","toBe","expect","getState","toEqual"]}},"version":1},
{"id":"interruptFlow.test.js-classic battle interrupt flow > returns to waitingForMatchStart on toLobby","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/interruptFlow.test.js [classic battle interrupt flow > returns to waitingForMatchStart on toLobby]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/stateMachine.js","it","dispatch","toBe","expect","getState","toEqual"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/interruptFlow.test.js","node":"classic battle interrupt flow > returns to waitingForMatchStart on toLobby"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateMachine.js"],"calls":["it","dispatch","toBe","expect","getState","toEqual"]}},"version":1},
{"id":"interruptFlow.test.js-classic battle interrupt flow > handles roundModification path and resumeRound payload","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/interruptFlow.test.js [classic battle interrupt flow > handles roundModification path and resumeRound payload]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/stateMachine.js","it","dispatch","toBe","expect","getState","toEqual"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/interruptFlow.test.js","node":"classic battle interrupt flow > handles roundModification path and resumeRound payload"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateMachine.js"],"calls":["it","dispatch","toBe","expect","getState","toEqual"]}},"version":1},
{"id":"interruptFlow.test.js-classic battle interrupt flow > cancels modification and goes to cooldown","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/interruptFlow.test.js [classic battle interrupt flow > cancels modification and goes to cooldown]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/stateMachine.js","it","dispatch","toBe","expect","getState"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/interruptFlow.test.js","node":"classic battle interrupt flow > cancels modification and goes to cooldown"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateMachine.js"],"calls":["it","dispatch","toBe","expect","getState"]}},"version":1},
{"id":"drawNextRound.test.js-classicBattle draw next round > enables Next after draw and continues match","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/drawNextRound.test.js [classicBattle draw next round > enables Next after draw and continues match]","tags":["test-code","what","test","vitest","./utils.js","./mockSetup.js","it","createBattleStore","_resetForTest","playRound","scheduleNextRound","runAllTimersAsync","getElementById","toBe","expect","onNextButtonClick"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/drawNextRound.test.js","node":"classicBattle draw next round > enables Next after draw and continues match"},"patterns":[],"relations":{"imports":["vitest","./utils.js","./mockSetup.js"],"calls":["it","createBattleStore","_resetForTest","playRound","scheduleNextRound","runAllTimersAsync","getElementById","toBe","expect","onNextButtonClick"]}},"version":1},
{"id":"domUtils.js-createSnackbarContainer","text":"Create a container element for snackbar messages.\n\n@returns {HTMLDivElement} The snackbar container element.\n1. Create a `div` element named `container`.\n2. Set its `id` to \"snackbar-container\".\n3. Set the `role` attribute to \"status\".\n4. Set the `aria-live` attribute to \"polite\".\n5. Append `container` to `document.body`.\n6. Return `container`.\n\nexport function createSnackbarContainer() {\n  const container = document.createElement(\"div\");\n  container.id = \"snackbar-container\";\n  container.setAttribute(\"role\", \"status\");\n  container.setAttribute(\"aria-live\", \"polite\");\n  document.body.appendChild(container);\n  return container;\n}","qaContext":"Why: Create a container element for snackbar messages. How: @returns {HTMLDivElement} The snackbar container element.","embedding":[-0.036,0.119,0.043,0.145,0.02,0.027,0.129,-0.032,0.023,-0.176,0.03,-0.031,0.016,-0.11,0.117,0.004,0.047,-0.186,-0.017,0.07,0.036,-0.079,0.215,0.024,0.043,-0.054,0.075,-0.158,0.047,-0.016,0.349,-0.155,0.146,-0.115,-0.228,0.068,0.08,-0.135,0,0.013,0.038,0.02,-0.194,-0.024,0.141,-0.263,-0.009,-0.057,0.027,0.151,-0.102,-0.126,0.144,0.084,0.03,0.12,-0.07,0.036,0.049,0.082,0.064,-0.029,0.179,-0.091,0.197,-0.156,-0.022,0.107,-0.135,0.061,0.046,-0.044,0.298,0.011,0.045,-0.197,-0.003,0.069,0.003,0.178,-0.142,-0.062,-0.014,-0.092,-0.11,0.036,-0.051,-0.059,-0.17,-0.123,-0.002,0.01,0.079,0.128,-0.11,0.077,-0.146,-0.044,-0.07,0.094,0.067,0.026,-0.154,0.041,0.034,-0.082,-0.088,0.006,-0.089,0.12,-0.056,0.147,-0.064,0.135,-0.255,-0.096,-0.076,-0.093,0.292,-0.055,0.221,0.016,0.049,0.027,0.182,0.059,0.058,0,0.001,-0.047,-0.006,0.272,0.156,-0.03,-0.051,-0.008,-0.035,-0.187,0.014,0.002,-0.076,-0.027,-0.089,-0.112,-0.174,0.055,0.206,-0.168,-0.221,0.025,0.004,-0.054,0.035,0.102,0.04,0.017,-0.18,0.033,0.192,-0.034,0.079,0.099,0.053,0.058,-0.066,0.145,-0.217,-0.002,0.069,-0.164,0.089,0.004,-0.204,-0.002,0.142,0.13,0.061,0.025,-0.14,-0.039,0.073,-0.14,-0.117,-0.002,-0.058,-0.027,-0.038,-0.209,-0.099,0.057,0.118,-0.105,-0.084,0.016,0.035,0.057,0.067,-0.173,0.017,0.024,0.196,0.092,-0.147,-0.021,-0.116,-0.09,-0.107,0.004,0.207,-0.228,-0.079,0.068,0.128,0.017,0.033,-0.068,0.088,0.213,-0.226,-0.086,0.075,-0.098,-0.046,0,0.048,-0.092,-0.059,0.074,0.023,0.033,0.045,0.116,-0.077,-0.033,-0.171,0.138,0.054,-0.042,-0.126,0.433,-0.067,0.028,0.011,-0.221,0.05,-0.052,-0.023,0.25,-0.095,0.043,0.186,0.031,-0.056,-0.187,0.08,-0.04,0.064,0.128,0.053,-0.172,-0.166,-0.106,-0.072,0.026,0.013,-0.087,-0.023,-0.029,-0.033,0.055,0.069,-0.165,-0.026,0.066,0.156,-0.124,0.099,0.088,0.065,0.091,-0.129,-0.025,0.073,-0.048,0.045,-0.148,0.055,-0.053,0.084,-0.173,-0.099,0.046,0.042,0.102,0.131,-0.079,0.123,-0.086,-0.052,-0.049,0.069,-0.192,-0.129,-0.123,0.023,-0.002,0.106,-0.103,0.021,-0.064,-0.038,0.106,-0.02,-0.049,0.035,0.163,-0.064,-0.101,0.03,0,0.005,-0.261,-0.17,-0.01,-0.044,-0.037,-0.1,-0.202,-0.096,-0.048,-0.024,0.033,-0.126,-0.119,0.022,-0.09,-0.119,0.163,-0.049,-0.052,0.032,0.088,0.078,0.026,0.192,0.022,-0.102,0.019,0.135,0.078,-0.064,-0.094,-0.038,0.025,0.039,-0.085,0.02,-0.134,0.123,0.143,0.232,0.034,-0.102,0.027,-0.097,0.049,-0.14,0.1,0.108,0.171,0.078,-0.043,-0.037,-0.086,-0.147,0.033,-0.014,0.118,0.164,0.102,0.136,0.119,0.08,0.012],"source":"tests/helpers/classicBattle/domUtils.js [createSnackbarContainer]","tags":["code","what","function","test","createElement","setAttribute","appendChild","factory"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/domUtils.js","node":"createSnackbarContainer"},"patterns":["factory"],"relations":{"imports":[],"calls":["createElement","setAttribute","appendChild"]}},"version":1},
{"id":"domUtils.js-createRoundMessage","text":"Create a paragraph element for round messages.\n\n@param {string} [id=\"round-message\"] - ID to assign to the element.\n@returns {HTMLParagraphElement} The round message element.\n1. Create a `p` element named `el`.\n2. Set its `id` to the provided `id`.\n3. Set the `aria-live` attribute to \"polite\".\n4. Set the `aria-atomic` attribute to \"true\".\n5. Set the `role` attribute to \"status\".\n6. Append `el` to `document.body`.\n7. Return `el`.\n\nexport function createRoundMessage(id = \"round-message\") {\n  const el = document.createElement(\"p\");\n  el.id = id;\n  el.setAttribute(\"aria-live\", \"polite\");\n  el.setAttribute(\"aria-atomic\", \"true\");\n  el.setAttribute(\"role\", \"status\");\n  document.body.appendChild(el);\n  return el;\n}","qaContext":"Why: Create a paragraph element for round messages. How: @param {string} [id=\"round-message\"] - ID to assign to the element.","embedding":[0.004,0.144,0.082,0.155,0.068,0.033,0.091,-0.038,0.123,-0.128,0.001,-0.086,-0.002,-0.039,0.189,-0.008,-0.068,-0.135,-0.106,0.037,0.048,0.039,0.169,0.079,-0.023,-0.007,0.02,-0.054,-0.005,-0.099,0.136,-0.038,0.073,-0.008,-0.087,0.092,0.036,-0.009,0.047,0.058,-0.035,-0.083,-0.016,-0.039,0.083,-0.2,-0.107,0.091,0.003,0.125,-0.053,-0.172,0.022,0.105,-0.038,0.086,-0.004,0.005,0.042,-0.03,-0.085,-0.147,0.13,-0.037,0.016,-0.091,0.034,-0.081,-0.189,0.12,0.084,0.049,0.111,0.093,-0.005,-0.05,-0.154,0.028,-0.03,0.08,-0.044,-0.083,-0.061,0.059,0.044,0.023,-0.038,-0.016,-0.131,-0.024,-0.09,0.013,0.086,0.125,-0.172,0.228,-0.066,-0.046,-0.108,0.095,0.049,-0.046,-0.081,-0.075,0.008,-0.078,-0.044,-0.088,-0.119,0.021,-0.066,0.046,-0.029,0.024,-0.076,-0.052,0.096,-0.118,0.189,-0.128,0.208,-0.026,-0.079,0.012,0.168,0.071,0.191,0,0.071,0.072,-0.053,0.203,0.028,0.03,-0.108,-0.047,-0.126,-0.204,-0.048,-0.044,0.083,-0.143,0.003,-0.09,-0.013,0.088,0.087,-0.093,-0.126,-0.068,0.043,0.072,-0.014,0.145,0.091,-0.114,-0.258,-0.001,0.14,0.076,0.063,0.117,0.091,-0.01,-0.098,0.059,-0.115,0.065,-0.07,-0.077,0.035,-0.104,-0.119,-0.016,-0.054,0.135,0.064,-0.079,-0.116,0.059,0.135,-0.177,0.085,0.007,-0.013,0.002,-0.072,-0.148,0.101,0.122,0.102,-0.003,-0.038,-0.026,0.001,-0.064,0.02,-0.176,0.057,-0.018,0.116,0.208,-0.098,-0.075,-0.114,0.005,0.068,-0.032,0.036,-0.154,-0.068,0.041,0.228,-0.029,0.014,-0.066,0.005,0.145,-0.106,-0.027,-0.024,-0.011,-0.053,0,0.005,0.141,-0.147,0.147,0.08,0.131,0.045,0.144,0.075,0.1,-0.004,0.054,-0.106,-0.139,0.011,0.109,-0.045,0.003,-0.044,-0.08,0.112,-0.121,-0.131,0.16,-0.044,-0.003,0.091,-0.018,-0.081,-0.096,-0.075,0.029,-0.014,0.047,0.093,-0.236,0.056,-0.041,0.084,0.137,0.094,-0.022,-0.071,0.02,-0.085,-0.02,0.01,-0.07,-0.108,0.034,-0.027,-0.079,0.111,0.188,-0.02,-0.046,-0.146,-0.029,0.031,0.063,-0.081,-0.052,0.142,-0.014,0.127,-0.063,-0.147,-0.001,-0.118,0.098,0.06,-0.066,0.097,-0.004,0.075,-0.077,-0.023,-0.097,-0.074,0.009,0.164,0.036,-0.059,-0.034,0.093,-0.027,-0.064,0.196,-0.054,0,-0.028,0.082,0.025,-0.049,-0.047,0,-0.224,-0.199,-0.098,-0.106,0.011,0.019,-0.011,-0.108,-0.012,-0.102,0.034,0.064,0.072,-0.15,-0.012,-0.076,-0.152,0.071,-0.07,0.003,0.217,0.02,-0.148,0.036,0.195,-0.05,-0.115,0.043,-0.066,-0.017,-0.136,-0.036,0.014,0.068,-0.133,-0.006,0.133,-0.156,0.145,0.146,0.128,0.045,-0.235,-0.032,0.13,0.032,-0.086,-0.059,0.001,0.115,0.029,-0.105,0.103,-0.046,-0.086,-0.047,0.152,0.049,0.052,0.108,0.118,0.08,0.116,0],"source":"tests/helpers/classicBattle/domUtils.js [createRoundMessage]","tags":["code","what","function","test","createElement","setAttribute","appendChild","factory"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/domUtils.js","node":"createRoundMessage"},"patterns":["factory"],"relations":{"imports":[],"calls":["createElement","setAttribute","appendChild"]}},"version":1},
{"id":"domUtils.js-createTimerNodes","text":"Create button and timer elements for advancing rounds.\n\n@returns {{nextButton: HTMLButtonElement, nextRoundTimer: HTMLParagraphElement}}\n  Nodes for controlling the next round timer.\n1. Create a `button` element named `nextButton`.\n2. Set its `id` to \"next-button\".\n3. Create a `p` element named `nextRoundTimer`.\n4. Set its `id` to \"next-round-timer\".\n5. Set the `aria-live` attribute of `nextRoundTimer` to \"polite\".\n6. Set the `aria-atomic` attribute of `nextRoundTimer` to \"true\".\n7. Set the `role` attribute of `nextRoundTimer` to \"status\".\n8. Append `nextButton` and `nextRoundTimer` to `document.body`.\n9. Return an object containing both nodes.\n\nexport function createTimerNodes() {\n  const nextButton = document.createElement(\"button\");\n  nextButton.id = \"next-button\";\n  const nextRoundTimer = document.createElement(\"p\");\n  nextRoundTimer.id = \"next-round-timer\";\n  nextRoundTimer.setAttribute(\"aria-live\", \"polite\");\n  nextRoundTimer.setAttribute(\"aria-atomic\", \"true\");\n  nextRoundTimer.setAttribute(\"role\", \"status\");\n  document.body.append(nextButton, nextRoundTimer);\n  return { nextButton, nextRoundTimer };\n}","qaContext":"Why: Create button and timer elements for advancing rounds. How: @returns {{nextButton: HTMLButtonElement, nextRoundTimer: HTMLParagraphElement}} Nodes for controlling the next round timer.","embedding":[-0.086,-0.011,-0.053,0.067,-0.059,0.079,0.008,0.045,0.058,-0.02,0.016,-0.106,0.006,-0.088,0.134,0,-0.132,-0.077,0.043,-0.034,0.083,-0.005,0.159,0.017,-0.11,-0.054,0.009,-0.078,0.056,-0.075,0.096,-0.055,-0.143,-0.106,-0.174,-0.02,0.006,-0.071,-0.005,0.024,0.003,-0.071,-0.049,-0.068,0.082,-0.106,-0.153,0.056,-0.049,0.144,-0.065,-0.14,0.087,-0.108,0.01,0.174,0.014,0.046,-0.034,0.012,0.031,-0.137,0.067,-0.02,0.03,0.063,-0.079,-0.01,-0.079,0.061,0.05,-0.027,0.072,0.07,-0.07,-0.233,-0.032,0.122,0.002,-0.01,-0.111,-0.134,-0.123,-0.018,-0.033,-0.092,0.094,0.061,-0.164,-0.067,-0.068,0.2,-0.021,0.009,-0.037,0.241,-0.053,0.082,-0.013,0.027,0.029,-0.122,-0.221,0.038,0.04,-0.167,-0.034,-0.018,-0.045,0.065,-0.063,0.129,-0.049,-0.06,0.042,0.045,0.101,-0.041,0.261,-0.009,0.254,0.019,-0.135,-0.042,0.209,-0.055,0.157,0,0.033,-0.122,-0.131,0.052,0.075,0.137,0.064,0.042,-0.089,-0.033,-0.039,-0.083,-0.019,-0.116,-0.062,-0.23,0.082,0.07,0.084,-0.194,0.064,-0.043,0.002,0.123,-0.067,0.212,0.033,-0.021,-0.159,-0.027,0.174,0.058,-0.094,0.098,0.03,-0.091,-0.041,0.061,-0.023,-0.014,0.003,-0.102,0.004,-0.078,-0.12,-0.132,0.052,0.046,-0.024,0.059,-0.082,0.051,0.034,-0.134,0.076,0.03,-0.089,0.096,-0.154,-0.027,0.059,0.012,-0.027,0.031,-0.164,0.08,0.036,-0.066,0.156,-0.128,0.014,-0.029,0.234,-0.036,-0.014,-0.026,-0.037,-0.034,-0.042,-0.024,0.01,0.002,-0.166,0.096,0.263,-0.017,0.023,-0.014,0.055,0.147,-0.062,-0.039,0.017,0.012,-0.064,0,0.118,0.092,-0.039,0.075,0.11,0.017,-0.028,0.105,0.028,0.036,0.102,0.07,-0.057,-0.171,-0.083,0.158,0.122,-0.04,0.062,-0.107,0.057,0.035,-0.095,0.021,0.035,-0.029,0.112,0.152,-0.029,-0.04,-0.051,-0.04,-0.021,0.138,0.092,-0.147,0.038,0.027,0.015,0.139,0.077,-0.164,0.057,-0.046,-0.041,0.116,-0.058,0.106,-0.233,0.031,0.022,-0.133,-0.081,0.043,0.015,-0.049,-0.036,-0.146,0.092,0.028,0.081,-0.168,0.15,0.056,0.121,-0.019,-0.149,0.018,0.037,0.19,-0.129,0.097,0.165,-0.072,0.058,-0.092,-0.053,-0.105,-0.008,-0.06,-0.093,0.079,0.009,-0.163,-0.04,0.045,-0.102,0.126,0.029,-0.046,-0.121,0.071,0.004,0.005,-0.057,0,-0.174,0.017,-0.041,-0.045,0.078,0.023,-0.034,-0.04,0.007,-0.073,0.133,0.114,0.249,-0.077,-0.04,-0.08,-0.051,-0.07,0.012,-0.042,0.11,-0.108,-0.018,0.045,0.098,0.05,-0.087,0.102,0.102,0.118,-0.106,-0.037,0.003,0.079,-0.059,-0.086,-0.024,-0.016,0.107,0.165,0.081,-0.05,-0.169,0.073,0.004,-0.106,-0.101,-0.057,0.086,0.014,0.009,-0.115,0.048,-0.018,0.071,0.05,0.087,-0.012,-0.022,0.177,-0.066,0.085,0.002,-0.02],"source":"tests/helpers/classicBattle/domUtils.js [createTimerNodes]","tags":["code","what","function","test","createElement","setAttribute","append","factory"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/domUtils.js","node":"createTimerNodes"},"patterns":["factory"],"relations":{"imports":[],"calls":["createElement","setAttribute","append"]}},"version":1},
{"id":"difficulty.test.js-simulateOpponentStat difficulty > returns a random stat on easy","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/difficulty.test.js [simulateOpponentStat difficulty > returns a random stat on easy]","tags":["test-code","what","test","vitest","../../../src/helpers/battleEngineFacade.js","it","mockReturnValue","spyOn","simulateOpponentStat","toBe","expect","includes"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/difficulty.test.js","node":"simulateOpponentStat difficulty > returns a random stat on easy"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/battleEngineFacade.js"],"calls":["it","mockReturnValue","spyOn","simulateOpponentStat","toBe","expect","includes"]}},"version":1},
{"id":"difficulty.test.js-simulateOpponentStat difficulty > chooses among stats at or above average on medium","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/difficulty.test.js [simulateOpponentStat difficulty > chooses among stats at or above average on medium]","tags":["test-code","what","test","vitest","../../../src/helpers/battleEngineFacade.js","it","mockReturnValue","spyOn","simulateOpponentStat","toContain","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/difficulty.test.js","node":"simulateOpponentStat difficulty > chooses among stats at or above average on medium"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/battleEngineFacade.js"],"calls":["it","mockReturnValue","spyOn","simulateOpponentStat","toContain","expect"]}},"version":1},
{"id":"difficulty.test.js-simulateOpponentStat difficulty > chooses the highest stat on hard","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/difficulty.test.js [simulateOpponentStat difficulty > chooses the highest stat on hard]","tags":["test-code","what","test","vitest","../../../src/helpers/battleEngineFacade.js","it","mockReturnValue","spyOn","simulateOpponentStat","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/difficulty.test.js","node":"simulateOpponentStat difficulty > chooses the highest stat on hard"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/battleEngineFacade.js"],"calls":["it","mockReturnValue","spyOn","simulateOpponentStat","toBe","expect"]}},"version":1},
{"id":"debugPanel.test.js-updateDebugPanel > renders basic debug state without machine diagnostics","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/debugPanel.test.js [updateDebugPanel > renders basic debug state without machine diagnostics]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/uiHelpers.js","it","updateDebugPanel","parse","toMatchObject","expect","toBeUndefined"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/debugPanel.test.js","node":"updateDebugPanel > renders basic debug state without machine diagnostics"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/uiHelpers.js"],"calls":["it","updateDebugPanel","parse","toMatchObject","expect","toBeUndefined"]}},"version":1},
{"id":"debugPanel.test.js-updateDebugPanel > includes machine diagnostics when available","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/debugPanel.test.js [updateDebugPanel > includes machine diagnostics when available]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/uiHelpers.js","it","updateDebugPanel","parse","toBe","expect","toEqual"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/debugPanel.test.js","node":"updateDebugPanel > includes machine diagnostics when available"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/uiHelpers.js"],"calls":["it","updateDebugPanel","parse","toBe","expect","toEqual"]}},"version":1},
{"id":"debugCopy.test.js-debug copy button > copies debug output text to clipboard","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/debugCopy.test.js [debug copy button > copies debug output text to clipboard]","tags":["test-code","what","test","vitest","../../../src/helpers/classicBattle/uiHelpers.js","it","setDebugPanelEnabled","getElementById","toBe","expect","dispatchEvent","toHaveBeenCalledWith"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/debugCopy.test.js","node":"debug copy button > copies debug output text to clipboard"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/uiHelpers.js"],"calls":["it","setDebugPanelEnabled","getElementById","toBe","expect","dispatchEvent","toHaveBeenCalledWith"]}},"version":1},
{"id":"countdownReset.test.js-countdown resets after stat selection > clears the next round timer after stat selection","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/countdownReset.test.js [countdown resets after stat selection > clears the next round timer after stat selection]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./domUtils.js","it","populateCards","useFakeTimers","selectPower","toBe","expect","getElementById","advanceTimersByTimeAsync","clearAllTimers","mockRestore"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/countdownReset.test.js","node":"countdown resets after stat selection > clears the next round timer after stat selection"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./domUtils.js"],"calls":["it","populateCards","useFakeTimers","selectPower","toBe","expect","getElementById","advanceTimersByTimeAsync","clearAllTimers","mockRestore"]}},"version":1},
{"id":"countdownReset.test.js-countdown resets after stat selection > shows snackbar countdown with sequential updates","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/countdownReset.test.js [countdown resets after stat selection > shows snackbar countdown with sequential updates]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./domUtils.js","it","populateCards","useFakeTimers","selectPower","querySelector","toMatch","expect","toBe","querySelectorAll","advanceTimersByTimeAsync","clearAllTimers","mockRestore"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/countdownReset.test.js","node":"countdown resets after stat selection > shows snackbar countdown with sequential updates"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./domUtils.js"],"calls":["it","populateCards","useFakeTimers","selectPower","querySelector","toMatch","expect","toBe","querySelectorAll","advanceTimersByTimeAsync","clearAllTimers","mockRestore"]}},"version":1},
{"id":"classicBattlePage.import.test.js-classicBattlePage module > loads without missing exports","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/classicBattlePage.import.test.js [classicBattlePage module > loads without missing exports]","tags":["test-code","what","test","vitest","it","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/classicBattlePage.import.test.js","node":"classicBattlePage module > loads without missing exports"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","toBe","expect"]}},"version":1},
{"id":"cardSelection.test.js-draws a different card for the opponent","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/cardSelection.test.js [draws a different card for the opponent]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","mockImplementation","includes","fn","cb","createElement","applyMockSetup","createBattleStore","_resetForTest","startRound","toHaveBeenCalledWith","expect","objectContaining","anything","toEqual","getOpponentJudoka"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/cardSelection.test.js","node":"draws a different card for the opponent"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","mockImplementation","includes","fn","cb","createElement","applyMockSetup","createBattleStore","_resetForTest","startRound","toHaveBeenCalledWith","expect","objectContaining","anything","toEqual","getOpponentJudoka"]}},"version":1},
{"id":"cardSelection.test.js-excludes hidden judoka from selection","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/cardSelection.test.js [excludes hidden judoka from selection]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","mockImplementation","includes","fn","cb","applyMockSetup","createBattleStore","_resetForTest","startRound","toHaveBeenCalledWith","expect","objectContaining","anything","any"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/cardSelection.test.js","node":"excludes hidden judoka from selection"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","mockImplementation","includes","fn","cb","applyMockSetup","createBattleStore","_resetForTest","startRound","toHaveBeenCalledWith","expect","objectContaining","anything","any"]}},"version":1},
{"id":"cardSelection.test.js-shows retry dialog when data load fails","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/cardSelection.test.js [shows retry dialog when data load fails]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","mockResolvedValueOnce","mockRejectedValueOnce","_resetForTest","defineProperty","fn","drawCards","toBe","expect","getElementById","toBeTruthy"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/cardSelection.test.js","node":"shows retry dialog when data load fails"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","mockResolvedValueOnce","mockRejectedValueOnce","_resetForTest","defineProperty","fn","drawCards","toBe","expect","getElementById","toBeTruthy"]}},"version":1},
{"id":"cardSelection.test.js-clicking Retry re-fetches data in order","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/cardSelection.test.js [clicking Retry re-fetches data in order]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","mockImplementation","push","_resetForTest","defineProperty","fn","drawCards","getElementById","toBeTruthy","expect","click","resolve","toBe","toMatch"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/cardSelection.test.js","node":"clicking Retry re-fetches data in order"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","mockImplementation","push","_resetForTest","defineProperty","fn","drawCards","getElementById","toBeTruthy","expect","click","resolve","toBe","toMatch"]}},"version":1},
{"id":"cardSelection.test.js-logs an error when JudokaCard.render does not return an element","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/cardSelection.test.js [logs an error when JudokaCard.render does not return an element]","tags":["test-code","what","test","vitest","../../utils/testUtils.js","./mockSetup.js","it","resetModules","doMock","mockImplementation","fn","spyOn","_resetForTest","drawCards","toHaveBeenCalledWith","expect","getElementById","toBe","mockRestore"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/cardSelection.test.js","node":"logs an error when JudokaCard.render does not return an element"},"patterns":[],"relations":{"imports":["vitest","../../utils/testUtils.js","./mockSetup.js"],"calls":["it","resetModules","doMock","mockImplementation","fn","spyOn","_resetForTest","drawCards","toHaveBeenCalledWith","expect","getElementById","toBe","mockRestore"]}},"version":1},
{"id":"battleStateBadge.test.js-battleStateBadge displays state transitions > renders initial progress list and badge","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/battleStateBadge.test.js [battleStateBadge displays state transitions > renders initial progress list and badge]","tags":["test-code","what","test","vitest","./mocks.js","../../../src/helpers/classicBattle/stateTable.js","it","createBattleDom","setupClassicBattlePage","getElementById","map","from","querySelectorAll","toEqual","expect","slice","toBe"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/battleStateBadge.test.js","node":"battleStateBadge displays state transitions > renders initial progress list and badge"},"patterns":[],"relations":{"imports":["vitest","./mocks.js","../../../src/helpers/classicBattle/stateTable.js"],"calls":["it","createBattleDom","setupClassicBattlePage","getElementById","map","from","querySelectorAll","toEqual","expect","slice","toBe"]}},"version":1},
{"id":"battleStateBadge.test.js-battleStateBadge displays state transitions > updates badge text on state transitions","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/battleStateBadge.test.js [battleStateBadge displays state transitions > updates badge text on state transitions]","tags":["test-code","what","test","vitest","./mocks.js","../../../src/helpers/classicBattle/stateTable.js","it","createBattleDom","setupClassicBattlePage","getElementById","push","observe","dispatchBattleEvent","onStateTransition","disconnect","toEqual","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/battleStateBadge.test.js","node":"battleStateBadge displays state transitions > updates badge text on state transitions"},"patterns":[],"relations":{"imports":["vitest","./mocks.js","../../../src/helpers/classicBattle/stateTable.js"],"calls":["it","createBattleDom","setupClassicBattlePage","getElementById","push","observe","dispatchBattleEvent","onStateTransition","disconnect","toEqual","expect"]}},"version":1},
{"id":"autoSelect.test.js-classicBattle auto select > auto-selects a stat when timer expires","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/autoSelect.test.js [classicBattle auto select > auto-selects a stat when timer expires]","tags":["test-code","what","test","vitest","./utils.js","./mockSetup.js","it","doMock","importActual","fn","mockReturnValue","spyOn","createBattleStore","_resetForTest","startRound","advanceTimersByTime","runOnlyPendingTimersAsync","map","toContain","expect","querySelector","toBe","toMatch"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/autoSelect.test.js","node":"classicBattle auto select > auto-selects a stat when timer expires"},"patterns":[],"relations":{"imports":["vitest","./utils.js","./mockSetup.js"],"calls":["it","doMock","importActual","fn","mockReturnValue","spyOn","createBattleStore","_resetForTest","startRound","advanceTimersByTime","runOnlyPendingTimersAsync","map","toContain","expect","querySelector","toBe","toMatch"]}},"version":1},
{"id":"pauseResumeTimer.test.js-pauseTimer/resumeTimer > resumes countdown from paused remaining time","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/pauseResumeTimer.test.js [pauseTimer/resumeTimer > resumes countdown from paused remaining time]","tags":["test-code","what","test","vitest","it","_resetForTest","startRound","tick","pauseTimer","toEqual","expect","getTimerState","resumeTimer"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/pauseResumeTimer.test.js","node":"pauseTimer/resumeTimer > resumes countdown from paused remaining time"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","_resetForTest","startRound","tick","pauseTimer","toEqual","expect","getTimerState","resumeTimer"]}},"version":1},
{"id":"outcome.test.js-determineOutcome > returns player win when player value higher","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/outcome.test.js [determineOutcome > returns player win when player value higher]","tags":["test-code","what","test","vitest","../../../src/helpers/BattleEngine.js","it","toEqual","expect","determineOutcome"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/outcome.test.js","node":"determineOutcome > returns player win when player value higher"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/BattleEngine.js"],"calls":["it","toEqual","expect","determineOutcome"]}},"version":1},
{"id":"outcome.test.js-determineOutcome > returns opponent win when opponent value higher","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/outcome.test.js [determineOutcome > returns opponent win when opponent value higher]","tags":["test-code","what","test","vitest","../../../src/helpers/BattleEngine.js","it","toEqual","expect","determineOutcome"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/outcome.test.js","node":"determineOutcome > returns opponent win when opponent value higher"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/BattleEngine.js"],"calls":["it","toEqual","expect","determineOutcome"]}},"version":1},
{"id":"outcome.test.js-determineOutcome > returns draw when values equal","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/outcome.test.js [determineOutcome > returns draw when values equal]","tags":["test-code","what","test","vitest","../../../src/helpers/BattleEngine.js","it","toEqual","expect","determineOutcome"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/outcome.test.js","node":"determineOutcome > returns draw when values equal"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/BattleEngine.js"],"calls":["it","toEqual","expect","determineOutcome"]}},"version":1},
{"id":"outcome.test.js-applyOutcome > increments player score on player win","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/outcome.test.js [applyOutcome > increments player score on player win]","tags":["test-code","what","test","vitest","../../../src/helpers/BattleEngine.js","it","applyOutcome","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/outcome.test.js","node":"applyOutcome > increments player score on player win"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/BattleEngine.js"],"calls":["it","applyOutcome","toBe","expect"]}},"version":1},
{"id":"outcome.test.js-applyOutcome > increments opponent score on opponent win","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/outcome.test.js [applyOutcome > increments opponent score on opponent win]","tags":["test-code","what","test","vitest","../../../src/helpers/BattleEngine.js","it","applyOutcome","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/outcome.test.js","node":"applyOutcome > increments opponent score on opponent win"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/BattleEngine.js"],"calls":["it","applyOutcome","toBe","expect"]}},"version":1},
{"id":"outcome.test.js-applyOutcome > leaves scores unchanged on draw","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/outcome.test.js [applyOutcome > leaves scores unchanged on draw]","tags":["test-code","what","test","vitest","../../../src/helpers/BattleEngine.js","it","applyOutcome","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/outcome.test.js","node":"applyOutcome > leaves scores unchanged on draw"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/BattleEngine.js"],"calls":["it","applyOutcome","toBe","expect"]}},"version":1},
{"id":"outcome.test.js-BattleEngine handleStatSelection > handles player win","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/outcome.test.js [BattleEngine handleStatSelection > handles player win]","tags":["test-code","what","test","vitest","../../../src/helpers/BattleEngine.js","it","handleStatSelection","toMatchObject","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/outcome.test.js","node":"BattleEngine handleStatSelection > handles player win"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/BattleEngine.js"],"calls":["it","handleStatSelection","toMatchObject","expect"]}},"version":1},
{"id":"outcome.test.js-BattleEngine handleStatSelection > handles opponent win","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/outcome.test.js [BattleEngine handleStatSelection > handles opponent win]","tags":["test-code","what","test","vitest","../../../src/helpers/BattleEngine.js","it","handleStatSelection","toMatchObject","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/outcome.test.js","node":"BattleEngine handleStatSelection > handles opponent win"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/BattleEngine.js"],"calls":["it","handleStatSelection","toMatchObject","expect"]}},"version":1},
{"id":"outcome.test.js-BattleEngine handleStatSelection > handles tie","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/outcome.test.js [BattleEngine handleStatSelection > handles tie]","tags":["test-code","what","test","vitest","../../../src/helpers/BattleEngine.js","it","handleStatSelection","toMatchObject","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/outcome.test.js","node":"BattleEngine handleStatSelection > handles tie"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/BattleEngine.js"],"calls":["it","handleStatSelection","toMatchObject","expect"]}},"version":1},
{"id":"outcome.test.js-BattleEngine handleStatSelection > ends match when points threshold reached","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/outcome.test.js [BattleEngine handleStatSelection > ends match when points threshold reached]","tags":["test-code","what","test","vitest","../../../src/helpers/BattleEngine.js","it","setPointsToWin","handleStatSelection","toBe","expect","toMatch"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/outcome.test.js","node":"BattleEngine handleStatSelection > ends match when points threshold reached"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/BattleEngine.js"],"calls":["it","setPointsToWin","handleStatSelection","toBe","expect","toMatch"]}},"version":1},
{"id":"interrupts.test.js-BattleEngine interrupts > interruptRound stops timer and records reason","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/interrupts.test.js [BattleEngine interrupts > interruptRound stops timer and records reason]","tags":["test-code","what","test","vitest","it","_resetForTest","startRound","interruptRound","toHaveBeenCalled","expect","toBe","hasActiveTimer","toEqual"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/interrupts.test.js","node":"BattleEngine interrupts > interruptRound stops timer and records reason"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","_resetForTest","startRound","interruptRound","toHaveBeenCalled","expect","toBe","hasActiveTimer","toEqual"]}},"version":1},
{"id":"interrupts.test.js-BattleEngine interrupts > interruptMatch stops timer and ends match","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/interrupts.test.js [BattleEngine interrupts > interruptMatch stops timer and ends match]","tags":["test-code","what","test","vitest","it","_resetForTest","startRound","interruptMatch","toHaveBeenCalled","expect","toBe","hasActiveTimer","toEqual"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/interrupts.test.js","node":"BattleEngine interrupts > interruptMatch stops timer and ends match"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","_resetForTest","startRound","interruptMatch","toHaveBeenCalled","expect","toBe","hasActiveTimer","toEqual"]}},"version":1},
{"id":"interrupts.test.js-BattleEngine interrupts > roundModification applies overrides and resetRound","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/interrupts.test.js [BattleEngine interrupts > roundModification applies overrides and resetRound]","tags":["test-code","what","test","vitest","it","_resetForTest","startRound","roundModification","toHaveBeenCalled","expect","toBe","toEqual","stringify"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/interrupts.test.js","node":"BattleEngine interrupts > roundModification applies overrides and resetRound"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","_resetForTest","startRound","roundModification","toHaveBeenCalled","expect","toBe","toEqual","stringify"]}},"version":1},
{"id":"interrupts.test.js-BattleEngine interrupts > resetInterrupts clears flags","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/battleEngine/interrupts.test.js [BattleEngine interrupts > resetInterrupts clears flags]","tags":["test-code","what","test","vitest","it","resetInterrupts","toBe","expect"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/battleEngine/interrupts.test.js","node":"BattleEngine interrupts > resetInterrupts clears flags"},"patterns":[],"relations":{"imports":["vitest"],"calls":["it","resetInterrupts","toBe","expect"]}},"version":1}
]
