{"id":"roundSelectModal.js-initRoundSelectModal","text":"Initialize round selection modal for Classic Battle.\n\n@param {Function} onStart - Callback to invoke after selecting rounds.\n@returns {Promise<void>} Resolves when modal is initialized.\n1. If the page URL includes `autostart=1`:\n   a. Set `pointsToWin` to the default value.\n   b. Invoke `onStart` and return early.\n2. If test mode is enabled:\n   a. Set `pointsToWin` to the default value.\n   b. Invoke `onStart` and return early.\n3. Attempt to fetch `battleRounds.js` using `fetchJson`.\n   a. On failure, log the error, fall back to default rounds, and note the load error.\n4. Create buttons for each option with `createButton` and assign tooltip ids.\n5. Assemble a modal via `createModal`, append an error note if needed, and attach to the document.\n6. Attempt to initialize tooltips for the modal; log errors but continue.\n7. Open the modal.\n8. When a button is clicked:\n   a. Call `setPointsToWin` with the round value.\n   b. Close and destroy the modal, then invoke the provided start callback.\n\nexport async function initRoundSelectModal(onStart) {\n  // Allow automated test harnesses or debugging to bypass the modal by\n  // supplying `?autostart=1` in the page URL. This is a deliberate, low-risk\n  // convenience that mirrors existing `isTestModeEnabled()` behaviour.\n  try {\n    if (typeof location !== \"undefined\") {\n      const params = new URLSearchParams(location.search);\n      if (params.get(\"autostart\") === \"1\") {\n        setPointsToWin(CLASSIC_BATTLE_POINTS_TO_WIN);\n        if (typeof onStart === \"function\") await onStart();\n        return;\n      }\n    }\n  } catch {}\n\n  if (isTestModeEnabled()) {\n    setPointsToWin(CLASSIC_BATTLE_POINTS_TO_WIN);\n    if (typeof onStart === \"function\") await onStart();\n    return;\n  }\n\n  let rounds;\n  let loadError = false;\n  try {\n    rounds = await fetchJson(`${DATA_DIR}battleRounds.js`);\n  } catch (err) {\n    console.error(\"Failed to load battle rounds:\", err);\n    loadError = true;\n    rounds = [\n      { id: 1, label: \"Quick\", value: 5 },\n      { id: 2, label: \"Medium\", value: 10 },\n      { id: 3, label: \"Long\", value: 15 }\n    ];\n  }\n\n  const title = document.createElement(\"h2\");\n  title.id = \"round-select-title\";\n  title.textContent = \"Select Match Length\";\n\n  const btnWrap = document.createElement(\"div\");\n  btnWrap.className = \"round-select-buttons\";\n\n  const frag = document.createDocumentFragment();\n  if (loadError) {\n    const note = document.createElement(\"p\");\n    note.id = \"round-select-error\";\n    note.textContent = \"Failed to load match options. Using defaults.\";\n    frag.append(note);\n  }\n  frag.append(title, btnWrap);\n\n  const modal = createModal(frag, { labelledBy: title });\n  let cleanupTooltips = () => {};\n  rounds.forEach((r) => {\n    const btn = createButton(r.label, { id: `round-select-${r.id}` });\n    btn.dataset.tooltipId = `ui.round${r.label}`;\n    btn.addEventListener(\"click\", () => {\n      setPointsToWin(r.value);\n      modal.close();\n      if (typeof onStart === \"function\") onStart();\n      cleanupTooltips();\n      modal.destroy();\n    });\n    btnWrap.appendChild(btn);\n  });\n\n  document.body.appendChild(modal.element);\n  try {\n    cleanupTooltips = await initTooltips(modal.element);\n  } catch (err) {\n    console.error(\"Failed to initialize tooltips:\", err);\n  }\n  modal.open();\n  emitBattleEvent(\"roundOptionsReady\");\n}","qaContext":"Why: Initialize round selection modal for Classic Battle. How: json` using `fetchJson`.","embedding":[-0.203,0.026,-0.056,0.133,0.02,0.07,0.042,0.093,0.029,-0.033,0.014,-0.038,0.006,-0.013,0.07,0.033,-0.028,-0.189,-0.011,0.04,0.086,-0.051,0.084,0.038,0.021,-0.032,-0.083,-0.05,-0.025,-0.083,-0.035,0.029,-0.162,-0.072,-0.008,-0.003,-0.034,-0.006,-0.013,-0.048,0.067,0.068,-0.114,-0.077,-0.003,-0.151,-0.11,-0.013,0.027,0.13,-0.046,-0.028,0.076,-0.129,0.11,0.01,-0.022,0.045,0.096,0.02,0.026,-0.158,-0.037,-0.033,0.122,-0.055,0.045,-0.119,0.012,-0.017,0.032,0.037,0.081,0.045,0.019,0.031,-0.097,-0.019,-0.075,-0.1,-0.051,-0.078,0.019,0.045,0.052,0.052,0.042,-0.054,0.106,0.012,-0.117,0.012,-0.113,0.12,0.08,0.119,-0.022,-0.077,0.011,0.083,0.064,-0.018,-0.056,0.076,0.128,-0.045,0.002,-0.066,-0.103,0.013,-0.049,0.047,0.167,-0.025,-0.038,0.031,0.088,-0.04,0.087,-0.006,0.284,-0.022,0.035,-0.092,0.082,0.034,0.069,0,0.177,-0.205,-0.121,0.115,-0.037,0.056,0.02,0.099,-0.118,-0.078,-0.068,0.017,-0.028,-0.116,0.078,-0.086,0.108,-0.008,0.011,-0.006,0.08,-0.062,-0.074,-0.043,0.054,0.145,0.027,0.146,-0.195,0.03,0.057,-0.04,-0.149,0.084,-0.014,0.027,-0.083,0.022,-0.15,-0.105,0.007,-0.058,-0.202,-0.022,-0.108,-0.126,-0.145,0.105,0.056,-0.014,-0.137,0.158,0,-0.159,0.03,0.1,-0.079,-0.056,-0.003,-0.009,0.022,-0.045,-0.085,-0.045,-0.021,0.058,-0.074,-0.069,0.017,-0.111,-0.022,-0.044,0.178,0.056,0.053,-0.08,0.022,0.004,0.023,-0.131,0.172,-0.101,-0.056,0.08,0.069,-0.067,0.089,-0.17,-0.115,0.045,0.001,0.03,-0.011,0.026,-0.109,0,0.071,-0.011,-0.065,0.135,0.093,0.051,0.028,0.011,-0.123,-0.037,0.011,0.052,0.008,-0.033,0.032,0.195,-0.053,-0.112,0.074,0.024,0.071,0.121,-0.069,-0.031,-0.064,0.011,-0.022,0.027,-0.108,-0.04,0.134,0.07,-0.137,0.034,0.141,-0.018,0.079,-0.022,-0.061,0.091,0.155,-0.077,-0.033,-0.014,0.087,-0.066,0.066,0.004,-0.055,0.002,-0.009,-0.111,0.015,0.027,-0.036,-0.052,0.06,-0.061,0.057,0.154,0.018,-0.13,0.055,0.071,0.07,-0.068,-0.064,0.074,0.105,0.156,-0.116,-0.012,0.222,-0.137,0.103,0.013,0.033,-0.148,0.067,-0.039,-0.027,0.055,0.058,-0.092,-0.057,0.104,0.001,0.231,-0.054,0.027,-0.004,-0.067,0.056,0.065,0.046,0,-0.171,0.08,-0.068,0.025,0.012,-0.049,-0.02,-0.059,-0.023,-0.117,-0.015,0.145,0.08,0.054,-0.067,-0.091,-0.037,0.044,-0.072,0.047,-0.009,0.02,0.018,-0.057,0.041,-0.032,-0.046,0.095,0.058,0.078,-0.074,0.077,-0.02,-0.004,-0.127,0.112,0.044,-0.029,0.062,0.126,0.141,0.007,-0.1,-0.064,-0.055,0.044,-0.053,0.036,0.055,-0.106,-0.131,-0.028,-0.024,-0.018,0.097,-0.003,0.083,-0.072,0.103,0.066,0.015,-0.134,-0.016,0.056],"source":"src/helpers/classicBattle/roundSelectModal.js [initRoundSelectModal]","tags":["code","what","function","utility","../dataUtils.js","../constants.js","../../components/Button.js","../../components/Modal.js","../battleEngineFacade.js","../tooltip.js","../testModeUtils.js","./battleEvents.js","get","setPointsToWin","onStart","isTestModeEnabled","fetchJson","error","createElement","createDocumentFragment","append","createModal","forEach","createButton","addEventListener","close","cleanupTooltips","destroy","appendChild","initTooltips","open","emitBattleEvent","logging"],"metadata":{"construct":"function","role":"utility","graph":{"module":"src/helpers/classicBattle/roundSelectModal.js","node":"initRoundSelectModal"},"patterns":[],"relations":{"imports":["../dataUtils.js","../constants.js","../../components/Button.js","../../components/Modal.js","../battleEngineFacade.js","../tooltip.js","../testModeUtils.js","./battleEvents.js"],"calls":["get","setPointsToWin","onStart","isTestModeEnabled","fetchJson","error","createElement","createDocumentFragment","append","createModal","forEach","createButton","addEventListener","close","cleanupTooltips","destroy","appendChild","initTooltips","open","emitBattleEvent"]}},"version":1},
{"id":"roundSelectModal.test.js-initRoundSelectModal > renders three options from battleRounds.js","text":"","embedding":[-0.578,0.232,0.032,0.005,0.265,0.034,0.733,-0.069,-0.582,-0.435,0.025,-0.121,0.218,0.031,0.071,-0.193,-0.218,-0.135,-0.122,0.18,-0.498,0.029,0.197,-0.042,0.11,0.132,-0.065,0.202,0.066,-0.307,-0.238,0.089,0.635,-0.089,-0.215,0.133,-0.385,-0.445,-0.038,0.302,0.209,-0.204,-0.237,0.374,0.289,-0.361,0.165,0.05,0.389,-0.283,-0.087,-0.221,-0.048,-0.141,0.429,-0.161,0.077,-0.371,0.048,-0.176,0.098,0.019,-0.994,0.502,-0.496,0.042,0.265,-0.058,-0.198,0.449,0.365,-0.213,-0.062,-0.656,0.277,0.217,0.36,0.074,0.392,0.241,0.018,0.105,-0.567,-0.099,-0.019,-0.302,-0.013,-0.077,-0.219,0.342,-0.312,-0.354,0.51,-0.315,-0.477,-0.246,0.145,0.154,-0.611,2.574,0.154,0.086,0.517,-0.014,0.159,-0.281,-0.337,-0.03,-0.06,0.116,-0.2,-0.317,0.097,0.168,0.281,0.635,-0.243,0.041,0.264,-0.026,0.123,-0.226,0.026,0.075,0.48,-0.878,0.043,0,0.093,0.045,0.032,0.001,0.326,0.174,0.017,-0.26,-0.059,0.342,0.052,0.2,-0.165,0.119,0.41,0.23,-0.063,0.002,-0.039,0.069,0.039,-0.046,-0.111,0.313,-0.185,-0.458,0.262,-0.474,0.093,0.009,0.098,0.221,-0.081,0.059,-0.271,-0.228,0.171,-0.377,-0.231,0.111,-0.331,0.081,-0.217,0.036,-0.017,0.939,0.02,-0.04,-0.454,0.362,-0.051,-0.201,-0.675,0.193,-0.037,-0.253,0.05,-0.317,0.131,-0.028,0.067,0.202,-0.166,0.083,-0.488,-0.373,-0.024,0.002,0.155,-0.022,-0.278,0.244,0.248,0.289,-0.231,-0.224,-0.118,0.27,0.558,-0.061,0.147,-0.146,0.028,-0.199,0.569,0.326,0.026,-0.362,0.091,-0.273,-0.368,0.314,-0.03,0.412,-0.08,0,-0.49,0.12,-0.207,0.522,-0.116,-0.029,0.126,0.554,-0.673,0.339,0.204,-0.183,0.157,0.319,-0.033,0.241,0.347,-0.135,-0.06,-0.324,-0.174,-0.306,-0.084,0.172,-0.318,0.199,0.398,0.398,-0.117,0.269,0.153,-0.07,-0.309,-0.385,0.27,0.495,0.222,0.036,0.12,-0.302,0.162,-0.074,0.06,0.804,-0.157,-0.036,-0.276,0.044,0.168,0.46,-0.578,-0.028,-0.075,0.257,-0.138,0.136,-0.256,0.446,-0.123,0.042,-0.119,0.144,-0.157,0.072,-0.121,0.191,-0.15,-0.211,0.071,-0.339,0.106,-0.094,-0.815,0.04,-0.242,-0.286,-0.179,-0.007,-0.038,-0.231,-0.155,0.214,-0.021,0.106,-0.099,-0.145,0.105,0.113,-0.293,0.162,-0.152,0.051,0.655,0.097,0.046,0,-0.375,0.268,-0.287,-0.041,0.288,0.279,-0.257,0.191,0.095,-0.097,0.355,0.22,-0.098,0.362,0.741,-0.079,-0.653,-0.161,-0.149,-0.175,-0.129,-0.084,0.053,-0.617,0.048,0.078,-0.243,0.555,0.436,-0.285,0.033,0.154,0.05,0.125,0.091,-0.28,-0.435,0.16,0.107,0.005,-0.296,-0.177,0.465,0.024,-0.248,-0.014,0.026,0.006,-0.082,-0.417,-0.077,-0.073,0.049,0.486,0.661,0.051,0.083,-0.106,0.364,0.283,0.932,0.76,0.326,0.026],"source":"tests/helpers/classicBattle/roundSelectModal.test.js [initRoundSelectModal > renders three options from battleRounds.js]","tags":["test-code","what","test","vitest","fs","path","../../../src/helpers/constants.js","../../../src/helpers/classicBattle/roundSelectModal.js","it","initRoundSelectModal","fn","querySelectorAll","toHaveLength","expect","toEqual","map"],"metadata":{"construct":"test","role":"test","graph":{"module":"tests/helpers/classicBattle/roundSelectModal.test.js","node":"initRoundSelectModal > renders three options from battleRounds.js"},"patterns":[],"relations":{"imports":["vitest","fs","path","../../../src/helpers/constants.js","../../../src/helpers/classicBattle/roundSelectModal.js"],"calls":["it","initRoundSelectModal","fn","querySelectorAll","toHaveLength","expect","toEqual","map"]}},"version":1},
{"id":"mocks.js-mockDataUtils","text":"export function mockDataUtils(fetchImplementation) {\n  const defaultFetch = async (path) => {\n    if (path.includes(\"battleRounds.js\")) return [];\n    return {};\n  };\n\n  vi.doMock(\"../../../src/helpers/dataUtils.js\", () => ({\n    fetchJson: vi.fn(fetchImplementation || defaultFetch),\n    importJsonModule: vi.fn(async () => defaultSettings)\n  }));\n}","qaContext":"Why: export function mockDataUtils(fetchImplementation) { const defaultFetch = async (path) => { if (path. How: includes(\"battleRounds.","embedding":[-0.222,0.066,-0.017,0.072,-0.063,-0.028,-0.074,0.082,-0.107,-0.06,0.069,-0.026,-0.133,0.051,0.105,-0.094,0.073,0,-0.016,-0.074,-0.079,-0.012,0.188,-0.007,-0.017,-0.125,-0.123,-0.052,0.013,-0.009,0.138,0.043,-0.19,0.073,0.075,0.014,-0.021,-0.068,0.004,-0.008,-0.001,0.125,-0.164,-0.172,0.1,-0.075,0.017,-0.058,0.05,0.082,-0.083,0.072,-0.027,-0.139,0.148,0.083,0.052,0.031,0.035,0.176,0.024,-0.207,0.002,-0.037,0.014,-0.112,-0.023,0.205,0.056,-0.076,0.065,0.033,0.183,0.007,-0.01,0.171,-0.1,-0.019,0.178,-0.054,-0.035,-0.145,-0.136,0.127,-0.072,0.168,0.14,-0.061,0.076,-0.018,-0.041,-0.146,-0.192,0.156,-0.199,0.08,0.201,-0.103,-0.02,0.026,-0.024,-0.123,0.188,0.113,0.039,-0.105,0.067,-0.129,-0.017,-0.005,0.006,0.198,-0.042,-0.05,-0.264,-0.055,-0.036,-0.121,0.046,0.021,0.252,0.014,0.104,0.049,0.126,-0.065,0.157,0,0.011,-0.179,0.054,0.064,0.061,-0.123,0.168,-0.001,-0.159,-0.033,-0.076,0.118,-0.049,0.108,-0.226,0.046,0.013,-0.117,0.016,0.114,0.143,0.022,0.052,-0.037,0.01,-0.132,-0.085,0.179,-0.092,0.047,0.085,-0.031,-0.01,0.187,0.079,0.124,0.022,-0.029,-0.301,0.077,0.11,0.028,-0.177,0.021,-0.101,-0.083,0.081,-0.174,0.098,-0.004,-0.105,0.125,0.023,-0.102,0.131,-0.08,0.128,-0.073,0.039,-0.063,-0.042,-0.032,-0.027,-0.017,-0.101,0.076,-0.109,-0.107,-0.012,0.026,0.051,0.061,-0.044,-0.035,0.137,0.016,-0.149,0.102,0.075,-0.207,0.209,-0.08,-0.188,0.31,0.11,-0.026,-0.001,-0.119,0.107,-0.026,-0.081,-0.035,0.109,-0.171,-0.003,0,0.191,0.077,0.027,0.16,0.009,-0.035,0.063,0.027,0.044,0.132,-0.015,-0.143,0.079,-0.127,-0.04,0.181,-0.002,-0.165,0.095,-0.061,-0.023,-0.037,0.124,0.015,-0.022,-0.061,0.048,-0.026,-0.105,-0.038,0.007,0.001,-0.156,-0.025,0.059,0.046,0.133,0.157,0.01,0.059,-0.056,-0.045,-0.114,0.115,-0.021,-0.002,-0.025,0.004,0.057,-0.105,0.146,-0.095,0.013,0.012,-0.028,-0.029,0.041,-0.072,-0.008,0.148,-0.011,-0.243,-0.178,-0.078,-0.068,-0.102,-0.089,0.09,0.1,0.018,0.027,-0.023,0.177,-0.142,0.105,-0.037,-0.131,-0.162,0.31,0.181,0.034,-0.02,0.028,-0.06,0.095,0.036,-0.032,0.192,-0.028,-0.002,0.07,-0.095,0.042,0.043,0.069,0,-0.003,-0.121,-0.16,0.036,-0.005,-0.013,-0.064,-0.055,0.137,0.051,0.094,0.177,0.018,-0.037,-0.058,-0.051,-0.001,0.175,-0.078,0.065,-0.075,0.143,0.043,-0.111,0.125,0.162,0.074,-0.032,0.003,-0.039,-0.022,-0.166,-0.029,-0.163,-0.093,-0.032,0.128,0.025,0.155,0.086,-0.09,0.036,-0.081,-0.001,-0.203,-0.047,-0.196,0.09,0.004,-0.064,0.059,-0.092,-0.113,-0.005,-0.089,0.004,-0.011,-0.046,-0.147,-0.037,0.015,-0.01,0.055,-0.004],"source":"tests/helpers/classicBattle/mocks.js [mockDataUtils]","tags":["code","what","function","test","vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json","includes","doMock","fn"],"metadata":{"construct":"function","role":"test","graph":{"module":"tests/helpers/classicBattle/mocks.js","node":"mockDataUtils"},"patterns":[],"relations":{"imports":["vitest","../../../src/helpers/classicBattle/stateTable.js","../../../src/data/settings.json"],"calls":["includes","doMock","fn"]}},"version":1},
