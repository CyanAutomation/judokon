#!/bin/sh
# Husky pre-commit: run JSDoc + @pseudocode checker + RAG reminder for agents
# To bypass locally: SKIP_CHECK_JSDOC=1 git commit -m "..."

# 🚨 Agent Reminder
echo ""
echo "╔════════════════════════════════════════════════════════════════════════╗"
echo "║ 🤖 AGENT REMINDER: RAG-FIRST POLICY                                    ║"
echo "║ Before using grep/ripgrep/semantic_search, query RAG first!            ║"
echo "║ See AGENTS.md → 🚨 RAG-First Policy section for details               ║"
echo "║ Expected benefit: ~15x faster than manual exploration                  ║"
echo "╚════════════════════════════════════════════════════════════════════════╝"
echo ""

SKIP_VAR_NAME=SKIP_CHECK_JSDOC
# POSIX-safe indirect expansion: evaluate the named var's value
SKIP_VAL=$(eval "echo \$SKIP_VAR_NAME")
if [ "$SKIP_VAL" = "1" ]; then
  echo "Skipping JSDoc check because ${SKIP_VAR_NAME}=1"
  exit 0
fi

echo "Running JSDoc/pseudocode check..."
set +e
npm run check:jsdoc
status=$?
set -e
if [ $status -ne 0 ]; then
  printf "\nJSDoc check failed (non-blocking). To bypass set %s=1 and retry commit.\n" "$SKIP_VAR_NAME"
  echo "Run 'npm run check:jsdoc' to see details. This hook will not block commits." 
else
  echo "JSDoc check passed"
fi

# RAG Model Check
echo "Running RAG model file check..."
set +e
npm run check:rag
rag_status=$?
set -e
if [ $rag_status -ne 0 ]; then
  printf "\nRAG model check failed (non-blocking). Please run 'npm run rag:prepare:models' to fix.\n"
  echo "This hook will not block commits, but it's recommended to fix the RAG model files."
else
  echo "RAG model check passed"
fi

exit 0

